{
    "buildlib-master/make.py": {
        "build": {
            "name": "build",
            "location": 37,
            "return": [
                "bytes",
                "bool",
                "Tuple[str, str]",
                "str"
            ],
            "arguments": {
                "cfg": [
                    "bool",
                    "list",
                    "Iterable[str]"
                ]
            }
        },
        "push": {
            "name": "push",
            "location": 41,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "cfg": [
                    "int",
                    "Dict[str, List[Any]]",
                    "Sequence[str]",
                    "bool"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {
                "cfg": [
                    "str",
                    "Mapping[str, Any]"
                ]
            }
        },
        "bump": {
            "name": "bump",
            "location": 50,
            "return": [
                "List[str]",
                "bool",
                "List[Mapping[str, Any]]",
                "Tuple[type]",
                "str"
            ],
            "arguments": {
                "cfg": [
                    "str",
                    "int",
                    "list"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 72,
            "return": [
                "Awaitable"
            ],
            "arguments": {}
        }
    },
    "buildlib-master/setup.py": {},
    "buildlib-master/buildlib/__init__.py": {},
    "buildlib-master/buildlib/buildmisc/cmd.py": {
        "inject_interface_into_readme": {
            "name": "inject_interface_into_readme",
            "location": 10,
            "return": [
                "mewo.cmdi.CmdResult"
            ],
            "arguments": {
                "interface_file": [
                    "str",
                    "bool"
                ],
                "readme_file": [
                    "str",
                    "bool"
                ]
            }
        },
        "build_read_the_docs": {
            "name": "build_read_the_docs",
            "location": 19,
            "return": [
                "mewo.cmdi.CmdResult"
            ],
            "arguments": {
                "clean_dir": [
                    "bool",
                    "str",
                    "list"
                ]
            }
        },
        "create_py_venv": {
            "name": "create_py_venv",
            "location": 27,
            "return": [
                "mewo.cmdi.CmdResult"
            ],
            "arguments": {
                "py_bin": [
                    "str",
                    "bool",
                    "BinaryIO"
                ],
                "venv_dir": [
                    "str",
                    "bool",
                    "BinaryIO"
                ]
            }
        },
        "bump_py_module_version": {
            "name": "bump_py_module_version",
            "location": 36,
            "return": [
                "mewo.cmdi.CmdResult"
            ],
            "arguments": {
                "file": [
                    "str",
                    "List[Dict[str, Any]]",
                    "List[Tuple[int, str]]",
                    "Iterable[str]",
                    "List[str]"
                ],
                "new_version": [
                    "str",
                    "List[Dict[str, Any]]",
                    "List[Tuple[int, str]]",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/buildmisc/lib.py": {
        "inject_interface_into_readme": {
            "name": "inject_interface_into_readme",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "interface_file": [
                    "str",
                    "bool"
                ],
                "readme_file": [
                    "str"
                ]
            }
        },
        "build_read_the_docs": {
            "name": "build_read_the_docs",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "clean_dir": [
                    "bool",
                    "str"
                ]
            }
        },
        "create_py_venv": {
            "name": "create_py_venv",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "py_bin": [
                    "str"
                ],
                "venv_dir": [
                    "str"
                ]
            }
        },
        "bump_py_module_version": {
            "name": "bump_py_module_version",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "str",
                    "Iterable[str]",
                    "os.PathLike"
                ],
                "new_version": [
                    "List[str]",
                    "MutableMapping[str, Any]",
                    "bool",
                    "str",
                    "Dict[str, int]",
                    "list"
                ]
            }
        }
    },
    "buildlib-master/buildlib/buildmisc/prompt.py": {
        "should_run_any": {
            "name": "should_run_any",
            "location": 7,
            "return": [
                "str",
                "Optional[str]",
                "bytes"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "default": [
                    "str"
                ],
                "fmt": [
                    "str"
                ]
            }
        },
        "should_run_file": {
            "name": "should_run_file",
            "location": 20,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "default": [
                    "str"
                ],
                "fmt": [
                    "str"
                ]
            }
        },
        "should_build": {
            "name": "should_build",
            "location": 33,
            "return": [
                "str",
                "dict",
                "bool",
                "float"
            ],
            "arguments": {
                "item": [
                    "str",
                    "Dict[str, Any]"
                ],
                "default": [
                    "str",
                    "Dict[str, Any]"
                ],
                "fmt": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "should_push": {
            "name": "should_push",
            "location": 46,
            "return": [
                "Dict[str, int]",
                "str",
                "dict",
                "int",
                "Optional[bool]"
            ],
            "arguments": {
                "item": [
                    "str",
                    "bytes",
                    "Sequence[str]",
                    "Sequence[List[Any]]"
                ],
                "dst": [
                    "str",
                    "bytes",
                    "Sequence[str]",
                    "Sequence[List[Any]]"
                ],
                "default": [
                    "str",
                    "bytes",
                    "Sequence[str]",
                    "Sequence[List[Any]]"
                ],
                "fmt": [
                    "str",
                    "bytes",
                    "Sequence[str]",
                    "Sequence[List[Any]]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/buildmisc/__init__.py": {},
    "buildlib-master/buildlib/git/cmd.py": {
        "add_all": {
            "name": "add_all",
            "location": 10,
            "return": [
                "int",
                "bool",
                "Dict[str, int]",
                "Iterable[int]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "log": {
            "name": "log",
            "location": 15,
            "return": [
                "tuple",
                "str",
                "float",
                "list",
                "int"
            ],
            "arguments": {
                "revision_range": [
                    "bool",
                    "str"
                ],
                "reverse": [
                    "bool",
                    "str"
                ],
                "no_pager": [
                    "bool",
                    "str"
                ]
            }
        },
        "commit": {
            "name": "commit",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "tag": {
            "name": "tag",
            "location": 33,
            "return": [
                "str",
                "Type[T]"
            ],
            "arguments": {
                "version": [
                    "str",
                    "Iterable[str]"
                ],
                "branch": [
                    "str",
                    "Iterable[str]"
                ]
            }
        },
        "push": {
            "name": "push",
            "location": 42,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "branch": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "get_default_branch": {
            "name": "get_default_branch",
            "location": 50,
            "return": [
                "Optional[str]",
                "str",
                "dict",
                "bool"
            ],
            "arguments": {}
        },
        "status": {
            "name": "status",
            "location": 55,
            "return": [
                "str",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "porcelain": [
                    "int",
                    "bool",
                    "BaseException",
                    "IO[str]",
                    "List[str]",
                    "Union[int, Tuple[int, ...]]"
                ]
            }
        },
        "diff": {
            "name": "diff",
            "location": 63,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "branch": {
            "name": "branch",
            "location": 68,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "show_current": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "buildlib-master/buildlib/git/lib.py": {
        "add_all": {
            "name": "add_all",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "log": {
            "name": "log",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "revision_range": [
                    "str",
                    "bytes",
                    "int",
                    "List[Dict[str, Any]]"
                ],
                "reverse": [
                    "bool",
                    "str"
                ],
                "no_pager": [
                    "bool",
                    "str"
                ]
            }
        },
        "commit": {
            "name": "commit",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "List[str]",
                    "list",
                    "Iterable[float]",
                    "Optional[str]"
                ]
            }
        },
        "tag": {
            "name": "tag",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "version": [
                    "str"
                ],
                "branch": [
                    "str"
                ]
            }
        },
        "push": {
            "name": "push",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "branch": {
            "name": "branch",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "show_current": [
                    "str"
                ]
            }
        },
        "get_default_branch": {
            "name": "get_default_branch",
            "location": 55,
            "return": [
                "str",
                "Tuple[int, int]",
                "int"
            ],
            "arguments": {}
        },
        "status": {
            "name": "status",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "porcelain": [
                    "str"
                ]
            }
        },
        "diff": {
            "name": "diff",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "buildlib-master/buildlib/git/prompt.py": {
        "commit_msg": {
            "name": "commit_msg",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "fmt": [
                    "str"
                ],
                "open_editor": [
                    "List[int]",
                    "List[str]",
                    "str",
                    "Optional[str]",
                    "Tuple[Sequence[Any], Sequence[Any]]",
                    "Set[str]"
                ]
            }
        },
        "branch": {
            "name": "branch",
            "location": 33,
            "return": [
                "str",
                "bytes",
                "AnyStr"
            ],
            "arguments": {
                "default": [
                    "str",
                    "bool"
                ],
                "fmt": [
                    "str",
                    "dict",
                    "int",
                    "List[Tuple]"
                ]
            }
        },
        "confirm_status": {
            "name": "confirm_status",
            "location": 47,
            "return": [
                "dict",
                "Dict[str, int]",
                "Iterable[str]",
                "int"
            ],
            "arguments": {
                "default": [
                    "str",
                    "Optional[str]",
                    "List[str]"
                ],
                "fmt": [
                    "str",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "confirm_diff": {
            "name": "confirm_diff",
            "location": 61,
            "return": [
                "str",
                "Optional[int]",
                "float"
            ],
            "arguments": {
                "default": [
                    "str",
                    "List[str]"
                ],
                "fmt": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "should_run_git": {
            "name": "should_run_git",
            "location": 75,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {
                "default": [
                    "str",
                    "Callable[[str], str]"
                ],
                "fmt": [
                    "str",
                    "Callable[[str], str]"
                ]
            }
        },
        "should_add_all": {
            "name": "should_add_all",
            "location": 87,
            "return": [
                "bool",
                "str",
                "Optional[bool]",
                "Optional[str]",
                "List[str]",
                "Optional[float]",
                "float"
            ],
            "arguments": {
                "default": [
                    "str",
                    "List[str]",
                    "Callable[[str], str]"
                ],
                "fmt": [
                    "str",
                    "List[str]",
                    "Callable[[str], str]"
                ]
            }
        },
        "should_commit": {
            "name": "should_commit",
            "location": 99,
            "return": [
                "float",
                "bool"
            ],
            "arguments": {
                "default": [
                    "str",
                    "List[str]"
                ],
                "fmt": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "should_tag": {
            "name": "should_tag",
            "location": 111,
            "return": [
                "str",
                "bool",
                "BaseException",
                "int"
            ],
            "arguments": {
                "default": [
                    "str",
                    "Callable[[str], str]"
                ],
                "fmt": [
                    "str",
                    "Callable[[str], str]"
                ]
            }
        },
        "should_push": {
            "name": "should_push",
            "location": 123,
            "return": [
                "str",
                "Dict[str, int]",
                "dict",
                "Optional[bool]",
                "Optional[int]"
            ],
            "arguments": {
                "default": [
                    "str",
                    "List[str]"
                ],
                "fmt": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/git/seq.py": {
        "bump_git": {
            "name": "bump_git",
            "location": 28,
            "return": [
                "bool",
                "dict",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "version": [
                    "list",
                    "str",
                    "dict",
                    "int",
                    "List[List[Any]]",
                    "Optional[Sequence[str]]"
                ],
                "new_release": [
                    "Optional[str]",
                    "str",
                    "Optional[Any]"
                ],
                "check_status": [
                    "int",
                    "Optional[Dict]",
                    "str",
                    "bool"
                ],
                "check_diff": [
                    "bool",
                    "Optional[bool]",
                    "float"
                ],
                "add_all": [
                    "Optional[str]",
                    "list",
                    "bool",
                    "dict",
                    "Callable"
                ],
                "apply_tag": [
                    "str",
                    "Optional[str]",
                    "Dict[str, str]",
                    "bool",
                    "Optional[int]"
                ],
                "push": [
                    "bool",
                    "Optional[List[Any]]",
                    "list",
                    "Optional[str]"
                ],
                "commit": [
                    "Optional[str]",
                    "Optional[int]",
                    "List[Dict[str, Any]]"
                ],
                "commit_msg": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/git/__init__.py": {},
    "buildlib-master/buildlib/npm/cmd.py": {
        "bump_version": {
            "name": "bump_version",
            "location": 13,
            "return": [
                "str",
                "int",
                "bool",
                "bytes"
            ],
            "arguments": {
                "new_version": [
                    "List[str]",
                    "dict",
                    "bool",
                    "int",
                    "Collection[str]",
                    "Callable"
                ],
                "filepath": [
                    "List[str]",
                    "dict",
                    "bool",
                    "int",
                    "Collection[str]",
                    "Callable"
                ]
            }
        },
        "publish": {
            "name": "publish",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "buildlib-master/buildlib/npm/lib.py": {
        "bump_version": {
            "name": "bump_version",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "new_version": [
                    "str",
                    "Optional[Dict[str, Any]]",
                    "Sequence[str]"
                ],
                "filepath": [
                    "str",
                    "list"
                ],
                "indent": [
                    "Optional[int]",
                    "dict",
                    "str",
                    "Type",
                    "Type[Any]"
                ]
            }
        },
        "publish": {
            "name": "publish",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "buildlib-master/buildlib/npm/prompt.py": {
        "should_push": {
            "name": "should_push",
            "location": 7,
            "return": [
                "Dict[str, int]",
                "str",
                "dict",
                "int",
                "Optional[bool]"
            ],
            "arguments": {
                "dst": [
                    "str",
                    "List[str]"
                ],
                "default": [
                    "str",
                    "List[str]"
                ],
                "fmt": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/npm/__init__.py": {},
    "buildlib-master/buildlib/pip/cmd.py": {
        "freeze": {
            "name": "freeze",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "sudo": [
                    "str",
                    "bool",
                    "list"
                ],
                "pip_bin": [
                    "str",
                    "bool",
                    "list"
                ],
                "requirements_file": [
                    "str",
                    "bool",
                    "list"
                ],
                "options": [
                    "str",
                    "bool",
                    "list"
                ]
            }
        },
        "install": {
            "name": "install",
            "location": 21,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "package": [
                    "str",
                    "bool",
                    "list"
                ],
                "sudo": [
                    "str",
                    "bool",
                    "list"
                ],
                "pip_bin": [
                    "str",
                    "bool",
                    "list"
                ],
                "options": [
                    "str",
                    "bool",
                    "list"
                ]
            }
        },
        "install_requirements": {
            "name": "install_requirements",
            "location": 32,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "sudo": [
                    "str",
                    "bool",
                    "list"
                ],
                "pip_bin": [
                    "str",
                    "bool",
                    "list"
                ],
                "requirements_file": [
                    "str",
                    "bool",
                    "list"
                ],
                "options": [
                    "str",
                    "bool",
                    "list"
                ]
            }
        },
        "uninstall": {
            "name": "uninstall",
            "location": 43,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "package": [
                    "str",
                    "bool",
                    "list"
                ],
                "sudo": [
                    "str",
                    "bool",
                    "list"
                ],
                "pip_bin": [
                    "str",
                    "bool",
                    "list"
                ],
                "options": [
                    "str",
                    "bool",
                    "list"
                ]
            }
        }
    },
    "buildlib-master/buildlib/pip/lib.py": {
        "freeze": {
            "name": "freeze",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "sudo": [
                    "str",
                    "bool",
                    "Dict[int, bool]"
                ],
                "pip_bin": [
                    "str"
                ],
                "requirements_file": [
                    "str"
                ],
                "options": [
                    "str"
                ]
            }
        },
        "install": {
            "name": "install",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "package": [
                    "Dict[str, Any]",
                    "str"
                ],
                "sudo": [
                    "bool",
                    "str",
                    "int",
                    "Optional[Dict[str, str]]"
                ],
                "pip_bin": [
                    "Dict[str, Any]",
                    "str"
                ],
                "options": [
                    "str",
                    "List[str]",
                    "Optional[Sequence[str]]"
                ]
            }
        },
        "install_requirements": {
            "name": "install_requirements",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "sudo": [
                    "str",
                    "bool",
                    "Dict[int, bool]"
                ],
                "pip_bin": [
                    "str"
                ],
                "requirements_file": [
                    "str"
                ],
                "options": [
                    "str",
                    "List[str]",
                    "Sequence[str]",
                    "Optional[str]",
                    "Sequence[Any]",
                    "Callable"
                ]
            }
        },
        "uninstall": {
            "name": "uninstall",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "package": [
                    "Dict[str, Any]",
                    "str"
                ],
                "sudo": [
                    "bool",
                    "str",
                    "int",
                    "Optional[Dict[str, str]]"
                ],
                "pip_bin": [
                    "Dict[str, Any]",
                    "str"
                ],
                "options": [
                    "str",
                    "List[str]",
                    "Optional[Sequence[str]]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/pip/__init__.py": {},
    "buildlib-master/buildlib/pipenv/cmd.py": {
        "install": {
            "name": "install",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dev": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "create_env": {
            "name": "create_env",
            "location": 18,
            "return": [
                "str",
                "Iterable[Union[Any, int]]",
                "int"
            ],
            "arguments": {
                "version": [
                    "str",
                    "Dict[str, Any]",
                    "float",
                    "Optional[List[dict]]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/pipenv/lib.py": {
        "install": {
            "name": "install",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "dev": [
                    "bool",
                    "Tuple[str]",
                    "str",
                    "Optional[int]",
                    "int",
                    "float"
                ],
                "skip_lock": [
                    "Tuple[str]",
                    "bool",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "create_env": {
            "name": "create_env",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "version": [
                    "str",
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "buildlib-master/buildlib/pipenv/__init__.py": {},
    "buildlib-master/buildlib/project/cmd.py": {
        "bump_version": {
            "name": "bump_version",
            "location": 10,
            "return": [
                "str",
                "int",
                "bool",
                "bytes"
            ],
            "arguments": {
                "semver_num": [
                    "str",
                    "Callable",
                    "Dict[str, Any]",
                    "Optional[str]"
                ],
                "config_file": [
                    "str",
                    "Callable",
                    "Dict[str, Any]",
                    "Optional[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/project/lib.py": {
        "bump_version": {
            "name": "bump_version",
            "location": 7,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "semver_num": [
                    "str",
                    "bytes",
                    "dict",
                    "int"
                ],
                "config_file": [
                    "str",
                    "Callable[[str], None]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/project/prompt.py": {
        "should_bump_version": {
            "name": "should_bump_version",
            "location": 7,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "default": [
                    "str",
                    "Optional[str]"
                ],
                "fmt": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/project/__init__.py": {},
    "buildlib-master/buildlib/semver/lib.py": {
        "validate": {
            "name": "validate",
            "location": 4,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "semver_num": [
                    "str",
                    "int",
                    "Optional[Tuple[int, int]]"
                ]
            }
        },
        "extract_pre_release_suffix": {
            "name": "extract_pre_release_suffix",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "version": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "increase": {
            "name": "increase",
            "location": 28,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "version": [
                    "str",
                    "dict",
                    "List[str]"
                ],
                "type_": [
                    "str",
                    "Optional[Type[BaseException]]",
                    "bool",
                    "Optional[Callable[[str], Any]]",
                    "Callable[[str], None]",
                    "Optional[Dict[str, Any]]",
                    "Optional[BaseException]"
                ]
            }
        },
        "convert_semver_to_wheelver": {
            "name": "convert_semver_to_wheelver",
            "location": 69,
            "return": [
                "str",
                "Union[int, float]",
                "int",
                "List[int]"
            ],
            "arguments": {
                "semver_num": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "buildlib-master/buildlib/semver/prompt.py": {
        "semver_num_manually": {
            "name": "semver_num_manually",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "fmt": [
                    "str"
                ]
            }
        },
        "_generate_update_semver_options": {
            "name": "_generate_update_semver_options",
            "location": 27,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "cur_version": [
                    "bool",
                    "str"
                ],
                "is_pre": [
                    "bool",
                    "float",
                    "int",
                    "list"
                ]
            }
        },
        "semver_num_by_choice": {
            "name": "semver_num_by_choice",
            "location": 47,
            "return": [
                "bool",
                "str",
                "Optional[str]",
                "dict",
                "bytes",
                "int"
            ],
            "arguments": {
                "cur_version": [
                    "str",
                    "bool",
                    "Optional[str]"
                ],
                "fmt": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "buildlib-master/buildlib/semver/__init__.py": {},
    "buildlib-master/buildlib/utils/__init__.py": {
        "print_err": {
            "name": "print_err",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "msg": [],
                "color": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        }
    },
    "buildlib-master/buildlib/wheel/cmd.py": {
        "push": {
            "name": "push",
            "location": 12,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "wheel": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "repository": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 21,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "cleanup": [
                    "bool",
                    "list",
                    "Iterable[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/wheel/lib.py": {
        "extract_version_from_wheel_name": {
            "name": "extract_version_from_wheel_name",
            "location": 11,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "name": [
                    "str",
                    "List[str]",
                    "List[dict]"
                ]
            }
        },
        "find_wheel": {
            "name": "find_wheel",
            "location": 19,
            "return": [
                "Optional[str]",
                "Optional[int]",
                "Optional[float]",
                "int"
            ],
            "arguments": {
                "wheel_dir": [
                    "str",
                    "List[str]",
                    "Optional[tuple]",
                    "tuple",
                    "List[bytearray]",
                    "Set[str]",
                    "list"
                ],
                "semver_num": [
                    "Optional[bool]",
                    "bool",
                    "int",
                    "str",
                    "float",
                    "Optional[str]"
                ],
                "wheelver_num": [
                    "Optional[str]",
                    "str",
                    "TextIO",
                    "Optional[dict]",
                    "int"
                ],
                "raise_not_found": [
                    "Optional[bool]",
                    "bool",
                    "int",
                    "str",
                    "float",
                    "Optional[str]"
                ]
            }
        },
        "push": {
            "name": "push",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "wheel": [
                    "str",
                    "float",
                    "int"
                ],
                "repository": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "cleanup": [
                    "bool",
                    "list",
                    "Iterable[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/wheel/prompt.py": {
        "should_build": {
            "name": "should_build",
            "location": 7,
            "return": [
                "str",
                "dict",
                "bool",
                "float"
            ],
            "arguments": {
                "default": [
                    "str",
                    "Callable[[str], str]"
                ],
                "fmt": [
                    "str",
                    "Callable[[str], str]"
                ]
            }
        },
        "should_push": {
            "name": "should_push",
            "location": 19,
            "return": [
                "Dict[str, int]",
                "str",
                "dict",
                "int",
                "Optional[bool]"
            ],
            "arguments": {
                "dst": [
                    "str",
                    "List[str]"
                ],
                "default": [
                    "str",
                    "List[str]"
                ],
                "fmt": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "buildlib-master/buildlib/wheel/__init__.py": {},
    "buildlib-master/buildlib/yaml_/__init__.py": {
        "loadfile": {
            "name": "loadfile",
            "location": 7,
            "return": [
                "int",
                "Dict[str, int]",
                "str"
            ],
            "arguments": {
                "file": [
                    "str",
                    "IO[str]"
                ],
                "safe": [
                    "bool",
                    "IO[str]",
                    "List[str]",
                    "BinaryIO",
                    "str"
                ]
            }
        },
        "savefile": {
            "name": "savefile",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict",
                    "str",
                    "List[str]",
                    "Tuple[str, int]",
                    "bytes"
                ],
                "file": [
                    "str",
                    "IO[Any]"
                ],
                "safe": [
                    "bool",
                    "str",
                    "List[Dict[str, Any]]",
                    "Optional[List[str]]",
                    "Optional[bool]"
                ]
            }
        },
        "pprint_yaml": {
            "name": "pprint_yaml",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "List[Dict[str, Any]]",
                    "float"
                ]
            }
        }
    },
    "buildlib-master/tests/__init__.py": {},
    "buildlib-master/tests/__main__.py": {},
    "buildlib-master/tests/npm/__init__.py": {
        "test_bump_version": {
            "name": "test_bump_version",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "as_cmd": [
                    "int",
                    "bool",
                    "dict"
                ]
            }
        }
    }
}
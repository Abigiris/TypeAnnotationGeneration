{
    "cantarell-fonts-master/proofs/pi.py": {},
    "cantarell-fonts-master/proofs/print-characters-between-placeholders.py": {
        "print_in_placeholders": {
            "name": "print_in_placeholders",
            "location": 6,
            "return": [],
            "arguments": {
                "characters": [],
                "placeholders": []
            }
        }
    },
    "cantarell-fonts-master/proofs/spacing.py": {},
    "cantarell-fonts-master/scripts/flip-prebuilt-on.py": {},
    "cantarell-fonts-master/scripts/instantiator.py": {
        "_error_msg_no_default": {
            "name": "_error_msg_no_default",
            "location": 453,
            "return": [
                "bool"
            ],
            "arguments": {
                "designspace": [
                    "bool"
                ]
            }
        },
        "location_to_key": {
            "name": "location_to_key",
            "location": 475,
            "return": [
                "str",
                "Tuple[float, float]",
                "bool"
            ],
            "arguments": {
                "location": [
                    "Iterable[str]",
                    "Dict[Hashable, Any]",
                    "dict",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "anisotropic": {
            "name": "anisotropic",
            "location": 481,
            "return": [
                "str",
                "List[str]",
                "int"
            ],
            "arguments": {
                "location": [
                    "AbstractSet[T]",
                    "Iterable[str]",
                    "Callable",
                    "List[str]",
                    "type",
                    "Union[Set[int], List[int], Dict[int, Any]]",
                    "Dict[str, List[str]]"
                ]
            }
        },
        "collect_info_masters": {
            "name": "collect_info_masters",
            "location": 487,
            "return": [
                "int",
                "bool",
                "Sequence[str]"
            ],
            "arguments": {
                "designspace": [
                    "int"
                ],
                "axis_bounds": [
                    "int",
                    "str"
                ]
            }
        },
        "collect_kerning_masters": {
            "name": "collect_kerning_masters",
            "location": 506,
            "return": [
                "bool",
                "Optional[Any]"
            ],
            "arguments": {
                "designspace": [
                    "bool",
                    "Tuple[int, int]",
                    "Callable",
                    "Optional[str]",
                    "int",
                    "Optional[Dict[str, str]]"
                ],
                "axis_bounds": [
                    "bool",
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "collect_glyph_masters": {
            "name": "collect_glyph_masters",
            "location": 540,
            "return": [
                "bool",
                "Optional[Any]"
            ],
            "arguments": {
                "designspace": [
                    "str",
                    "Optional[Union[int, str]]",
                    "Optional[str]",
                    "Optional[float]",
                    "bool"
                ],
                "glyph_name": [
                    "str",
                    "float",
                    "Optional[int]",
                    "int"
                ],
                "axis_bounds": [
                    "str",
                    "bool",
                    "Dict[str, Dict[str, Any]]"
                ]
            }
        },
        "width_class_from_wdth_value": {
            "name": "width_class_from_wdth_value",
            "location": 590,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "wdth_user_value": [
                    "int",
                    "Dict[str, Any]"
                ]
            }
        },
        "weight_class_from_wght_value": {
            "name": "weight_class_from_wght_value",
            "location": 610,
            "return": [
                "bool"
            ],
            "arguments": {
                "wght_user_value": [
                    "Union[int, Tuple[int, ...]]",
                    "int",
                    "float",
                    "List[str]"
                ]
            }
        },
        "italic_angle_from_slnt_value": {
            "name": "italic_angle_from_slnt_value",
            "location": 616,
            "return": [
                "float",
                "int",
                "tuple",
                "str"
            ],
            "arguments": {
                "slnt_user_value": [
                    "int"
                ]
            }
        },
        "swap_glyph_names": {
            "name": "swap_glyph_names",
            "location": 622,
            "return": [
                ""
            ],
            "arguments": {
                "font": [
                    "bool",
                    "str",
                    "Callable"
                ],
                "name_old": [
                    "str",
                    "bool",
                    "Tuple[str, str]"
                ],
                "name_new": [
                    "str",
                    "bool",
                    "Tuple[str, str]"
                ]
            }
        },
        "Instantiator.from_designspace": {
            "name": "from_designspace",
            "location": 177,
            "return": [
                "bool",
                "Callable[..., None]",
                "str",
                "List[int]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "Dict[str, Any]",
                    "Type['Model']"
                ],
                "designspace": [
                    "str",
                    "Dict[str, Any]"
                ],
                "round_geometry": [
                    "bool",
                    "str",
                    "Dict[str, Any]",
                    "Type['Model']"
                ]
            }
        },
        "Instantiator.generate_instance": {
            "name": "generate_instance",
            "location": 291,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "Instantiator._generate_instance_info": {
            "name": "_generate_instance_info",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "str",
                    "Optional[str]"
                ],
                "location_normalized": [
                    "Optional[Callable]",
                    "str",
                    "dict",
                    "List[str]",
                    "bool"
                ],
                "location": [
                    "str",
                    "List[str]"
                ],
                "font": [
                    "bool",
                    "str",
                    "dict",
                    "int",
                    "List[str]"
                ]
            }
        },
        "Variator.from_masters": {
            "name": "from_masters",
            "location": 720,
            "return": [
                "bytes",
                "str"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Callable",
                    "Type['GenericList']"
                ],
                "items": [
                    "str",
                    "List[str]",
                    "List[Dict[str, str]]",
                    "List[int]",
                    "tuple",
                    "dict"
                ],
                "axis_order": [
                    "str"
                ]
            }
        },
        "Variator.instance_at": {
            "name": "instance_at",
            "location": 734,
            "return": [
                "dict",
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "normalized_location": [
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "cantarell-fonts-master/scripts/make-static-fonts.py": {
        "generate_and_write_autohinted_instance": {
            "name": "generate_and_write_autohinted_instance",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "instantiator": [
                    "List[str]",
                    "str",
                    "Iterable[str]"
                ],
                "instance_descriptor": [
                    "List[str]",
                    "str",
                    "Iterable[str]"
                ],
                "output_dir": [
                    "pathlib.Path",
                    "str",
                    "bytes",
                    "int",
                    "Sequence[str]"
                ],
                "psautohint": [
                    "str",
                    "pathlib.Path"
                ]
            }
        }
    },
    "cantarell-fonts-master/scripts/make-variable-font.py": {},
    "cantarell-fonts-master/scripts/update-anchor-propagation-includes.py": {},
    "cantarell-fonts-master/scripts/update-gdef.py": {
        "_build_gdef": {
            "name": "_build_gdef",
            "location": 19,
            "return": [
                "List[str]",
                "Sequence[str]",
                "Set[str]",
                "Optional[List[str]]",
                "list"
            ],
            "arguments": {
                "ufo": [
                    "bool",
                    "list",
                    "Iterable[str]"
                ]
            }
        },
        "_build_gdef.fmt": {
            "name": "fmt",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "g": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict",
                    "int"
                ]
            }
        }
    },
    "cantarell-fonts-master/src/Cantarell_autospace.py": {}
}
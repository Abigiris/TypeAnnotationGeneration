{
    "carbonize-master/setup.py": {},
    "carbonize-master/bin/update_data.py": {
        "chunk_list": {
            "name": "chunk_list",
            "location": 19,
            "return": [
                "str",
                "set",
                "dict",
                "list",
                "Union[int, None]"
            ],
            "arguments": {
                "initial_list": [
                    "int",
                    "list",
                    "str",
                    "Sequence[T]",
                    "List[int]",
                    "Sequence[Any]"
                ],
                "elements": [
                    "int",
                    "list",
                    "str",
                    "Sequence[T]",
                    "List[int]",
                    "Sequence[Any]"
                ]
            }
        },
        "extract_text": {
            "name": "extract_text",
            "location": 23,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "page": [
                    "str"
                ]
            }
        },
        "process_pairs": {
            "name": "process_pairs",
            "location": 37,
            "return": [
                "str",
                "float",
                "Set[str]"
            ],
            "arguments": {
                "reader": [
                    "str",
                    "Optional[str]"
                ],
                "pages": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "carbonize-master/carbonize/api.py": {
        "Footprint.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Footprint.add_flight": {
            "name": "add_flight",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Footprint.add_train": {
            "name": "add_train",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Footprint.co2e": {
            "name": "co2e",
            "location": 28,
            "return": [
                "int",
                "Iterable[str]",
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/carbonize/catalogs.py": {
        "get_pickle": {
            "name": "get_pickle",
            "location": 9,
            "return": [
                "bytes",
                "str"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "AircraftCatalog.get": {
            "name": "get",
            "location": 24,
            "return": [
                "int",
                "Callable",
                "Dict[str, Dict[str, str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "aircraft_code": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "AirportCatalog.get": {
            "name": "get",
            "location": 35,
            "return": [
                "int",
                "Callable",
                "Dict[str, Dict[str, str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "airport_code": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "AirportCatalog.find": {
            "name": "find",
            "location": 41,
            "return": [
                "int",
                "bool",
                "str",
                "Tuple[int]"
            ],
            "arguments": {
                "self": [],
                "country_code": [
                    "str",
                    "bytes",
                    "Set[int]"
                ],
                "city": [
                    "str",
                    "bytes",
                    "dict",
                    "set"
                ]
            }
        }
    },
    "carbonize-master/carbonize/types.py": {
        "Aircraft.get_consumption": {
            "name": "get_consumption",
            "location": 24,
            "return": [
                "bool",
                "Callable",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "distance": [
                    "Optional[str]",
                    "Iterable[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "Airport.point": {
            "name": "point",
            "location": 46,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/carbonize/utils.py": {
        "great_circle": {
            "name": "great_circle",
            "location": 6,
            "return": [
                "str",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "a": [
                    "int",
                    "List[bytes]"
                ],
                "b": [
                    "int",
                    "List[bytes]"
                ]
            }
        }
    },
    "carbonize-master/carbonize/__init__.py": {},
    "carbonize-master/carbonize/calculators/base.py": {
        "Calculator.co2e": {
            "name": "co2e",
            "location": 6,
            "return": [
                "str",
                "BaseException"
            ],
            "arguments": {
                "self": []
            }
        },
        "Calculator.get_step": {
            "name": "get_step",
            "location": 9,
            "return": [
                "carbonize.types.Step"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/carbonize/calculators/flights.py": {
        "Flight.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flight.__repr__": {
            "name": "__repr__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flight.co2e_pax": {
            "name": "co2e_pax",
            "location": 25,
            "return": [
                "mypy.types.Type",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flight.distance": {
            "name": "distance",
            "location": 32,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flight.fuel_consumption": {
            "name": "fuel_consumption",
            "location": 50,
            "return": [
                "bool",
                "Optional[Any]",
                "str",
                "Callable[..., None]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flight.get_step": {
            "name": "get_step",
            "location": 58,
            "return": [
                "str",
                "Optional[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/carbonize/calculators/trains.py": {
        "Train.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Train.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Train.get_step": {
            "name": "get_step",
            "location": 20,
            "return": [
                "bool",
                "bytes",
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/carbonize/calculators/webinars.py": {},
    "carbonize-master/carbonize/calculators/__init__.py": {},
    "carbonize-master/tests/test_api.py": {
        "TestFootprint.test_flight_and_train": {
            "name": "test_flight_and_train",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFootprint.test_two_ways": {
            "name": "test_two_ways",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/tests/test_calculators_flights.py": {
        "TestFlight.setup_data": {
            "name": "setup_data",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFlight.test_distance": {
            "name": "test_distance",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFlight.test_fuel_consumption": {
            "name": "test_fuel_consumption",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFlight.test_emissions_pax": {
            "name": "test_emissions_pax",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/tests/test_calculators_trains.py": {
        "TestTrain.setup_data": {
            "name": "setup_data",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTrain.test_co2e": {
            "name": "test_co2e",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/tests/test_catalogs.py": {
        "TestAircraftCatalog.setup_data": {
            "name": "setup_data",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAircraftCatalog.test_get": {
            "name": "test_get",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAirportCatalog.setup_data": {
            "name": "setup_data",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAirportCatalog.test_get": {
            "name": "test_get",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAirportCatalog.test_find": {
            "name": "test_find",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "carbonize-master/tests/__init__.py": {}
}
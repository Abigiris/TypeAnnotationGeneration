{
    "chatalysis-master/chatalysis/calendar_heatmap.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "str",
                    "dict",
                    "int"
                ]
            }
        },
        "plot": {
            "name": "plot",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict",
                    "Mapping[str, Any]",
                    "Dict[str, Any]",
                    "List[List[Any]]",
                    "numpy.ndarray"
                ]
            }
        },
        "_load_data": {
            "name": "_load_data",
            "location": 33,
            "return": [
                "dict",
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "glob": [
                    "Optional[str]",
                    "int",
                    "str",
                    "bool",
                    "Optional[int]"
                ]
            }
        },
        "_calendar_array": {
            "name": "_calendar_array",
            "location": 41,
            "return": [
                "str",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "dates": [
                    "int",
                    "str",
                    "float",
                    "bool"
                ],
                "data": [
                    "List[float]",
                    "str",
                    "int",
                    "bytes",
                    "Callable"
                ]
            }
        },
        "_calendar_heatmap": {
            "name": "_calendar_heatmap",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "ax": [
                    "int",
                    "List[datetime.date]",
                    "Optional[Callable]",
                    "datetime",
                    "Optional[datetime.timedelta]",
                    "Dict[str, Any]",
                    "str"
                ],
                "dates": [
                    "List[datetime.date]",
                    "int",
                    "datetime.date",
                    "Optional[Callable]",
                    "datetime",
                    "Optional[List[str]]"
                ],
                "data": [
                    "List[float]",
                    "Optional[int]",
                    "bool",
                    "datetime.datetime",
                    "datetime.date"
                ]
            }
        },
        "_date_nth": {
            "name": "_date_nth",
            "location": 65,
            "return": [
                "int",
                "List[str]",
                "datetime.datetime",
                "List[float]",
                "str",
                "float"
            ],
            "arguments": {
                "n": [
                    "int",
                    "bool"
                ]
            }
        },
        "_label_days": {
            "name": "_label_days",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "ax": [
                    "Optional[int]",
                    "int",
                    "str",
                    "Type[object]",
                    "Optional[str]"
                ],
                "dates": [
                    "List[datetime.date]",
                    "str",
                    "datetime.datetime",
                    "bool",
                    "int",
                    "Iterable[int]"
                ],
                "i": [
                    "datetime.datetime",
                    "bool",
                    "int"
                ],
                "j": [
                    "datetime.datetime",
                    "bool",
                    "int"
                ],
                "calendar": [
                    "datetime.datetime",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "_label_months": {
            "name": "_label_months",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "ax": [
                    "str"
                ],
                "dates": [
                    "int",
                    "datetime.datetime",
                    "datetime.date",
                    "str"
                ],
                "i": [
                    "str",
                    "float",
                    "bool",
                    "int"
                ],
                "j": [
                    "str",
                    "bool",
                    "Dict[str, Any]",
                    "list",
                    "int"
                ],
                "calendar": [
                    "str",
                    "bool",
                    "Dict[str, Any]",
                    "list",
                    "int"
                ]
            }
        }
    },
    "chatalysis-master/chatalysis/load.py": {
        "_get_all_conv_dirs": {
            "name": "_get_all_conv_dirs",
            "location": 19,
            "return": [
                "bool",
                "List[pathlib.Path]",
                "str"
            ],
            "arguments": {}
        },
        "_load_convo": {
            "name": "_load_convo",
            "location": 24,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "convdir": [
                    "str",
                    "bool"
                ]
            }
        },
        "_load_convos": {
            "name": "_load_convos",
            "location": 36,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "glob": [
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "_get_all_chat_files": {
            "name": "_get_all_chat_files",
            "location": 44,
            "return": [
                "str",
                "list",
                "List[str]",
                "List[int]",
                "List[pathlib.Path]",
                "Iterator[Tuple[str, Any, Any]]"
            ],
            "arguments": {
                "glob": [
                    "str"
                ]
            }
        },
        "_list_all_chats": {
            "name": "_list_all_chats",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "_load_all_messages": {
            "name": "_load_all_messages",
            "location": 63,
            "return": [
                "bool",
                "float",
                "List[str]",
                "Dict[str, List[str]]",
                "str",
                "datetime.timedelta"
            ],
            "arguments": {
                "glob": [
                    "str",
                    "Iterable[T]"
                ]
            }
        },
        "_parse_chatfile": {
            "name": "_parse_chatfile",
            "location": 70,
            "return": [
                "int",
                "Callable",
                "models.Question",
                "str"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Union[pathlib.Path, str]"
                ]
            }
        }
    },
    "chatalysis-master/chatalysis/main.py": {
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "daily": {
            "name": "daily",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "int",
                    "str",
                    "Dict[str, Any]",
                    "List[List[int]]"
                ],
                "user": [
                    "int",
                    "str",
                    "Dict[str, Any]",
                    "List[List[int]]"
                ]
            }
        },
        "yearly": {
            "name": "yearly",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "int",
                    "str",
                    "Dict[str, Any]",
                    "List[List[int]]"
                ],
                "user": [
                    "int",
                    "str",
                    "Dict[str, Any]",
                    "List[List[int]]"
                ]
            }
        },
        "top_writers": {
            "name": "top_writers",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "str",
                    "Optional[int]",
                    "int",
                    "bool"
                ]
            }
        },
        "messages": {
            "name": "messages",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "str",
                    "TextIO",
                    "users.models.JustfixUser"
                ],
                "contains": [
                    "zerver.models.UserProfile",
                    "str",
                    "int",
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "people": {
            "name": "people",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "convos": {
            "name": "convos",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "int",
                    "Callable",
                    "models.Question",
                    "str"
                ]
            }
        },
        "most_reacted": {
            "name": "most_reacted",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "str",
                    "Optional[int]",
                    "int",
                    "bool"
                ]
            }
        },
        "creeps": {
            "name": "creeps",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "glob": [
                    "int",
                    "Callable",
                    "models.Question",
                    "str"
                ]
            }
        },
        "_most_reacted_msgs": {
            "name": "_most_reacted_msgs",
            "location": 152,
            "return": [
                ""
            ],
            "arguments": {
                "msgs": [
                    "list",
                    "Sequence[int]",
                    "Sequence[Any]",
                    "bytes",
                    "tuple",
                    "Optional[Union[str, Any, Any, Any]]",
                    "str"
                ]
            }
        },
        "_yearly_messaging_stats": {
            "name": "_yearly_messaging_stats",
            "location": 159,
            "return": [
                ""
            ],
            "arguments": {
                "msgs": [
                    "list",
                    "str",
                    "List[List[int]]",
                    "List[int]"
                ]
            }
        },
        "_daily_messaging_stats": {
            "name": "_daily_messaging_stats",
            "location": 181,
            "return": [
                ""
            ],
            "arguments": {
                "msgs": [
                    "list",
                    "str",
                    "List[List[int]]",
                    "List[int]",
                    "List[bytes]"
                ]
            }
        },
        "_writerstats": {
            "name": "_writerstats",
            "location": 203,
            "return": [
                "int",
                "Callable",
                "models.Question",
                "str"
            ],
            "arguments": {
                "msgs": [
                    "str",
                    "dict",
                    "aiokatcp.Message",
                    "Optional[str]",
                    "can.message.Message",
                    "core.Message"
                ]
            }
        },
        "_top_writers": {
            "name": "_top_writers",
            "location": 220,
            "return": [
                ""
            ],
            "arguments": {
                "msgs": [
                    "deoplete.util.UserContext",
                    "Optional[Tuple[str, ...]]",
                    "denite.util.UserContext",
                    "dict"
                ]
            }
        },
        "_people_stats": {
            "name": "_people_stats",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "msgs": [
                    "List[Message]",
                    "List[Tuple[Any, Any]]",
                    "List[tuple]",
                    "List[Tuple[int, int]]",
                    "list",
                    "dict",
                    "Iterable[Tuple[str, str]]"
                ]
            }
        }
    },
    "chatalysis-master/chatalysis/models.py": {
        "Message.print": {
            "name": "print",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Conversation.merge": {
            "name": "merge",
            "location": 43,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "c2": [
                    "str",
                    "Optional[bytes]",
                    "List[Callable]",
                    "Callable",
                    "Iterator[Any]",
                    "Iterable[Any]",
                    "Callable[[], Any]"
                ]
            }
        }
    },
    "chatalysis-master/chatalysis/util.py": {
        "_calculate_streak": {
            "name": "_calculate_streak",
            "location": 16,
            "return": [],
            "arguments": {
                "days": []
            }
        },
        "_count_emoji": {
            "name": "_count_emoji",
            "location": 33,
            "return": [],
            "arguments": {
                "txt": []
            }
        },
        "_format_emojicount": {
            "name": "_format_emojicount",
            "location": 37,
            "return": [],
            "arguments": {
                "emojicount": []
            }
        },
        "test_count_emoji": {
            "name": "test_count_emoji",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "_most_used_emoji": {
            "name": "_most_used_emoji",
            "location": 50,
            "return": [],
            "arguments": {
                "msgs": []
            }
        },
        "_convo_participants_key_dir": {
            "name": "_convo_participants_key_dir",
            "location": 57,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "_convo_participants_key_undir": {
            "name": "_convo_participants_key_undir",
            "location": 62,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "_calendar": {
            "name": "_calendar",
            "location": 67,
            "return": [],
            "arguments": {
                "msgs": []
            }
        },
        "_filter_author": {
            "name": "_filter_author",
            "location": 77,
            "return": [],
            "arguments": {
                "msgs": [],
                "name": []
            }
        },
        "_active_days": {
            "name": "_active_days",
            "location": 81,
            "return": [],
            "arguments": {
                "msgs": []
            }
        },
        "_calendar.datekey": {
            "name": "datekey",
            "location": 68,
            "return": [],
            "arguments": {
                "m": []
            }
        }
    },
    "chatalysis-master/chatalysis/__init__.py": {},
    "chatalysis-master/chatalysis/__main__.py": {}
}
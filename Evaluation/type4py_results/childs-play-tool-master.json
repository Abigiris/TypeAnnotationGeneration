{
    "childs-play-tool-master/backend/celery-worker.py": {},
    "childs-play-tool-master/backend/manage.py": {
        "runserver": {
            "name": "runserver",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "runworker": {
            "name": "runworker",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "recreate_db": {
            "name": "recreate_db",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/api/config.py": {},
    "childs-play-tool-master/backend/api/core.py": {
        "create_response": {
            "name": "create_response",
            "location": 27,
            "return": [],
            "arguments": {
                "data": [],
                "status": [],
                "message": []
            }
        },
        "serialize_list": {
            "name": "serialize_list",
            "location": 53,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "all_exception_handler": {
            "name": "all_exception_handler",
            "location": 65,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "get_api_keys": {
            "name": "get_api_keys",
            "location": 73,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "Mixin.to_dict": {
            "name": "to_dict",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Auth.set_key": {
            "name": "set_key",
            "location": 87,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Auth.authenticate": {
            "name": "authenticate",
            "location": 99,
            "return": [],
            "arguments": {
                "cls": [],
                "f": []
            }
        },
        "Auth.authenticate.decorated_function": {
            "name": "decorated_function",
            "location": 103,
            "return": [],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/api/mock_data.py": {},
    "childs-play-tool-master/backend/api/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 24,
            "return": [
                "flask.Flask"
            ],
            "arguments": {
                "test_config": [
                    "Optional[dict]",
                    "Optional[List[str]]",
                    "dict",
                    "flask.Flask",
                    "Optional[type]",
                    "Dict[str, Any]",
                    "neuromation.api.Config"
                ]
            }
        },
        "RequestFormatter.format": {
            "name": "format",
            "location": 18,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "childs-play-tool-master/backend/api/models/base.py": {},
    "childs-play-tool-master/backend/api/models/enums.py": {},
    "childs-play-tool-master/backend/api/models/Game.py": {
        "Game.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict",
                    "str",
                    "int"
                ]
            }
        },
        "Game.__repr__": {
            "name": "__repr__",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "childs-play-tool-master/backend/api/models/Ranking.py": {
        "Ranking.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "bytes",
                    "dict",
                    "int",
                    "Dict[str, Any]"
                ]
            }
        },
        "Ranking.__repr__": {
            "name": "__repr__",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "childs-play-tool-master/backend/api/models/TmpFile.py": {
        "TmpFile.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "str",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "TmpFile.__repr__": {
            "name": "__repr__",
            "location": 18,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "childs-play-tool-master/backend/api/models/Update.py": {
        "Update.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Callable[[bytes], bytes]",
                    "Dict[str, Any]",
                    "dict",
                    "str"
                ]
            }
        },
        "Update.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "childs-play-tool-master/backend/api/models/__init__.py": {},
    "childs-play-tool-master/backend/api/views/games.py": {
        "get_games": {
            "name": "get_games",
            "location": 34,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile",
                "List[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {}
        },
        "get_game_specific": {
            "name": "get_game_specific",
            "location": 126,
            "return": [
                "str",
                "Optional[Dict[str, bytes]]",
                "Optional[Dict[str, Any]]",
                "Optional[int]",
                "int"
            ],
            "arguments": {
                "game_id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_games_all": {
            "name": "get_games_all",
            "location": 136,
            "return": [
                "Dict[str, Any]",
                "app.domain.users.User",
                "dict",
                "requests.models.Response",
                "str",
                "zerver.models.UserProfile"
            ],
            "arguments": {}
        },
        "post_games": {
            "name": "post_games",
            "location": 151,
            "return": [
                "bool",
                "raiden.api.resAPIServer",
                "int"
            ],
            "arguments": {}
        },
        "post_games_async": {
            "name": "post_games_async",
            "location": 172,
            "return": [
                ""
            ],
            "arguments": {
                "file_id": [
                    "int",
                    "uuid.UUID",
                    "List[int]",
                    "str"
                ]
            }
        },
        "get_giantbomb_data": {
            "name": "get_giantbomb_data",
            "location": 370,
            "return": [
                "dict",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {
                "game_name": [
                    "str"
                ]
            }
        },
        "simplify_name": {
            "name": "simplify_name",
            "location": 421,
            "return": [
                "bool",
                "Type",
                "str",
                "Optional[Any]",
                "list",
                "Tuple[str, List[str]]",
                "int"
            ],
            "arguments": {
                "search_name": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "get_game_dict": {
            "name": "get_game_dict",
            "location": 440,
            "return": [
                "str",
                "Dict[str, Any]",
                "dict",
                "List[str]",
                "tracim.models.data.Content",
                "celery.Celery",
                "salon.models.Stylist"
            ],
            "arguments": {
                "game": [
                    "Callable",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "edit_game": {
            "name": "edit_game",
            "location": 468,
            "return": [
                "bool",
                "dict",
                "core_lib.core.models.Event",
                "str"
            ],
            "arguments": {
                "game_id": [
                    "str",
                    "int",
                    "dict",
                    "MutableMapping"
                ]
            }
        },
        "get_incomplete_games": {
            "name": "get_incomplete_games",
            "location": 503,
            "return": [
                "bool",
                "server.models.User",
                "app.domain.common.TimeWindow",
                "str",
                "Optional[str]"
            ],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/api/views/main.py": {
        "index": {
            "name": "index",
            "location": 8,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/api/views/search_page.py": {
        "search_game_by_name": {
            "name": "search_game_by_name",
            "location": 18,
            "return": [
                "core.models.User",
                "flask.Response",
                "bool",
                "str",
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/api/views/updates.py": {
        "get_updates": {
            "name": "get_updates",
            "location": 15,
            "return": [
                "str",
                "bool",
                "List[Tuple[str, str]]",
                "Optional[Dict[str, Any]]",
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/tests/conftest.py": {
        "client": {
            "name": "client",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "childs-play-tool-master/backend/tests/mock_data.py": {},
    "childs-play-tool-master/backend/tests/test_basic.py": {
        "test_index": {
            "name": "test_index",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        },
        "test_get_games": {
            "name": "test_get_games",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "dict",
                    "duniterpy.api.clienClient",
                    "Dict[str, str]"
                ]
            }
        },
        "test_get_game_specific": {
            "name": "test_get_game_specific",
            "location": 206,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "neuromation.api.Client",
                    "core.models.Recipe"
                ]
            }
        },
        "test_get_games_all": {
            "name": "test_get_games_all",
            "location": 240,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        },
        "test_post_games": {
            "name": "test_post_games",
            "location": 252,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "childs-play-tool-master/backend/tests/__init__.py": {}
}
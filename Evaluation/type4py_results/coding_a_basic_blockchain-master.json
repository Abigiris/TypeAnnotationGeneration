{
    "coding_a_basic_blockchain-master/blockchain.py": {
        "Transaction.sign": {
            "name": "sign",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sender_private_key": [
                    "bytes",
                    "str"
                ]
            }
        },
        "Transaction.get_core_data": {
            "name": "get_core_data",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Transaction.validate": {
            "name": "validate",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Block.hash": {
            "name": "hash",
            "location": 55,
            "return": [
                "int",
                "Union[str, Pattern]",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Block.get_header": {
            "name": "get_header",
            "location": 62,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Block.validate": {
            "name": "validate",
            "location": 69,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "proof_of_work_func": [
                    "int",
                    "Optional[int]",
                    "Container",
                    "Collection[int]"
                ]
            }
        },
        "BlockchainNode.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "miner_address": [
                    "bytes",
                    "str",
                    "Callable[[bytes], bytes]"
                ]
            }
        },
        "BlockchainNode.submit_transaction": {
            "name": "submit_transaction",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transaction": [
                    "str",
                    "T",
                    "bool",
                    "List[str]"
                ]
            }
        },
        "BlockchainNode.mine_block": {
            "name": "mine_block",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BlockchainNode.execute_pow": {
            "name": "execute_pow",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "BlockchainNode.validate_chain": {
            "name": "validate_chain",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BlockchainNode.get_balance": {
            "name": "get_balance",
            "location": 179,
            "return": [
                "str",
                "int",
                "Tuple[int, int]"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str",
                    "Set[str]"
                ]
            }
        }
    }
}
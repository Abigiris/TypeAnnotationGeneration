{
    "collectiegroesbeek-master/wsgi.py": {},
    "collectiegroesbeek-master/collectiegroesbeek/controller.py": {
        "get_page_range": {
            "name": "get_page_range",
            "location": 140,
            "return": [
                "str",
                "List[Dict]",
                "List[str]",
                "Union[str, List[Any]]",
                "List[int]",
                "list"
            ],
            "arguments": {
                "hits_total": [
                    "int",
                    "tuple",
                    "List[str]",
                    "str"
                ],
                "page": [
                    "bool",
                    "float",
                    "str",
                    "dict"
                ],
                "cards_per_page": [
                    "int",
                    "tuple",
                    "List[str]",
                    "str"
                ]
            }
        },
        "get_names_list": {
            "name": "get_names_list",
            "location": 152,
            "return": [
                "str",
                "Optional[str]",
                "List[str]"
            ],
            "arguments": {
                "q": [
                    "str"
                ]
            }
        },
        "is_elasticsearch_reachable": {
            "name": "is_elasticsearch_reachable",
            "location": 166,
            "return": [
                "str",
                "bool",
                "Callable",
                "int"
            ],
            "arguments": {}
        },
        "get_suggestions": {
            "name": "get_suggestions",
            "location": 171,
            "return": [
                "Dict[str, Any]",
                "Dict[int, Dict[int, Any]]",
                "dict"
            ],
            "arguments": {
                "keywords": [
                    "dict",
                    "Iterable[str]",
                    "int",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "get_doc": {
            "name": "get_doc",
            "location": 191,
            "return": [
                "List[str]",
                "str",
                "List[Dict]",
                "list"
            ],
            "arguments": {
                "doc_id": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "Searcher.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "q": [
                    "str",
                    "bool",
                    "Optional[bool]",
                    "Union[int, float]"
                ],
                "start": [
                    "int"
                ],
                "size": [
                    "int"
                ],
                "doctypes": [
                    "Dict[Tuple[str, str], Exception]",
                    "Optional[int]",
                    "Optional[str]",
                    "Optional[pathfinding_service.model.IOU]"
                ]
            }
        },
        "Searcher.get_query": {
            "name": "get_query",
            "location": 47,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "Optional[str]",
                    "dict",
                    "int"
                ]
            }
        },
        "Searcher.handle_specific_field_request": {
            "name": "handle_specific_field_request",
            "location": 65,
            "return": [
                "bool",
                "Dict[str, Any]",
                "str",
                "Dict[str, Set[str]]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "str",
                    "lib.model.folder.folder.Folder",
                    "List[str]"
                ]
            }
        },
        "Searcher.get_specific_field_query": {
            "name": "get_specific_field_query",
            "location": 91,
            "return": [
                "str",
                "Union[int, float, complex]",
                "Optional[Dict[str, Any]]",
                "bool",
                "Iterable[Any]"
            ],
            "arguments": {
                "field": [
                    "str",
                    "Sequence[MutableMapping]"
                ],
                "keywords": [
                    "str",
                    "Sequence[MutableMapping]"
                ]
            }
        },
        "Searcher.get_regular_query": {
            "name": "get_regular_query",
            "location": 95,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "keywords": [
                    "str",
                    "Mapping[str, Any]",
                    "bool",
                    "list",
                    "Dict[str, Any]"
                ]
            }
        },
        "Searcher.get_partial_phrase_match_query": {
            "name": "get_partial_phrase_match_query",
            "location": 102,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "keywords": [
                    "str",
                    "Optional[str]",
                    "model.IpAddress",
                    "bool",
                    "bytes"
                ]
            }
        },
        "Searcher.parse_year_range": {
            "name": "parse_year_range",
            "location": 118,
            "return": [
                "Optional[float]",
                "Optional[int]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Searcher.count": {
            "name": "count",
            "location": 128,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Searcher.get_results": {
            "name": "get_results",
            "location": 131,
            "return": [
                "str",
                "bytes",
                "Tuple[int]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "collectiegroesbeek-master/collectiegroesbeek/model.py": {
        "create_name_keyword": {
            "name": "create_name_keyword",
            "location": 105,
            "return": [
                "bool",
                "str",
                "Optional[float]",
                "bytes",
                "int"
            ],
            "arguments": {
                "naam": [
                    "str",
                    "Dict[str, str]"
                ]
            }
        },
        "create_year": {
            "name": "create_year",
            "location": 118,
            "return": [
                "Optional[bool]",
                "Optional[str]",
                "str",
                "Optional[int]",
                "Optional[float]"
            ],
            "arguments": {
                "datum": [
                    "int",
                    "Optional[bool]",
                    "Optional[float]"
                ]
            }
        },
        "parse_entry": {
            "name": "parse_entry",
            "location": 671,
            "return": [
                "str",
                "list",
                "Optional[BaseException]"
            ],
            "arguments": {
                "entry": [
                    "str",
                    "bool",
                    "Dict[str, Any]",
                    "Union[Callable, Coroutine]"
                ]
            }
        },
        "list_doctypes": {
            "name": "list_doctypes",
            "location": 675,
            "return": [
                "str",
                "int"
            ],
            "arguments": {}
        },
        "BaseDocument._matches": {
            "name": "_matches",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "dict",
                    "Dict[str, Any]"
                ],
                "hit": [
                    "str",
                    "bool",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "BaseDocument.from_csv_line": {
            "name": "from_csv_line",
            "location": 19,
            "return": [
                "typing.Optional['BaseDocument']"
            ],
            "arguments": {
                "cls": [
                    "List[str]",
                    "str",
                    "bool",
                    "Optional[str]",
                    "List[Union[Any, Any]]"
                ],
                "line": [
                    "List[str]",
                    "str",
                    "bool",
                    "Optional[str]",
                    "List[Union[Any, Any]]"
                ]
            }
        },
        "BaseDocument.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 23,
            "return": [
                "typing.List[builtins.str]"
            ],
            "arguments": {}
        },
        "BaseDocument.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 27,
            "return": [
                "builtins.str"
            ],
            "arguments": {}
        },
        "BaseDocument.get_title": {
            "name": "get_title",
            "location": 30,
            "return": [
                "builtins.str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseDocument.get_subtitle": {
            "name": "get_subtitle",
            "location": 33,
            "return": [
                "builtins.str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseDocument.get_body_lines": {
            "name": "get_body_lines",
            "location": 36,
            "return": [
                "typing.List[builtins.str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardNameDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 58,
            "return": [
                "Sequence[str]",
                "Optional[int]",
                "Optional[Any]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "float",
                    "list"
                ],
                "line": [
                    "List[str]",
                    "str",
                    "int"
                ]
            }
        },
        "CardNameDoc.is_valid": {
            "name": "is_valid",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardNameDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 87,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "CardNameDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 91,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "CardNameDoc.get_title": {
            "name": "get_title",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardNameDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 97,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardNameDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 100,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VoornamenDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 146,
            "return": [
                "Sequence[str]",
                "Optional[int]",
                "Optional[Any]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "float",
                    "list"
                ],
                "line": [
                    "List[str]",
                    "str",
                    "int"
                ]
            }
        },
        "VoornamenDoc.is_valid": {
            "name": "is_valid",
            "location": 164,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VoornamenDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 174,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "VoornamenDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 178,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "VoornamenDoc.get_title": {
            "name": "get_title",
            "location": 181,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VoornamenDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 184,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VoornamenDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 187,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "JaartallenDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 209,
            "return": [
                "Sequence[str]",
                "Optional[int]",
                "Optional[Any]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "float",
                    "list"
                ],
                "line": [
                    "List[str]",
                    "str",
                    "int"
                ]
            }
        },
        "JaartallenDoc.is_valid": {
            "name": "is_valid",
            "location": 226,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "JaartallenDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 236,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "JaartallenDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 240,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "JaartallenDoc.get_title": {
            "name": "get_title",
            "location": 243,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "JaartallenDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 246,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "JaartallenDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 249,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekHeemskerkDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 277,
            "return": [
                "Optional[str]",
                "Optional[Dict]",
                "Optional[Any]",
                "str",
                "bool",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "Callable",
                    "tuple"
                ],
                "line": [
                    "List[str]",
                    "str",
                    "AnyStr",
                    "dict",
                    "list"
                ]
            }
        },
        "MaatboekHeemskerkDoc.parse_year": {
            "name": "parse_year",
            "location": 296,
            "return": [
                "str",
                "float",
                "int",
                "Optional[str]",
                "List[str]",
                "bool",
                "Optional[float]"
            ],
            "arguments": {
                "datum": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "MaatboekHeemskerkDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 301,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekHeemskerkDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 305,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekHeemskerkDoc.get_title": {
            "name": "get_title",
            "location": 308,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekHeemskerkDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 314,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekHeemskerkDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 317,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekHeemstedeDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 347,
            "return": [
                "Optional[str]",
                "Optional[Dict]",
                "Optional[Any]",
                "str",
                "bool",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "Callable",
                    "tuple"
                ],
                "line": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "MaatboekHeemstedeDoc.parse_year": {
            "name": "parse_year",
            "location": 364,
            "return": [
                "str",
                "float",
                "int",
                "Optional[str]",
                "List[str]",
                "bool",
                "Optional[float]"
            ],
            "arguments": {
                "datum": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "MaatboekHeemstedeDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 369,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekHeemstedeDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 373,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekHeemstedeDoc.get_title": {
            "name": "get_title",
            "location": 376,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekHeemstedeDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 382,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekHeemstedeDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 385,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekBroekInWaterlandDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 413,
            "return": [
                "Optional[str]",
                "Optional[Dict]",
                "Optional[Any]",
                "str",
                "bool",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "Callable",
                    "tuple"
                ],
                "line": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "MaatboekBroekInWaterlandDoc.parse_year": {
            "name": "parse_year",
            "location": 430,
            "return": [
                "str",
                "float",
                "int",
                "Optional[str]",
                "List[str]",
                "bool",
                "Optional[float]"
            ],
            "arguments": {
                "datum": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "MaatboekBroekInWaterlandDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 435,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekBroekInWaterlandDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 439,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "MaatboekBroekInWaterlandDoc.get_title": {
            "name": "get_title",
            "location": 442,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekBroekInWaterlandDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 448,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekBroekInWaterlandDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 451,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekSuderwoude.from_csv_line": {
            "name": "from_csv_line",
            "location": 479,
            "return": [
                "Optional[str]",
                "Optional[Dict]",
                "Optional[Any]",
                "str",
                "bool",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "Callable",
                    "tuple"
                ],
                "line": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "MaatboekSuderwoude.parse_year": {
            "name": "parse_year",
            "location": 496,
            "return": [
                "str",
                "float",
                "int",
                "Optional[str]",
                "List[str]",
                "bool",
                "Optional[float]"
            ],
            "arguments": {
                "datum": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "MaatboekSuderwoude.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 501,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekSuderwoude.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 505,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "MaatboekSuderwoude.get_title": {
            "name": "get_title",
            "location": 508,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekSuderwoude.get_subtitle": {
            "name": "get_subtitle",
            "location": 514,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MaatboekSuderwoude.get_body_lines": {
            "name": "get_body_lines",
            "location": 517,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "EigendomsaktenHeemskerk.from_csv_line": {
            "name": "from_csv_line",
            "location": 547,
            "return": [
                "Optional[str]",
                "Optional[Dict]",
                "Optional[Any]",
                "str",
                "bool",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "Callable",
                    "tuple"
                ],
                "line": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "EigendomsaktenHeemskerk.parse_year": {
            "name": "parse_year",
            "location": 565,
            "return": [
                "str",
                "float",
                "int",
                "Optional[str]",
                "List[str]",
                "bool",
                "Optional[float]"
            ],
            "arguments": {
                "datum": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "EigendomsaktenHeemskerk.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 570,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "EigendomsaktenHeemskerk.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 574,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "EigendomsaktenHeemskerk.get_title": {
            "name": "get_title",
            "location": 577,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "EigendomsaktenHeemskerk.get_subtitle": {
            "name": "get_subtitle",
            "location": 581,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "EigendomsaktenHeemskerk.get_body_lines": {
            "name": "get_body_lines",
            "location": 584,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTransportregisterDoc.from_csv_line": {
            "name": "from_csv_line",
            "location": 605,
            "return": [
                "Sequence[str]",
                "Optional[int]",
                "Optional[Any]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "float",
                    "list"
                ],
                "line": [
                    "List[str]",
                    "str",
                    "int"
                ]
            }
        },
        "BaseTransportregisterDoc.is_valid": {
            "name": "is_valid",
            "location": 621,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTransportregisterDoc.get_multimatch_fields": {
            "name": "get_multimatch_fields",
            "location": 631,
            "return": [
                "List[str]",
                "tuple",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "BaseTransportregisterDoc.get_title": {
            "name": "get_title",
            "location": 634,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTransportregisterDoc.get_subtitle": {
            "name": "get_subtitle",
            "location": 637,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTransportregisterDoc.get_body_lines": {
            "name": "get_body_lines",
            "location": 640,
            "return": [
                "List[str]",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportRegisterEgmondDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 654,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "TransportRegisterBloemendaalDoc.get_index_name_pretty": {
            "name": "get_index_name_pretty",
            "location": 667,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "CardNameDoc.Index.__new__": {
            "name": "__new__",
            "location": 54,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "VoornamenDoc.Index.__new__": {
            "name": "__new__",
            "location": 142,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "JaartallenDoc.Index.__new__": {
            "name": "__new__",
            "location": 205,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MaatboekHeemskerkDoc.Index.__new__": {
            "name": "__new__",
            "location": 273,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MaatboekHeemstedeDoc.Index.__new__": {
            "name": "__new__",
            "location": 343,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MaatboekBroekInWaterlandDoc.Index.__new__": {
            "name": "__new__",
            "location": 409,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MaatboekSuderwoude.Index.__new__": {
            "name": "__new__",
            "location": 475,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "EigendomsaktenHeemskerk.Index.__new__": {
            "name": "__new__",
            "location": 543,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TransportRegisterEgmondDoc.Index.__new__": {
            "name": "__new__",
            "location": 650,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TransportRegisterBloemendaalDoc.Index.__new__": {
            "name": "__new__",
            "location": 663,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "cls": [
                    "dict",
                    "Type[T]",
                    "Type",
                    "str",
                    "Callable[[], None]"
                ]
            }
        }
    },
    "collectiegroesbeek-master/collectiegroesbeek/view.py": {
        "home": {
            "name": "home",
            "location": 15,
            "return": [
                "float",
                "str",
                "List[int]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 20,
            "return": [
                "str",
                "Optional[Any]",
                "int"
            ],
            "arguments": {}
        },
        "search": {
            "name": "search",
            "location": 28,
            "return": [
                "str",
                "Dict[str, Any]",
                "tuple",
                "bytes"
            ],
            "arguments": {}
        },
        "add_selected_doctypes_to_query_string": {
            "name": "add_selected_doctypes_to_query_string",
            "location": 85,
            "return": [
                "str",
                "Exception",
                "list"
            ],
            "arguments": {
                "query_string": [
                    "str",
                    "Optional[str]",
                    "Dict[str, str]",
                    "int"
                ],
                "doctypes_selection": [
                    "str",
                    "Optional[str]",
                    "Iterable[Tuple[int, int]]"
                ]
            }
        },
        "show_names_list": {
            "name": "show_names_list",
            "location": 96,
            "return": [
                "Dict[str, Any]",
                "str",
                "type",
                "dict"
            ],
            "arguments": {
                "q": [
                    "int",
                    "str"
                ]
            }
        },
        "format_hit": {
            "name": "format_hit",
            "location": 107,
            "return": [
                "Dict[str, Any]",
                "model.Integration",
                "dict",
                "Callable",
                "Union[int, float, complex]",
                "str"
            ],
            "arguments": {
                "doc": [
                    "str"
                ]
            }
        },
        "get_product": {
            "name": "get_product",
            "location": 119,
            "return": [
                "str",
                "Optional[Union[Dict, str, int, bytes]]"
            ],
            "arguments": {
                "doc_id": [
                    "int",
                    "Optional[str]",
                    "str",
                    "Union[int, str]"
                ]
            }
        }
    },
    "collectiegroesbeek-master/collectiegroesbeek/__init__.py": {},
    "collectiegroesbeek-master/elasticsearch/add_documents.py": {
        "logging_setup": {
            "name": "logging_setup",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "filename_to_doctype": {
            "name": "filename_to_doctype",
            "location": 97,
            "return": [
                "str",
                "bool",
                "bytes"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 123,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "doctype_name": [
                    "str",
                    "Set[str]",
                    "Optional[str]"
                ]
            }
        },
        "CardProcessor.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "batch_size": [
                    "int",
                    "bool"
                ]
            }
        },
        "CardProcessor.register_index": {
            "name": "register_index",
            "location": 50,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "doctype": [
                    "Dict[str, Any]",
                    "Optional[Tuple[str, ...]]",
                    "Mapping[str, Any]",
                    "dict",
                    "Dict[str, float]"
                ]
            }
        },
        "CardProcessor.add": {
            "name": "add",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "card": [
                    "str",
                    "logging.LogRecord",
                    "Mapping[str, Any]",
                    "Callable[[T], bool]"
                ]
            }
        },
        "CardProcessor.flush": {
            "name": "flush",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CardProcessor.finalize": {
            "name": "finalize",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexMover.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "doctype": [
                    "dict",
                    "str",
                    "Dict[str, str]"
                ]
            }
        },
        "IndexMover.move_alias_to_new": {
            "name": "move_alias_to_new",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "collectiegroesbeek-master/tests/conftest.py": {},
    "collectiegroesbeek-master/tests/test_model.py": {
        "TestCardNameIndex.test_create_year": {
            "name": "test_create_year",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    }
}
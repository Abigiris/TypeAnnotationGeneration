{
    "colour_sort-master/colour_sort/cli.py": {
        "generate_image": {
            "name": "generate_image",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "args": []
            }
        },
        "verify_image": {
            "name": "verify_image",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "args": []
            }
        },
        "run": {
            "name": "run",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "colour_sort-master/colour_sort/image.py": {
        "_rgb_to_lab": {
            "name": "_rgb_to_lab",
            "location": 10,
            "return": [
                "str",
                "numpy.ndarray",
                "Optional[numpy.ndarray]",
                "int",
                "float",
                "PIL.Image"
            ],
            "arguments": {
                "image": [
                    "str",
                    "Iterable[str]",
                    "Callable",
                    "int"
                ]
            }
        },
        "_sort_brightness": {
            "name": "_sort_brightness",
            "location": 19,
            "return": [
                "str",
                "List[int]"
            ],
            "arguments": {
                "image": [
                    "int",
                    "str",
                    "Sized",
                    "float",
                    "PIL.Image"
                ],
                "result": [
                    "int",
                    "str",
                    "Sized",
                    "float",
                    "PIL.Image"
                ]
            }
        },
        "_sort_avg": {
            "name": "_sort_avg",
            "location": 23,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "image": [
                    "numpy.ndarray",
                    "float",
                    "list",
                    "int"
                ],
                "result": [
                    "numpy.ndarray",
                    "float",
                    "list",
                    "int"
                ]
            }
        },
        "_sort_rgb": {
            "name": "_sort_rgb",
            "location": 27,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "mode": [
                    "Dict[str, Any]",
                    "str",
                    "bool",
                    "Callable",
                    "type"
                ],
                "image": [
                    "int",
                    "List[Tuple[str, Any]]",
                    "Optional[Union[str, Any]]",
                    "float",
                    "T"
                ],
                "result": [
                    "Dict[str, Set[str]]",
                    "Dict[str, int]",
                    "int"
                ]
            }
        },
        "_sorted_image": {
            "name": "_sorted_image",
            "location": 62,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "image": [
                    "numpy.ndarray",
                    "bool",
                    "Optional[int]"
                ],
                "map_func": [
                    "numpy.ndarray",
                    "bool",
                    "Optional[int]"
                ],
                "mode": [
                    "numpy.ndarray",
                    "int",
                    "Tuple[int, int]"
                ]
            }
        },
        "create_sorted_image": {
            "name": "create_sorted_image",
            "location": 72,
            "return": [
                "bool",
                "List[Exception]"
            ],
            "arguments": {
                "image": [
                    "int",
                    "T",
                    "PIL.Image.Image"
                ],
                "mode": [
                    "Type",
                    "int"
                ]
            }
        }
    },
    "colour_sort-master/colour_sort/misc.py": {
        "sort_map": {
            "name": "sort_map",
            "location": 12,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "int",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "src": [
                    "str",
                    "List[str]",
                    "int"
                ],
                "mapped": [
                    "str",
                    "numpy.ndarray",
                    "float",
                    "int"
                ],
                "order": [
                    "Optional[str]",
                    "Optional[int]",
                    "str"
                ]
            }
        },
        "reshape_image": {
            "name": "reshape_image",
            "location": 22,
            "return": [
                "numpy.ndarray",
                "int",
                "str"
            ],
            "arguments": {
                "image": [
                    "numpy.ndarray"
                ]
            }
        },
        "generate_all_colours": {
            "name": "generate_all_colours",
            "location": 28,
            "return": [
                "str",
                "Callable[[Any], bool]",
                "int",
                "bool",
                "Optional[float]"
            ],
            "arguments": {}
        }
    },
    "colour_sort-master/colour_sort/sort_type.py": {
        "is_clip": {
            "name": "is_clip",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "sort_type": [
                    "str"
                ]
            }
        },
        "unclip": {
            "name": "unclip",
            "location": 54,
            "return": [
                "str",
                "Sequence[str]",
                "type",
                "Type[T]",
                "int",
                "Callable[[KT], VT]"
            ],
            "arguments": {
                "sort_type": [
                    "str",
                    "dict"
                ]
            }
        },
        "SortType.from_str": {
            "name": "from_str",
            "location": 39,
            "return": [
                "str",
                "Type",
                "bool",
                "float"
            ],
            "arguments": {
                "sort_type": [
                    "str"
                ]
            }
        }
    },
    "colour_sort-master/colour_sort/verify.py": {
        "verify_image": {
            "name": "verify_image",
            "location": 6,
            "return": [
                "str",
                "Dict[str, Dict[str, int]]",
                "Dict[str, Any]",
                "Dict[int, Tuple[int, int]]"
            ],
            "arguments": {
                "img": [
                    "Union[numpy.ndarray, numpy.void]",
                    "numpy.ndarray",
                    "List[numpy.array]",
                    "List[float]",
                    "List[int]",
                    "list"
                ]
            }
        }
    },
    "colour_sort-master/colour_sort/__init__.py": {},
    "colour_sort-master/tests/test_image.py": {
        "image": {
            "name": "image",
            "location": 10,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {}
        },
        "rand_image": {
            "name": "rand_image",
            "location": 17,
            "return": [
                "str",
                "List[int]",
                "int"
            ],
            "arguments": {
                "image": [],
                "request": []
            }
        },
        "test_as_sorted": {
            "name": "test_as_sorted",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "rand_image": [
                    "str"
                ]
            }
        }
    },
    "colour_sort-master/tests/test_verify.py": {
        "test_verify_valid": {
            "name": "test_verify_valid",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_verify_invalid": {
            "name": "test_verify_invalid",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_verify_invalid_size": {
            "name": "test_verify_invalid_size",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "colour_sort-master/tests/__init__.py": {}
}
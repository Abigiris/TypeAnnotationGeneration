{
    "csvdiff-master/setup.py": {},
    "csvdiff-master/csvdiff/error.py": {
        "abort": {
            "name": "abort",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "message": [
                    "str",
                    "List[\"DictDataLoader\"]"
                ]
            }
        }
    },
    "csvdiff-master/csvdiff/patch.py": {
        "is_empty": {
            "name": "is_empty",
            "location": 80,
            "return": [
                "Callable",
                "bool",
                "Iterable[int]",
                "str",
                "List[List[str]]"
            ],
            "arguments": {
                "diff": [
                    "float",
                    "str",
                    "bool",
                    "Union[int, float]",
                    "List[List[int]]"
                ]
            }
        },
        "is_valid": {
            "name": "is_valid",
            "location": 85,
            "return": [
                "bool"
            ],
            "arguments": {
                "diff": [
                    "str",
                    "float"
                ]
            }
        },
        "validate": {
            "name": "validate",
            "location": 98,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "diff": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "apply": {
            "name": "apply",
            "location": 106,
            "return": [
                "int",
                "str",
                "List[int]",
                "Dict[str, Any]",
                "tuple"
            ],
            "arguments": {
                "diff": [
                    "List[str]",
                    "dict"
                ],
                "recs": [
                    "list",
                    "int",
                    "Tuple[FrozenSet[int]]"
                ],
                "strict": [
                    "Callable",
                    "str"
                ]
            }
        },
        "_add_records": {
            "name": "_add_records",
            "location": 119,
            "return": [
                ""
            ],
            "arguments": {
                "indexed": [
                    "str",
                    "int",
                    "Callable",
                    "bytes",
                    "Set[str]",
                    "Sequence[Any]"
                ],
                "recs_to_add": [
                    "int",
                    "str",
                    "float"
                ],
                "index_columns": [
                    "int",
                    "str",
                    "float"
                ],
                "strict": [
                    "int",
                    "Mapping[Any, Any]",
                    "dict",
                    "Dict[str, str]"
                ]
            }
        },
        "_remove_records": {
            "name": "_remove_records",
            "location": 129,
            "return": [
                ""
            ],
            "arguments": {
                "indexed": [
                    "bool",
                    "str",
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "dict"
                ],
                "recs_to_remove": [
                    "str",
                    "int",
                    "tuple",
                    "bool"
                ],
                "index_columns": [
                    "str",
                    "int",
                    "tuple",
                    "bool"
                ],
                "strict": [
                    "bool",
                    "List[str]",
                    "Union[str, float]"
                ]
            }
        },
        "_update_records": {
            "name": "_update_records",
            "location": 148,
            "return": [
                ""
            ],
            "arguments": {
                "indexed": [
                    "str",
                    "Optional[int]"
                ],
                "deltas": [
                    "int",
                    "str",
                    "Optional[bool]",
                    "bool"
                ],
                "strict": [
                    "Dict[str, bool]",
                    "dict",
                    "int",
                    "str"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 175,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "istream": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "strict": [
                    "bool",
                    "str",
                    "list",
                    "IO[str]"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 190,
            "return": [
                ""
            ],
            "arguments": {
                "diff": [
                    "str"
                ],
                "stream": [
                    "str"
                ],
                "compact": [
                    "bool",
                    "dict",
                    "str",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 199,
            "return": [
                "int"
            ],
            "arguments": {
                "from_records": [
                    "Optional[int]",
                    "tuple",
                    "int"
                ],
                "to_records": [
                    "Optional[int]",
                    "tuple",
                    "int"
                ],
                "index_columns": [
                    "int",
                    "List[int]",
                    "Optional[float]"
                ],
                "ignore_columns": [
                    "Optional[str]",
                    "bool",
                    "Optional[List[int]]",
                    "Optional[float]",
                    "Optional[List[str]]",
                    "Optional[int]"
                ]
            }
        },
        "create_indexed": {
            "name": "create_indexed",
            "location": 214,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "from_indexed": [
                    "Optional[Set[int]]",
                    "Optional[bool]",
                    "Optional[str]"
                ],
                "to_indexed": [
                    "Optional[Set[int]]",
                    "Optional[bool]",
                    "Optional[str]"
                ],
                "index_columns": [
                    "str",
                    "set",
                    "bool",
                    "Set[str]",
                    "Dict[str, Any]",
                    "Union[Set[int], List[int], Dict[int, Any]]"
                ]
            }
        },
        "_compare_keys": {
            "name": "_compare_keys",
            "location": 227,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "int",
                "Hashable"
            ],
            "arguments": {
                "from_recs": [
                    "str",
                    "int",
                    "dict"
                ],
                "to_recs": [
                    "str",
                    "int",
                    "dict"
                ]
            }
        },
        "_compare_rows": {
            "name": "_compare_rows",
            "location": 236,
            "return": [
                "List[str]",
                "List[T]"
            ],
            "arguments": {
                "from_recs": [
                    "List[Dict[str, Any]]",
                    "List[Tuple[bytes, bytes]]",
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "dict",
                    "Sequence[str]"
                ],
                "to_recs": [
                    "List[Dict[str, Any]]",
                    "List[Tuple[bytes, bytes]]",
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "dict",
                    "Sequence[str]"
                ],
                "keys": [
                    "List[Dict[str, Any]]",
                    "List[Tuple[bytes, bytes]]",
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "dict",
                    "Sequence[str]"
                ]
            }
        },
        "_assemble": {
            "name": "_assemble",
            "location": 244,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "removed": [
                    "bool",
                    "Optional[str]",
                    "List['PydanticModelField']",
                    "str",
                    "List[Dict]",
                    "Optional[List[str]]"
                ],
                "added": [
                    "bool",
                    "Optional[str]",
                    "List['PydanticModelField']",
                    "str",
                    "List[Dict]",
                    "Optional[List[str]]"
                ],
                "changed": [
                    "dict",
                    "str",
                    "Iterable[str]",
                    "bool",
                    "Callable",
                    "Dict[str, Set[str]]"
                ],
                "from_recs": [
                    "str",
                    "List[Optional[Any]]"
                ],
                "to_recs": [
                    "str",
                    "bool",
                    "Callable",
                    "List[str]",
                    "Union[None, str, List[str], Dict[str, str]]",
                    "List[Dict[str, Any]]",
                    "Dict[str, Any]"
                ],
                "index_columns": [
                    "bool"
                ]
            }
        },
        "_change_key": {
            "name": "_change_key",
            "location": 256,
            "return": [
                "str",
                "bytes",
                "bool",
                "Callable"
            ],
            "arguments": {
                "c": [
                    "Tuple[str, str]",
                    "List[str]",
                    "str",
                    "Sequence[str]",
                    "bool"
                ]
            }
        },
        "record_diff": {
            "name": "record_diff",
            "location": 260,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "lhs": [
                    "str",
                    "int",
                    "list",
                    "bool"
                ],
                "rhs": [
                    "str",
                    "int",
                    "list",
                    "bool"
                ]
            }
        },
        "is_typed": {
            "name": "is_typed",
            "location": 272,
            "return": [],
            "arguments": {
                "diff": [
                    "str",
                    "bool",
                    "Pattern"
                ]
            }
        },
        "_iter_fields": {
            "name": "_iter_fields",
            "location": 277,
            "return": [
                "BaseException"
            ],
            "arguments": {
                "diff": [
                    "int",
                    "str",
                    "slice"
                ]
            }
        },
        "_iter_change_fields": {
            "name": "_iter_change_fields",
            "location": 285,
            "return": [
                ""
            ],
            "arguments": {
                "cs": [
                    "str",
                    "bool"
                ]
            }
        },
        "_iter_record_fields": {
            "name": "_iter_record_fields",
            "location": 294,
            "return": [
                ""
            ],
            "arguments": {
                "recs": [
                    "dict",
                    "bool",
                    "str",
                    "int"
                ]
            }
        },
        "filter_significance": {
            "name": "filter_significance",
            "location": 304,
            "return": [
                "float",
                "Callable[[None], bool]",
                "List[str]",
                "int"
            ],
            "arguments": {
                "diff": [
                    "bytes",
                    "dict",
                    "int",
                    "str"
                ],
                "significance": [
                    "dict",
                    "Mapping[Any, Any]"
                ]
            }
        },
        "_is_significant": {
            "name": "_is_significant",
            "location": 326,
            "return": [
                "bool"
            ],
            "arguments": {
                "change": [
                    "Union[float, int]",
                    "float",
                    "Union[float, Tuple[float, float]]",
                    "str",
                    "bool",
                    "int"
                ],
                "significance": [
                    "str",
                    "Union[bool, List[bool]]",
                    "int"
                ]
            }
        }
    },
    "csvdiff-master/csvdiff/records.py": {
        "load": {
            "name": "load",
            "location": 47,
            "return": [
                "int",
                "Dict[str, bool]",
                "Optional[str]",
                "dict",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "file_or_stream": [
                    "str",
                    "io.BufferedReader",
                    "IO[str]"
                ],
                "sep": [
                    "str",
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 54,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "record_seq": [
                    "int",
                    "str",
                    "Iterable[Any]",
                    "Optional[str]",
                    "Tuple[float, float]",
                    "bool",
                    "Optional[float]",
                    "bytes"
                ],
                "index_columns": [
                    "int",
                    "str",
                    "Iterable[Any]",
                    "Optional[str]",
                    "Tuple[float, float]",
                    "bool",
                    "Optional[float]",
                    "bytes"
                ]
            }
        },
        "filter_ignored": {
            "name": "filter_ignored",
            "location": 70,
            "return": [
                "float",
                "Callable[[None], bool]",
                "List[str]",
                "int"
            ],
            "arguments": {
                "index": [
                    "int",
                    "type",
                    "bool",
                    "str"
                ],
                "ignore_columns": [
                    "bool"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "records": [
                    "bool",
                    "dict",
                    "str",
                    "Tuple[Tuple[str, ...]]"
                ],
                "fieldnames": [
                    "str",
                    "Dict[str, str]",
                    "io.TextIO",
                    "bool",
                    "int"
                ],
                "ostream": [
                    "str",
                    "Dict[str, str]",
                    "io.TextIO",
                    "bool",
                    "int"
                ]
            }
        },
        "sort": {
            "name": "sort",
            "location": 86,
            "return": [
                "str",
                "Dict[str, Any]",
                "int",
                "bool"
            ],
            "arguments": {
                "records": [
                    "str",
                    "Mapping",
                    "Optional[Tuple[str, ...]]",
                    "Iterable",
                    "dict"
                ]
            }
        },
        "_record_key": {
            "name": "_record_key",
            "location": 91,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "record": [
                    "dict",
                    "Dict[str, float]"
                ]
            }
        },
        "SafeDictReader.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "istream": [
                    "str",
                    "int",
                    "io.TextIO",
                    "bool"
                ],
                "sep": [
                    "str",
                    "int",
                    "io.TextIO",
                    "bool"
                ]
            }
        },
        "SafeDictReader.__iter__": {
            "name": "__iter__",
            "location": 35,
            "return": [
                "typing.Iterator[Record]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SafeDictReader.fieldnames": {
            "name": "fieldnames",
            "location": 43,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "csvdiff-master/csvdiff/__init__.py": {
        "diff_files": {
            "name": "diff_files",
            "location": 28,
            "return": [
                "str",
                "Dict[str, str]",
                "io.TextIO",
                "Dict[int, Set[str]]"
            ],
            "arguments": {
                "from_file": [
                    "str",
                    "bool",
                    "int"
                ],
                "to_file": [
                    "str",
                    "bool",
                    "int"
                ],
                "index_columns": [
                    "bool",
                    "int",
                    "Optional[bool]",
                    "float",
                    "str"
                ],
                "sep": [
                    "str",
                    "int",
                    "Dict[str, str]",
                    "Optional[str]"
                ],
                "ignored_columns": [
                    "bool",
                    "int",
                    "Optional[bool]",
                    "float",
                    "str"
                ]
            }
        },
        "diff_records": {
            "name": "diff_records",
            "location": 41,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "from_records": [
                    "int",
                    "Optional[int]",
                    "Type[T]",
                    "bool"
                ],
                "to_records": [
                    "int",
                    "Optional[int]",
                    "Type[T]",
                    "bool"
                ],
                "index_columns": [
                    "int",
                    "Optional[int]",
                    "Type[T]",
                    "bool"
                ]
            }
        },
        "patch_file": {
            "name": "patch_file",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "patch_stream": [
                    "str",
                    "Dict[str, Any]",
                    "int"
                ],
                "fromcsv_stream": [
                    "str",
                    "int",
                    "bytes"
                ],
                "tocsv_stream": [
                    "io.TextIO",
                    "str",
                    "List[str]"
                ],
                "strict": [
                    "str",
                    "bool"
                ],
                "sep": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "patch_records": {
            "name": "patch_records",
            "location": 73,
            "return": [
                "str",
                "Iterable[str]",
                "bool"
            ],
            "arguments": {
                "diff": [
                    "int",
                    "Sequence[MutableSet[int]]",
                    "Optional[str]"
                ],
                "from_records": [
                    "int",
                    "Sequence[MutableSet[int]]",
                    "Optional[str]"
                ],
                "strict": [
                    "int",
                    "Sequence[MutableSet[int]]",
                    "Optional[str]"
                ]
            }
        },
        "_nice_fieldnames": {
            "name": "_nice_fieldnames",
            "location": 81,
            "return": [
                "bool",
                "Optional[int]",
                "Optional[bool]"
            ],
            "arguments": {
                "all_columns": [
                    "int",
                    "dict",
                    "Set[int]",
                    "Optional[int]"
                ],
                "index_columns": [
                    "int",
                    "dict",
                    "Optional[int]",
                    "Set[int]"
                ]
            }
        },
        "csvdiff_cmd": {
            "name": "csvdiff_cmd",
            "location": 128,
            "return": [
                ""
            ],
            "arguments": {
                "index_columns": [
                    "int",
                    "bool"
                ],
                "from_csv": [
                    "int",
                    "List[Tuple[int, int]]",
                    "List[int]",
                    "bool"
                ],
                "to_csv": [
                    "int",
                    "List[Tuple[int, int]]",
                    "List[int]",
                    "bool"
                ],
                "style": [
                    "bool",
                    "float",
                    "tuple"
                ],
                "output": [
                    "bytes",
                    "str"
                ],
                "sep": [
                    "int",
                    "List[Tuple[int, int]]",
                    "List[int]",
                    "bool"
                ],
                "quiet": [
                    "bytes",
                    "str"
                ],
                "ignore_columns": [
                    "Optional[str]",
                    "Optional[List[int]]"
                ],
                "significance": [
                    "int",
                    "List[Tuple[int, int]]",
                    "List[int]",
                    "bool"
                ]
            }
        },
        "_diff_files_to_stream": {
            "name": "_diff_files_to_stream",
            "location": 163,
            "return": [
                ""
            ],
            "arguments": {
                "from_csv": [
                    "str",
                    "Optional[str]"
                ],
                "to_csv": [
                    "str",
                    "Optional[str]"
                ],
                "index_columns": [
                    "str",
                    "Optional[str]"
                ],
                "ostream": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "compact": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "sep": [
                    "str",
                    "Optional[str]"
                ],
                "ignored_columns": [
                    "str",
                    "Optional[str]"
                ],
                "significance": [
                    "Optional[bool]",
                    "Optional[int]",
                    "Optional[str]",
                    "Optional[float]",
                    "Optional[Union[str, Any]]"
                ]
            }
        },
        "_diff_and_summarize": {
            "name": "_diff_and_summarize",
            "location": 178,
            "return": [
                ""
            ],
            "arguments": {
                "from_csv": [
                    "int",
                    "List[str]",
                    "Sequence[str]",
                    "List[Tuple[str, str]]"
                ],
                "to_csv": [
                    "bool",
                    "dict",
                    "Optional[\"ShippingInfo\"]"
                ],
                "index_columns": [
                    "int",
                    "bool",
                    "Tuple[int, int, int]",
                    "Callable",
                    "Optional[dict]",
                    "Optional[str]"
                ],
                "stream": [
                    "int",
                    "bool"
                ],
                "sep": [
                    "bool",
                    "Optional[dict]",
                    "int",
                    "Dict[int, Dict[str, str]]"
                ],
                "ignored_columns": [
                    "int",
                    "bool",
                    "Tuple[int, int, int]",
                    "Callable",
                    "Optional[dict]",
                    "Optional[str]"
                ],
                "significance": [
                    "Optional[str]",
                    "Optional[List]",
                    "Optional[bool]",
                    "bool",
                    "Optional[float]",
                    "float"
                ]
            }
        },
        "_summarize_diff": {
            "name": "_summarize_diff",
            "location": 197,
            "return": [
                ""
            ],
            "arguments": {
                "diff": [
                    "int",
                    "List[Dict]",
                    "list",
                    "List[int]",
                    "str"
                ],
                "orig_size": [
                    "int",
                    "str",
                    "bool",
                    "float",
                    "List[str]",
                    "Union[float, str]",
                    "bytes",
                    "Tuple[int]"
                ],
                "stream": [
                    "int",
                    "str",
                    "bool",
                    "float",
                    "List[str]",
                    "Union[float, str]",
                    "bytes",
                    "Tuple[int]"
                ]
            }
        },
        "csvpatch_cmd": {
            "name": "csvpatch_cmd",
            "location": 229,
            "return": [
                ""
            ],
            "arguments": {
                "input_csv": [
                    "int",
                    "str",
                    "float"
                ],
                "input": [
                    "str",
                    "int",
                    "TextIO",
                    "float"
                ],
                "output": [
                    "str",
                    "int",
                    "bool"
                ],
                "strict": [
                    "str"
                ]
            }
        },
        "CSVType.convert": {
            "name": "convert",
            "location": 90,
            "return": [
                "str",
                "bool",
                "float",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "Union[str, bytes]",
                    "Optional[click.Parameter]",
                    "dict"
                ],
                "param": [
                    "Optional[click.Parameter]",
                    "Optional[click.Context]",
                    "str"
                ],
                "ctx": [
                    "Optional[click.Parameter]",
                    "Optional[click.Context]",
                    "str"
                ]
            }
        },
        "CSVType.__repr__": {
            "name": "__repr__",
            "location": 105,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "csvdiff-master/docs/conf.py": {},
    "csvdiff-master/tests/test_csvdiff.py": {
        "tmp_csv_files": {
            "name": "tmp_csv_files",
            "location": 427,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "save_as_csv": {
            "name": "save_as_csv",
            "location": 437,
            "return": [
                ""
            ],
            "arguments": {
                "records": [
                    "dict",
                    "Mapping[str, str]",
                    "Dict[str, Any]",
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "TestCsvdiff.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.csvdiff_cmd": {
            "name": "csvdiff_cmd",
            "location": 34,
            "return": [
                "bool",
                "Optional[int]",
                "Optional[bool]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.csvdiff_summary_cmd": {
            "name": "csvdiff_summary_cmd",
            "location": 50,
            "return": [
                "bool",
                "Optional[int]",
                "Optional[bool]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.patch_cmd": {
            "name": "patch_cmd",
            "location": 72,
            "return": [
                "bool",
                "Optional[int]",
                "Optional[bool]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_summarize": {
            "name": "test_summarize",
            "location": 84,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_summarize_cmd": {
            "name": "test_summarize_cmd",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_summarize_identical": {
            "name": "test_summarize_identical",
            "location": 128,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_csvdiff_fails_without_enough_arguments": {
            "name": "test_csvdiff_fails_without_enough_arguments",
            "location": 144,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_csvdiff_fails_without_valid_key": {
            "name": "test_csvdiff_fails_without_valid_key",
            "location": 151,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_command_valid_usage_with_difference": {
            "name": "test_diff_command_valid_usage_with_difference",
            "location": 155,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_command_valid_usage_with_separator": {
            "name": "test_diff_command_valid_usage_with_separator",
            "location": 176,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_records_str_values": {
            "name": "test_diff_records_str_values",
            "location": 198,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_records_nonstr_values": {
            "name": "test_diff_records_nonstr_values",
            "location": 230,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_records_multikey": {
            "name": "test_diff_records_multikey",
            "location": 261,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_with_valid_ignore": {
            "name": "test_diff_with_valid_ignore",
            "location": 292,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_diff_with_index_as_ignore_field": {
            "name": "test_diff_with_index_as_ignore_field",
            "location": 316,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_schema_is_valid": {
            "name": "test_patch_schema_is_valid",
            "location": 324,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_cmd_valid_args": {
            "name": "test_patch_cmd_valid_args",
            "location": 327,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_cmd_fails_when_json_is_invalid": {
            "name": "test_patch_cmd_fails_when_json_is_invalid",
            "location": 335,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_cmd_fails_when_json_doesnt_match_schema": {
            "name": "test_patch_cmd_fails_when_json_doesnt_match_schema",
            "location": 340,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_add": {
            "name": "test_patch_add",
            "location": 345,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_remove": {
            "name": "test_patch_remove",
            "location": 361,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_patch_change": {
            "name": "test_patch_change",
            "location": 374,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.test_significance": {
            "name": "test_significance",
            "location": 390,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvdiff.assertPatchesEqual": {
            "name": "assertPatchesEqual",
            "location": 409,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "lhs": [
                    "list",
                    "Union[str, List[Any]]",
                    "List[Callable]",
                    "int"
                ],
                "rhs": [
                    "list",
                    "Union[str, List[Any]]",
                    "List[Callable]",
                    "int"
                ]
            }
        },
        "TestCsvdiff.assertRecordsEqual": {
            "name": "assertRecordsEqual",
            "location": 415,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "lhs": [
                    "bytes",
                    "Dict[str, Any]"
                ],
                "rhs": [
                    "bytes",
                    "Dict[str, Any]"
                ]
            }
        },
        "TestCsvdiff.assertChangesEqual": {
            "name": "assertChangesEqual",
            "location": 418,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "lhs": [
                    "dict",
                    "Optional[Tuple[str, ...]]"
                ],
                "rhs": [
                    "dict",
                    "Optional[Tuple[str, ...]]"
                ]
            }
        },
        "TestCsvdiff.tearDown": {
            "name": "tearDown",
            "location": 422,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "csvdiff-master/tests/__init__.py": {}
}
{
    "damm32-main/damm32/checksum.py": {
        "Damm32.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "alphabet": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Damm32.calculate": {
            "name": "calculate",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "Damm32.verify": {
            "name": "verify",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "Damm32._check_alphabet_valid": {
            "name": "_check_alphabet_valid",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Damm32._calculate_from_digits": {
            "name": "_calculate_from_digits",
            "location": 72,
            "return": [
                "float",
                "Sequence[float]",
                "Tuple[int, int]",
                "tuple"
            ],
            "arguments": {
                "self": [],
                "digits": []
            }
        },
        "Damm32._to_digits": {
            "name": "_to_digits",
            "location": 87,
            "return": [
                "bool",
                "int",
                "List[str]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "Tuple[int, int, int]",
                    "int"
                ]
            }
        },
        "Damm32._to_word": {
            "name": "_to_word",
            "location": 104,
            "return": [
                "bool",
                "int",
                "List[str]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "digits": [
                    "float",
                    "dict",
                    "str",
                    "int"
                ]
            }
        }
    },
    "damm32-main/damm32/__init__.py": {},
    "damm32-main/tests/test_alphabet.py": {
        "test_default_alphabet": {
            "name": "test_default_alphabet",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_alphabet": {
            "name": "test_empty_alphabet",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_alphabet": {
            "name": "test_valid_alphabet",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_short_alphabet": {
            "name": "test_short_alphabet",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_long_alphabet": {
            "name": "test_long_alphabet",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_duplicate_alphabet": {
            "name": "test_duplicate_alphabet",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_letter_detected": {
            "name": "test_bad_letter_detected",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_letter_in_alphabet": {
            "name": "test_bad_letter_in_alphabet",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_word": {
            "name": "test_to_word",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_word_non_standard_alphabet": {
            "name": "test_to_word_non_standard_alphabet",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "damm32-main/tests/test_checksum.py": {
        "test_empty_string": {
            "name": "test_empty_string",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculation_verifies": {
            "name": "test_calculation_verifies",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_known_good": {
            "name": "test_known_good",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "damm32-main/tests/test_class.py": {
        "test_class_instantiation": {
            "name": "test_class_instantiation",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "damm32-main/tests/test_types.py": {
        "test_accepts_string": {
            "name": "test_accepts_string",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rejects_not_string": {
            "name": "test_rejects_not_string",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "damm32-main/tests/utils.py": {
        "random_string": {
            "name": "random_string",
            "location": 42,
            "return": [
                "List[str]",
                "str",
                "int"
            ],
            "arguments": {
                "length": [
                    "int",
                    "str"
                ],
                "alphabet": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "damm32-main/tests/__init__.py": {},
    "damm32-main/tools/verify_git_version.py": {
        "find_version": {
            "name": "find_version",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
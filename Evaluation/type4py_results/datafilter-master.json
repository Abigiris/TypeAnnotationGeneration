{
    "datafilter-master/setup.py": {},
    "datafilter-master/datafilter/base.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "List[Dict[str, Any]]",
                    "list",
                    "float",
                    "Iterable[Any]"
                ],
                "translations": [
                    "Optional[str]",
                    "Optional[List[str]]",
                    "str",
                    "Optional[int]",
                    "bytes"
                ],
                "bidirectional": [
                    "Sequence",
                    "str",
                    "bool"
                ],
                "caseinsensitive": [
                    "Sequence",
                    "str",
                    "bool"
                ]
            }
        },
        "Base.results": {
            "name": "results",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.maketrans": {
            "name": "maketrans",
            "location": 35,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.normalize": {
            "name": "normalize",
            "location": 43,
            "return": [
                "str",
                "Optional[float]",
                "int",
                "List[Dict[str, Any]]",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "bytes",
                    "Dict[str, Any]",
                    "str",
                    "Iterable[T]",
                    "List[str]"
                ]
            }
        },
        "Base.parse": {
            "name": "parse",
            "location": 55,
            "return": [
                "Dict[str, str]",
                "dict",
                "Union[int, float, complex]",
                "Dict[str, Set[str]]",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Union[bytes, bytearray, memoryview]",
                    "bytes",
                    "str",
                    "T",
                    "list",
                    "dict",
                    "Union[dict, list]"
                ]
            }
        }
    },
    "datafilter-master/datafilter/config.py": {},
    "datafilter-master/datafilter/filters.py": {
        "CSV.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "bool",
                    "Optional[int]"
                ],
                "tokens": [
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ],
                "translations": [
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ],
                "bidirectional": [
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ],
                "caseinsensitive": [
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ]
            }
        },
        "CSV.results": {
            "name": "results",
            "location": 29,
            "return": [
                "typing.Iterator[typing.Dict[builtins.str, typing.Union[typing.List[builtins.str], builtins.bool, typing.Dict[builtins.str, typing.Any]]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSV.save": {
            "name": "save",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Text.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "int"
                ],
                "tokens": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "int",
                    "Optional[str]"
                ],
                "re_split": [
                    "str",
                    "Optional[str]"
                ],
                "translations": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "int",
                    "Optional[str]"
                ],
                "bidirectional": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "int",
                    "Optional[str]"
                ],
                "caseinsensitive": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "Text.results": {
            "name": "results",
            "location": 69,
            "return": [
                "typing.Iterator[typing.Dict[builtins.str, typing.Union[typing.List[builtins.str], builtins.bool, typing.Dict[builtins.str, typing.Any]]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextFile.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "List[str]",
                    "int",
                    "str"
                ],
                "tokens": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "Optional[float]",
                    "int"
                ],
                "re_split": [
                    "str",
                    "Optional[str]"
                ],
                "translations": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "Optional[float]",
                    "int"
                ],
                "bidirectional": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "Optional[float]",
                    "int"
                ],
                "caseinsensitive": [
                    "bool",
                    "Optional[List[str]]",
                    "List[str]",
                    "Optional[float]",
                    "int"
                ]
            }
        },
        "TextFile.results": {
            "name": "results",
            "location": 99,
            "return": [
                "typing.Iterator[typing.Dict[builtins.str, typing.Union[typing.List[builtins.str], builtins.bool, typing.Dict[builtins.str, typing.Any]]]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "datafilter-master/datafilter/mixins.py": {
        "Save.save": {
            "name": "save",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "endofline": [
                    "str",
                    "IO[bytes]",
                    "int"
                ]
            }
        }
    },
    "datafilter-master/datafilter/__init__.py": {},
    "datafilter-master/tests/test_base.py": {
        "test_instantiation_with_invalid_base": {
            "name": "test_instantiation_with_invalid_base",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_makelower_caseinsensitive_true": {
            "name": "test_makelower_caseinsensitive_true",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_makelower_caseinsensitive_false": {
            "name": "test_makelower_caseinsensitive_false",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_maketrans": {
            "name": "test_maketrans",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_normalize": {
            "name": "test_normalize",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_normalize_bidirectional_true": {
            "name": "test_normalize_bidirectional_true",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_normalize_bidirectional_false": {
            "name": "test_normalize_bidirectional_false",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_normalized_token_attribute": {
            "name": "test_normalized_token_attribute",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_parse_flagged_true": {
            "name": "test_parse_flagged_true",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_parse_flagged_false": {
            "name": "test_parse_flagged_false",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_parse_return": {
            "name": "test_parse_return",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "ValidBase.results": {
            "name": "results",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "datafilter-master/tests/test_filters.py": {
        "test_csv_results": {
            "name": "test_csv_results",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_csv_save": {
            "name": "test_csv_save",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_text_type_error": {
            "name": "test_text_type_error",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_text_results": {
            "name": "test_text_results",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_text_results_re_split": {
            "name": "test_text_results_re_split",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_text_save": {
            "name": "test_text_save",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": [
                    "Type"
                ]
            }
        },
        "test_textfile_results": {
            "name": "test_textfile_results",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_textfile_results_re_split": {
            "name": "test_textfile_results_re_split",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_textfile_save": {
            "name": "test_textfile_save",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "datafilter-master/tests/__init__.py": {}
}
{
    "deep-learning-igo-with-type-master/dlgo/goboard_slow.py": {
        "Move.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "point": [],
                "is_pass": [],
                "is_resign": []
            }
        },
        "Move.play": {
            "name": "play",
            "location": 24,
            "return": [],
            "arguments": {
                "cls": [],
                "point": []
            }
        },
        "Move.pass_turn": {
            "name": "pass_turn",
            "location": 29,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Move.resign": {
            "name": "resign",
            "location": 34,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "GoString.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "color": [],
                "stones": [],
                "liberties": []
            }
        },
        "GoString.remove_liberty": {
            "name": "remove_liberty",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "point": []
            }
        },
        "GoString.add_liberty": {
            "name": "add_liberty",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "point": []
            }
        },
        "GoString.merged_with": {
            "name": "merged_with",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "go_string": []
            }
        },
        "GoString.num_liberties": {
            "name": "num_liberties",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoString.__eq__": {
            "name": "__eq__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Board.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "num_rows": [],
                "num_cols": []
            }
        },
        "Board.is_on_grid": {
            "name": "is_on_grid",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "point": []
            }
        },
        "Board.get": {
            "name": "get",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "point": []
            }
        },
        "Board.get_go_string": {
            "name": "get_go_string",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "point": []
            }
        },
        "Board._remove_string": {
            "name": "_remove_string",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "Board.place_stone": {
            "name": "place_stone",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "player": [],
                "point": []
            }
        },
        "GameState.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "board": [],
                "next_player": [],
                "previous": [],
                "move": []
            }
        },
        "GameState.apply_move": {
            "name": "apply_move",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "move": []
            }
        },
        "GameState.new_game": {
            "name": "new_game",
            "location": 187,
            "return": [],
            "arguments": {
                "cls": [],
                "board_size": []
            }
        },
        "GameState.is_over": {
            "name": "is_over",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GameState.is_move_self_capture": {
            "name": "is_move_self_capture",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "player": [],
                "move": []
            }
        }
    },
    "deep-learning-igo-with-type-master/dlgo/gotypes.py": {
        "Player.other": {
            "name": "other",
            "location": 23,
            "return": [
                "str",
                "deque",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.neighbors": {
            "name": "neighbors",
            "location": 41,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "deep-learning-igo-with-type-master/dlgo/__init__.py": {
        "Player.other": {
            "name": "other",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.neighbors": {
            "name": "neighbors",
            "location": 15,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
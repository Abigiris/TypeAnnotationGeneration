{
    "deeplearning-master/data.py": {
        "load_data": {
            "name": "load_data",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "normalize_data": {
            "name": "normalize_data",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "deeplearning-master/deep_nn.py": {},
    "deeplearning-master/math_helpers.py": {
        "sigmoid": {
            "name": "sigmoid",
            "location": 3,
            "return": [
                "numpy.ndarray"
            ],
            "arguments": {
                "Z": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "relu": {
            "name": "relu",
            "location": 7,
            "return": [
                "numpy.ndarray"
            ],
            "arguments": {
                "Z": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "sigmoid_gradient": {
            "name": "sigmoid_gradient",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "Z": [
                    "bool",
                    "str",
                    "float",
                    "int",
                    "Sequence[int]"
                ]
            }
        },
        "relu_gradient": {
            "name": "relu_gradient",
            "location": 37,
            "return": [
                "dict",
                "Dict[str, bool]",
                "Union[Dict, str]",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {
                "Z": [
                    "Mapping[str, Any]",
                    "Union[List[str], str]",
                    "Sequence['cirq.Qid']",
                    "list",
                    "Optional[List[Dict]]",
                    "List[Dict[str, Any]]",
                    "List[Tuple]",
                    "Tuple[int]",
                    "float",
                    "numpy.ndarray"
                ]
            }
        },
        "cross_entropy_cost": {
            "name": "cross_entropy_cost",
            "location": 52,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "Y": [
                    "str",
                    "Callable[[str, str], None]",
                    "Iterable[str]"
                ],
                "output_layer": [
                    "str",
                    "int",
                    "Callable[[str, str], None]"
                ]
            }
        },
        "cross_entropy_cost_gradient": {
            "name": "cross_entropy_cost_gradient",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
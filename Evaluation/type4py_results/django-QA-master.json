{
    "django-QA-master/manage.py": {},
    "django-QA-master/TornadoServer.py": {
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "django-QA-master/config/asgi.py": {},
    "django-QA-master/config/routing.py": {},
    "django-QA-master/config/urls.py": {},
    "django-QA-master/config/wsgi.py": {},
    "django-QA-master/config/__init__.py": {},
    "django-QA-master/config/settings/base.py": {},
    "django-QA-master/config/settings/local.py": {},
    "django-QA-master/config/settings/production.py": {},
    "django-QA-master/config/settings/test.py": {},
    "django-QA-master/config/settings/__init__.py": {},
    "django-QA-master/deploy/nginx+tornado/TornadoServer.py": {
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "django-QA-master/zhihu/__init__.py": {},
    "django-QA-master/zhihu/articles/apps.py": {
        "ArticlesConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/articles/forms.py": {},
    "django-QA-master/zhihu/articles/models.py": {
        "ArticleQuerySet.get_publushed": {
            "name": "get_publushed",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleQuerySet.get_drafts": {
            "name": "get_drafts",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleQuerySet.get_counted_tags": {
            "name": "get_counted_tags",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.__str__": {
            "name": "__str__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.save": {
            "name": "save",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "force_insert": [],
                "force_update": [],
                "using": [],
                "update_fields": []
            }
        },
        "Article.get_markdown": {
            "name": "get_markdown",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/articles/urls.py": {},
    "django-QA-master/zhihu/articles/views.py": {
        "notify_comment": {
            "name": "notify_comment",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "ArticlesListView.get_context_data": {
            "name": "get_context_data",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesListView.get_queryset": {
            "name": "get_queryset",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DraftListView.get_queryset": {
            "name": "get_queryset",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleCreateView.form_valid": {
            "name": "form_valid",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "ArticleCreateView.get_success_url": {
            "name": "get_success_url",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleDetailView.get_queryset": {
            "name": "get_queryset",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleEditView.form_valid": {
            "name": "form_valid",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "ArticleEditView.get_success_url": {
            "name": "get_success_url",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/articles/__init__.py": {},
    "django-QA-master/zhihu/articles/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/articles/migrations/0002_auto_20190706_1112.py": {},
    "django-QA-master/zhihu/articles/migrations/0003_auto_20190709_1436.py": {},
    "django-QA-master/zhihu/articles/migrations/__init__.py": {},
    "django-QA-master/zhihu/articles/tests/test_models.py": {
        "ArticleModelsTest.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleModelsTest.test_object_instance": {
            "name": "test_object_instance",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/articles/tests/test_views.py": {
        "get_temp_img": {
            "name": "get_temp_img",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "ArticlesViewsTest.setUp": {
            "name": "setUp",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.tearDown": {
            "name": "tearDown",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_index_articles": {
            "name": "test_index_articles",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_error_404": {
            "name": "test_error_404",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_create_article": {
            "name": "test_create_article",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_draft_article": {
            "name": "test_draft_article",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/contrib/__init__.py": {},
    "django-QA-master/zhihu/contrib/sites/__init__.py": {},
    "django-QA-master/zhihu/contrib/sites/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "django-QA-master/zhihu/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "django-QA-master/zhihu/contrib/sites/migrations/__init__.py": {},
    "django-QA-master/zhihu/messager/apps.py": {},
    "django-QA-master/zhihu/messager/consumers.py": {},
    "django-QA-master/zhihu/messager/models.py": {
        "MessageQuerySet.get_conversation": {
            "name": "get_conversation",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "recipient": []
            }
        },
        "MessageQuerySet.get_most_recent_conversation": {
            "name": "get_most_recent_conversation",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.mark_as_read": {
            "name": "mark_as_read",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/messager/urls.py": {},
    "django-QA-master/zhihu/messager/views.py": {
        "send_message": {
            "name": "send_message",
            "location": 62,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "receiver_message": {
            "name": "receiver_message",
            "location": 91,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "MessagesListView.get_context_data": {
            "name": "get_context_data",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagesListView.get_queryset": {
            "name": "get_queryset",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConversationListView.get_context_data": {
            "name": "get_context_data",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConversationListView.get_queryset": {
            "name": "get_queryset",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/messager/__init__.py": {},
    "django-QA-master/zhihu/messager/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/messager/migrations/0002_auto_20190709_1436.py": {},
    "django-QA-master/zhihu/messager/migrations/__init__.py": {},
    "django-QA-master/zhihu/news/apps.py": {
        "NewsConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/news/models.py": {
        "News.__str__": {
            "name": "__str__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.save": {
            "name": "save",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "force_insert": [],
                "force_update": [],
                "using": [],
                "update_fields": []
            }
        },
        "News.switch_like": {
            "name": "switch_like",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "News.get_parent": {
            "name": "get_parent",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.reply_this": {
            "name": "reply_this",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "text": []
            }
        },
        "News.get_thread": {
            "name": "get_thread",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.comment_count": {
            "name": "comment_count",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.count_likers": {
            "name": "count_likers",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.get_likers": {
            "name": "get_likers",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/news/urls.py": {},
    "django-QA-master/zhihu/news/views.py": {
        "post_new": {
            "name": "post_new",
            "location": 39,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "like": {
            "name": "like",
            "location": 66,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_thread": {
            "name": "get_thread",
            "location": 83,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "post_comment": {
            "name": "post_comment",
            "location": 104,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "update_interactions": {
            "name": "update_interactions",
            "location": 125,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "NewsListView.get_queryset": {
            "name": "get_queryset",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/news/__init__.py": {},
    "django-QA-master/zhihu/news/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/news/migrations/0002_auto_20190705_1409.py": {},
    "django-QA-master/zhihu/news/migrations/0003_auto_20190709_1436.py": {},
    "django-QA-master/zhihu/news/migrations/__init__.py": {},
    "django-QA-master/zhihu/news/tests/test_models.py": {
        "NewsModelTest.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsModelTest.test__str__": {
            "name": "test__str__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsModelTest.test_switch_liked": {
            "name": "test_switch_liked",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsModelTest.test_reply_this": {
            "name": "test_reply_this",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/news/tests/test_urls.py": {
        "TestNewsUrls.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNewsUrls.test_news_list_reverse": {
            "name": "test_news_list_reverse",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNewsUrls.test_news_list_resolve": {
            "name": "test_news_list_resolve",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/news/tests/test_views.py": {
        "NewsViewsTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_news_list": {
            "name": "test_news_list",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_delete_news": {
            "name": "test_delete_news",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_post_news": {
            "name": "test_post_news",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_like_news": {
            "name": "test_like_news",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_get_thread": {
            "name": "test_get_thread",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_post_comment": {
            "name": "test_post_comment",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/news/tests/__init__.py": {},
    "django-QA-master/zhihu/notifications/apps.py": {},
    "django-QA-master/zhihu/notifications/consumers.py": {},
    "django-QA-master/zhihu/notifications/models.py": {
        "NotificationQuerySet.unread": {
            "name": "unread",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationQuerySet.read": {
            "name": "read",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationQuerySet.mark_all_as_read": {
            "name": "mark_all_as_read",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "NotificationQuerySet.mark_all_as_unread": {
            "name": "mark_all_as_unread",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "NotificationQuerySet.get_most_recent": {
            "name": "get_most_recent",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "NotificationQuerySet.serialize_latest_notifications": {
            "name": "serialize_latest_notifications",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "Notification.__str__": {
            "name": "__str__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notification.save": {
            "name": "save",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "force_insert": [],
                "force_update": [],
                "using": [],
                "update_fields": []
            }
        },
        "Notification.mark_as_read": {
            "name": "mark_as_read",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notification.mark_as_unread": {
            "name": "mark_as_unread",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/notifications/urls.py": {},
    "django-QA-master/zhihu/notifications/views.py": {
        "mark_all_as_read": {
            "name": "mark_all_as_read",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "mark_as_read": {
            "name": "mark_as_read",
            "location": 38,
            "return": [],
            "arguments": {
                "request": [],
                "slug": []
            }
        },
        "get_latest_notifications": {
            "name": "get_latest_notifications",
            "location": 53,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "notification_handler": {
            "name": "notification_handler",
            "location": 62,
            "return": [],
            "arguments": {
                "actor": [],
                "recipient": [],
                "verb": [],
                "action_object": []
            }
        },
        "NotificationUnreadListView.get_queryset": {
            "name": "get_queryset",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/notifications/__init__.py": {},
    "django-QA-master/zhihu/notifications/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/notifications/migrations/0002_auto_20190709_1436.py": {},
    "django-QA-master/zhihu/notifications/migrations/__init__.py": {},
    "django-QA-master/zhihu/qa/apps.py": {},
    "django-QA-master/zhihu/qa/forms.py": {},
    "django-QA-master/zhihu/qa/models.py": {
        "QuestionQuerySet.get_answered": {
            "name": "get_answered",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionQuerySet.get_unanswered": {
            "name": "get_unanswered",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionQuerySet.get_counted_tags": {
            "name": "get_counted_tags",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.save": {
            "name": "save",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "force_insert": [],
                "force_update": [],
                "using": [],
                "update_fields": []
            }
        },
        "Question.__str__": {
            "name": "__str__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_markdown": {
            "name": "get_markdown",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.total_votes": {
            "name": "total_votes",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_answers": {
            "name": "get_answers",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.count_answers": {
            "name": "count_answers",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_upvoters": {
            "name": "get_upvoters",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_downvoters": {
            "name": "get_downvoters",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_accepted_answers": {
            "name": "get_accepted_answers",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.__str__": {
            "name": "__str__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_markdown": {
            "name": "get_markdown",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.total_votes": {
            "name": "total_votes",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_upvoters": {
            "name": "get_upvoters",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_downvoters": {
            "name": "get_downvoters",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.accept_answer": {
            "name": "accept_answer",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/qa/urls.py": {},
    "django-QA-master/zhihu/qa/views.py": {
        "question_vote": {
            "name": "question_vote",
            "location": 117,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "answer_vote": {
            "name": "answer_vote",
            "location": 160,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "accept_answer": {
            "name": "accept_answer",
            "location": 181,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "QuestionListView.get_context_data": {
            "name": "get_context_data",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsweredQuestionListView.get_queryset": {
            "name": "get_queryset",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnsweredQuestionListView.get_context_data": {
            "name": "get_context_data",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnAnsweredQuestionListView.get_queryset": {
            "name": "get_queryset",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnAnsweredQuestionListView.get_context_data": {
            "name": "get_context_data",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateQuestionView.form_valid": {
            "name": "form_valid",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CreateQuestionView.get_success_url": {
            "name": "get_success_url",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionDetailView.get_queryset": {
            "name": "get_queryset",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateAnswerView.form_valid": {
            "name": "form_valid",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CreateAnswerView.get_success_url": {
            "name": "get_success_url",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/qa/__init__.py": {},
    "django-QA-master/zhihu/qa/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/qa/migrations/0002_auto_20190708_1105.py": {},
    "django-QA-master/zhihu/qa/migrations/0003_auto_20190709_1436.py": {},
    "django-QA-master/zhihu/qa/migrations/__init__.py": {},
    "django-QA-master/zhihu/qa/tests/test_models.py": {
        "QAModelTest.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_can_vote_question": {
            "name": "test_can_vote_question",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_can_vote_answer": {
            "name": "test_can_vote_answer",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_get_question_voters": {
            "name": "test_get_question_voters",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_get_answer_voters": {
            "name": "test_get_answer_voters",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_unanswered_question": {
            "name": "test_unanswered_question",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_answered_question": {
            "name": "test_answered_question",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_question_get_answers": {
            "name": "test_question_get_answers",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_question_accept_answer": {
            "name": "test_question_accept_answer",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_question_str_": {
            "name": "test_question_str_",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelTest.test_answer_str_": {
            "name": "test_answer_str_",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/qa/tests/test_urls.py": {
        "TestNewsUrls.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNewsUrls.test_news_list_reverse": {
            "name": "test_news_list_reverse",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNewsUrls.test_news_list_resolve": {
            "name": "test_news_list_resolve",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/qa/tests/test_views.py": {
        "BaseQATest.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionListView.test_context_data": {
            "name": "test_context_data",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAnsweredQuestionListView.test_context_data": {
            "name": "test_context_data",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUnAnsweredQuestionListView.test_context_data": {
            "name": "test_context_data",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateQuestionView.test_get": {
            "name": "test_get",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateQuestionView.test_post": {
            "name": "test_post",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionDetailView.test_get_context_data": {
            "name": "test_get_context_data",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateAnswerView.test_get": {
            "name": "test_get",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateAnswerView.test_post": {
            "name": "test_post",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQAVote.setUp": {
            "name": "setUp",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQAVote.test_question_upvote": {
            "name": "test_question_upvote",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQAVote.test_question_downvote": {
            "name": "test_question_downvote",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQAVote.test_answer_upvote": {
            "name": "test_answer_upvote",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQAVote.test_answer_downvote": {
            "name": "test_answer_downvote",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQAVote.test_accept_answer": {
            "name": "test_accept_answer",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDelete.test_delete_question": {
            "name": "test_delete_question",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/qa/tests/test_views_client.py": {},
    "django-QA-master/zhihu/qa/tests/__init__.py": {},
    "django-QA-master/zhihu/search/apps.py": {},
    "django-QA-master/zhihu/search/search_indexes.py": {
        "ArticleIndex.get_model": {
            "name": "get_model",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleIndex.index_queryset": {
            "name": "index_queryset",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        },
        "NewsIndex.get_model": {
            "name": "get_model",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsIndex.index_queryset": {
            "name": "index_queryset",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        },
        "QuestionIndex.get_model": {
            "name": "get_model",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionIndex.index_queryset": {
            "name": "index_queryset",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        },
        "TagsIndex.get_model": {
            "name": "get_model",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TagsIndex.index_queryset": {
            "name": "index_queryset",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        }
    },
    "django-QA-master/zhihu/search/__init__.py": {},
    "django-QA-master/zhihu/search/migrations/__init__.py": {},
    "django-QA-master/zhihu/taskapp/celery.py": {
        "debug_task": {
            "name": "debug_task",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [
                    "str",
                    "int",
                    "Optional[float]"
                ]
            }
        },
        "CeleryAppConfig.ready": {
            "name": "ready",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/taskapp/__init__.py": {},
    "django-QA-master/zhihu/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 10,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 15,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict"
                ],
                "sociallogin": [
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        }
    },
    "django-QA-master/zhihu/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_profile_name": {
            "name": "get_profile_name",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/users/tasks.py": {
        "get_users_count": {
            "name": "get_users_count",
            "location": 9,
            "return": [
                "Iterable[str]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        }
    },
    "django-QA-master/zhihu/users/urls.py": {},
    "django-QA-master/zhihu/users/views.py": {
        "UserDetailView.get_context_data": {
            "name": "get_context_data",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/users/__init__.py": {},
    "django-QA-master/zhihu/users/migrations/0001_initial.py": {},
    "django-QA-master/zhihu/users/migrations/0002_auto_20190704_1752.py": {},
    "django-QA-master/zhihu/users/migrations/__init__.py": {},
    "django-QA-master/zhihu/users/tests/test_models.py": {
        "TestUser.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test__str__": {
            "name": "test__str__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_get_absolute_url": {
            "name": "test_get_absolute_url",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_get_profile_name": {
            "name": "test_get_profile_name",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/users/tests/test_urls.py": {
        "TestUserURLs.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_detail_reverse": {
            "name": "test_detail_reverse",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_detail_resolve": {
            "name": "test_detail_resolve",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_update_reverse": {
            "name": "test_update_reverse",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_update_resolve": {
            "name": "test_update_resolve",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/users/tests/test_views.py": {
        "BaseUserTestCase.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-QA-master/zhihu/users/tests/__init__.py": {},
    "django-QA-master/zhihu/utils/helpers.py": {
        "ajax_required": {
            "name": "ajax_required",
            "location": 7,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "ajax_required.wrapper": {
            "name": "wrapper",
            "location": 14,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "AuthorRequiredMixin.dispatch": {
            "name": "dispatch",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "django-QA-master/zhihu/utils/models.py": {},
    "django-QA-master/zhihu/utils/__init__.py": {}
}
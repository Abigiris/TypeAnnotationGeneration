{
    "django-vega-admin-master/manage.py": {},
    "django-vega-admin-master/setup.py": {},
    "django-vega-admin-master/example/manage.py": {},
    "django-vega-admin-master/example/artists/apps.py": {},
    "django-vega-admin-master/example/artists/models.py": {
        "Artist.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Song.__str__": {
            "name": "__str__",
            "location": 52,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/example/artists/views.py": {},
    "django-vega-admin-master/example/artists/__init__.py": {},
    "django-vega-admin-master/example/artists/migrations/0001_initial.py": {},
    "django-vega-admin-master/example/artists/migrations/0002_auto_20190602_1531.py": {},
    "django-vega-admin-master/example/artists/migrations/__init__.py": {},
    "django-vega-admin-master/example/example/settings.py": {},
    "django-vega-admin-master/example/example/urls.py": {},
    "django-vega-admin-master/example/example/wsgi.py": {},
    "django-vega-admin-master/example/example/__init__.py": {},
    "django-vega-admin-master/tests/settings.py": {},
    "django-vega-admin-master/tests/test_crispy_utils.py": {
        "TestCrispyUtils.test_get_form_actions_no_cancel": {
            "name": "test_get_form_actions_no_cancel",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/test_crud.py": {
        "TestCRUD.test_url_patterns": {
            "name": "test_url_patterns",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_create": {
            "name": "test_create",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_read": {
            "name": "test_read",
            "location": 81,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_update": {
            "name": "test_update",
            "location": 103,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_delete": {
            "name": "test_delete",
            "location": 136,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_list": {
            "name": "test_list",
            "location": 178,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_custom_views": {
            "name": "test_custom_views",
            "location": 196,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_custom_default_views": {
            "name": "test_custom_default_views",
            "location": 210,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_list_options": {
            "name": "test_list_options",
            "location": 244,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_create_options": {
            "name": "test_create_options",
            "location": 258,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_read_options": {
            "name": "test_read_options",
            "location": 268,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_update_options": {
            "name": "test_update_options",
            "location": 284,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_custom_form_and_table_class": {
            "name": "test_custom_form_and_table_class",
            "location": 296,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_paginate_by": {
            "name": "test_paginate_by",
            "location": 314,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_get_permissions": {
            "name": "test_get_permissions",
            "location": 321,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_login_protection": {
            "name": "test_login_protection",
            "location": 329,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_custom_view_login_protection": {
            "name": "test_custom_view_login_protection",
            "location": 375,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_permission_protection": {
            "name": "test_permission_protection",
            "location": 395,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_broken_permission_protection": {
            "name": "test_broken_permission_protection",
            "location": 496,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_custom_permission_protection": {
            "name": "test_custom_permission_protection",
            "location": 507,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_external_modelform": {
            "name": "test_external_modelform",
            "location": 521,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCRUD.test_noneditable_fields": {
            "name": "test_noneditable_fields",
            "location": 546,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/test_filters.py": {
        "TestFilters.test_list_filtering": {
            "name": "test_list_filtering",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/test_forms.py": {
        "TestForms.test_listview_search_form": {
            "name": "test_listview_search_form",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/test_mixins.py": {
        "TestMixins.setUp": {
            "name": "setUp",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMixins.get_request": {
            "name": "get_request",
            "location": 23,
            "return": [
                "int",
                "List[Dict[str, Any]]",
                "Optional[Tuple[int, int]]",
                "models.characters.character_base.Character"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMixins.get_response": {
            "name": "get_response",
            "location": 32,
            "return": [
                "dict",
                "Dict[str, Any]",
                "Mapping[str, Any]",
                "Dict[int, Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int",
                    "Exception",
                    "django.core.handlers.wsgi.WSGIRequest"
                ],
                "view": [
                    "int",
                    "Exception",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "TestMixins.get_request_response": {
            "name": "get_request_response",
            "location": 39,
            "return": [
                "Dict[int, Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "view": [
                    "str",
                    "services.ticketing.models.ticket_evenTicketEvent",
                    "dict"
                ]
            }
        },
        "TestMixins.test_page_title_mixin": {
            "name": "test_page_title_mixin",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMixins.test_verbose_name_mixin": {
            "name": "test_verbose_name_mixin",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMixins.test_listview_search_mixin": {
            "name": "test_listview_search_mixin",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/test_utils.py": {
        "TestUtils.test_customize_modelform": {
            "name": "test_customize_modelform",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_modelform": {
            "name": "test_get_modelform",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_modelform_extra_fields": {
            "name": "test_get_modelform_extra_fields",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_modelform_datefield": {
            "name": "test_get_modelform_datefield",
            "location": 94,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_modelform_datetimefield": {
            "name": "test_get_modelform_datetimefield",
            "location": 104,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_modelform_timefield": {
            "name": "test_get_modelform_timefield",
            "location": 116,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_listview_form": {
            "name": "test_get_listview_form",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "charfield_mock": [
                    "mock.MagicMock"
                ],
                "mock": [
                    "Mapping[str, Any]"
                ]
            }
        },
        "TestUtils.test_get_listview_form_include_search": {
            "name": "test_get_listview_form_include_search",
            "location": 148,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "charfield_mock": [
                    "mock.MagicMock"
                ],
                "mock": []
            }
        },
        "TestUtils.test_get_listview_form_dont_include_search": {
            "name": "test_get_listview_form_dont_include_search",
            "location": 170,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestUtils.test_get_table": {
            "name": "test_get_table",
            "location": 182,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_filterclass": {
            "name": "test_get_filterclass",
            "location": 202,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/test_views.py": {
        "TestViewsBase._song_permissions": {
            "name": "_song_permissions",
            "location": 34,
            "return": [
                "Dict[str, Tuple[int, int]]",
                "bool",
                "int",
                "\"Project\""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewsBase._artist_permissions": {
            "name": "_artist_permissions",
            "location": 76,
            "return": [
                "List[int]",
                "Dict[str, Union[str, Any]]",
                "str",
                "List[str]",
                "set",
                "Dict[str, Tuple[int, int]]",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewsBase.setUp": {
            "name": "setUp",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViewsBase.tearDown": {
            "name": "tearDown",
            "location": 98,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_crud_view": {
            "name": "test_vega_crud_view",
            "location": 116,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_list_view": {
            "name": "test_vega_list_view",
            "location": 188,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_view_view": {
            "name": "test_vega_view_view",
            "location": 214,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_create_view": {
            "name": "test_vega_create_view",
            "location": 223,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_update_view": {
            "name": "test_vega_update_view",
            "location": 246,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_delete_view": {
            "name": "test_vega_delete_view",
            "location": 271,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_vega_crud_view_no_list_action": {
            "name": "test_vega_crud_view_no_list_action",
            "location": 294,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/__init__.py": {},
    "django-vega-admin-master/tests/artist_app/apps.py": {},
    "django-vega-admin-master/tests/artist_app/band_urls.py": {},
    "django-vega-admin-master/tests/artist_app/broken_urls.py": {},
    "django-vega-admin-master/tests/artist_app/filter_urls.py": {},
    "django-vega-admin-master/tests/artist_app/forms.py": {
        "ArtistForm.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "UpdateArtistForm.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SongForm.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/artist_app/models.py": {
        "Artist.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Song.__str__": {
            "name": "__str__",
            "location": 47,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Band.__str__": {
            "name": "__str__",
            "location": 65,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/artist_app/tables.py": {},
    "django-vega-admin-master/tests/artist_app/urls.py": {},
    "django-vega-admin-master/tests/artist_app/views.py": {
        "ArtistCreate.get_success_url": {
            "name": "get_success_url",
            "location": 36,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtistUpdate.get_success_url": {
            "name": "get_success_url",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtistDelete.get_success_url": {
            "name": "get_success_url",
            "location": 57,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/artist_app/__init__.py": {},
    "django-vega-admin-master/tests/contrib/__init__.py": {},
    "django-vega-admin-master/tests/contrib/users/test_forms.py": {
        "TestForms.test_adduserform": {
            "name": "test_adduserform",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_edituserform": {
            "name": "test_edituserform",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_password_change_form": {
            "name": "test_password_change_form",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_password_change_form_cancel_url": {
            "name": "test_password_change_form_cancel_url",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "mock": []
            }
        }
    },
    "django-vega-admin-master/tests/contrib/users/test_views.py": {
        "TestViews.test_changepassword": {
            "name": "test_changepassword",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_list_view_ordering": {
            "name": "test_list_view_ordering",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_list_view_ordering_off": {
            "name": "test_list_view_ordering_off",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/tests/contrib/users/__init__.py": {},
    "django-vega-admin-master/vega_admin/apps.py": {
        "VegaAdminConfig.ready": {
            "name": "ready",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/vega_admin/crispy_utils.py": {
        "get_form_actions": {
            "name": "get_form_actions",
            "location": 12,
            "return": [
                "Tuple[int, int]",
                "Tuple[int, int, str]",
                "MutableSequence[utils.CWLObjectType]"
            ],
            "arguments": {
                "cancel_url": [
                    "str",
                    "Optional[str]"
                ],
                "submit_text": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ],
                "cancel_text": [
                    "str",
                    "Optional[str]"
                ],
                "button_div_css_class": [
                    "str",
                    "Optional[str]",
                    "Callable[[float], bool]"
                ]
            }
        },
        "get_form_helper_class": {
            "name": "get_form_helper_class",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "form_tag": [
                    "bool",
                    "Union[str, List[str]]",
                    "Optional[Dict[str, Any]]"
                ],
                "form_method": [
                    "bool",
                    "str"
                ],
                "render_required_fields": [
                    "bool",
                    "str"
                ],
                "form_show_labels": [
                    "bool",
                    "Tuple[str]",
                    "int"
                ],
                "html5_required": [
                    "bool",
                    "str"
                ],
                "include_media": [
                    "bool",
                    "str"
                ]
            }
        },
        "get_default_formhelper": {
            "name": "get_default_formhelper",
            "location": 82,
            "return": [
                "int",
                "str",
                "Dict[str, Dict[str, Any]]",
                "Dict[str, Any]",
                "List[str]"
            ],
            "arguments": {}
        },
        "get_layout": {
            "name": "get_layout",
            "location": 99,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "formfields": [
                    "bool",
                    "Dict[str, str]",
                    "Optional[str]",
                    "str"
                ],
                "with_actions": [
                    "bool"
                ],
                "cancel_url": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "django-vega-admin-master/vega_admin/forms.py": {
        "ListViewSearchForm.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/vega_admin/mixins.py": {
        "VegaFormKwargsMixin.get_form_kwargs": {
            "name": "get_form_kwargs",
            "location": 20,
            "return": [
                "dict",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaOrderedQuerysetMixin.get_order_by": {
            "name": "get_order_by",
            "location": 37,
            "return": [
                "bool",
                "str",
                "bytes",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaOrderedQuerysetMixin.get_queryset": {
            "name": "get_queryset",
            "location": 41,
            "return": [
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListViewSearchMixin.get_queryset": {
            "name": "get_queryset",
            "location": 58,
            "return": [
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListViewSearchMixin.get_search_form_values": {
            "name": "get_search_form_values",
            "location": 78,
            "return": [
                "bool",
                "str",
                "zerver.models.Realm",
                "Tuple[int, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListViewSearchMixin.get_context_data": {
            "name": "get_context_data",
            "location": 93,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerboseNameMixin.get_context_data": {
            "name": "get_context_data",
            "location": 108,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PageTitleMixin.get_context_data": {
            "name": "get_context_data",
            "location": 119,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_crud_url": {
            "name": "get_crud_url",
            "location": 142,
            "return": [
                "str",
                "MutableSequence[utils.CWLObjectType]",
                "cmk.utils.type_defs.HostName",
                "int",
                "viewer.models.Archive"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "url_name": [
                    "str",
                    "dict",
                    "Optional[str]"
                ],
                "url_kwargs": [
                    "dict",
                    "str"
                ]
            }
        },
        "CRUDURLsMixin.get_create_url": {
            "name": "get_create_url",
            "location": 163,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_list_url": {
            "name": "get_list_url",
            "location": 171,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_update_url": {
            "name": "get_update_url",
            "location": 179,
            "return": [
                "str",
                "Dict[str, str]",
                "List[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_read_url": {
            "name": "get_read_url",
            "location": 191,
            "return": [
                "bool",
                "cmk.utils.type_defs.UserId",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_delete_url": {
            "name": "get_delete_url",
            "location": 203,
            "return": [
                "str",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_cancel_url": {
            "name": "get_cancel_url",
            "location": 215,
            "return": [
                "bool",
                "cmk.utils.type_defs.UserId",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_context_data": {
            "name": "get_context_data",
            "location": 223,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CRUDURLsMixin.get_form_kwargs": {
            "name": "get_form_kwargs",
            "location": 235,
            "return": [
                "dict",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ObjectTitleMixin.get_title": {
            "name": "get_title",
            "location": 246,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ObjectTitleMixin.get_context_data": {
            "name": "get_context_data",
            "location": 250,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DetailViewMixin.get_fields": {
            "name": "get_fields",
            "location": 262,
            "return": [
                "bool",
                "Optional[Union[int, str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DetailViewMixin.get_field_value": {
            "name": "get_field_value",
            "location": 273,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str",
                    "Type[T]"
                ]
            }
        },
        "DetailViewMixin.get_object_data": {
            "name": "get_object_data",
            "location": 283,
            "return": [
                "dict",
                "Dict[str, Any]",
                "ezscrape.scraping.core.ScrapeResult",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DetailViewMixin.get_context_data": {
            "name": "get_context_data",
            "location": 297,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeleteViewMixin.delete": {
            "name": "delete",
            "location": 308,
            "return": [
                "str",
                "zerver.models.UserProfile",
                "models.UserAuth",
                "bool",
                "users.models.JustfixUser"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "CRUDPathPatterMixin.get_crud_path_pattern": {
            "name": "get_crud_path_pattern",
            "location": 324,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "bool"
                ],
                "crud_path": [
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "SimpleURLPatternMixin.derive_url_pattern": {
            "name": "derive_url_pattern",
            "location": 333,
            "return": [
                "str",
                "Dict[str, Any]",
                "settings.Settings"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "bool"
                ],
                "crud_path": [
                    "str",
                    "int",
                    "bool"
                ],
                "action": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "ObjectURLPatternMixin.derive_url_pattern": {
            "name": "derive_url_pattern",
            "location": 342,
            "return": [
                "str",
                "Dict[str, Any]",
                "settings.Settings"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "bool"
                ],
                "crud_path": [
                    "str",
                    "int",
                    "bool"
                ],
                "action": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "django-vega-admin-master/vega_admin/models.py": {},
    "django-vega-admin-master/vega_admin/settings.py": {},
    "django-vega-admin-master/vega_admin/utils.py": {
        "get_datefields": {
            "name": "get_datefields",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "model": [
                    "float",
                    "str",
                    "int",
                    "models.User",
                    "bool",
                    "employees.models.Report"
                ]
            }
        },
        "get_datetimefields": {
            "name": "get_datetimefields",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "model": [
                    "str",
                    "bool",
                    "models.User",
                    "int",
                    "employees.models.Report",
                    "Optional[List[str]]",
                    "float"
                ]
            }
        },
        "get_timefields": {
            "name": "get_timefields",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "model": [
                    "bool",
                    "tonga.models.structs.positioning.BasePositioning",
                    "raiden.utils.Any",
                    "core.models.Registration",
                    "str"
                ]
            }
        },
        "get_modelform": {
            "name": "get_modelform",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "model": [
                    "str",
                    "django.db.models.Model",
                    "dict"
                ],
                "fields": [
                    "str",
                    "zilencer.models.RemoteZulipServer",
                    "Dict[str, Any]",
                    "bool",
                    "db.models.Region",
                    "core.D.Event"
                ],
                "extra_fields": [
                    "str",
                    "bool",
                    "list",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        },
        "get_listview_form": {
            "name": "get_listview_form",
            "location": 126,
            "return": [
                "str",
                "app.models.GameMember",
                "app.models.course.Course",
                "Optional[str]",
                "zerver.models.Recipient",
                "server.models.User",
                "cmk.utils.type_defs.UserId"
            ],
            "arguments": {
                "model": [
                    "dict"
                ],
                "fields": [
                    "dict"
                ],
                "include_search": [
                    "bool",
                    "str",
                    "List[Dict[str, Any]]",
                    "Type[T]",
                    "Optional[int]"
                ]
            }
        },
        "get_table": {
            "name": "get_table",
            "location": 152,
            "return": [
                "str",
                "Callable",
                "tuple",
                "List[str]"
            ],
            "arguments": {
                "model": [
                    "str",
                    "users.models.JustfixUser"
                ],
                "fields": [
                    "str",
                    "List[str]",
                    "list",
                    "Iterable[str]"
                ],
                "actions": [
                    "str",
                    "Tuple[int, int]",
                    "Dict[str, Any]",
                    "bool"
                ],
                "attrs": [
                    "str",
                    "List[str]",
                    "list",
                    "Iterable[str]"
                ]
            }
        },
        "get_filterclass": {
            "name": "get_filterclass",
            "location": 221,
            "return": [
                "str",
                "type",
                "models.Name",
                "x509_pki.models.Certificate",
                "taxonomy.db.models.Taxon",
                "Container[\"Taxon\"]"
            ],
            "arguments": {
                "model": [
                    "str",
                    "zerver.models.UserGroup"
                ],
                "fields": [
                    "str",
                    "int"
                ]
            }
        },
        "customize_modelform": {
            "name": "customize_modelform",
            "location": 244,
            "return": [
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "form_class": [
                    "type"
                ]
            }
        },
        "get_modelform._constructor": {
            "name": "_constructor",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {
                "self": [
                    "OrderedDict",
                    "str",
                    "Dict[str, Any]",
                    "List[str]"
                ]
            }
        },
        "get_table.render_actions_fn": {
            "name": "render_actions_fn",
            "location": 191,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [
                    "str"
                ]
            }
        },
        "customize_modelform.VegaCustomFormClass.__init__": {
            "name": "__init__",
            "location": 270,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/vega_admin/views.py": {
        "VegaCRUDView.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str",
                    "Optional[List[str]]"
                ]
            }
        },
        "VegaCRUDView.get_actions": {
            "name": "get_actions",
            "location": 169,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_view_classes": {
            "name": "get_view_classes",
            "location": 175,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_protected_actions": {
            "name": "get_protected_actions",
            "location": 179,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_permissions_actions": {
            "name": "get_permissions_actions",
            "location": 185,
            "return": [
                "str",
                "List[str]",
                "Optional[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_permissions": {
            "name": "get_permissions",
            "location": 191,
            "return": [
                "Dict[str, Any]",
                "Optional[List[str]]",
                "Callable[[], None]",
                "bool",
                "Optional[str]",
                "Optional[\"Period\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_search_fields": {
            "name": "get_search_fields",
            "location": 196,
            "return": [
                "Dict[str, Any]",
                "int",
                "wtforms.Form",
                "Dict[str, Tuple[int, int]]",
                "dict",
                "bool",
                "Type"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_read_fields": {
            "name": "get_read_fields",
            "location": 200,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_filter_fields": {
            "name": "get_filter_fields",
            "location": 204,
            "return": [
                "int",
                "Optional[str]",
                "Optional[Iterable[int]]",
                "Sequence[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_search_form_class": {
            "name": "get_search_form_class",
            "location": 208,
            "return": [
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_createform_fields": {
            "name": "get_createform_fields",
            "location": 224,
            "return": [
                "Optional[str]",
                "bool",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_createform_class": {
            "name": "get_createform_class",
            "location": 233,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_updateform_fields": {
            "name": "get_updateform_fields",
            "location": 246,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_updateform_class": {
            "name": "get_updateform_class",
            "location": 255,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_list_fields": {
            "name": "get_list_fields",
            "location": 268,
            "return": [
                "List[str]",
                "Set[str]",
                "Tuple[Any, Any, Any]",
                "dict",
                "bool",
                "Dict[str, Set[str]]",
                "List[List[str]]",
                "List[Optional[str]]",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_table_actions": {
            "name": "get_table_actions",
            "location": 272,
            "return": [
                "Optional[str]",
                "list",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_table_attrs": {
            "name": "get_table_attrs",
            "location": 276,
            "return": [
                "Optional[str]",
                "list",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_table_class": {
            "name": "get_table_class",
            "location": 280,
            "return": [
                "str",
                "Callable[..., str]",
                "Optional[str]",
                "Optional[List[str]]",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_filter_class": {
            "name": "get_filter_class",
            "location": 298,
            "return": [
                "str",
                "Optional[List[str]]",
                "list",
                "List[str]",
                "Optional[str]",
                "Callable[..., str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_create_view_class": {
            "name": "get_create_view_class",
            "location": 310,
            "return": [
                "str",
                "int",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_update_view_class": {
            "name": "get_update_view_class",
            "location": 314,
            "return": [
                "str",
                "int",
                "bool",
                "Tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_read_view_class": {
            "name": "get_read_view_class",
            "location": 318,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_list_view_class": {
            "name": "get_list_view_class",
            "location": 322,
            "return": [
                "Set[str]",
                "str",
                "List[str]",
                "list",
                "List[Tuple[str, str]]",
                "List[Tuple[int, int, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_delete_view_class": {
            "name": "get_delete_view_class",
            "location": 326,
            "return": [
                "str",
                "int",
                "Tuple[int]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_success_url": {
            "name": "get_success_url",
            "location": 330,
            "return": [
                "List[str]",
                "bool",
                "str",
                "Tuple[str]",
                "list",
                "Optional[Union[int, str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.get_cancel_url": {
            "name": "get_cancel_url",
            "location": 334,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VegaCRUDView.enforce_permission_protection": {
            "name": "enforce_permission_protection",
            "location": 339,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "view_class": [
                    "Union[int, str]"
                ],
                "action": [
                    "bool",
                    "Callable",
                    "str"
                ]
            }
        },
        "VegaCRUDView.enforce_login_protection": {
            "name": "enforce_login_protection",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "view_class": [
                    "str"
                ]
            }
        },
        "VegaCRUDView.get_default_action_view_classes": {
            "name": "get_default_action_view_classes",
            "location": 386,
            "return": [
                "Type",
                "Dict[str, Any]",
                "Optional[T]",
                "Optional[str]",
                "bool",
                "Optional[Dict[str, Any]]",
                "dict",
                "Tuple[List[str], Optional[Any], Optional[Any]]"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "VegaCRUDView.get_view_class_for_action": {
            "name": "get_view_class_for_action",
            "location": 402,
            "return": [
                "str",
                "Type",
                "bool"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str"
                ]
            }
        },
        "VegaCRUDView.get_url_name_for_action": {
            "name": "get_url_name_for_action",
            "location": 502,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "VegaCRUDView.get_permission_for_action": {
            "name": "get_permission_for_action",
            "location": 506,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str",
                    "Tuple[str]",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "VegaCRUDView.get_action_urlname": {
            "name": "get_action_urlname",
            "location": 510,
            "return": [
                "str",
                "Optional[str]",
                "List[str]",
                "list"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str",
                    "django.db.models.QuerySet",
                    "django.contrib.gis.geos.Point"
                ]
            }
        },
        "VegaCRUDView.get_action_urlnames": {
            "name": "get_action_urlnames",
            "location": 514,
            "return": [
                "bool",
                "Optional[str]",
                "Dict[str, Union[str, int]]",
                "type"
            ],
            "arguments": {
                "self": [],
                "actions": [
                    "Dict[str, Any]",
                    "str",
                    "Optional[List[topicdb.core.models.association.Association]]",
                    "Optional[Sequence[Any]]"
                ]
            }
        },
        "VegaCRUDView.get_url_pattern_for_action": {
            "name": "get_url_pattern_for_action",
            "location": 520,
            "return": [
                "List[str]",
                "cmk.utils.type_defs.EventRule",
                "str",
                "Dict[str, float]"
            ],
            "arguments": {
                "self": [],
                "view_class": [
                    "str",
                    "cmk.utils.type_defs.ServiceName",
                    "cmk.utils.type_defs.HostName",
                    "bool",
                    "dict"
                ],
                "action": [
                    "str",
                    "cmk.utils.type_defs.ServiceName",
                    "cmk.utils.type_defs.HostName",
                    "bool",
                    "dict"
                ]
            }
        },
        "VegaCRUDView.url_patterns": {
            "name": "url_patterns",
            "location": 529,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "actions": [
                    "Optional[str]",
                    "str",
                    "Optional[List[topicdb.core.models.association.Association]]",
                    "Optional[int]"
                ]
            }
        }
    },
    "django-vega-admin-master/vega_admin/widgets.py": {},
    "django-vega-admin-master/vega_admin/__init__.py": {},
    "django-vega-admin-master/vega_admin/contrib/__init__.py": {},
    "django-vega-admin-master/vega_admin/contrib/users/apps.py": {},
    "django-vega-admin-master/vega_admin/contrib/users/forms.py": {
        "validate_unique_email": {
            "name": "validate_unique_email",
            "location": 25,
            "return": [
                "cmk.utils.type_defs.UserId",
                "Optional[int]",
                "Dict[str, Any]",
                "models.User"
            ],
            "arguments": {
                "value": [
                    "str",
                    "set",
                    "List[Dict[str, Any]]",
                    "List[str]",
                    "int"
                ]
            }
        },
        "UserFormMixin.clean_email": {
            "name": "clean_email",
            "location": 36,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "AddUserForm.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AddUserForm.clean_password": {
            "name": "clean_password",
            "location": 92,
            "return": [
                "bytes",
                "Callable",
                "Dict[str, Any]",
                "str",
                "Callable[[str], T]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AddUserForm.validate_unique_email": {
            "name": "validate_unique_email",
            "location": 105,
            "return": [
                "cmk.utils.type_defs.UserId",
                "Optional[int]",
                "Dict[str, Any]",
                "models.User"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "set",
                    "List[Dict[str, Any]]",
                    "List[str]",
                    "int"
                ]
            }
        },
        "AddUserForm.clean": {
            "name": "clean",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AddUserForm.save": {
            "name": "save",
            "location": 120,
            "return": [
                "set",
                "bool",
                "django.db.migrations.state.StateApps",
                "zam_repondeur.models.Lecture"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "dict",
                    "str",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "EditUserForm.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PasswordChangeForm.__init__": {
            "name": "__init__",
            "location": 174,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/vega_admin/contrib/users/models.py": {},
    "django-vega-admin-master/vega_admin/contrib/users/urls.py": {},
    "django-vega-admin-master/vega_admin/contrib/users/views.py": {
        "ChangePassword.get_success_url": {
            "name": "get_success_url",
            "location": 19,
            "return": [
                "str",
                "Optional[str]",
                "int",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-vega-admin-master/vega_admin/contrib/users/__init__.py": {}
}
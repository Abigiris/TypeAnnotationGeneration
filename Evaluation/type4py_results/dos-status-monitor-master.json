{
    "dos-status-monitor-master/clock.py": {
        "add_search_jobs": {
            "name": "add_search_jobs",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "add_service_jobs": {
            "name": "add_service_jobs",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "add_service_status_job": {
            "name": "add_service_status_job",
            "location": 57,
            "return": [
                "Union[tuple, list]",
                "Dict[str, Any]",
                "str",
                "Set[str]"
            ],
            "arguments": {}
        },
        "add_housekeeping_jobs": {
            "name": "add_housekeeping_jobs",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/worker.py": {},
    "dos-status-monitor-master/capmon_api/api.py": {
        "get_statuses": {
            "name": "get_statuses",
            "location": 19,
            "return": [
                "str",
                "bool",
                "List[Dict[str, Any]]",
                "int"
            ],
            "arguments": {}
        },
        "get_coverage_data": {
            "name": "get_coverage_data",
            "location": 27,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "bool",
                "bytes"
            ],
            "arguments": {}
        },
        "status_map": {
            "name": "status_map",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "coverage_map": {
            "name": "coverage_map",
            "location": 41,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/capmon_api/__init__.py": {},
    "dos-status-monitor-master/dos_status_monitor/config.py": {
        "config_string_to_bool": {
            "name": "config_string_to_bool",
            "location": 4,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "setting": [
                    "int",
                    "str",
                    "Dict[str, Tuple[str, str]]",
                    "Optional[Union[\"IPUtilityFunction\", \"UtilityDistribution\"]]"
                ]
            }
        }
    },
    "dos-status-monitor-master/dos_status_monitor/database.py": {
        "add_change": {
            "name": "add_change",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "document": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "add_snapshot": {
            "name": "add_snapshot",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "document": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "update_status": {
            "name": "update_status",
            "location": 37,
            "return": [
                "bool",
                "List[str]",
                "List[Mapping[str, Any]]",
                "str"
            ],
            "arguments": {
                "document": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]",
                    "Dict[str, str]"
                ]
            }
        },
        "get_most_recent_snapshot_for_service": {
            "name": "get_most_recent_snapshot_for_service",
            "location": 49,
            "return": [
                "Dict[str, Any]",
                "dict",
                "list",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "service_id": [
                    "str",
                    "int",
                    "Union[str, int]",
                    "Optional[str]"
                ]
            }
        },
        "get_watched_services": {
            "name": "get_watched_services",
            "location": 60,
            "return": [
                "str",
                "bool",
                "dict",
                "set",
                "List[str]"
            ],
            "arguments": {}
        },
        "get_watched_searches": {
            "name": "get_watched_searches",
            "location": 67,
            "return": [
                "List[str]",
                "str",
                "List[Dict]",
                "List[int]",
                "Union[List, Tuple]"
            ],
            "arguments": {}
        },
        "get_all_statuses": {
            "name": "get_all_statuses",
            "location": 74,
            "return": [
                "str",
                "List[str]",
                "List[Tuple[str, str]]",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "get_all_postcodes": {
            "name": "get_all_postcodes",
            "location": 87,
            "return": [
                "str",
                "Union[int, float, complex]",
                "List[object]"
            ],
            "arguments": {}
        },
        "get_low_statuses": {
            "name": "get_low_statuses",
            "location": 98,
            "return": [
                "str",
                "List[str]",
                "set",
                "Mapping[str, Any]",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {}
        },
        "get_status_for_single_service": {
            "name": "get_status_for_single_service",
            "location": 113,
            "return": [
                "Optional[bool]",
                "Optional[str]",
                "Optional[float]",
                "str",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "service_id": [
                    "int",
                    "str"
                ]
            }
        },
        "add_watched_service": {
            "name": "add_watched_service",
            "location": 126,
            "return": [
                "str",
                "List[str]",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "service_id": [
                    "int",
                    "str"
                ]
            }
        },
        "remove_watched_service": {
            "name": "remove_watched_service",
            "location": 134,
            "return": [
                "List[str]",
                "bool",
                "List[Mapping[str, Any]]",
                "Tuple[type]",
                "str"
            ],
            "arguments": {
                "service_id": [
                    "int"
                ]
            }
        },
        "add_metric": {
            "name": "add_metric",
            "location": 141,
            "return": [
                ""
            ],
            "arguments": {
                "document": [
                    "int",
                    "Optional[str]"
                ]
            }
        }
    },
    "dos-status-monitor-master/dos_status_monitor/housekeeping.py": {
        "get_old_snapshots": {
            "name": "get_old_snapshots",
            "location": 16,
            "return": [
                "Optional[str]",
                "Union[None, List[str]]",
                "str",
                "Optional[Sequence[str]]",
                "bool",
                "Optional[List[str]]"
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/dos_status_monitor/monitor.py": {
        "update_status_from_service_data": {
            "name": "update_status_from_service_data",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "service_data": [
                    "dict",
                    "raiden.utils.Dict[str, raiden.utils.Any]",
                    "cmk.utils.type_defs.EventRule",
                    "bytes"
                ]
            }
        },
        "update_status_from_latest_snapshot": {
            "name": "update_status_from_latest_snapshot",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "service_id": [
                    "int",
                    "str",
                    "pymongo.database.Database"
                ]
            }
        },
        "store_snapshot": {
            "name": "store_snapshot",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {
                "service": [
                    "str",
                    "Optional[str]",
                    "float",
                    "Union[datetime.datetime, str]",
                    "int"
                ]
            }
        },
        "is_robot_change": {
            "name": "is_robot_change",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "old_status": [
                    "bool",
                    "raiden.utils.Optional[str]",
                    "Dict[str, str]",
                    "int"
                ],
                "new_status": [
                    "bool",
                    "raiden.utils.Optional[str]",
                    "Dict[str, str]",
                    "int"
                ]
            }
        },
        "has_status_changed": {
            "name": "has_status_changed",
            "location": 81,
            "return": [
                "Dict[str, Any]"
            ],
            "arguments": {
                "service_id": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "snapshot_service_search": {
            "name": "snapshot_service_search",
            "location": 196,
            "return": [
                ""
            ],
            "arguments": {
                "probe": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "snapshot_single_service": {
            "name": "snapshot_single_service",
            "location": 253,
            "return": [
                ""
            ],
            "arguments": {
                "service_id": [
                    "str",
                    "int"
                ],
                "search_role": [
                    "int",
                    "str",
                    "float",
                    "cmk.utils.type_defs.UserId"
                ]
            }
        }
    },
    "dos-status-monitor-master/dos_status_monitor/probes.py": {
        "get_watched_search_list": {
            "name": "get_watched_search_list",
            "location": 4,
            "return": [
                "List[str]",
                "str",
                "List[Mapping[str, Any]]",
                "Iterable[str]",
                "Union[List, Dict]"
            ],
            "arguments": {}
        },
        "get_watched_service_list": {
            "name": "get_watched_service_list",
            "location": 23,
            "return": [
                "List[str]",
                "Union[List, Tuple]"
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/dos_status_monitor/searches.py": {},
    "dos-status-monitor-master/dos_status_monitor/slack.py": {
        "send_slack_notification": {
            "name": "send_slack_notification",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "service_name": [
                    "str",
                    "Optional[str]"
                ],
                "region": [
                    "str",
                    "Optional[str]"
                ],
                "capacity": [
                    "str",
                    "Dict[str, str]"
                ],
                "old_status": [
                    "str",
                    "Optional[str]"
                ],
                "service_type": [
                    "str",
                    "Optional[str]"
                ],
                "changed_at": [
                    "str",
                    "Optional[str]"
                ],
                "changed_by": [
                    "dict",
                    "str",
                    "List[str]"
                ]
            }
        },
        "send_slack_status_update": {
            "name": "send_slack_status_update",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/dos_status_monitor/sms.py": {
        "send_sms": {
            "name": "send_sms",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "to": [
                    "str"
                ],
                "sms_text": [
                    "str"
                ]
            }
        }
    },
    "dos-status-monitor-master/dos_status_monitor/uec_dos.py": {
        "get_session": {
            "name": "get_session",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "search_role": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_services_by_service_search": {
            "name": "get_services_by_service_search",
            "location": 21,
            "return": [
                "list",
                "Callable",
                "str"
            ],
            "arguments": {
                "postcode": [
                    "bool",
                    "str",
                    "Optional[bool]",
                    "int"
                ],
                "search_distance": [
                    "bool",
                    "str",
                    "Optional[bool]",
                    "int"
                ],
                "service_types": [
                    "bool",
                    "str",
                    "Optional[bool]",
                    "int"
                ],
                "number_per_type": [
                    "bool",
                    "str",
                    "Optional[bool]",
                    "int"
                ],
                "gp": [
                    "bool",
                    "str",
                    "Optional[bool]",
                    "int"
                ],
                "search_role": [
                    "str",
                    "bool",
                    "Optional[int]",
                    "Optional[bool]"
                ]
            }
        },
        "get_service_by_service_id": {
            "name": "get_service_by_service_id",
            "location": 52,
            "return": [
                "Optional[str]",
                "Optional[bool]",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "service_id": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[str]"
                ],
                "search_role": [
                    "str",
                    "int",
                    "bool",
                    "Optional[float]"
                ]
            }
        }
    },
    "dos-status-monitor-master/dos_status_monitor/utils.py": {
        "is_bst": {
            "name": "is_bst",
            "location": 5,
            "return": [
                "bool",
                "str",
                "int",
                "Dict[str, Tuple[int, int]]",
                "Type"
            ],
            "arguments": {
                "time_tup": [
                    "datetime.datetime",
                    "int",
                    "float"
                ]
            }
        },
        "adjust_timestamp_for_api_bst_bug": {
            "name": "adjust_timestamp_for_api_bst_bug",
            "location": 9,
            "return": [
                "str",
                "int",
                "Iterable[int]"
            ],
            "arguments": {
                "updated_time": [
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "range",
                    "int",
                    "Optional[datetime.date]"
                ],
                "updated_date": [
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "range",
                    "int",
                    "Optional[datetime.date]"
                ]
            }
        }
    },
    "dos-status-monitor-master/dos_status_monitor/__init__.py": {},
    "dos-status-monitor-master/tests/test_check.py": {
        "func": {
            "name": "func",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "test_answer": {
            "name": "test_answer",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/tests/test_config.py": {
        "test_config_string_converts_to_bool_correctly": {
            "name": "test_config_string_converts_to_bool_correctly",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "test_data": [
                    "dict",
                    "Optional[Dict]",
                    "Dict[str, Any]",
                    "Dict[str, Optional[str]]"
                ]
            }
        }
    },
    "dos-status-monitor-master/tests/test_database.py": {
        "db": {
            "name": "db",
            "location": 7,
            "return": [
                "str",
                "Exception",
                "Iterable[T]"
            ],
            "arguments": {}
        },
        "watched_services": {
            "name": "watched_services",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "db": [
                    "str",
                    "pymongo.database.Database",
                    "Tuple[float, float]"
                ]
            }
        },
        "clear_and_verify_empty": {
            "name": "clear_and_verify_empty",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "watched_services": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "test_add_service_to_watchlist": {
            "name": "test_add_service_to_watchlist",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "watched_services": []
            }
        },
        "test_remove_service_from_watchlist": {
            "name": "test_remove_service_from_watchlist",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "watched_services": []
            }
        }
    },
    "dos-status-monitor-master/tests/test_utils.py": {
        "test_date_and_time_adjusted_correctly_for_bst": {
            "name": "test_date_and_time_adjusted_correctly_for_bst",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_date_and_time_unaltered_if_not_bst": {
            "name": "test_date_and_time_unaltered_if_not_bst",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "dos-status-monitor-master/tests/__init__.py": {}
}
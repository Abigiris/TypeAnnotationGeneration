{
    "ecobenefits-master/compute_stats.py": {
        "compute_stats": {
            "name": "compute_stats",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ecobenefits-master/run.py": {},
    "ecobenefits-master/train.py": {},
    "ecobenefits-master/__init__.py": {},
    "ecobenefits-master/eco/config.py": {},
    "ecobenefits-master/eco/data_utils.py": {
        "load_data": {
            "name": "load_data",
            "location": 14,
            "return": [],
            "arguments": {
                "files": []
            }
        },
        "load_training_data": {
            "name": "load_training_data",
            "location": 25,
            "return": [],
            "arguments": {
                "data_path": []
            }
        },
        "prepare_data": {
            "name": "prepare_data",
            "location": 31,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "prepare_training_data": {
            "name": "prepare_training_data",
            "location": 45,
            "return": [],
            "arguments": {
                "tr_trees": []
            }
        },
        "dump_models": {
            "name": "dump_models",
            "location": 56,
            "return": [],
            "arguments": {
                "models": []
            }
        },
        "load_models": {
            "name": "load_models",
            "location": 62,
            "return": [],
            "arguments": {
                "models_path": []
            }
        }
    },
    "ecobenefits-master/eco/diameter_tools.py": {
        "get_area": {
            "name": "get_area",
            "location": 6,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "circ": [
                    "str",
                    "bool"
                ]
            }
        },
        "eval_circumferences": {
            "name": "eval_circumferences",
            "location": 10,
            "return": [
                "str",
                "list",
                "List[str]",
                "float"
            ],
            "arguments": {
                "input_data": [
                    "dict",
                    "bytes",
                    "List[str]",
                    "Mapping[str, Any]",
                    "Sequence"
                ]
            }
        },
        "get_trunk_diam": {
            "name": "get_trunk_diam",
            "location": 21,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "input_data": [
                    "str",
                    "Dict[str, str]",
                    "dict",
                    "Sequence[str]"
                ]
            }
        }
    },
    "ecobenefits-master/eco/eco_model.py": {
        "train_regression": {
            "name": "train_regression",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "trees_df": [
                    "pandas.DataFrame",
                    "List[pandas.DataFrame]",
                    "int"
                ],
                "factor": [
                    "str",
                    "pandas.DataFrame",
                    "Set[str]",
                    "bool"
                ]
            }
        },
        "predict_benefit": {
            "name": "predict_benefit",
            "location": 38,
            "return": [
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "reg_model": [
                    "IO[str]",
                    "dict",
                    "set",
                    "bool",
                    "List[str]",
                    "str"
                ],
                "trunk_diam": [
                    "IO[str]",
                    "dict",
                    "set",
                    "bool",
                    "List[str]",
                    "str"
                ]
            }
        },
        "predict_tree_benefits": {
            "name": "predict_tree_benefits",
            "location": 43,
            "return": [
                "int",
                "List[int]"
            ],
            "arguments": {
                "models": [
                    "Type[T]",
                    "base.Model",
                    "int"
                ],
                "trunk_diam": [
                    "float",
                    "int",
                    "bool",
                    "pandas.DataFrame"
                ]
            }
        },
        "train": {
            "name": "train",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ecobenefits-master/eco/server.py": {
        "validate": {
            "name": "validate",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "tree_benefits": {
            "name": "tree_benefits",
            "location": 48,
            "return": [
                "List[str]",
                "str",
                "IO[str]",
                "List[cmk.utils.type_defs.HostName]",
                "int"
            ],
            "arguments": {
                "request": [
                    "aiohttp.web.Request"
                ]
            }
        },
        "validate.wrapper": {
            "name": "wrapper",
            "location": 31,
            "return": [
                "cmk.utils.type_defs.UserId",
                "int",
                "Optional[int]"
            ],
            "arguments": {}
        }
    },
    "ecobenefits-master/eco/stats.py": {
        "OTMDatabaseBackend.get_trees": {
            "name": "get_trees",
            "location": 38,
            "return": [
                "str",
                "List[str]",
                "int",
                "Iterable[str]",
                "Optional[bool]",
                "Iterable"
            ],
            "arguments": {
                "self": []
            }
        },
        "EcoStatistics.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_conn": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "EcoStatistics.compute_stats": {
            "name": "compute_stats",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ecobenefits-master/eco/utils.py": {
        "get_sync_redis_conn": {
            "name": "get_sync_redis_conn",
            "location": 12,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "session_scope": {
            "name": "session_scope",
            "location": 28,
            "return": [
                "sqlalchemy.orm.session.Session"
            ],
            "arguments": {
                "engine": []
            }
        }
    },
    "ecobenefits-master/eco/__init__.py": {},
    "ecobenefits-master/tests/test_diameter_tools.py": {
        "TestArea.test_area": {
            "name": "test_area",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArea.test_diam1": {
            "name": "test_diam1",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArea.test_diam2": {
            "name": "test_diam2",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArea.test_diam3": {
            "name": "test_diam3",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArea.test_diam4": {
            "name": "test_diam4",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ecobenefits-master/tests/test_model.py": {
        "TestModel.setUpClass": {
            "name": "setUpClass",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "cls": [
                    "Dict[str, Any]",
                    "dict",
                    "Optional[int]"
                ]
            }
        },
        "TestModel.test_predict_all_benefits": {
            "name": "test_predict_all_benefits",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ecobenefits-master/tests/test_session.py": {
        "TestSessionManager.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSessionManager.test_session_resource": {
            "name": "test_session_resource",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSessionManager.test_session_catch_exception": {
            "name": "test_session_catch_exception",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ecobenefits-master/tests/__init__.py": {}
}
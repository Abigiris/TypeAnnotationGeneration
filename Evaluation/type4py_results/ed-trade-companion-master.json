{
    "ed-trade-companion-master/trade_companion/models.py": {
        "create_tables": {
            "name": "create_tables",
            "location": 265,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "Defaults.__tablename__": {
            "name": "__tablename__",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Dict[str, Any]",
                    "enum.Enum",
                    "T",
                    "bool",
                    "\"Track\""
                ]
            }
        },
        "Defaults.id_column": {
            "name": "id_column",
            "location": 54,
            "return": [
                "List[Union[int, Any]]",
                "List[Union[int, str]]",
                "bytes",
                "Optional[Dict[str, Any]]",
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "List[int]",
                    "Type['DataclassT']",
                    "sqlalchemy.orm.Query"
                ]
            }
        },
        "Defaults.from_dict": {
            "name": "from_dict",
            "location": 58,
            "return": [
                "Dict[int, Dict[str, Any]]",
                "dict",
                "List[Dict]",
                "str",
                "Mapping[str, Any]",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "dict",
                    "str"
                ],
                "data": [
                    "dict",
                    "Dict[str, Any]",
                    "Type[T]",
                    "list"
                ]
            }
        },
        "Defaults.to_filtered_dict": {
            "name": "to_filtered_dict",
            "location": 64,
            "return": [
                "Dict[str, Any]",
                "Sequence"
            ],
            "arguments": {
                "cls": [
                    "dict",
                    "Tuple[Any, Dict[str, Any]]",
                    "float",
                    "Generator[Any, None, None]",
                    "int"
                ],
                "data": [
                    "Dict[str, Any]",
                    "Iterable[Mapping[str, Any]]",
                    "Optional[bool]",
                    "dict",
                    "Union[sqlalchemy.sql.ClauseElement, str]",
                    "Iterator[dict]"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/pluralize.py": {
        "pluralize": {
            "name": "pluralize",
            "location": 37,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "singular": [
                    "Dict[str, Any]",
                    "dict",
                    "Dict[str, Optional[str]]"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/__init__.py": {},
    "ed-trade-companion-master/trade_companion/__main__.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ed-trade-companion-master/trade_companion/cmd/database.py": {},
    "ed-trade-companion-master/trade_companion/cmd/database_migrate.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "_options": [
                    "argparse.Namespace",
                    "List[str]",
                    "bool",
                    "Optional[Sequence[str]]",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/cmd/import.py": {
        "_entity_lookup": {
            "name": "_entity_lookup",
            "location": 25,
            "return": [
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {
                "entity_name": [
                    "str",
                    "zerver.models.Realm",
                    "bool"
                ]
            }
        },
        "input_file": {
            "name": "input_file",
            "location": 34,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "file_name": [
                    "str"
                ]
            }
        },
        "chunked": {
            "name": "chunked",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "Iterable[List[str]]",
                    "Tuple[int]"
                ],
                "batch_size": [
                    "int",
                    "Iterable[List[str]]",
                    "Tuple[int]"
                ]
            }
        },
        "model_import": {
            "name": "model_import",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "options": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        }
    },
    "ed-trade-companion-master/trade_companion/cmd/__init__.py": {
        "_log_level_from_string": {
            "name": "_log_level_from_string",
            "location": 22,
            "return": [
                "str",
                "dict",
                "int"
            ],
            "arguments": {
                "log_level_name": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    }
}
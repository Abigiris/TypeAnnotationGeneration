{
    "ejabberd_external_auth_jwt-master/setup.py": {
        "CustomBuild.run": {
            "name": "run",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ejabberd_external_auth_jwt-master/build_scripts/version.py": {
        "VersionInfo.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "dvcs": [
                    "Optional[float]",
                    "Optional[str]",
                    "Optional[int]",
                    "Optional[Callable]",
                    "Optional[Hashable]",
                    "int"
                ]
            }
        },
        "VersionInfo._popen": {
            "name": "_popen",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "command_list": [
                    "str",
                    "List[str]",
                    "Optional[Dict[str, str]]"
                ]
            }
        },
        "VersionInfo._autodetect": {
            "name": "_autodetect",
            "location": 40,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo._get_hg_version": {
            "name": "_get_hg_version",
            "location": 56,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "branch": [
                    "str",
                    "Optional[float]",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "VersionInfo._hg_current_branch": {
            "name": "_hg_current_branch",
            "location": 97,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo._write_hg_changelog_rst": {
            "name": "_write_hg_changelog_rst",
            "location": 104,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "outputfile": [
                    "str"
                ]
            }
        },
        "VersionInfo._get_git_version": {
            "name": "_get_git_version",
            "location": 118,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "branch": [
                    "Optional[float]",
                    "Optional[str]",
                    "int",
                    "str"
                ],
                "abbrev": [
                    "int",
                    "Optional[str]",
                    "List[str]",
                    "List[List[int]]",
                    "dict",
                    "Optional[float]"
                ]
            }
        },
        "VersionInfo._git_current_branch": {
            "name": "_git_current_branch",
            "location": 135,
            "return": [
                "bytes",
                "str",
                "Iterable[int]",
                "List[int]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo._write_git_changelog_rst": {
            "name": "_write_git_changelog_rst",
            "location": 140,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "outputfile": [
                    "str"
                ]
            }
        },
        "VersionInfo.write_changelog_rst": {
            "name": "write_changelog_rst",
            "location": 161,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "outputfile": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "VersionInfo.current_branch": {
            "name": "current_branch",
            "location": 173,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionInfo.version": {
            "name": "version",
            "location": 182,
            "return": [
                "str",
                "Optional[List[str]]",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ejabberd_external_auth_jwt-master/build_scripts/__init__.py": {},
    "ejabberd_external_auth_jwt-master/ejabberd_external_auth_jwt/auth.py": {
        "jwt_auth": {
            "name": "jwt_auth",
            "location": 10,
            "return": [
                "bool",
                "Optional[bool]"
            ],
            "arguments": {
                "login": [
                    "str",
                    "int",
                    "Tuple[Tuple[str, ...]]",
                    "logging.Logger"
                ],
                "token": [
                    "str",
                    "dict",
                    "int"
                ],
                "conf": [
                    "str",
                    "dict",
                    "int"
                ]
            }
        }
    },
    "ejabberd_external_auth_jwt-master/ejabberd_external_auth_jwt/main.py": {
        "load_config": {
            "name": "load_config",
            "location": 14,
            "return": [
                "Mapping[str, Any]",
                "str",
                "dict",
                "Callable"
            ],
            "arguments": {
                "fname": [
                    "pathlib.Path",
                    "str",
                    "bool",
                    "pathlib.PosixPath"
                ]
            }
        },
        "from_ejabberd": {
            "name": "from_ejabberd",
            "location": 27,
            "return": [
                "str",
                "dict",
                "bool"
            ],
            "arguments": {}
        },
        "to_ejabberd": {
            "name": "to_ejabberd",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "result": [
                    "bool",
                    "Exception"
                ]
            }
        },
        "isuser": {
            "name": "isuser",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "username": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "server": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "main_sync": {
            "name": "main_sync",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ejabberd_external_auth_jwt-master/ejabberd_external_auth_jwt/__init__.py": {},
    "ejabberd_external_auth_jwt-master/tests/test_auth.py": {
        "conf_empty": {
            "name": "conf_empty",
            "location": 12,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "conf_simple": {
            "name": "conf_simple",
            "location": 18,
            "return": [
                "str",
                "bytearray",
                "bytes"
            ],
            "arguments": {}
        },
        "conf_simple2": {
            "name": "conf_simple2",
            "location": 27,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {}
        },
        "conf_full": {
            "name": "conf_full",
            "location": 36,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {}
        },
        "payload_simple": {
            "name": "payload_simple",
            "location": 52,
            "return": [
                "int",
                "str"
            ],
            "arguments": {}
        },
        "payload_simple2": {
            "name": "payload_simple2",
            "location": 58,
            "return": [
                "int",
                "str"
            ],
            "arguments": {}
        },
        "payload_full": {
            "name": "payload_full",
            "location": 64,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "test_auth_empty_nok_1": {
            "name": "test_auth_empty_nok_1",
            "location": 82,
            "return": [
                ""
            ],
            "arguments": {
                "conf_empty": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_simple": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple_ok_1": {
            "name": "test_auth_simple_ok_1",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple": [
                    "bool"
                ],
                "payload_simple": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple_nok_1": {
            "name": "test_auth_simple_nok_1",
            "location": 94,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_simple": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple_nok_2": {
            "name": "test_auth_simple_nok_2",
            "location": 100,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_simple": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple2_ok_1": {
            "name": "test_auth_simple2_ok_1",
            "location": 106,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple2": [
                    "bool"
                ],
                "payload_simple2": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple2_nok_1": {
            "name": "test_auth_simple2_nok_1",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple2": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_simple2": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple2_nok_2": {
            "name": "test_auth_simple2_nok_2",
            "location": 118,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple2": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_simple2": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_simple2_nok_3": {
            "name": "test_auth_simple2_nok_3",
            "location": 124,
            "return": [
                ""
            ],
            "arguments": {
                "conf_simple2": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_simple": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_full_ok_1": {
            "name": "test_auth_full_ok_1",
            "location": 130,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "bool"
                ],
                "payload_full": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_full_ok_2": {
            "name": "test_auth_full_ok_2",
            "location": 136,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "bool"
                ],
                "payload_full": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_full_nok_iss_1": {
            "name": "test_auth_full_nok_iss_1",
            "location": 142,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_full": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_full_nok_aud_1": {
            "name": "test_auth_full_nok_aud_1",
            "location": 149,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_full": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "test_auth_full_nok_exp_1": {
            "name": "test_auth_full_nok_exp_1",
            "location": 156,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_full": [
                    "datetime.datetime",
                    "datetime.date.time",
                    "datetime.timedelta",
                    "int",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_auth_full_nok_iat_1": {
            "name": "test_auth_full_nok_iat_1",
            "location": 163,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_full": [
                    "datetime.datetime",
                    "datetime.date.time",
                    "datetime.timedelta",
                    "int",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_auth_full_nok_nbf_1": {
            "name": "test_auth_full_nok_nbf_1",
            "location": 170,
            "return": [
                ""
            ],
            "arguments": {
                "conf_full": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ],
                "payload_full": [
                    "datetime.datetime",
                    "datetime.date.time",
                    "datetime.timedelta",
                    "int",
                    "Optional[str]",
                    "dict"
                ]
            }
        }
    }
}
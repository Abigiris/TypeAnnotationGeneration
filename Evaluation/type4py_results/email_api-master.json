{
    "email_api-master/manage.py": {},
    "email_api-master/config/buildbot.py": {},
    "email_api-master/config/config.py": {},
    "email_api-master/config/config_leo.py": {},
    "email_api-master/config/__init__.py": {},
    "email_api-master/emailapp/admin.py": {},
    "email_api-master/emailapp/apps.py": {},
    "email_api-master/emailapp/filters.py": {
        "RecipientOptFilterBackend.filter_queryset": {
            "name": "filter_queryset",
            "location": 4,
            "return": [
                "float",
                "Callable[[None], bool]",
                "List[str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        }
    },
    "email_api-master/emailapp/form.py": {},
    "email_api-master/emailapp/models.py": {
        "id_increment": {
            "name": "id_increment",
            "location": 9,
            "return": [
                "str",
                "int",
                "transfer.models.TopicID"
            ],
            "arguments": {}
        }
    },
    "email_api-master/emailapp/serializers.py": {},
    "email_api-master/emailapp/tests.py": {},
    "email_api-master/emailapp/utils.py": {
        "generate_token": {
            "name": "generate_token",
            "location": 6,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "email_api-master/emailapp/views.py": {
        "ProximityAlertAPI.post": {
            "name": "post",
            "location": 26,
            "return": [
                "bool",
                "arxiv.users.domain.User",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict",
                    "list",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "ProximityAlertAPI.delete": {
            "name": "delete",
            "location": 29,
            "return": [
                "Dict[str, str]",
                "str",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "rest_framework.requesRequest",
                    "list"
                ]
            }
        },
        "ProximityAlertListAPI.get": {
            "name": "get",
            "location": 38,
            "return": [
                "bool",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "list"
                ]
            }
        },
        "NewsletterRecipientAPI.post": {
            "name": "post",
            "location": 47,
            "return": [
                "bool",
                "arxiv.users.domain.User",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict",
                    "list",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "NewsletterRecipientListAPI.get": {
            "name": "get",
            "location": 57,
            "return": [
                "bool",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "list"
                ]
            }
        },
        "NewsletterUnsubscribeAPI.update": {
            "name": "update",
            "location": 66,
            "return": [
                "app.models.dto.LoginResponse",
                "asgard.models.job.ScheduledJob",
                "Optional[ocspdash.models.Location]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "int"
                ]
            }
        },
        "NewsletterUnsubscribeAPI.patch": {
            "name": "patch",
            "location": 74,
            "return": [
                "bool",
                "Optional[zerver.models.Realm]",
                "Dict[str, int]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "django.http.HttpRequest",
                    "list",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "NewsletterManageAPI.patch": {
            "name": "patch",
            "location": 82,
            "return": [
                "bool",
                "Optional[zerver.models.Realm]",
                "Dict[str, int]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "django.http.HttpRequest",
                    "list",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "ManageView.get": {
            "name": "get",
            "location": 87,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "bytes",
                "Optional[Dict]",
                "bool",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "django.http.HttpRequest",
                    "rest_framework.requesRequest"
                ],
                "pk": [
                    "django.http.HttpRequest",
                    "django.http.requesHttpRequest",
                    "rest_framework.requesRequest",
                    "Dict[str, str]",
                    "dict"
                ]
            }
        },
        "ManageView.post": {
            "name": "post",
            "location": 97,
            "return": [
                "List[str]",
                "dict",
                "int",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "django.http.HttpRequest"
                ],
                "pk": [
                    "int",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "email_api-master/emailapp/__init__.py": {},
    "email_api-master/emailapp/migrations/0001_initial.py": {},
    "email_api-master/emailapp/migrations/0002_auto_20180927_1228.py": {},
    "email_api-master/emailapp/migrations/__init__.py": {},
    "email_api-master/emailproj/settings.py": {},
    "email_api-master/emailproj/urls.py": {},
    "email_api-master/emailproj/wsgi.py": {},
    "email_api-master/emailproj/__init__.py": {}
}
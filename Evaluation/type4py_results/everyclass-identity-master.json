{
    "everyclass-identity-master/server.py": {},
    "everyclass-identity-master/everyclass/__init__.py": {},
    "everyclass-identity-master/everyclass/identity/views.py": {
        "return_err": {
            "name": "return_err",
            "location": 20,
            "return": [],
            "arguments": {
                "err": [],
                "message_overwrite": []
            }
        },
        "login": {
            "name": "login",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "register_by_email": {
            "name": "register_by_email",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "email_verification": {
            "name": "email_verification",
            "location": 123,
            "return": [],
            "arguments": {}
        },
        "register_by_password": {
            "name": "register_by_password",
            "location": 193,
            "return": [],
            "arguments": {}
        },
        "password_strength_check": {
            "name": "password_strength_check",
            "location": 246,
            "return": [],
            "arguments": {}
        },
        "register_by_password_status": {
            "name": "register_by_password_status",
            "location": 263,
            "return": [],
            "arguments": {}
        },
        "js_set_preference": {
            "name": "js_set_preference",
            "location": 320,
            "return": [],
            "arguments": {}
        },
        "reset_calendar_token": {
            "name": "reset_calendar_token",
            "location": 337,
            "return": [],
            "arguments": {}
        },
        "visitors": {
            "name": "visitors",
            "location": 346,
            "return": [],
            "arguments": {}
        }
    },
    "everyclass-identity-master/everyclass/identity/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "enable_gc": {
            "name": "enable_gc",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "init_plugins": {
            "name": "init_plugins",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "init_db": {
            "name": "init_db",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "create_app.internal_server_error": {
            "name": "internal_server_error",
            "location": 74,
            "return": [],
            "arguments": {
                "error": []
            }
        }
    },
    "everyclass-identity-master/everyclass/identity/config/default.py": {
        "LazyRefType.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "var_name": []
            }
        },
        "LazyRefType.link": {
            "name": "link",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": [],
                "final_config": []
            }
        }
    },
    "everyclass-identity-master/everyclass/identity/config/__init__.py": {
        "get_config": {
            "name": "get_config",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "print_config": {
            "name": "print_config",
            "location": 77,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "everyclass-identity-master/everyclass/identity/db/dao.py": {
        "init_postgres": {
            "name": "init_postgres",
            "location": 557,
            "return": [],
            "arguments": {
                "migrate": []
            }
        },
        "init_db": {
            "name": "init_db",
            "location": 570,
            "return": [],
            "arguments": {}
        },
        "PostgresBase.init": {
            "name": "init",
            "location": 33,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "PrivacySettings.get_level": {
            "name": "get_level",
            "location": 42,
            "return": [],
            "arguments": {
                "cls": [],
                "student_id": []
            }
        },
        "PrivacySettings.set_level": {
            "name": "set_level",
            "location": 50,
            "return": [],
            "arguments": {
                "cls": [],
                "student_id": [],
                "new_level": []
            }
        },
        "PrivacySettings.init": {
            "name": "init",
            "location": 60,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CalendarToken.insert_calendar_token": {
            "name": "insert_calendar_token",
            "location": 83,
            "return": [],
            "arguments": {
                "cls": [],
                "resource_type": [],
                "semester": [],
                "identifier": []
            }
        },
        "CalendarToken._parse": {
            "name": "_parse",
            "location": 104,
            "return": [],
            "arguments": {
                "cls": [],
                "result": []
            }
        },
        "CalendarToken.find_calendar_token": {
            "name": "find_calendar_token",
            "location": 126,
            "return": [],
            "arguments": {
                "cls": [],
                "tid": [],
                "sid": [],
                "semester": [],
                "token": []
            }
        },
        "CalendarToken.get_or_set_calendar_token": {
            "name": "get_or_set_calendar_token",
            "location": 149,
            "return": [],
            "arguments": {
                "cls": [],
                "resource_type": [],
                "identifier": [],
                "semester": []
            }
        },
        "CalendarToken.update_last_used_time": {
            "name": "update_last_used_time",
            "location": 170,
            "return": [],
            "arguments": {
                "cls": [],
                "token": []
            }
        },
        "CalendarToken.reset_tokens": {
            "name": "reset_tokens",
            "location": 180,
            "return": [],
            "arguments": {
                "cls": [],
                "student_id": [],
                "typ": []
            }
        },
        "CalendarToken.init": {
            "name": "init",
            "location": 190,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "User.exist": {
            "name": "exist",
            "location": 237,
            "return": [],
            "arguments": {
                "cls": [],
                "student_id": []
            }
        },
        "User.check_password": {
            "name": "check_password",
            "location": 246,
            "return": [],
            "arguments": {
                "cls": [],
                "sid_orig": [],
                "password": []
            }
        },
        "User.add_user": {
            "name": "add_user",
            "location": 257,
            "return": [],
            "arguments": {
                "cls": [],
                "sid_orig": [],
                "password": [],
                "password_encrypted": []
            }
        },
        "User.init": {
            "name": "init",
            "location": 280,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "IdentityVerification.get_request_by_id": {
            "name": "get_request_by_id",
            "location": 317,
            "return": [],
            "arguments": {
                "cls": [],
                "req_id": []
            }
        },
        "IdentityVerification.new_register_request": {
            "name": "new_register_request",
            "location": 341,
            "return": [],
            "arguments": {
                "cls": [],
                "sid_orig": [],
                "verification_method": [],
                "status": [],
                "password": []
            }
        },
        "IdentityVerification.set_request_status": {
            "name": "set_request_status",
            "location": 377,
            "return": [],
            "arguments": {
                "cls": [],
                "request_id": [],
                "status": []
            }
        },
        "IdentityVerification.init": {
            "name": "init",
            "location": 388,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "SimplePassword.new": {
            "name": "new",
            "location": 435,
            "return": [],
            "arguments": {
                "cls": [],
                "password": [],
                "sid_orig": []
            }
        },
        "SimplePassword.init": {
            "name": "init",
            "location": 444,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "VisitTrack.update_track": {
            "name": "update_track",
            "location": 475,
            "return": [],
            "arguments": {
                "cls": [],
                "host": [],
                "visitor": []
            }
        },
        "VisitTrack.get_visitors": {
            "name": "get_visitors",
            "location": 485,
            "return": [],
            "arguments": {
                "cls": [],
                "sid_orig": []
            }
        },
        "VisitTrack.init": {
            "name": "init",
            "location": 509,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Redis.add_visitor_count": {
            "name": "add_visitor_count",
            "location": 541,
            "return": [],
            "arguments": {
                "cls": [],
                "sid_orig": [],
                "visitor": []
            }
        },
        "Redis.get_visitor_count": {
            "name": "get_visitor_count",
            "location": 552,
            "return": [],
            "arguments": {
                "cls": [],
                "sid_orig": []
            }
        }
    },
    "everyclass-identity-master/everyclass/identity/db/postgres.py": {
        "init_pool": {
            "name": "init_pool",
            "location": 14,
            "return": [],
            "arguments": {
                "current_application": []
            }
        },
        "pg_conn_context": {
            "name": "pg_conn_context",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "register_types": {
            "name": "register_types",
            "location": 38,
            "return": [],
            "arguments": {
                "conn": []
            }
        }
    },
    "everyclass-identity-master/everyclass/identity/db/redis.py": {},
    "everyclass-identity-master/everyclass/identity/db/__init__.py": {},
    "everyclass-identity-master/everyclass/identity/utils/decorators.py": {
        "login_required": {
            "name": "login_required",
            "location": 8,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "login_required.wrapped": {
            "name": "wrapped",
            "location": 14,
            "return": [
                "Type",
                "set",
                "str"
            ],
            "arguments": {}
        }
    },
    "everyclass-identity-master/everyclass/identity/utils/payload.py": {
        "check_payloads": {
            "name": "check_payloads",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "everyclass-identity-master/everyclass/identity/utils/tokens.py": {
        "generate_token": {
            "name": "generate_token",
            "location": 8,
            "return": [
                "dict",
                "bool",
                "Iterable[str]",
                "str"
            ],
            "arguments": {
                "payload": [
                    "str",
                    "bool",
                    "int",
                    "dict"
                ]
            }
        }
    },
    "everyclass-identity-master/everyclass/identity/utils/__init__.py": {}
}
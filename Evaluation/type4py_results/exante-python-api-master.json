{
    "exante-python-api-master/setup.py": {},
    "exante-python-api-master/exante/api.py": {
        "ExanteAPI.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]",
                    "int",
                    "Set[int]",
                    "Optional[int]"
                ],
                "application_id": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]",
                    "int",
                    "Set[int]",
                    "Optional[int]"
                ],
                "shared_key": [
                    "Optional[str]",
                    "str",
                    "bytes",
                    "Optional[int]"
                ],
                "api_scopes": [
                    "str",
                    "int"
                ],
                "environment": [
                    "str",
                    "Optional[dict]"
                ]
            }
        },
        "ExanteAPI.create_payload": {
            "name": "create_payload",
            "location": 57,
            "return": [
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str",
                    "list"
                ],
                "application_id": [
                    "str",
                    "list"
                ],
                "api_scopes": [
                    "str",
                    "list"
                ]
            }
        },
        "ExanteAPI.generate_token": {
            "name": "generate_token",
            "location": 70,
            "return": [
                "dict",
                "bool",
                "Iterable[str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str",
                    "int"
                ],
                "application_id": [
                    "str",
                    "int"
                ],
                "api_scopes": [
                    "str",
                    "int"
                ],
                "shared_key": [
                    "str",
                    "Optional[bytes]"
                ]
            }
        },
        "ExanteAPI.__make_request": {
            "name": "__make_request",
            "location": 89,
            "return": [
                "dict",
                "Dict[str, Union[int, str]]",
                "Optional[Dict[str, Any]]",
                "Optional[Dict[str, str]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str",
                    "bool",
                    "Type[T]",
                    "int",
                    "Dict[str, str]",
                    "Optional[IO[bytes]]"
                ],
                "url": [
                    "dict",
                    "str",
                    "Optional[dict]"
                ],
                "query_params": [
                    "dict",
                    "Dict[str, Any]",
                    "Optional[bool]",
                    "Dict[str, str]",
                    "str",
                    "bytes"
                ],
                "data_params": [
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "Optional[str]",
                    "str"
                ],
                "headers": [
                    "dict",
                    "str",
                    "Dict[str, str]"
                ]
            }
        },
        "ExanteAPI.__make_feed_request": {
            "name": "__make_feed_request",
            "location": 118,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Mapping[str, str]",
                    "Optional[dict]"
                ],
                "query_params": [
                    "str",
                    "Mapping[str, str]",
                    "Optional[dict]"
                ],
                "headers": [
                    "dict",
                    "Optional[str]",
                    "Optional[Mapping[str, Any]]",
                    "Optional[dict]"
                ]
            }
        },
        "ExanteAPI.request": {
            "name": "request",
            "location": 135,
            "return": [
                "Optional[str]",
                "dict",
                "bytes",
                "Optional[Dict[str, Any]]",
                "Dict[str, Any]",
                "Optional[bytes]",
                "int"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "Callable[[Mapping], Awaitable]",
                    "Callable[[], Awaitable[Mapping]]",
                    "Exception"
                ]
            }
        }
    },
    "exante-python-api-master/exante/exceptions.py": {
        "APIError.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "code": [
                    "int",
                    "str",
                    "float"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "BadEnvironment.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "bool",
                    "Union[str, dict]",
                    "Mapping[str, str]",
                    "int"
                ]
            }
        }
    },
    "exante-python-api-master/exante/__init__.py": {},
    "exante-python-api-master/exante/definitions/environment.py": {},
    "exante-python-api-master/exante/definitions/orders.py": {},
    "exante-python-api-master/exante/definitions/scope.py": {},
    "exante-python-api-master/exante/definitions/__init__.py": {},
    "exante-python-api-master/exante/endpoints/accounts.py": {
        "Accounts.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountSummary.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "account_id": [
                    "str",
                    "Exception"
                ],
                "currency": [
                    "str",
                    "Exception"
                ]
            }
        }
    },
    "exante-python-api-master/exante/endpoints/apirequest.py": {
        "APIRequest.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool",
                    "dict"
                ],
                "method": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool",
                    "dict"
                ],
                "scope": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool",
                    "dict"
                ],
                "expected_status": [
                    "int",
                    "bool"
                ]
            }
        },
        "APIRequest.response": {
            "name": "response",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[bool]",
                    "Union[bool, str, None]"
                ]
            }
        },
        "APIRequest.status_code": {
            "name": "status_code",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "Optional[Sequence[T]]",
                    "Union[int, bool]",
                    "str",
                    "Union[float, int]"
                ]
            }
        },
        "APIRequest.expected_status": {
            "name": "expected_status",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "bytes",
                    "float"
                ]
            }
        },
        "APIRequest.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "exante-python-api-master/exante/endpoints/feed.py": {
        "Feed.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "symbols": [
                    "str",
                    "Optional[str]",
                    "Tuple[type]"
                ]
            }
        }
    },
    "exante-python-api-master/exante/endpoints/orders.py": {
        "Orders.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "params": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "OrderCreate.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[str, Any]",
                    "bytes",
                    "Dict[str, str]",
                    "list",
                    "str",
                    "Optional[Dict[str, Any]]"
                ]
            }
        }
    },
    "exante-python-api-master/exante/endpoints/symbols.py": {
        "Symbols.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "params": [
                    "str",
                    "bool"
                ]
            }
        },
        "Symbol.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "symbol_id": [
                    "str",
                    "int",
                    "bool",
                    "Optional[int]"
                ]
            }
        },
        "SymbolSpecification.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "symbol_id": [
                    "str",
                    "int",
                    "bool",
                    "Optional[int]"
                ]
            }
        }
    },
    "exante-python-api-master/exante/endpoints/__init__.py": {},
    "exante-python-api-master/exante/endpoints/payloads/basepayload.py": {
        "BasePayload.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePayload.__repr__": {
            "name": "__repr__",
            "location": 8,
            "return": [
                "str",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePayload.data": {
            "name": "data",
            "location": 12,
            "return": [
                "Dict[str, List[int]]",
                "str",
                "Optional[float]",
                "dict",
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "exante-python-api-master/exante/endpoints/payloads/orders.py": {
        "MarketOrder.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "account": [
                    "str",
                    "Sequence[str]",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "instrument": [
                    "str",
                    "Sequence[str]",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "side": [
                    "str",
                    "int",
                    "Optional[List[Any]]",
                    "Callable"
                ],
                "quantity": [
                    "str",
                    "Sequence[str]",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "duration": [
                    "str",
                    "Optional[bytes]",
                    "Optional[float]"
                ]
            }
        },
        "MarketOrder.data": {
            "name": "data",
            "location": 43,
            "return": [
                "bool",
                "Dict[str, Any]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "exante-python-api-master/exante/endpoints/payloads/__init__.py": {},
    "exante-python-api-master/exante/tests/conftest.py": {
        "exante_api_demo_client": {
            "name": "exante_api_demo_client",
            "location": 28,
            "return": [
                "Callable",
                "Callable[..., neuromation.api.Client]"
            ],
            "arguments": {}
        },
        "exante_api_demo_client_no_scopes": {
            "name": "exante_api_demo_client_no_scopes",
            "location": 55,
            "return": [
                "Callable"
            ],
            "arguments": {}
        }
    },
    "exante-python-api-master/exante/tests/__init__.py": {},
    "exante-python-api-master/exante/tests/integration/test_api.py": {
        "TestSaxoOpenAPI.setup": {
            "name": "setup",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "exante_api_demo_client": [
                    "str",
                    "Callable",
                    "int"
                ],
                "exante_api_demo_client_no_scopes": [
                    "float",
                    "List[str]",
                    "str",
                    "int"
                ]
            }
        },
        "TestSaxoOpenAPI.generate_cassette_name": {
            "name": "generate_cassette_name",
            "location": 32,
            "return": [
                "Dict[str, str]",
                "list"
            ],
            "arguments": {
                "method_name": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "TestSaxoOpenAPI.test__accounts_list": {
            "name": "test__accounts_list",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSaxoOpenAPI.test__account_details": {
            "name": "test__account_details",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "exante-python-api-master/exante/tests/integration/__init__.py": {},
    "exante-python-api-master/exante/tests/integration/cassettes/__init__.py": {},
    "exante-python-api-master/exante/tests/unit/test_api.py": {
        "test_bad_api_environment_exception": {
            "name": "test_bad_api_environment_exception",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_api_environment": {
            "name": "test_api_environment",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "exante_api_demo_client": [
                    "str"
                ]
            }
        }
    },
    "exante-python-api-master/exante/tests/unit/__init__.py": {}
}
{
    "exvar.py-master/setup.py": {},
    "exvar.py-master/__init__.py": {},
    "exvar.py-master/src/check.py": {
        "check": {
            "name": "check",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "check_dest": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "exvar.py-master/src/cnst.py": {},
    "exvar.py-master/src/error.py": {
        "AppError.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "Optional[float]",
                    "Optional[bool]",
                    "Optional[Iterable[str]]",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "AppError.__str__": {
            "name": "__str__",
            "location": 13,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "exvar.py-master/src/init.py": {
        "_init": {
            "name": "_init",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "dirname": [
                    "str",
                    "Dict[str, str]"
                ],
                "src": [
                    "str",
                    "Dict[str, str]"
                ],
                "dest": [
                    "str"
                ]
            }
        },
        "init": {
            "name": "init",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "exvar.py-master/src/lib.py": {
        "warn": {
            "name": "warn",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "find_base": {
            "name": "find_base",
            "location": 24,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "cwd": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "get_str": {
            "name": "get_str",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [
                    "Optional[str]",
                    "Union[None, float, int, str]",
                    "bytes",
                    "str"
                ]
            }
        },
        "execute": {
            "name": "execute",
            "location": 45,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "is_run": [
                    "list",
                    "dict",
                    "List[str]"
                ],
                "is_check": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "Callable",
                    "Optional[List[str]]"
                ],
                "is_check_dest": [
                    "list",
                    "dict",
                    "List[str]"
                ]
            }
        },
        "validate_base_text": {
            "name": "validate_base_text",
            "location": 158,
            "return": [
                "str",
                "Callable[[str], T]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "validate_base_files": {
            "name": "validate_base_files",
            "location": 170,
            "return": [
                "str"
            ],
            "arguments": {
                "base_files": [
                    "Optional[str]",
                    "Optional[Sequence[str]]",
                    "list"
                ]
            }
        }
    },
    "exvar.py-master/src/ls_dest.py": {
        "ls_dest": {
            "name": "ls_dest",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "exvar.py-master/src/main.py": {
        "cmd": {
            "name": "cmd",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "ctx": [
                    "click.Context",
                    "bool",
                    "click.HelpFormatter"
                ],
                "version": [
                    "bool",
                    "Union[click.core.Option, click.core.Parameter]",
                    "click.core.Context",
                    "list"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "exvar.py-master/src/message.py": {},
    "exvar.py-master/src/root_path.py": {
        "root_path": {
            "name": "root_path",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "exvar.py-master/src/run.py": {
        "run": {
            "name": "run",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "exvar.py-master/src/__init__.py": {},
    "exvar.py-master/tests/test_error.py": {
        "test_AppError": {
            "name": "test_AppError",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "exvar.py-master/tests/test_init.py": {
        "test_init": {
            "name": "test_init",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": [
                    "int",
                    "BaseException"
                ]
            }
        }
    },
    "exvar.py-master/tests/test_lib.py": {
        "test_warn": {
            "name": "test_warn",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_find_base": {
            "name": "test_find_base",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": [
                    "dict",
                    "Dict[str, Any]",
                    "lib.applications.TodoRequest"
                ]
            }
        }
    }
}
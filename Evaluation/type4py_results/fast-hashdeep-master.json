{
    "fast-hashdeep-master/fast-hashdeep.py": {
        "walk_files": {
            "name": "walk_files",
            "location": 146,
            "return": [
                "typing.Iterator[pathlib.Path]"
            ],
            "arguments": {
                "directory": [
                    "pathlib.Path",
                    "int",
                    "Union[bool, str]",
                    "str"
                ]
            }
        },
        "hash_file": {
            "name": "hash_file",
            "location": 153,
            "return": [
                "str",
                "int",
                "List[str]"
            ],
            "arguments": {
                "filepath": [
                    "pathlib.Path",
                    "str",
                    "Callable[[str], None]",
                    "Optional[str]"
                ],
                "hash": [
                    "int",
                    "dict",
                    "Optional[int]",
                    "Tuple[int, int]"
                ]
            }
        },
        "describe": {
            "name": "describe",
            "location": 158,
            "return": [
                "bool",
                "int",
                "List[pathlib.Path]",
                "Tuple[int, int]",
                "str"
            ],
            "arguments": {
                "filepath": [
                    "Optional[str]",
                    "float"
                ]
            }
        },
        "path_by_content": {
            "name": "path_by_content",
            "location": 172,
            "return": [
                "List[str]",
                "Set[str]",
                "Dict[str, str]",
                "List[List[str]]"
            ],
            "arguments": {
                "descriptions": [
                    "bool",
                    "str",
                    "bytes",
                    "dict"
                ]
            }
        },
        "load_descriptions": {
            "name": "load_descriptions",
            "location": 176,
            "return": [
                "List[str]",
                "bool",
                "Dict[str, str]",
                "\"ByteSource\"",
                "List[List[str]]",
                "Set[str]"
            ],
            "arguments": {
                "references": [
                    "pathlib.Path",
                    "IO[Any]",
                    "IO[str]",
                    "TextIO",
                    "Union[List[Any], str]",
                    "bool",
                    "List[TextIO]"
                ]
            }
        },
        "describe_differences": {
            "name": "describe_differences",
            "location": 188,
            "return": [
                "Optional[int]",
                "pathlib.Path",
                "str",
                "List[int]",
                "int"
            ],
            "arguments": {
                "expected": [
                    "bool",
                    "str",
                    "dict",
                    "Optional[Union[Dict, str, int, bytes]]"
                ],
                "current": [
                    "str",
                    "List[Dict[str, str]]",
                    "IO"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "record": {
            "name": "record",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "directory": [
                    "str"
                ]
            }
        },
        "audit": {
            "name": "audit",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "directory": [
                    "str",
                    "Dict[str, Any]",
                    "int"
                ],
                "references": [
                    "Iterable[str]",
                    "float",
                    "list"
                ]
            }
        },
        "compare": {
            "name": "compare",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "baseline": [
                    "int",
                    "Callable",
                    "str"
                ],
                "target": [
                    "TextIO",
                    "str",
                    "bool"
                ]
            }
        },
        "find_duplicates": {
            "name": "find_duplicates",
            "location": 313,
            "return": [
                "int",
                "Union[tuple, list]",
                "Set[str]",
                "Set[VT]"
            ],
            "arguments": {
                "references": [
                    "int",
                    "list"
                ]
            }
        },
        "SupportsLessThan.__lt__": {
            "name": "__lt__",
            "location": 35,
            "return": [
                "builtins.bool"
            ],
            "arguments": {
                "self": [],
                "__other": [
                    "SupportsFloat",
                    "List[str]",
                    "Union[int, float]",
                    "AbstractSet[T]"
                ]
            }
        },
        "FileDescription.create": {
            "name": "create",
            "location": 78,
            "return": [
                "int",
                "dict",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "pathlib.Path",
                    "str",
                    "int",
                    "datetime.datetime"
                ]
            }
        },
        "FileDescription.parse": {
            "name": "parse",
            "location": 93,
            "return": [
                "str",
                "MutableMapping[str, Any]",
                "int"
            ],
            "arguments": {
                "cls": [
                    "pathlib.Path",
                    "str",
                    "Union[str, bytes]",
                    "Optional[str]"
                ],
                "string": [
                    "str"
                ],
                "relative_to": [
                    "pathlib.Path",
                    "str",
                    "Union[str, bytes]",
                    "Optional[str]"
                ]
            }
        },
        "FileDescription.__str__": {
            "name": "__str__",
            "location": 102,
            "return": [
                "str",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChangeSummary.__bool__": {
            "name": "__bool__",
            "location": 120,
            "return": [
                "int",
                "List[float]",
                "float",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChangeSummary.describe": {
            "name": "describe",
            "location": 123,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChangeSummary.describe.descriptions": {
            "name": "descriptions",
            "location": 124,
            "return": [
                "Optional[str]",
                "str",
                "int",
                "Optional[int]",
                "pathlib.Path"
            ],
            "arguments": {
                "items": [
                    "str"
                ],
                "title": [
                    "str",
                    "Optional[str]",
                    "dict",
                    "List[str]"
                ],
                "template": [
                    "str"
                ]
            }
        }
    }
}
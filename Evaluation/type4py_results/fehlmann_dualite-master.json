{
    "fehlmann_dualite-master/do_profile.py": {},
    "fehlmann_dualite-master/perf.py": {},
    "fehlmann_dualite-master/setup.py": {
        "long_description": {
            "name": "long_description",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/acces.py": {
        "intervale": {
            "name": "intervale",
            "location": 4,
            "return": [
                "str",
                "bytearray"
            ],
            "arguments": {
                "base": [
                    "List[int]",
                    "int",
                    "str",
                    "Sequence[float]",
                    "bytes"
                ],
                "debut": [
                    "int",
                    "List[int]",
                    "str",
                    "bytes"
                ],
                "fin": [
                    "int",
                    "List[int]",
                    "str",
                    "bytes"
                ]
            }
        },
        "itere_comparos": {
            "name": "itere_comparos",
            "location": 17,
            "return": [
                "typing.Generator[typing.List[builtins.int], None, None]"
            ],
            "arguments": {
                "base": [
                    "float",
                    "int",
                    "str",
                    "List[int]"
                ],
                "secteur_debut": [
                    "float",
                    "int",
                    "str",
                    "List[int]"
                ],
                "secteur_fin": [
                    "float",
                    "int",
                    "str",
                    "List[int]"
                ],
                "comparo_debut": [
                    "float",
                    "int",
                    "str",
                    "List[int]"
                ],
                "comparo_fin": [
                    "float",
                    "int",
                    "str",
                    "List[int]"
                ]
            }
        },
        "itere_delta": {
            "name": "itere_delta",
            "location": 26,
            "return": [
                "typing.Generator[typing.List[builtins.int], None, None]"
            ],
            "arguments": {
                "comparo": [
                    "List[int]",
                    "List[float]",
                    "list"
                ],
                "formule_delta": [
                    "List[int]",
                    "List[float]",
                    "list"
                ]
            }
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/afficheur.py": {
        "QLineNumberArea.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "editor": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "QLineNumberArea.sizeHint": {
            "name": "sizeHint",
            "location": 11,
            "return": [
                "List[Callable]",
                "float",
                "bytes",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "QLineNumberArea.paintEvent": {
            "name": "paintEvent",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "PyQt5.QtGui.QKeyEvent",
                    "PyQt5.QtCore.QObject",
                    "PySide2.QtGui.QResizeEvent",
                    "Callable"
                ]
            }
        },
        "QCodeEditor.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "PyQt5.QtWidgets.QWidget",
                    "PyQt5.QtCore.QObject"
                ]
            }
        },
        "QCodeEditor.lineNumberAreaWidth": {
            "name": "lineNumberAreaWidth",
            "location": 27,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "QCodeEditor.updateLineNumberAreaWidth": {
            "name": "updateLineNumberAreaWidth",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "int",
                    "Optional[str]",
                    "List[int]"
                ]
            }
        },
        "QCodeEditor.updateLineNumberArea": {
            "name": "updateLineNumberArea",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rect": [
                    "int",
                    "str",
                    "Type",
                    "bool"
                ],
                "dy": [
                    "int",
                    "Tuple[bytes]",
                    "Dict[str, Any]",
                    "float"
                ]
            }
        },
        "QCodeEditor.resizeEvent": {
            "name": "resizeEvent",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "PyQt5.QtCore.QObject",
                    "PySide2.QtGui.QResizeEvent",
                    "PyQt5.QtGui.QKeyEvent"
                ]
            }
        },
        "QCodeEditor.highlightCurrentLine": {
            "name": "highlightCurrentLine",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QCodeEditor.lineNumberAreaPaintEvent": {
            "name": "lineNumberAreaPaintEvent",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "PyQt5.QtCore.QObject",
                    "str",
                    "bool"
                ]
            }
        },
        "Afficheur.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "PyQt5.QtWidgets.QWidget",
                    "PyQt5.QtCore.QObject"
                ],
                "contenu": [
                    "str",
                    "Optional[str]",
                    "Any",
                    "int"
                ]
            }
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/algo.py": {
        "compare": {
            "name": "compare",
            "location": 4,
            "return": [
                "List[int]",
                "str",
                "bytes",
                "bool",
                "Callable[[str, str], float]",
                "Tuple[int]",
                "List[float]",
                "Callable"
            ],
            "arguments": {
                "secteur_base": [
                    "List[int]",
                    "List[list]",
                    "List[bool]",
                    "int"
                ],
                "comparo": [
                    "List[int]",
                    "List[list]",
                    "List[bool]",
                    "int"
                ]
            }
        },
        "delta": {
            "name": "delta",
            "location": 8,
            "return": [
                "bytearray",
                "bytes",
                "List[dict]",
                "str"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float"
                ],
                "b": [
                    "int",
                    "float"
                ],
                "c": [
                    "int",
                    "float"
                ],
                "d": [
                    "int",
                    "float"
                ]
            }
        },
        "binomes": {
            "name": "binomes",
            "location": 12,
            "return": [
                "List[int]",
                "str",
                "bytes",
                "bool",
                "Callable[[str, str], float]",
                "Tuple[int]",
                "List[float]",
                "Callable"
            ],
            "arguments": {
                "deltas": [
                    "List[bool]",
                    "int"
                ]
            }
        },
        "decompte": {
            "name": "decompte",
            "location": 16,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "binomes": [
                    "str",
                    "Sequence[T]",
                    "Union[tuple, list]",
                    "List[int]"
                ]
            }
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/calcul.py": {
        "calcul": {
            "name": "calcul",
            "location": 6,
            "return": [],
            "arguments": {
                "base": [],
                "secteur_debut": [],
                "secteur_fin": [],
                "comparo_debut": [],
                "comparo_fin": [],
                "formule_delta": []
            }
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/entree.py": {
        "_aleatoire": {
            "name": "_aleatoire",
            "location": 14,
            "return": [],
            "arguments": {
                "nb": []
            }
        },
        "aleatoire": {
            "name": "aleatoire",
            "location": 18,
            "return": [],
            "arguments": {
                "nb": []
            }
        },
        "fichier": {
            "name": "fichier",
            "location": 28,
            "return": [],
            "arguments": {
                "chemin": []
            }
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/erreur.py": {},
    "fehlmann_dualite-master/dualite_transnumerique/shell.py": {
        "intervale": {
            "name": "intervale",
            "location": 12,
            "return": [],
            "arguments": {
                "texte": []
            }
        },
        "_arg_parser": {
            "name": "_arg_parser",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/ui.py": {
        "_format_number": {
            "name": "_format_number",
            "location": 16,
            "return": [],
            "arguments": {
                "number": []
            }
        },
        "main": {
            "name": "main",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "Calculateur.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "secteur_debut": [],
                "secteur_fin": [],
                "comparo_debut": [],
                "comparo_fin": [],
                "formule_delta": [],
                "plus_texte": [],
                "moins_texte": []
            }
        },
        "Calculateur.run": {
            "name": "run",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre.on_fichierTest1120_toggled": {
            "name": "on_fichierTest1120_toggled",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "Fenetre.on_fichierRandom1m_toggled": {
            "name": "on_fichierRandom1m_toggled",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "Fenetre.on_fichierAleatoire300k_toggled": {
            "name": "on_fichierAleatoire300k_toggled",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "Fenetre.on_fichierAleatoire1m_toggled": {
            "name": "on_fichierAleatoire1m_toggled",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "Fenetre.on_secteurBaseMin_valueChanged": {
            "name": "on_secteurBaseMin_valueChanged",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_secteurBaseMax_valueChanged": {
            "name": "on_secteurBaseMax_valueChanged",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_comparoMin_valueChanged": {
            "name": "on_comparoMin_valueChanged",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_comparoMax_valueChanged": {
            "name": "on_comparoMax_valueChanged",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_formuleDelta1_valueChanged": {
            "name": "on_formuleDelta1_valueChanged",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_formuleDelta2_valueChanged": {
            "name": "on_formuleDelta2_valueChanged",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_formuleDelta3_valueChanged": {
            "name": "on_formuleDelta3_valueChanged",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_pasComparos_toggled": {
            "name": "on_pasComparos_toggled",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "valeur": []
            }
        },
        "Fenetre.on_execute_clicked": {
            "name": "on_execute_clicked",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre.fait": {
            "name": "fait",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre.erreur": {
            "name": "erreur",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Fenetre._test_si_fini": {
            "name": "_test_si_fini",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre.on_reculer_clicked": {
            "name": "on_reculer_clicked",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre.on_avancer_clicked": {
            "name": "on_avancer_clicked",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Fenetre._avancer": {
            "name": "_avancer",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "signe": []
            }
        },
        "Fenetre._set_colonnes": {
            "name": "_set_colonnes",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "colonnes": []
            }
        },
        "Fenetre.on_afficher_clicked": {
            "name": "on_afficher_clicked",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/__init__.py": {},
    "fehlmann_dualite-master/dualite_transnumerique/aleatoire/genere.py": {
        "_parse_args": {
            "name": "_parse_args",
            "location": 6,
            "return": [
                "argparse.Namespace",
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "_get_bit": {
            "name": "_get_bit",
            "location": 14,
            "return": [
                "str",
                "bytes",
                "int",
                "Dict[str, str]",
                "Union[bytes, bytearray]"
            ],
            "arguments": {
                "byte": [
                    "int",
                    "str",
                    "bool"
                ],
                "pos": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "fehlmann_dualite-master/dualite_transnumerique/aleatoire/__init__.py": {},
    "fehlmann_dualite-master/tests/conftest.py": {
        "donnees": {
            "name": "donnees",
            "location": 29,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "fehlmann_dualite-master/tests/test_acces.py": {
        "test_intervale": {
            "name": "test_intervale",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "donnees": [
                    "str",
                    "float"
                ]
            }
        },
        "test_intervale_reboucle": {
            "name": "test_intervale_reboucle",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_itere_comparos": {
            "name": "test_itere_comparos",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "donnees": [
                    "str",
                    "float"
                ]
            }
        },
        "test_itere_delta": {
            "name": "test_itere_delta",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "fehlmann_dualite-master/tests/test_algo.py": {
        "test_compare": {
            "name": "test_compare",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_delta": {
            "name": "test_delta",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_binomes": {
            "name": "test_binomes",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_decompte": {
            "name": "test_decompte",
            "location": 22,
            "return": [],
            "arguments": {}
        }
    },
    "fehlmann_dualite-master/tests/test_calcul.py": {
        "test_calcul": {
            "name": "test_calcul",
            "location": 6,
            "return": [],
            "arguments": {
                "donnees": []
            }
        },
        "test_parametres_invalide": {
            "name": "test_parametres_invalide",
            "location": 10,
            "return": [],
            "arguments": {
                "donnees": []
            }
        }
    },
    "fehlmann_dualite-master/tests/test_entree.py": {
        "test_aleatoire": {
            "name": "test_aleatoire",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_fichier": {
            "name": "test_fichier",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "donnees": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "fehlmann_dualite-master/tests/__init__.py": {}
}
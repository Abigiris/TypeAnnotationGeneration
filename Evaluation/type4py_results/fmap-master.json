{
    "fmap-master/setup.py": {},
    "fmap-master/fmap/iterable.py": {
        "IterableFunctor.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "Optional[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "IterableFunctor.fmap": {
            "name": "fmap",
            "location": 13,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "int"
                ]
            }
        },
        "IterableFunctor.__iter__": {
            "name": "__iter__",
            "location": 16,
            "return": [
                "str",
                "int",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "IterableFunctor.__repr__": {
            "name": "__repr__",
            "location": 19,
            "return": [
                "str",
                "Callable[[str], None]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MappedIterableFunctor.__iter__": {
            "name": "__iter__",
            "location": 26,
            "return": [
                "str",
                "Optional[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fmap-master/fmap/meta.py": {
        "Functor.fmap": {
            "name": "fmap",
            "location": 15,
            "return": [
                "'Functor[B]'"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ]
            }
        },
        "Functor.__or__": {
            "name": "__or__",
            "location": 18,
            "return": [
                "bool",
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "dict",
                    "AbstractSet[T]",
                    "AbstractSet[T_co]"
                ]
            }
        },
        "MappedFunctor.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pipe": [
                    "int",
                    "str",
                    "Optional[str]",
                    "float",
                    "list"
                ],
                "source": [
                    "str",
                    "Dict[str, str]",
                    "bool"
                ]
            }
        },
        "MappedFunctor.from_mapped": {
            "name": "from_mapped",
            "location": 41,
            "return": [
                "T",
                "Optional[Mapping]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "List[str]",
                    "bytes"
                ],
                "f": [
                    "str",
                    "denite.util.UserContext",
                    "int",
                    "bool",
                    "List[str]"
                ],
                "source": []
            }
        },
        "MappedFunctor.fmap": {
            "name": "fmap",
            "location": 48,
            "return": [
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "str",
                    "Tuple[str, str, int]",
                    "bool",
                    "int",
                    "Callable",
                    "float",
                    "List[str]"
                ]
            }
        },
        "MappedFunctor.__repr__": {
            "name": "__repr__",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fmap-master/fmap/sequence.py": {
        "SequenceFunctor.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "Optional[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "SequenceFunctor.fmap": {
            "name": "fmap",
            "location": 13,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "int"
                ]
            }
        },
        "SequenceFunctor.__len__": {
            "name": "__len__",
            "location": 16,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceFunctor.__getitem__": {
            "name": "__getitem__",
            "location": 27,
            "return": [
                "str",
                "Union[str, Sequence[str]]",
                "Optional[bytes]"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "Dict[str, str]",
                    "dict",
                    "str"
                ]
            }
        },
        "MappedSequenceFunctor.__len__": {
            "name": "__len__",
            "location": 43,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "MappedSequenceFunctor.__iter__": {
            "name": "__iter__",
            "location": 46,
            "return": [
                "str",
                "Optional[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MappedSequenceFunctor.__getitem__": {
            "name": "__getitem__",
            "location": 57,
            "return": [
                "str",
                "Callable[[str, Any], Tuple[bytes, int]]",
                "bool",
                "Iterable[str]",
                "MutableMapping[str, int]",
                "Callable[[str, str], float]",
                "int"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "Set[str]",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "fmap-master/fmap/util.py": {
        "const": {
            "name": "const",
            "location": 10,
            "return": [
                "bytes",
                "bool",
                "int",
                "bytearray"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "str",
                    "list"
                ]
            }
        },
        "compose": {
            "name": "compose",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "f": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ],
                "g": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ]
            }
        },
        "compose._compose": {
            "name": "_compose",
            "location": 38,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "arg": [
                    "str",
                    "int",
                    "Hashable"
                ]
            }
        }
    },
    "fmap-master/fmap/__init__.py": {
        "fmap": {
            "name": "fmap",
            "location": 26,
            "return": [
                "int",
                "str",
                "dict"
            ],
            "arguments": {
                "f": [
                    "T",
                    "Callable[[], Any]"
                ],
                "it": [
                    "Callable",
                    "Callable[[], Any]",
                    "T",
                    "IO[bytes]"
                ]
            }
        }
    },
    "fmap-master/test/__init__.py": {}
}
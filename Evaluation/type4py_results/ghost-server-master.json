{
    "ghost-server-master/ghost.py": {},
    "ghost-server-master/manage.py": {},
    "ghost-server-master/app/app.py": {
        "factory": {
            "name": "factory",
            "location": 11,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "configuration": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "factory.landing_page": {
            "name": "landing_page",
            "location": 19,
            "return": [
                "Dict[str, Any]",
                "dict",
                "List[str]",
                "int"
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/app/config.py": {},
    "ghost-server-master/app/extensions.py": {},
    "ghost-server-master/app/models.py": {
        "UserModel.to_dict": {
            "name": "to_dict",
            "location": 36,
            "return": [
                "str",
                "Iterable[str]",
                "Union['KspNativeControl', int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserModel.to_public_dict": {
            "name": "to_public_dict",
            "location": 45,
            "return": [
                "Optional[int]",
                "dict",
                "str",
                "cmk.utils.type_defs.HostName"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginModel.hash_password": {
            "name": "hash_password",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "bool",
                    "Union[List[str], str]"
                ]
            }
        },
        "LoginModel.verify_password": {
            "name": "verify_password",
            "location": 67,
            "return": [
                "str",
                "Dict[str, type]",
                "Mapping[str, Any]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "LoginModel.generate_auth_token": {
            "name": "generate_auth_token",
            "location": 70,
            "return": [
                "str",
                "BinaryIO"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginModel.verify_auth_token": {
            "name": "verify_auth_token",
            "location": 75,
            "return": [
                "Optional[str]",
                "dict",
                "Optional[Type[Exception]]",
                "bool"
            ],
            "arguments": {
                "token": [
                    "dict",
                    "Dict[str, Any]",
                    "str",
                    "Dict[str, str]",
                    "Mapping"
                ]
            }
        },
        "MessageModel.to_dict": {
            "name": "to_dict",
            "location": 94,
            "return": [
                "int",
                "cmk.utils.type_defs.UserId",
                "django.db.models.QuerySet"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ghost-server-master/app/utils.py": {
        "date_from_str": {
            "name": "date_from_str",
            "location": 6,
            "return": [
                "str",
                "Optional[str]",
                "datetime.datetime",
                "datetime.date",
                "datetime.timedelta"
            ],
            "arguments": {
                "date_str": [
                    "str"
                ]
            }
        },
        "date_time_from_str": {
            "name": "date_time_from_str",
            "location": 11,
            "return": [
                "Optional[str]",
                "datetime.datetime",
                "datetime.date",
                "str",
                "int"
            ],
            "arguments": {
                "date_str": [
                    "str"
                ]
            }
        },
        "str_from_date": {
            "name": "str_from_date",
            "location": 19,
            "return": [
                "Optional[str]",
                "datetime.date",
                "Tuple[str, str]",
                "bool",
                "Optional[datetime.date]",
                "datetime.datetime"
            ],
            "arguments": {
                "date": [
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "datetime",
                    "Set[str]",
                    "bytes"
                ]
            }
        },
        "str_from_date_time": {
            "name": "str_from_date_time",
            "location": 25,
            "return": [
                "datetime.date",
                "Optional[str]",
                "str",
                "Tuple[str, str]"
            ],
            "arguments": {
                "date": [
                    "datetime.datetime",
                    "datetime.date",
                    "datetime",
                    "Union[datetime.datetime, str]",
                    "bool",
                    "Set[str]",
                    "Optional[str]"
                ]
            }
        },
        "bad_request": {
            "name": "bad_request",
            "location": 42,
            "return": [
                "dict",
                "Dict[str, Union[int, str]]",
                "flask.Response",
                "Optional[Dict[str, Any]]",
                "Optional[Dict[str, str]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "err": [
                    "float",
                    "dict",
                    "bytes",
                    "Dict[str, Any]",
                    "Optional[int]"
                ],
                "message": [
                    "Optional[str]",
                    "bool",
                    "Optional[int]"
                ]
            }
        }
    },
    "ghost-server-master/app/__init__.py": {},
    "ghost-server-master/app/api/message_api.py": {
        "send_message": {
            "name": "send_message",
            "location": 17,
            "return": [
                "bool",
                "int",
                "List[str]"
            ],
            "arguments": {}
        },
        "receive_message": {
            "name": "receive_message",
            "location": 45,
            "return": [
                "bool",
                "int",
                "flask.Markup"
            ],
            "arguments": {
                "receiver_id": [
                    "int",
                    "str",
                    "Optional[str]"
                ],
                "sender_id": [
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "ghost-server-master/app/api/user_api.py": {
        "new_user": {
            "name": "new_user",
            "location": 15,
            "return": [
                "Dict[str, Any]",
                "Dict[str, str]",
                "flask.Response"
            ],
            "arguments": {}
        },
        "update_user_keys": {
            "name": "update_user_keys",
            "location": 39,
            "return": [
                "str",
                "Dict[str, str]",
                "dict",
                "games.models.Game"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "bool",
                    "str"
                ]
            }
        },
        "get_other_user_keys": {
            "name": "get_other_user_keys",
            "location": 72,
            "return": [
                "Dict[str, str]",
                "str",
                "dict",
                "Optional[str]",
                "Exception",
                "tartare.core.models.Job"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "get_all_friends": {
            "name": "get_all_friends",
            "location": 84,
            "return": [
                "str",
                "Dict[str, str]",
                "int",
                "dict"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "bool",
                    "str",
                    "List[str]"
                ]
            }
        },
        "add_friend": {
            "name": "add_friend",
            "location": 116,
            "return": [
                "int",
                "Dict[str, str]",
                "List[str]"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "bool",
                    "str",
                    "List[str]"
                ]
            }
        },
        "remove_friend": {
            "name": "remove_friend",
            "location": 151,
            "return": [
                "bool",
                "List[str]",
                "int"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "bytes",
                    "str"
                ],
                "friend_user_id": [
                    "int",
                    "Optional[int]",
                    "datetime.datetime",
                    "str"
                ]
            }
        },
        "get_auth_token": {
            "name": "get_auth_token",
            "location": 171,
            "return": [
                "str",
                "int",
                "bytes",
                "zerver.models.Realm",
                "app.GrpyApp",
                "Callable",
                "server.models.User"
            ],
            "arguments": {}
        },
        "verify_password": {
            "name": "verify_password",
            "location": 181,
            "return": [
                "bool"
            ],
            "arguments": {
                "username_or_token": [
                    "str",
                    "lms.lmsdb.models.Comment"
                ],
                "password": [
                    "bytes",
                    "str",
                    "int"
                ]
            }
        }
    },
    "ghost-server-master/app/api/__init__.py": {},
    "ghost-server-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "context": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "revision": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "directives": [
                    "Callable[[Mapping], T]",
                    "list",
                    "List[List[str]]",
                    "int",
                    "str",
                    "tuple"
                ]
            }
        }
    },
    "ghost-server-master/migrations/versions/0a7fd7dfe731_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/3d65c5d40f25_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/3ebd035b1374_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/47609b355f75_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/850469fa21c2_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/891fd177041d_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/91ae0515bb3e_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/bc7876f81064_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/be7437ea45d8_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ghost-server-master/migrations/versions/c314a03f4fcf_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
{
    "graphique-master/example.py": {},
    "graphique-master/setup.py": {},
    "graphique-master/graphique/chart.py": {
        "Axis.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Legend.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "columns": [
                    "float",
                    "int",
                    "str",
                    "List[float]"
                ]
            }
        },
        "Legend.draw": {
            "name": "draw",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "renderer": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "SeriesList.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "chart": [
                    "int",
                    "Optional[Dict]"
                ],
                "data": [
                    "str",
                    "Dict[str, Any]",
                    "dict",
                    "Mapping",
                    "bytes",
                    "list"
                ]
            }
        },
        "AxesList.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "chart": [
                    "int",
                    "Optional[Dict]"
                ],
                "data": [
                    "str",
                    "Dict[str, Any]",
                    "dict",
                    "Mapping",
                    "bytes",
                    "list"
                ]
            }
        },
        "Chart.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "series": [
                    "str",
                    "int",
                    "float",
                    "Optional[List[Dict]]"
                ],
                "title": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "graphique-master/graphique/graphics.py": {
        "Point.copy": {
            "name": "copy",
            "location": 12,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "List[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "List[float]"
                ]
            }
        },
        "Point.__add__": {
            "name": "__add__",
            "location": 15,
            "return": [
                "str",
                "float",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "float"
                ]
            }
        },
        "Size.width": {
            "name": "width",
            "location": 23,
            "return": [
                "int",
                "str",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Size.height": {
            "name": "height",
            "location": 27,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Colour.from_rgb": {
            "name": "from_rgb",
            "location": 41,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "float",
                    "List[int]"
                ],
                "r": [
                    "int",
                    "float",
                    "List[int]"
                ],
                "g": [
                    "int",
                    "float",
                    "List[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "List[int]"
                ]
            }
        },
        "Font.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "size": [
                    "int",
                    "bool",
                    "Optional[str]",
                    "str"
                ]
            }
        }
    },
    "graphique-master/graphique/series.py": {
        "Series.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "XYSeries.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "points": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "name": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "Scatter.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "points": [
                    "Optional[str]",
                    "bytes",
                    "Callable",
                    "str",
                    "list"
                ],
                "name": [
                    "Optional[str]",
                    "bytes",
                    "Callable",
                    "str",
                    "list"
                ]
            }
        },
        "Line.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "points": [
                    "Optional[str]",
                    "bytes",
                    "Callable",
                    "str",
                    "list"
                ],
                "name": [
                    "Optional[str]",
                    "bytes",
                    "Callable",
                    "str",
                    "list"
                ]
            }
        }
    },
    "graphique-master/graphique/__init__.py": {},
    "graphique-master/graphique/renderer/cairo.py": {
        "Cairo.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "chart": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "Cairo.clear": {
            "name": "clear",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Cairo.save": {
            "name": "save",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str",
                    "bool"
                ]
            }
        },
        "Cairo.draw": {
            "name": "draw",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Cairo.draw_node": {
            "name": "draw_node",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "Cairo.draw_text_node": {
            "name": "draw_text_node",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int",
                    "str"
                ]
            }
        },
        "Cairo.draw_rectangle_node": {
            "name": "draw_rectangle_node",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "Cairo.draw_ellipse_node": {
            "name": "draw_ellipse_node",
            "location": 76,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "graphique-master/graphique/renderer/_renderer.py": {
        "Renderer.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "scene": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Renderer.save": {
            "name": "save",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str",
                    "bool",
                    "IO"
                ]
            }
        },
        "Renderer.show": {
            "name": "show",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Renderer.draw": {
            "name": "draw",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graphique-master/graphique/renderer/__init__.py": {},
    "graphique-master/tests/test_dataset.py": {},
    "graphique-master/tests/__init__.py": {}
}
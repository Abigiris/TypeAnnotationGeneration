{
    "greminders2todoist-master/setup.py": {},
    "greminders2todoist-master/docs/conf.py": {},
    "greminders2todoist-master/greminders2todoist/cli.py": {
        "month_num": {
            "name": "month_num",
            "location": 48,
            "return": [
                "int"
            ],
            "arguments": {
                "month": [
                    "int"
                ]
            }
        },
        "maybe": {
            "name": "maybe",
            "location": 69,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "x": [
                    "Optional[T]",
                    "Optional[str]",
                    "T",
                    "Callable[..., T]"
                ],
                "f": [
                    "Optional[T]",
                    "Optional[str]",
                    "T",
                    "Callable[..., T]"
                ]
            }
        },
        "ensure": {
            "name": "ensure",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "Optional[T]",
                    "T",
                    "Optional[str]",
                    "float"
                ]
            }
        },
        "node_to_dict": {
            "name": "node_to_dict",
            "location": 107,
            "return": [
                "dict",
                "Dict[str, Any]",
                "Optional[Dict[str, str]]",
                "Dict[int, int]"
            ],
            "arguments": {
                "task_node": [
                    "lxml.etree._Element",
                    "Optional[bool]",
                    "Dict[str, dict]",
                    "Sequence[Any]",
                    "type"
                ]
            }
        },
        "chop": {
            "name": "chop",
            "location": 118,
            "return": [
                "dict",
                "Set[str]",
                "Dict[int, Dict[int, Any]]",
                "str",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "xs": [
                    "Dict[str, Set[str]]",
                    "int",
                    "list"
                ]
            }
        },
        "scan_fields": {
            "name": "scan_fields",
            "location": 122,
            "return": [
                "Type",
                "type"
            ],
            "arguments": {
                "tree": [
                    "lxml.etree._ElementTree",
                    "xml.etree.ElementTree.Element"
                ]
            }
        },
        "nth": {
            "name": "nth",
            "location": 146,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "x": [
                    "int",
                    "List[int]",
                    "float"
                ]
            }
        },
        "proc_date": {
            "name": "proc_date",
            "location": 150,
            "return": [
                "str",
                "Optional[str]",
                "list",
                "int"
            ],
            "arguments": {
                "task": [
                    "Dict[str, Any]",
                    "List[google.cloud.tasks_v2.types.task_pb2.Task]",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 235,
            "return": [
                "str",
                "List[str]",
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "args": []
            }
        },
        "gen_tasks": {
            "name": "gen_tasks",
            "location": 279,
            "return": [
                "typing.Iterator[Task]"
            ],
            "arguments": {
                "tree": [
                    "lxml.etree._ElementTree",
                    "xml.etree.ElementTree.Element"
                ]
            }
        },
        "parse_day_num": {
            "name": "parse_day_num",
            "location": 309,
            "return": [
                "bool",
                "Optional[bool]",
                "Optional[float]",
                "str"
            ],
            "arguments": {
                "x": [
                    "str",
                    "int"
                ]
            }
        },
        "parse_timestamp_ms": {
            "name": "parse_timestamp_ms",
            "location": 314,
            "return": [
                "bool",
                "Optional[bool]",
                "Optional[str]",
                "str",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "timestamp_ms": [
                    "str",
                    "int",
                    "Iterable[Any]",
                    "float",
                    "List[int]"
                ]
            }
        },
        "node_to_dict.gen": {
            "name": "gen",
            "location": 108,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "MyInstalledAppFlow.fetch_token": {
            "name": "fetch_token",
            "location": 208,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MyInstalledAppFlow.credentials": {
            "name": "credentials",
            "location": 213,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "greminders2todoist-master/greminders2todoist/greminders2todoist.py": {},
    "greminders2todoist-master/greminders2todoist/__init__.py": {},
    "greminders2todoist-master/tests/test_greminders2todoist.py": {
        "response": {
            "name": "response",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_content": {
            "name": "test_content",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "response": [
                    "List[str]",
                    "dict"
                ]
            }
        },
        "test_command_line_interface": {
            "name": "test_command_line_interface",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
{
    "grpc-stubs-master/setup.py": {
        "find_stub_files": {
            "name": "find_stub_files",
            "location": 15,
            "return": [
                "str",
                "bool",
                "dict"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "grpc-stubs-master/grpc-stubs/__init__.py": {
        "insecure_channel": {
            "name": "insecure_channel",
            "location": 48,
            "return": [],
            "arguments": {
                "target": [],
                "options": [],
                "compression": []
            }
        },
        "secure_channel": {
            "name": "secure_channel",
            "location": 56,
            "return": [],
            "arguments": {
                "target": [],
                "credentials": [],
                "options": [],
                "compression": []
            }
        },
        "intercept_channel": {
            "name": "intercept_channel",
            "location": 72,
            "return": [],
            "arguments": {
                "channel": []
            }
        },
        "ssl_channel_credentials": {
            "name": "ssl_channel_credentials",
            "location": 78,
            "return": [],
            "arguments": {
                "root_certificates": [],
                "private_key": [],
                "certificate_chain": []
            }
        },
        "local_channel_credentials": {
            "name": "local_channel_credentials",
            "location": 86,
            "return": [],
            "arguments": {
                "local_connect_type": []
            }
        },
        "metadata_call_credentials": {
            "name": "metadata_call_credentials",
            "location": 92,
            "return": [],
            "arguments": {
                "metadata_plugin": [],
                "name": []
            }
        },
        "access_token_call_credentials": {
            "name": "access_token_call_credentials",
            "location": 99,
            "return": [],
            "arguments": {
                "access_token": []
            }
        },
        "alts_channel_credentials": {
            "name": "alts_channel_credentials",
            "location": 102,
            "return": [],
            "arguments": {
                "service_accounts": []
            }
        },
        "compute_engine_channel_credentials": {
            "name": "compute_engine_channel_credentials",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "xds_channel_credentials": {
            "name": "xds_channel_credentials",
            "location": 106,
            "return": [],
            "arguments": {
                "fallback_credentials": []
            }
        },
        "composite_call_credentials": {
            "name": "composite_call_credentials",
            "location": 111,
            "return": [],
            "arguments": {
                "creds1": [],
                "creds2": []
            }
        },
        "composite_channel_credentials": {
            "name": "composite_channel_credentials",
            "location": 121,
            "return": [],
            "arguments": {
                "channel_credentials": [],
                "call_credentials": []
            }
        },
        "server": {
            "name": "server",
            "location": 131,
            "return": [],
            "arguments": {
                "thread_pool": [],
                "handlers": [],
                "interceptors": [],
                "options": [],
                "maximum_concurrent_rpcs": [],
                "compression": []
            }
        },
        "ssl_server_credentials": {
            "name": "ssl_server_credentials",
            "location": 146,
            "return": [],
            "arguments": {
                "private_key_certificate_chain_pairs": [],
                "root_certificates": [],
                "require_client_auth": []
            }
        },
        "local_server_credentials": {
            "name": "local_server_credentials",
            "location": 154,
            "return": [],
            "arguments": {
                "local_connect_type": []
            }
        },
        "ssl_server_certificate_configuration": {
            "name": "ssl_server_certificate_configuration",
            "location": 160,
            "return": [],
            "arguments": {
                "private_key_certificate_chain_pairs": [],
                "root_certificates": []
            }
        },
        "dynamic_ssl_server_credentials": {
            "name": "dynamic_ssl_server_credentials",
            "location": 167,
            "return": [],
            "arguments": {
                "initial_certificate_configuration": [],
                "certificate_configuration_fetcher": [],
                "require_client_authentication": []
            }
        },
        "alts_server_credentials": {
            "name": "alts_server_credentials",
            "location": 174,
            "return": [],
            "arguments": {}
        },
        "insecure_server_credentials": {
            "name": "insecure_server_credentials",
            "location": 175,
            "return": [],
            "arguments": {}
        },
        "xds_server_credentials": {
            "name": "xds_server_credentials",
            "location": 176,
            "return": [],
            "arguments": {
                "fallback_credentials": []
            }
        },
        "unary_unary_rpc_method_handler": {
            "name": "unary_unary_rpc_method_handler",
            "location": 197,
            "return": [],
            "arguments": {
                "behavior": [],
                "request_deserializer": [],
                "response_serializer": []
            }
        },
        "unary_stream_rpc_method_handler": {
            "name": "unary_stream_rpc_method_handler",
            "location": 204,
            "return": [],
            "arguments": {
                "behavior": [],
                "request_deserializer": [],
                "response_serializer": []
            }
        },
        "stream_unary_rpc_method_handler": {
            "name": "stream_unary_rpc_method_handler",
            "location": 211,
            "return": [],
            "arguments": {
                "behavior": [],
                "request_deserializer": [],
                "response_serializer": []
            }
        },
        "stream_stream_rpc_method_handler": {
            "name": "stream_stream_rpc_method_handler",
            "location": 218,
            "return": [],
            "arguments": {
                "behavior": [],
                "request_deserializer": [],
                "response_serializer": []
            }
        },
        "method_handlers_generic_handler": {
            "name": "method_handlers_generic_handler",
            "location": 225,
            "return": [],
            "arguments": {
                "service": [],
                "method_handlers": []
            }
        },
        "channel_ready_future": {
            "name": "channel_ready_future",
            "location": 234,
            "return": [],
            "arguments": {
                "channel": []
            }
        },
        "Channel.close": {
            "name": "close",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.stream_stream": {
            "name": "stream_stream",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "request_serializer": [],
                "response_deserializer": []
            }
        },
        "Channel.stream_unary": {
            "name": "stream_unary",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "request_serializer": [],
                "response_deserializer": []
            }
        },
        "Channel.subscribe": {
            "name": "subscribe",
            "location": 308,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "try_to_connect": []
            }
        },
        "Channel.unary_stream": {
            "name": "unary_stream",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "request_serializer": [],
                "response_deserializer": []
            }
        },
        "Channel.unary_unary": {
            "name": "unary_unary",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "request_serializer": [],
                "response_deserializer": []
            }
        },
        "Channel.unsubscribe": {
            "name": "unsubscribe",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Channel.__enter__": {
            "name": "__enter__",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Channel.__exit__": {
            "name": "__exit__",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "Server.add_generic_rpc_handlers": {
            "name": "add_generic_rpc_handlers",
            "location": 351,
            "return": [],
            "arguments": {
                "self": [],
                "generic_rpc_handlers": []
            }
        },
        "Server.add_insecure_port": {
            "name": "add_insecure_port",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "address": []
            }
        },
        "Server.add_secure_port": {
            "name": "add_secure_port",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "address": [],
                "server_credentials": []
            }
        },
        "Server.start": {
            "name": "start",
            "location": 365,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.stop": {
            "name": "stop",
            "location": 369,
            "return": [],
            "arguments": {
                "self": [],
                "grace": []
            }
        },
        "Server.wait_for_termination": {
            "name": "wait_for_termination",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "AuthMetadataPluginCallback.__call__": {
            "name": "__call__",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "metadata": [],
                "error": []
            }
        },
        "AuthMetadataPlugin.__call__": {
            "name": "__call__",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "callback": []
            }
        },
        "RpcError.code": {
            "name": "code",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RpcError.details": {
            "name": "details",
            "location": 422,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RpcError.trailing_metadata": {
            "name": "trailing_metadata",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RpcContext.add_callback": {
            "name": "add_callback",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "RpcContext.cancel": {
            "name": "cancel",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RpcContext.is_active": {
            "name": "is_active",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RpcContext.time_remaining": {
            "name": "time_remaining",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Call.code": {
            "name": "code",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Call.details": {
            "name": "details",
            "location": 443,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Call.initial_metadata": {
            "name": "initial_metadata",
            "location": 445,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Call.trailing_metadata": {
            "name": "trailing_metadata",
            "location": 446,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnaryUnaryClientInterceptor.intercept_unary_unary": {
            "name": "intercept_unary_unary",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "continuation": [],
                "client_call_details": [],
                "request": []
            }
        },
        "CallIterator.__iter__": {
            "name": "__iter__",
            "location": 505,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnaryStreamClientInterceptor.intercept_unary_stream": {
            "name": "intercept_unary_stream",
            "location": 509,
            "return": [],
            "arguments": {
                "self": [],
                "continuation": [],
                "client_call_details": [],
                "request": []
            }
        },
        "StreamUnaryClientInterceptor.intercept_stream_unary": {
            "name": "intercept_stream_unary",
            "location": 519,
            "return": [],
            "arguments": {
                "self": [],
                "continuation": [],
                "client_call_details": [],
                "request_iterator": []
            }
        },
        "StreamStreamClientInterceptor.intercept_stream_stream": {
            "name": "intercept_stream_stream",
            "location": 529,
            "return": [],
            "arguments": {
                "self": [],
                "continuation": [],
                "client_call_details": [],
                "request_iterator": []
            }
        },
        "ServicerContext.abort": {
            "name": "abort",
            "location": 543,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "details": []
            }
        },
        "ServicerContext.abort_with_status": {
            "name": "abort_with_status",
            "location": 544,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "ServicerContext.auth_context": {
            "name": "auth_context",
            "location": 548,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServicerContext.disable_next_message_compression": {
            "name": "disable_next_message_compression",
            "location": 551,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServicerContext.invocation_metadata": {
            "name": "invocation_metadata",
            "location": 553,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServicerContext.peer": {
            "name": "peer",
            "location": 555,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServicerContext.peer_identities": {
            "name": "peer_identities",
            "location": 556,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServicerContext.peer_identity_key": {
            "name": "peer_identity_key",
            "location": 557,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServicerContext.send_initial_metadata": {
            "name": "send_initial_metadata",
            "location": 558,
            "return": [],
            "arguments": {
                "self": [],
                "initial_metadata": []
            }
        },
        "ServicerContext.set_code": {
            "name": "set_code",
            "location": 559,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "ServicerContext.set_compression": {
            "name": "set_compression",
            "location": 560,
            "return": [],
            "arguments": {
                "self": [],
                "compression": []
            }
        },
        "ServicerContext.set_trailing_metadata": {
            "name": "set_trailing_metadata",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "trailing_metadata": []
            }
        },
        "ServicerContext.set_details": {
            "name": "set_details",
            "location": 564,
            "return": [],
            "arguments": {
                "self": [],
                "details": []
            }
        },
        "GenericRpcHandler.service": {
            "name": "service",
            "location": 594,
            "return": [],
            "arguments": {
                "self": [],
                "handler_call_details": []
            }
        },
        "ServiceRpcHandler.service_name": {
            "name": "service_name",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServerInterceptor.intercept_service": {
            "name": "intercept_service",
            "location": 604,
            "return": [],
            "arguments": {
                "self": [],
                "continuation": [],
                "handler_call_details": []
            }
        },
        "UnaryUnaryMultiCallable.__call__": {
            "name": "__call__",
            "location": 618,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "UnaryUnaryMultiCallable.future": {
            "name": "future",
            "location": 632,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "UnaryUnaryMultiCallable.with_call": {
            "name": "with_call",
            "location": 646,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "UnaryStreamMultiCallable.__call__": {
            "name": "__call__",
            "location": 665,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "StreamUnaryMultiCallable.__call__": {
            "name": "__call__",
            "location": 682,
            "return": [],
            "arguments": {
                "self": [],
                "request_iterator": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "StreamUnaryMultiCallable.future": {
            "name": "future",
            "location": 696,
            "return": [],
            "arguments": {
                "self": [],
                "request_iterator": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "StreamUnaryMultiCallable.with_call": {
            "name": "with_call",
            "location": 710,
            "return": [],
            "arguments": {
                "self": [],
                "request_iterator": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "StreamStreamMultiCallable.__call__": {
            "name": "__call__",
            "location": 729,
            "return": [],
            "arguments": {
                "self": [],
                "request_iterator": [],
                "timeout": [],
                "metadata": [],
                "credentials": [],
                "wait_for_ready": [],
                "compression": []
            }
        },
        "Future.add_done_callback": {
            "name": "add_done_callback",
            "location": 759,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "Future.cancel": {
            "name": "cancel",
            "location": 762,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Future.cancelled": {
            "name": "cancelled",
            "location": 763,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Future.done": {
            "name": "done",
            "location": 764,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Future.exception": {
            "name": "exception",
            "location": 765,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Future.result": {
            "name": "result",
            "location": 766,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "Future.running": {
            "name": "running",
            "location": 767,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Future.traceback": {
            "name": "traceback",
            "location": 770,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        }
    },
    "grpc-stubs-master/grpc_channelz-stubs/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "grpc-stubs-master/grpc_channelz-stubs/v1/channelz.py": {
        "add_channelz_servicer": {
            "name": "add_channelz_servicer",
            "location": 3,
            "return": [],
            "arguments": {
                "server": []
            }
        }
    },
    "grpc-stubs-master/grpc_channelz-stubs/v1/_servicer.py": {
        "ChannelzServicer.GetTopChannels": {
            "name": "GetTopChannels",
            "location": 7,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        },
        "ChannelzServicer.GetServers": {
            "name": "GetServers",
            "location": 11,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        },
        "ChannelzServicer.GetServer": {
            "name": "GetServer",
            "location": 15,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        },
        "ChannelzServicer.GetServerSockets": {
            "name": "GetServerSockets",
            "location": 19,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        },
        "ChannelzServicer.GetChannel": {
            "name": "GetChannel",
            "location": 23,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        },
        "ChannelzServicer.GetSubchannel": {
            "name": "GetSubchannel",
            "location": 27,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        },
        "ChannelzServicer.GetSocket": {
            "name": "GetSocket",
            "location": 31,
            "return": [],
            "arguments": {
                "request": [],
                "context": []
            }
        }
    },
    "grpc-stubs-master/grpc_channelz-stubs/v1/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "grpc-stubs-master/grpc_health-stubs/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "grpc-stubs-master/grpc_health-stubs/v1/health.py": {
        "_Watcher.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Watcher.__iter__": {
            "name": "__iter__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Watcher.next": {
            "name": "next",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Watcher.__next__": {
            "name": "__next__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Watcher.add": {
            "name": "add",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "_Watcher.close": {
            "name": "close",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HealthServicer.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "experimental_non_blocking": [],
                "experimental_thread_pool": []
            }
        },
        "HealthServicer.Check": {
            "name": "Check",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "context": []
            }
        },
        "HealthServicer.Watch": {
            "name": "Watch",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "context": [],
                "send_response_callback": []
            }
        },
        "HealthServicer.set": {
            "name": "set",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "service": [],
                "status": []
            }
        },
        "HealthServicer.enter_graceful_shutdown": {
            "name": "enter_graceful_shutdown",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "grpc-stubs-master/grpc_health-stubs/v1/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "grpc-stubs-master/grpc_reflection-stubs/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "grpc-stubs-master/grpc_reflection-stubs/v1alpha/reflection.py": {
        "enable_server_reflection": {
            "name": "enable_server_reflection",
            "location": 13,
            "return": [],
            "arguments": {
                "service_names": [],
                "server": [],
                "pool": []
            }
        },
        "ReflectionServicer.ServerReflectionInfo": {
            "name": "ServerReflectionInfo",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request_iterator": [],
                "context": []
            }
        }
    },
    "grpc-stubs-master/grpc_reflection-stubs/v1alpha/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "grpc-stubs-master/grpc_status-stubs/rpc_status.py": {
        "from_call": {
            "name": "from_call",
            "location": 11,
            "return": [],
            "arguments": {
                "call": []
            }
        },
        "to_status": {
            "name": "to_status",
            "location": 16,
            "return": [],
            "arguments": {
                "status": []
            }
        }
    },
    "grpc-stubs-master/grpc_status-stubs/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 3,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    }
}
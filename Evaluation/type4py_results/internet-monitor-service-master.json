{
    "internet-monitor-service-master/config.py": {},
    "internet-monitor-service-master/run.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "internet-monitor-service-master/src/connection_entry.py": {
        "ConnectionEntry.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "time": [
                    "int",
                    "Dict[str, List[Any]]",
                    "str"
                ],
                "result": [
                    "int",
                    "str",
                    "Optional[Sequence[str]]",
                    "Optional[str]",
                    "Optional[float]"
                ],
                "status": [
                    "int",
                    "Dict[str, List[Any]]",
                    "str"
                ],
                "status_change": [
                    "int",
                    "str",
                    "Tuple[Optional[str], str]",
                    "bool"
                ]
            }
        },
        "ConnectionEntry.from_json": {
            "name": "from_json",
            "location": 16,
            "return": [
                "float",
                "src.core.model.action_resulActionResult",
                "Callable"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "bool",
                    "Dict[str, Any]"
                ],
                "json_entry": [
                    "dict",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "ConnectionEntry.to_json": {
            "name": "to_json",
            "location": 32,
            "return": [
                "Dict[str, Any]",
                "dict",
                "str",
                "Dict[str, Dict[str, str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConnectionEntry.__eq__": {
            "name": "__eq__",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "float",
                    "Type"
                ]
            }
        },
        "ConnectionEntry.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/src/connection_tester.py": {
        "ConnectionTester.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "remote_to_check": [
                    "int",
                    "bool",
                    "str"
                ]
            }
        },
        "ConnectionTester.run_test": {
            "name": "run_test",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/src/monitor.py": {
        "Monitor.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "scheduler": [
                    "str",
                    "bool",
                    "Union[Callable, str]",
                    "Optional[str]",
                    "Optional[bool]",
                    "List[Dict[str, Any]]",
                    "Tuple[int, int, int]",
                    "bytes"
                ],
                "tester": [
                    "str",
                    "bool",
                    "Union[Callable, str]",
                    "Optional[str]",
                    "Optional[bool]",
                    "List[Dict[str, Any]]",
                    "Tuple[int, int, int]",
                    "bytes"
                ],
                "status_tracker": [
                    "str",
                    "int"
                ],
                "notifier": [
                    "str",
                    "bool",
                    "Union[Callable, str]",
                    "Optional[str]",
                    "Optional[bool]",
                    "List[Dict[str, Any]]",
                    "Tuple[int, int, int]",
                    "bytes"
                ],
                "monitor_config": [
                    "bool",
                    "str",
                    "dict",
                    "Dict[str, Any]",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "Monitor._validate_config": {
            "name": "_validate_config",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "list",
                    "Optional[int]",
                    "MutableMapping"
                ],
                "to_validate": [
                    "str",
                    "int",
                    "Dict[str, Any]"
                ]
            }
        },
        "Monitor._schedule_next_job": {
            "name": "_schedule_next_job",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "next_run_time": [
                    "int",
                    "str",
                    "dict",
                    "datetime.datetime",
                    "bool",
                    "Union[str, int]",
                    "List[str]"
                ]
            }
        },
        "Monitor._get_next_job_time": {
            "name": "_get_next_job_time",
            "location": 51,
            "return": [
                "str",
                "int",
                "Optional[datetime.timedelta]",
                "Optional[datetime.tzinfo]",
                "float"
            ],
            "arguments": {
                "self": [],
                "previous_run_time": [
                    "str",
                    "bool",
                    "Optional[float]",
                    "float"
                ],
                "status": [
                    "src.status_tracker.Status",
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, Any]]",
                    "int",
                    "List[str]"
                ]
            }
        },
        "Monitor.run_test": {
            "name": "run_test",
            "location": 66,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/src/status_tracker.py": {
        "StatusTracker.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "number_retry_attempts": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "StatusTracker.status": {
            "name": "status",
            "location": 38,
            "return": [
                "str",
                "int",
                "datetime.timedelta",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusTracker.last_success": {
            "name": "last_success",
            "location": 42,
            "return": [
                "bool",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusTracker.submit_result": {
            "name": "submit_result",
            "location": 45,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "test_passed": [
                    "bool",
                    "str"
                ]
            }
        },
        "StatusTracker._set_status": {
            "name": "_set_status",
            "location": 60,
            "return": [
                "str",
                "int",
                "datetime.timedelta"
            ],
            "arguments": {
                "self": [],
                "status": [
                    "dict",
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "Optional[bool]"
                ]
            }
        }
    },
    "internet-monitor-service-master/src/__init__.py": {},
    "internet-monitor-service-master/src/notifiers/entry_writer_notifier.py": {
        "prepare_data_file": {
            "name": "prepare_data_file",
            "location": 33,
            "return": [
                "str",
                "Set[str]",
                "List[Dict[str, str]]",
                "bool",
                "Tuple[int, str]"
            ],
            "arguments": {
                "file_path": [
                    "str",
                    "bool"
                ],
                "file_type": [
                    "str"
                ]
            }
        },
        "EntryWriter.write_new_entry": {
            "name": "write_new_entry",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "entry": [
                    "str",
                    "int"
                ]
            }
        },
        "EntryWriterNotifier.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "writer": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "EntryWriterNotifier.notify": {
            "name": "notify",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "time": [
                    "int",
                    "str"
                ],
                "result": [
                    "int",
                    "str"
                ],
                "status": [
                    "int",
                    "str"
                ],
                "status_change": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "internet-monitor-service-master/src/notifiers/json_entry_writer.py": {
        "JsonEntryWriter.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "output_file": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "JsonEntryWriter.write_new_entry": {
            "name": "write_new_entry",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "entry": [
                    "src.connection_entry.ConnectionEntry",
                    "Dict[str, str]",
                    "logging.LogRecord"
                ]
            }
        },
        "JsonEntryWriter._get_test_data": {
            "name": "_get_test_data",
            "location": 22,
            "return": [
                "Mapping[str, Any]",
                "dict",
                "Dict[str, float]",
                "List[List[str]]",
                "Dict[str, Union[str, bool]]",
                "Optional[Dict[str, Any]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "JsonEntryWriter._save_test_data": {
            "name": "_save_test_data",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "new_test_data": [
                    "list",
                    "List[List]",
                    "Dict[str, Any]",
                    "Callable[[], bool]",
                    "Optional[List[str]]",
                    "int"
                ]
            }
        }
    },
    "internet-monitor-service-master/src/notifiers/__init__.py": {},
    "internet-monitor-service-master/test/__init__.py": {},
    "internet-monitor-service-master/test/mocks/mock_connection_tester.py": {
        "MockConnectionTester.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/mocks/mock_status_tracker.py": {
        "MockStatusTracker.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/mocks/__init__.py": {},
    "internet-monitor-service-master/test/mocks/notifiers/mock_entry_writer_notifier.py": {
        "MockEntryWriterNotifier.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/mocks/notifiers/__init__.py": {},
    "internet-monitor-service-master/test/unit_tests/test_connection_entry.py": {
        "TestConnectionEntry.test_initialisation": {
            "name": "test_initialisation",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_json_valid": {
            "name": "test_from_json_valid",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_json_missing_time": {
            "name": "test_from_json_missing_time",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_json_missing_result": {
            "name": "test_from_json_missing_result",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_json_missing_status": {
            "name": "test_from_json_missing_status",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_json_missing_status_change": {
            "name": "test_from_json_missing_status_change",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_json_extra_parameters": {
            "name": "test_from_json_extra_parameters",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_to_json": {
            "name": "test_to_json",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_to_from_json_loop": {
            "name": "test_to_from_json_loop",
            "location": 122,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionEntry.test_from_to_json_loop": {
            "name": "test_from_to_json_loop",
            "location": 133,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/unit_tests/test_connection_tester.py": {
        "TestConnectionTester.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConnectionTester.test_current_real_connection": {
            "name": "test_current_real_connection",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/unit_tests/test_monitor.py": {
        "MockScheduler.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MockScheduler.wakeup": {
            "name": "wakeup",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MockScheduler.shutdown": {
            "name": "shutdown",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "wait": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "TestMonitorInitialisation.setUp": {
            "name": "setUp",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorInitialisation.test_successful_initialisation": {
            "name": "test_successful_initialisation",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorInitialisation.test_missing_test_interval": {
            "name": "test_missing_test_interval",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorInitialisation.test_missing_retry_interval": {
            "name": "test_missing_retry_interval",
            "location": 72,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorInitialisation.test_missing_error_interval": {
            "name": "test_missing_error_interval",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorInitialisation.test_additional_parameter": {
            "name": "test_additional_parameter",
            "location": 106,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorRunTest.setUp": {
            "name": "setUp",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMonitorRunTest.generic_run_test": {
            "name": "generic_run_test",
            "location": 146,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "test_result": [
                    "unittesmock.MagicMock",
                    "str",
                    "bool"
                ],
                "status_change": [
                    "str",
                    "dict",
                    "List[str]",
                    "mock.Mock",
                    "bool"
                ],
                "status": [
                    "int",
                    "src.status_tracker.Status",
                    "str"
                ],
                "interval_type": [
                    "str",
                    "datetime.date",
                    "list",
                    "Set[str]",
                    "int",
                    "Sequence[str]"
                ]
            }
        },
        "TestMonitorRunTest.test_run_test_ok_status_uses_test_interval_with_status_change": {
            "name": "test_run_test_ok_status_uses_test_interval_with_status_change",
            "location": 168,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "status_change": [
                    "str",
                    "int"
                ]
            }
        },
        "TestMonitorRunTest.test_run_test_warning_status_uses_retry_interval_with_status_change": {
            "name": "test_run_test_warning_status_uses_retry_interval_with_status_change",
            "location": 182,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "status_change": [
                    "int",
                    "str"
                ]
            }
        },
        "TestMonitorRunTest.test_run_test_error_status_uses_error_interval_with_status_change": {
            "name": "test_run_test_error_status_uses_error_interval_with_status_change",
            "location": 196,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "status_change": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "internet-monitor-service-master/test/unit_tests/test_status_tracker.py": {
        "TestStatusTracker.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.submit_result_and_expect": {
            "name": "submit_result_and_expect",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "to_submit": [
                    "str",
                    "int",
                    "Optional[float]"
                ],
                "expect_status": [
                    "int",
                    "Optional[int]",
                    "str"
                ],
                "expect_status_change": [
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "TestStatusTracker.test_initialised_correctly": {
            "name": "test_initialised_correctly",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_first_ok": {
            "name": "test_submit_result_status_first_ok",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_ok_no_change": {
            "name": "test_submit_result_status_ok_no_change",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_warning_no_change": {
            "name": "test_submit_result_status_warning_no_change",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_error_no_change": {
            "name": "test_submit_result_status_error_no_change",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_ok_new_warning": {
            "name": "test_submit_result_status_ok_new_warning",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_ok_new_error": {
            "name": "test_submit_result_status_ok_new_error",
            "location": 66,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_warning_new_error": {
            "name": "test_submit_result_status_warning_new_error",
            "location": 76,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_warning_resolved": {
            "name": "test_submit_result_status_warning_resolved",
            "location": 87,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_status_error_resolved": {
            "name": "test_submit_result_status_error_resolved",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_submit_result_retry_attempts": {
            "name": "test_submit_result_retry_attempts",
            "location": 105,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_set_status_invalid_value_error_to_warning": {
            "name": "test_set_status_invalid_value_error_to_warning",
            "location": 116,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_set_status_invalid_type": {
            "name": "test_set_status_invalid_type",
            "location": 126,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusTracker.test_set_status_invalid_initial_state": {
            "name": "test_set_status_invalid_initial_state",
            "location": 134,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/unit_tests/__init__.py": {},
    "internet-monitor-service-master/test/unit_tests/notifiers/test_entry_writer_notifier.py": {
        "TestEntryWriterNotifier.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEntryWriterNotifier.test_entry_writer_notify": {
            "name": "test_entry_writer_notify",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepareDataFile.setUp": {
            "name": "setUp",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepareDataFile.tearDown": {
            "name": "tearDown",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepareDataFile.test_creates_file": {
            "name": "test_creates_file",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepareDataFile.test_doesnt_override_existing_file": {
            "name": "test_doesnt_override_existing_file",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepareDataFile.test_creates_json_list_file": {
            "name": "test_creates_json_list_file",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/unit_tests/notifiers/test_json_entry_writer.py": {
        "TestJsonEntryWriterInitialisation.setUp": {
            "name": "setUp",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterInitialisation.tearDown": {
            "name": "tearDown",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterInitialisation.test_initiation_creates_file": {
            "name": "test_initiation_creates_file",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterInitialisation.test_initiation_doesnt_override_existing_file": {
            "name": "test_initiation_doesnt_override_existing_file",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterWithFile.setUp": {
            "name": "setUp",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterWithFile.tearDown": {
            "name": "tearDown",
            "location": 62,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterWithFile.test_write_entry": {
            "name": "test_write_entry",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterWithoutFile.setUp": {
            "name": "setUp",
            "location": 99,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEntryWriterWithoutFile.test_create_blame_entry": {
            "name": "test_create_blame_entry",
            "location": 111,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "internet-monitor-service-master/test/unit_tests/notifiers/__init__.py": {}
}
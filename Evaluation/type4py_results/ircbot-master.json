{
    "ircbot-master/ircbot/db.py": {
        "cursor": {
            "name": "cursor",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ircbot-master/ircbot/ircbot.py": {
        "split_utf8": {
            "name": "split_utf8",
            "location": 396,
            "return": [
                ""
            ],
            "arguments": {
                "s": [
                    "str",
                    "int",
                    "float",
                    "T",
                    "dict",
                    "bool"
                ],
                "n": [
                    "int",
                    "str",
                    "float",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 409,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "Listener.help": {
            "name": "help",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Listener.plugin_name": {
            "name": "plugin_name",
            "location": 74,
            "return": [
                "bool",
                "Optional[Callable[[bool], None]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CreateBot.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "celery_conf": [
                    "str",
                    "Iterable[str]"
                ],
                "nickserv_password": [
                    "str",
                    "Iterable[str]"
                ],
                "rt_password": [
                    "str",
                    "Iterable[str]"
                ],
                "weather_apikey": [
                    "str",
                    "Iterable[str]"
                ],
                "mysql_password": [
                    "str",
                    "Iterable[str]"
                ],
                "googlesearch_key": [
                    "str",
                    "List[str]",
                    "Optional[List[Any]]",
                    "Optional[Dict]",
                    "bool",
                    "Optional[str]",
                    "functools.partial[List[str]]"
                ],
                "googlesearch_cx": [
                    "str",
                    "Iterable[str]"
                ],
                "discourse_apikey": [
                    "str",
                    "Iterable[str]"
                ],
                "kanboard_apikey": [
                    "str",
                    "Iterable[str]"
                ],
                "twitter_apikeys": [
                    "str",
                    "Iterable[str]"
                ]
            }
        },
        "CreateBot.register_plugins": {
            "name": "register_plugins",
            "location": 148,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CreateBot.handle_error": {
            "name": "handle_error",
            "location": 159,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "error_message": [
                    "str",
                    "bool",
                    "IO[str]"
                ]
            }
        },
        "CreateBot.listen": {
            "name": "listen",
            "location": 167,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "pattern": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ],
                "fn": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ],
                "flags": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ],
                "help_text": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ],
                "require_mention": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ],
                "require_oper": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ],
                "require_privileged_oper": [
                    "str",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "CreateBot.on_welcome": {
            "name": "on_welcome",
            "location": 188,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "Union[str, List[str]]",
                    "Dict[str, Any]"
                ],
                "_": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "CreateBot.handle_chat": {
            "name": "handle_chat",
            "location": 195,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CreateBot.on_pubmsg": {
            "name": "on_pubmsg",
            "location": 280,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "int",
                    "List[Dict[str, Any]]"
                ],
                "event": [
                    "dict"
                ]
            }
        },
        "CreateBot.on_privmsg": {
            "name": "on_privmsg",
            "location": 304,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "int",
                    "List[Dict[str, Any]]"
                ],
                "event": [
                    "str",
                    "int",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "CreateBot.on_currenttopic": {
            "name": "on_currenttopic",
            "location": 328,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "connection": [
                    "str",
                    "int",
                    "List[Dict[str, Any]]"
                ],
                "event": [
                    "bytes",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "CreateBot.on_topic": {
            "name": "on_topic",
            "location": 332,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "connection": [
                    "str",
                    "int",
                    "List[Dict[str, Any]]"
                ],
                "event": []
            }
        },
        "CreateBot.on_invite": {
            "name": "on_invite",
            "location": 336,
            "return": [
                "float",
                "bool"
            ],
            "arguments": {
                "self": [],
                "connection": [
                    "str",
                    "Dict[str, Any]"
                ],
                "event": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "CreateBot.add_thread": {
            "name": "add_thread",
            "location": 341,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable"
                ]
            }
        },
        "CreateBot.bump_topic": {
            "name": "bump_topic",
            "location": 372,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CreateBot.say": {
            "name": "say",
            "location": 381,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "int",
                    "bytes",
                    "Optional[int]"
                ],
                "message": [
                    "int",
                    "apps.monero.xmr.types.Sc25519"
                ]
            }
        },
        "CreateBot.on_privmsg.respond": {
            "name": "respond",
            "location": 314,
            "return": [
                ""
            ],
            "arguments": {
                "raw_text": [
                    "str",
                    "bool",
                    "Callable"
                ],
                "ping": [
                    "str"
                ]
            }
        },
        "CreateBot.add_thread.thread_func": {
            "name": "thread_func",
            "location": 342,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "CreateBot.on_pubmsg.respond": {
            "name": "respond",
            "location": 290,
            "return": [],
            "arguments": {
                "raw_text": [],
                "ping": []
            }
        },
        "CreateBot.bump_topic.plusone": {
            "name": "plusone",
            "location": 374,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "m": [
                    "int",
                    "Tuple[int, int]",
                    "dict",
                    "str",
                    "List[int]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/__init__.py": {},
    "ircbot-master/ircbot/plugin/bless.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "bytearray",
                    "bool",
                    "Tuple[int, int]",
                    "Callable"
                ]
            }
        },
        "bless": {
            "name": "bless",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "bool",
                    "int",
                    "Optional[bool]"
                ]
            }
        },
        "bless_someone": {
            "name": "bless_someone",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/channels.py": {
        "register": {
            "name": "register",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "bool",
                    "TextIO",
                    "Union[List[str], str]",
                    "List[str]"
                ]
            }
        },
        "join_channel": {
            "name": "join_channel",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "List[str]"
                ],
                "channel": [
                    "str",
                    "int"
                ]
            }
        },
        "on_invite": {
            "name": "on_invite",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "list",
                    "int"
                ],
                "conn": [
                    "str",
                    "dict"
                ],
                "event": [
                    "bool",
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "join": {
            "name": "join",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "leave": {
            "name": "leave",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "Tuple[float, float, float, float]",
                    "list"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/check.py": {
        "register": {
            "name": "register",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "Callable",
                    "bytes",
                    "str"
                ]
            }
        },
        "check": {
            "name": "check",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "Iterable[str]",
                    "int"
                ]
            }
        },
        "alphanum": {
            "name": "alphanum",
            "location": 63,
            "return": [
                "list",
                "Optional[dict]",
                "List[Dict[str, Any]]",
                "frozenset",
                "str"
            ],
            "arguments": {
                "word": [
                    "Callable",
                    "bytes"
                ]
            }
        },
        "checkacct": {
            "name": "checkacct",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/comic.py": {
        "register": {
            "name": "register",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "List[str]",
                    "str",
                    "int",
                    "Pattern"
                ]
            }
        },
        "show_comic": {
            "name": "show_comic",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "_": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ],
                "msg": [
                    "str",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/create.py": {
        "register": {
            "name": "register",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "submission.Submission"
                ]
            }
        },
        "approve": {
            "name": "approve",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "Dict[str, Any]"
                ],
                "msg": [
                    "Connection",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "reject": {
            "name": "reject",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "Dict[str, Any]"
                ],
                "msg": [
                    "Connection",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "list_pending": {
            "name": "list_pending",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ],
                "msg": [
                    "str",
                    "bytes"
                ]
            }
        },
        "celery_listener": {
            "name": "celery_listener",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "celery_listener.bot_announce": {
            "name": "bot_announce",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {
                "targets": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "message": [
                    "Tuple[int, int]",
                    "str",
                    "Callable[[], object]",
                    "Pattern"
                ]
            }
        },
        "celery_listener.on_account_created": {
            "name": "on_account_created",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "Callable",
                    "Dict[str, Any]",
                    "\"keras.models.Sequential\""
                ]
            }
        },
        "celery_listener.on_account_submitted": {
            "name": "on_account_submitted",
            "location": 115,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "Callable"
                ]
            }
        },
        "celery_listener.on_account_approved": {
            "name": "on_account_approved",
            "location": 126,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "Callable"
                ]
            }
        },
        "celery_listener.on_account_rejected": {
            "name": "on_account_rejected",
            "location": 135,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "Callable"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/debian_security.py": {
        "dsa_list": {
            "name": "dsa_list",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "summarize": {
            "name": "summarize",
            "location": 56,
            "return": [
                "bool",
                "int",
                "str"
            ],
            "arguments": {
                "description": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ],
                "limit": [
                    "int",
                    "str",
                    "List[Callable]",
                    "bool"
                ]
            }
        },
        "get_new_dsas": {
            "name": "get_new_dsas",
            "location": 68,
            "return": [
                "List[str]",
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "ircbot-master/ircbot/plugin/discourse.py": {
        "register": {
            "name": "register",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "List[str]",
                    "str",
                    "int",
                    "Pattern"
                ]
            }
        },
        "show_topic": {
            "name": "show_topic",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "List[int]",
                    "Optional[\"Period\"]"
                ],
                "msg": [
                    "str",
                    "int",
                    "MutableMapping[str, Any]",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/dns.py": {
        "register": {
            "name": "register",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "IO[Any]",
                    "int"
                ]
            }
        },
        "host": {
            "name": "host",
            "location": 15,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "int"
                ]
            }
        },
        "haiku": {
            "name": "haiku",
            "location": 62,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "bytes",
                    "Mapping[str, float]",
                    "Tuple[Any, Any]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/emoji.py": {
        "register": {
            "name": "register",
            "location": 19,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "emoji": {
            "name": "emoji",
            "location": 24,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        },
        "remoji": {
            "name": "remoji",
            "location": 43,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/fire.py": {
        "register": {
            "name": "register",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ]
            }
        },
        "onfire": {
            "name": "onfire",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "List[str]",
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/flip.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "flip": {
            "name": "flip",
            "location": 9,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/gambling.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ]
            }
        },
        "flip": {
            "name": "flip",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "bytes",
                    "tuple",
                    "AnyStr",
                    "Sequence[str]"
                ]
            }
        },
        "choose": {
            "name": "choose",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "eightball": {
            "name": "eightball",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "bool",
                    "int",
                    "Optional[bool]"
                ]
            }
        },
        "roll": {
            "name": "roll",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "int",
                    "Optional[Dict]",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/github_info.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "bool",
                    "int",
                    "List[str]"
                ]
            }
        },
        "project_info": {
            "name": "project_info",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int",
                    "bytes",
                    "Dict[str, Any]"
                ],
                "msg": [
                    "str",
                    "bool",
                    "list",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "issue_info": {
            "name": "issue_info",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "list",
                    "bool"
                ],
                "msg": [
                    "Dict[str, Any]",
                    "str",
                    "Dict[str, List[str]]",
                    "dict"
                ]
            }
        },
        "pr_info": {
            "name": "pr_info",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "list",
                    "bool"
                ],
                "msg": [
                    "Dict[str, Any]",
                    "str",
                    "Dict[str, List[str]]",
                    "dict"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/google.py": {
        "register": {
            "name": "register",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "google_query": {
            "name": "google_query",
            "location": 14,
            "return": [
                "bool",
                "int",
                "Union[type, Tuple[type, ...]]",
                "Optional[Any]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "bool",
                    "bytes",
                    "Dict[str, str]"
                ],
                "cx": [
                    "str",
                    "bool",
                    "bytes",
                    "Dict[str, str]"
                ],
                "query": [
                    "str",
                    "bool",
                    "bytes",
                    "Dict[str, str]"
                ]
            }
        },
        "irc_search": {
            "name": "irc_search",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "bool",
                    "str",
                    "List[str]"
                ],
                "msg": [
                    "dict",
                    "Dict[str, Any]"
                ],
                "query": [
                    "bool",
                    "str",
                    "List[str]"
                ]
            }
        },
        "youtube": {
            "name": "youtube",
            "location": 55,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "google": {
            "name": "google",
            "location": 61,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/group.py": {
        "register": {
            "name": "register",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "List[List[T]]",
                    "float",
                    "bool"
                ]
            }
        },
        "group_lookup": {
            "name": "group_lookup",
            "location": 16,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "str",
                    "Tuple[int]"
                ]
            }
        },
        "domain_lookup": {
            "name": "domain_lookup",
            "location": 24,
            "return": [
                "int",
                "Union[tuple, list]",
                "Set[str]"
            ],
            "arguments": {
                "bot": [
                    "str",
                    "bool",
                    "List[object]"
                ],
                "msg": [
                    "Type",
                    "int",
                    "dict",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "acc_info": {
            "name": "acc_info",
            "location": 58,
            "return": [
                "str",
                "int",
                "dict",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "user": [
                    "int"
                ]
            }
        },
        "auto_complete": {
            "name": "auto_complete",
            "location": 89,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "s": [
                    "str",
                    "Union[int, float]",
                    "KT"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/help.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "help": {
            "name": "help",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "Optional[int]",
                    "int",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "help_macro": {
            "name": "help_macro",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "Optional[int]",
                    "int",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/insight.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "insight": {
            "name": "insight",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "_": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ],
                "msg": [
                    "str",
                    "int",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/inspire.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "inspire": {
            "name": "inspire",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/kanboard.py": {
        "register": {
            "name": "register",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "List[str]",
                    "str",
                    "int",
                    "Pattern"
                ]
            }
        },
        "show_task": {
            "name": "show_task",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "str",
                    "list"
                ],
                "msg": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/lab.py": {
        "register": {
            "name": "register",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "bytes",
                    "float",
                    "dict",
                    "str"
                ]
            }
        },
        "in_lab": {
            "name": "in_lab",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "List[bool]",
                    "str",
                    "bool",
                    "Any"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "_prevent_ping": {
            "name": "_prevent_ping",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "staffer": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "who_is_in_lab": {
            "name": "who_is_in_lab",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "List[Dict[str, Any]]",
                    "str"
                ],
                "msg": [
                    "IO[str]",
                    "list",
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/macros.py": {
        "register": {
            "name": "register",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "T"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 15,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "str",
                    "Tuple[int]",
                    "bytes",
                    "Tuple[int, int]"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 36,
            "return": [
                "Callable[[], Dict[str, object]]",
                "Iterator[Dict[str, str]]"
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Optional[str]"
                ],
                "msg": [
                    "str",
                    "Tuple[str, str]",
                    "int"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 72,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 84,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "int",
                    "Type[django.db.models.Model]",
                    "List[str]",
                    "list"
                ]
            }
        },
        "replace": {
            "name": "replace",
            "location": 102,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "List[str]",
                    "int",
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        },
        "list": {
            "name": "list",
            "location": 116,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/magic.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "_magic": {
            "name": "_magic",
            "location": 13,
            "return": [],
            "arguments": {
                "thing": []
            }
        },
        "magic": {
            "name": "magic",
            "location": 17,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        },
        "mystery": {
            "name": "mystery",
            "location": 22,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/notify.py": {
        "register": {
            "name": "register",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "handle_loop_error": {
            "name": "handle_loop_error",
            "location": 31,
            "return": [
                "str",
                "Sequence"
            ],
            "arguments": {
                "fn": [
                    "Exception"
                ]
            }
        },
        "get_group": {
            "name": "get_group",
            "location": 42,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "bool"
                ],
                "slug": [
                    "str",
                    "bool"
                ]
            }
        },
        "expand": {
            "name": "expand",
            "location": 50,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "Dict[str, str]",
                    "bool"
                ],
                "targets": [
                    "str"
                ],
                "depth": [
                    "str",
                    "Dict[str, str]",
                    "bool"
                ]
            }
        },
        "get_all_targets": {
            "name": "get_all_targets",
            "location": 64,
            "return": [
                "Optional[str]",
                "Optional[float]",
                "bool",
                "Optional[Any]"
            ],
            "arguments": {
                "cursor": [
                    "django.db.models.Model",
                    "bytes",
                    "dict"
                ],
                "slug": [
                    "str",
                    "bool"
                ],
                "depth": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "expand_owners": {
            "name": "expand_owners",
            "location": 81,
            "return": [
                "bool",
                "Tuple[int, Dict[str, Any]]"
            ],
            "arguments": {
                "cursor": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Mapping[str, Any]"
                ],
                "targets": [
                    "str",
                    "float"
                ],
                "depth": [
                    "str",
                    "bool"
                ]
            }
        },
        "deping": {
            "name": "deping",
            "location": 95,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "target": [
                    "Iterable[T]",
                    "bool"
                ]
            }
        },
        "expand_list": {
            "name": "expand_list",
            "location": 102,
            "return": [
                "int",
                "bool",
                "\"Parameter\"",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "Dict[str, AsyncGenerator]",
                    "list"
                ],
                "targets": [
                    "str",
                    "Iterable[Any]"
                ],
                "depth": [
                    "int",
                    "Deque"
                ]
            }
        },
        "is_owner": {
            "name": "is_owner",
            "location": 125,
            "return": [
                "bool"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "float",
                    "int"
                ],
                "respond": [
                    "str",
                    "BaseException",
                    "int",
                    "Optional[str]"
                ],
                "group": [
                    "Optional[int]",
                    "type"
                ],
                "nick": [
                    "Dict[str, float]",
                    "Dict[str, Dict[str, int]]",
                    "Dict[str, str]"
                ]
            }
        },
        "notify": {
            "name": "notify",
            "location": 136,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "float",
                    "str",
                    "Sequence[int]",
                    "Union[float, int]",
                    "List[int]"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 147,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "dict"
                ]
            }
        },
        "showdumb": {
            "name": "showdumb",
            "location": 163,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "dict"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 180,
            "return": [
                "str",
                "Sequence[str]",
                "bool"
            ],
            "arguments": {
                "bot": [
                    "bool",
                    "float"
                ],
                "msg": [
                    "str",
                    "int",
                    "Dict[str, str]"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 197,
            "return": [
                "Union[str, bytes]",
                "set",
                "dict"
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ],
                "msg": [
                    "str",
                    "int"
                ]
            }
        },
        "list_groups": {
            "name": "list_groups",
            "location": 217,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "bool"
                ],
                "msg": [
                    "str",
                    "List[str]",
                    "Union[str, List[str]]"
                ]
            }
        },
        "addme": {
            "name": "addme",
            "location": 225,
            "return": [],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "removeme": {
            "name": "removeme",
            "location": 256,
            "return": [],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "addmembers": {
            "name": "addmembers",
            "location": 291,
            "return": [],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "List[float]",
                    "float",
                    "str"
                ]
            }
        },
        "addowners": {
            "name": "addowners",
            "location": 340,
            "return": [],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "List[float]",
                    "float",
                    "str"
                ]
            }
        },
        "remove": {
            "name": "remove",
            "location": 404,
            "return": [],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "List[float]",
                    "float",
                    "str"
                ]
            }
        },
        "clear": {
            "name": "clear",
            "location": 468,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "List[int]",
                    "int",
                    "Tuple[int]",
                    "bytes",
                    "Tuple[int, int]"
                ]
            }
        },
        "addhelp": {
            "name": "addhelp",
            "location": 489,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "Optional[int]",
                    "int",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "handle_loop_error.handled_fn": {
            "name": "handled_fn",
            "location": 34,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/ping.py": {
        "register": {
            "name": "register",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "pong": {
            "name": "pong",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/pipe.py": {
        "register": {
            "name": "register",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "pipe": {
            "name": "pipe",
            "location": 14,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "bot": [
                    "Callable[[Mapping], Awaitable]",
                    "Callable[[], Awaitable[Mapping]]",
                    "str"
                ],
                "msg": [
                    "Sequence[str]",
                    "str",
                    "AbstractSet[str]",
                    "Iterable[str]",
                    "Iterable[Union[dict, str]]"
                ]
            }
        },
        "run_command": {
            "name": "run_command",
            "location": 38,
            "return": [
                "str",
                "Set[str]",
                "bool",
                "IO[str]"
            ],
            "arguments": {
                "command": [
                    "str",
                    "Iterable[str]",
                    "Dict[str, int]"
                ],
                "bot": [
                    "Iterable[str]",
                    "Awaitable",
                    "Callable",
                    "str",
                    "Sequence['cirq.Qid']",
                    "Iterable['cirq.Operation']",
                    "Optional[Iterable[str]]"
                ],
                "msg": [
                    "str",
                    "Iterable[str]",
                    "Dict[str, int]"
                ]
            }
        },
        "run_command.respond": {
            "name": "respond",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {
                "raw_text": [
                    "str"
                ],
                "ping": [
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/quotes.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": []
            }
        },
        "_print_quote": {
            "name": "_print_quote",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "respond": [
                    "bool",
                    "str",
                    "int"
                ],
                "quote": [
                    "bool",
                    "str",
                    "int"
                ]
            }
        },
        "rand": {
            "name": "rand",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "bytes"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 72,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Optional[str]"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 83,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ],
                "msg": [
                    "str",
                    "int",
                    "Iterable[str]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/regex.py": {
        "register": {
            "name": "register",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "replace": {
            "name": "replace",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "float",
                    "str"
                ]
            }
        },
        "replace.new": {
            "name": "new",
            "location": 20,
            "return": [
                "str",
                "dict",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "_": [
                    "int",
                    "Callable[[], None]",
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/request_tracker.py": {
        "register": {
            "name": "register",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "List[str]",
                    "str",
                    "int",
                    "Pattern"
                ]
            }
        },
        "show_ticket": {
            "name": "show_ticket",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "dict"
                ],
                "msg": [
                    "str",
                    "int",
                    "MutableMapping[str, Any]",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/reverse.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "reverse": {
            "name": "reverse",
            "location": 8,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "IO",
                    "T",
                    "bool",
                    "Sequence['cirq.Qid']"
                ],
                "msg": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/scramble.py": {
        "register": {
            "name": "register",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "scramble": {
            "name": "scramble",
            "location": 10,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bot": [
                    "IO",
                    "T",
                    "bool",
                    "Sequence['cirq.Qid']"
                ],
                "msg": [
                    "str",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "scramble_sentence": {
            "name": "scramble_sentence",
            "location": 20,
            "return": [
                "bool",
                "List[str]",
                "Set[str]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "text": [
                    "str",
                    "Set[str]",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "scramble_word": {
            "name": "scramble_word",
            "location": 31,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "word": [
                    "List[str]",
                    "Sequence[str]",
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/shipit.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "bool",
                    "float",
                    "List[List[str]]",
                    "int"
                ]
            }
        },
        "shipit": {
            "name": "shipit",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "int",
                    "str",
                    "list",
                    "List[List[int]]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/shorturls.py": {
        "register": {
            "name": "register",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "list"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 33,
            "return": [],
            "arguments": {
                "bot": [
                    "int",
                    "Optional[str]"
                ],
                "msg": [
                    "str",
                    "int",
                    "Dict[str, str]"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 56,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "int"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "dict",
                    "list",
                    "int"
                ]
            }
        },
        "replace": {
            "name": "replace",
            "location": 76,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/shrug.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "shrug": {
            "name": "shrug",
            "location": 8,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/stack_exchange.py": {
        "register": {
            "name": "register",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "_sites": {
            "name": "_sites",
            "location": 41,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "_question_info": {
            "name": "_question_info",
            "location": 54,
            "return": [
                "Optional[bool]",
                "Optional[str]",
                "Optional[int]",
                "bool"
            ],
            "arguments": {
                "site": [
                    "str"
                ],
                "question_id": [
                    "str"
                ]
            }
        },
        "_answer_info": {
            "name": "_answer_info",
            "location": 78,
            "return": [
                "str",
                "Optional[int]",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "site": [
                    "str"
                ],
                "answer_id": [
                    "str"
                ]
            }
        },
        "_format_question": {
            "name": "_format_question",
            "location": 98,
            "return": [
                "str",
                "bool",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "question": [
                    "int",
                    "float",
                    "str"
                ],
                "site": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "question": {
            "name": "question",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "dict"
                ]
            }
        },
        "answer": {
            "name": "answer",
            "location": 121,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "bool",
                    "str"
                ],
                "msg": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/still.py": {
        "register": {
            "name": "register",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "still": {
            "name": "still",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/sux.py": {
        "register": {
            "name": "register",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "sux": {
            "name": "sux",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "Pattern[str]",
                    "Dict[str, Any]",
                    "bytes",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/thanks.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "float",
                    "bytes",
                    "Optional[int]"
                ]
            }
        },
        "thanks": {
            "name": "thanks",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "bool",
                    "int",
                    "Optional[bool]"
                ]
            }
        },
        "thank_someone": {
            "name": "thank_someone",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "bool",
                    "List[str]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/theory_practice.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "Optional[int]",
                    "Callable",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "theory_practice": {
            "name": "theory_practice",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "bool",
                    "Optional[int]",
                    "str",
                    "Callable",
                    "Iterable"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/timer.py": {
        "register": {
            "name": "register",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "list"
                ]
            }
        },
        "timer": {
            "name": "timer",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "dict"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/topic.py": {
        "register": {
            "name": "register",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "Mapping",
                    "List[str]"
                ]
            }
        },
        "newday": {
            "name": "newday",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/turing.py": {
        "register": {
            "name": "register",
            "location": 11,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "markov": {
            "name": "markov",
            "location": 19,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        },
        "generate_model": {
            "name": "generate_model",
            "location": 48,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        },
        "build_model": {
            "name": "build_model",
            "location": 54,
            "return": [],
            "arguments": {
                "db_passwd": [],
                "model_weights": []
            }
        },
        "normalize_quote": {
            "name": "normalize_quote",
            "location": 86,
            "return": [],
            "arguments": {
                "q": []
            }
        },
        "normalize_inspiration": {
            "name": "normalize_inspiration",
            "location": 96,
            "return": [],
            "arguments": {
                "q": []
            }
        },
        "normalize_rant": {
            "name": "normalize_rant",
            "location": 105,
            "return": [],
            "arguments": {
                "r": []
            }
        },
        "markov.insert_space": {
            "name": "insert_space",
            "location": 33,
            "return": [],
            "arguments": {
                "w": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/twitter.py": {
        "register": {
            "name": "register",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "_get_token": {
            "name": "_get_token",
            "location": 15,
            "return": [
                "int",
                "bool",
                "Optional[List[str]]",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "apikeys": [
                    "str",
                    "int",
                    "Tuple[int, int]"
                ]
            }
        },
        "_get_tweet": {
            "name": "_get_tweet",
            "location": 28,
            "return": [
                "bool",
                "Union[int, float]",
                "Optional[float]"
            ],
            "arguments": {
                "apikeys": [
                    "int",
                    "str",
                    "Optional[int]"
                ],
                "status_id": [
                    "str",
                    "int"
                ],
                "retry": [
                    "int",
                    "List[int]"
                ]
            }
        },
        "_format_media": {
            "name": "_format_media",
            "location": 51,
            "return": [
                "str",
                "int",
                "List[List[str]]",
                "tuple"
            ],
            "arguments": {
                "media": [
                    "str",
                    "Iterable[str]",
                    "List[str]",
                    "List[Dict[str, Any]]"
                ],
                "url": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ]
            }
        },
        "_format_tweet": {
            "name": "_format_tweet",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "tweet": [
                    "str",
                    "dict",
                    "Mapping[str, Any]",
                    "bool"
                ]
            }
        },
        "show_tweet": {
            "name": "show_tweet",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str",
                    "List[str]"
                ],
                "msg": [
                    "str",
                    "int",
                    "Tuple[str, str]",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/weather.py": {
        "register": {
            "name": "register",
            "location": 7,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "weather": {
            "name": "weather",
            "location": 11,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        },
        "c2f": {
            "name": "c2f",
            "location": 23,
            "return": [],
            "arguments": {
                "temp": []
            }
        },
        "deg_to_compass": {
            "name": "deg_to_compass",
            "location": 27,
            "return": [],
            "arguments": {
                "deg": []
            }
        },
        "icon": {
            "name": "icon",
            "location": 60,
            "return": [],
            "arguments": {
                "temp": [],
                "unit": []
            }
        },
        "bold": {
            "name": "bold",
            "location": 74,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "color": {
            "name": "color",
            "location": 78,
            "return": [],
            "arguments": {
                "temp": [],
                "unit": []
            }
        },
        "calculate_aqi": {
            "name": "calculate_aqi",
            "location": 112,
            "return": [],
            "arguments": {
                "conc": []
            }
        },
        "get_summary": {
            "name": "get_summary",
            "location": 132,
            "return": [],
            "arguments": {
                "api_key": [],
                "location": [],
                "unit": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/webserver.py": {
        "register": {
            "name": "register",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ]
            }
        },
        "route_base": {
            "name": "route_base",
            "location": 26,
            "return": [
                "str",
                "Type[Any]"
            ],
            "arguments": {}
        },
        "route_macros": {
            "name": "route_macros",
            "location": 44,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "start_server": {
            "name": "start_server",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/what_is.py": {
        "register": {
            "name": "register",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "bool",
                    "float",
                    "tuple"
                ]
            }
        },
        "what_is": {
            "name": "what_is",
            "location": 10,
            "return": [
                "Callable[[], Dict[str, object]]"
            ],
            "arguments": {
                "bot": [
                    "int"
                ],
                "msg": [
                    "str",
                    "bool"
                ]
            }
        },
        "know_that": {
            "name": "know_that",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "str"
                ],
                "msg": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "ircbot-master/ircbot/plugin/wide.py": {
        "register": {
            "name": "register",
            "location": 28,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "get_text": {
            "name": "get_text",
            "location": 51,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": []
            }
        },
        "widetextify": {
            "name": "widetextify",
            "location": 64,
            "return": [],
            "arguments": {
                "bot": [],
                "msg": [],
                "width": [],
                "translation": []
            }
        }
    },
    "ircbot-master/ircbot/plugin/__init__.py": {}
}
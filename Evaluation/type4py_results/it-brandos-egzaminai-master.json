{
    "it-brandos-egzaminai-master/conftest.py": {
        "path": {
            "name": "path",
            "location": 7,
            "return": [
                "str",
                "pathlib.Path",
                "List[int]",
                "paradigm.catalog.Path"
            ],
            "arguments": {
                "tmpdir": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/testing.py": {
        "write": {
            "name": "write",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str",
                    "dict",
                    "Optional[Dict]",
                    "bool"
                ],
                "lines": [
                    "str",
                    "dict",
                    "Optional[Dict]",
                    "bool"
                ]
            }
        },
        "read": {
            "name": "read",
            "location": 9,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathlib.Path",
                    "path.Path",
                    "Optional[pathlib.Path]"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2006/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u1/u1.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 7,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u2/u2.py": {
        "estimate_travel_time_in_minutes": {
            "name": "estimate_travel_time_in_minutes",
            "location": 5,
            "return": [
                "str",
                "int",
                "Callable[[T], bool]"
            ],
            "arguments": {
                "distance": [
                    "int"
                ],
                "speed": [
                    "int"
                ]
            }
        },
        "min_to_hmin": {
            "name": "min_to_hmin",
            "location": 9,
            "return": [
                "bytes",
                "int",
                "IO",
                "List[str]",
                "str"
            ],
            "arguments": {
                "minutes": [
                    "bytes",
                    "int",
                    "IO",
                    "List[str]",
                    "str"
                ]
            }
        },
        "access_file": {
            "name": "access_file",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "file_dir": [
                    "pathlib.Path",
                    "str",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "data_file_dir": [
                    "pathlib.Path",
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u2/u2_simple.py": {
        "nuskaityti_duomenis_i\u0161_failo": {
            "name": "nuskaityti_duomenis_i\u0161_failo",
            "location": 6,
            "return": [],
            "arguments": {
                "duomen\u0173_direktorija": []
            }
        },
        "rezultato_\u012fra\u0161ymas_\u012f_fail\u0105": {
            "name": "rezultato_\u012fra\u0161ymas_\u012f_fail\u0105",
            "location": 13,
            "return": [],
            "arguments": {
                "rezultat\u0173_masyvas": [],
                "duomen\u0173_direktorija": []
            }
        },
        "apskai\u010diuoti_sustojim\u0173_laikus": {
            "name": "apskai\u010diuoti_sustojim\u0173_laikus",
            "location": 20,
            "return": [],
            "arguments": {
                "duomen\u0173_failo_tekstas": []
            }
        },
        "main": {
            "name": "main",
            "location": 65,
            "return": [],
            "arguments": {
                "duomen\u0173_direktorija": []
            }
        },
        "apskai\u010diuoti_sustojim\u0173_laikus.laikas": {
            "name": "laikas",
            "location": 21,
            "return": [],
            "arguments": {
                "atstumas": [],
                "greitis": []
            }
        },
        "apskai\u010diuoti_sustojim\u0173_laikus.apskai\u010diuoti_atvykimo_\u012f_stotel\u0119_laik\u0105": {
            "name": "apskai\u010diuoti_atvykimo_\u012f_stotel\u0119_laik\u0105",
            "location": 24,
            "return": [],
            "arguments": {
                "autobuso_vidutinis_greitis": [],
                "ankstesnio_sustojimo_valanda": [],
                "ankstesnio_sustojimo_minut\u0117s": [],
                "atstumas": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2006/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2007/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2007/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2007/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2007/pagrindinis/u1/u1.py": {
        "add_arrays": {
            "name": "add_arrays",
            "location": 5,
            "return": [
                "str",
                "Callable[[str, str], float]",
                "bytes",
                "bool",
                "Callable",
                "List[int]",
                "int",
                "List[float]"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ]
            }
        },
        "access_file": {
            "name": "access_file",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "file_dir": [
                    "pathlib.Path",
                    "str",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "data_file_dir": [
                    "pathlib.Path",
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2007/pagrindinis/u1/u1_simple.py": {
        "nuskaityti_duomenis_i\u0161_failo": {
            "name": "nuskaityti_duomenis_i\u0161_failo",
            "location": 4,
            "return": [],
            "arguments": {
                "duomen\u0173_direktorija": []
            }
        },
        "rezultato_\u012fra\u0161ymas_\u012f_fail\u0105": {
            "name": "rezultato_\u012fra\u0161ymas_\u012f_fail\u0105",
            "location": 11,
            "return": [],
            "arguments": {
                "duomen\u0173_direktorija": [],
                "tekstas": []
            }
        },
        "suformuoti_rezultat\u0173_tekst\u0105": {
            "name": "suformuoti_rezultat\u0173_tekst\u0105",
            "location": 17,
            "return": [],
            "arguments": {
                "rezultatai": [],
                "daugiausia": []
            }
        },
        "surikiuoti_did\u0117jan\u010dia_dien\u0173_seka_bei_rasti_diena_su_did\u017eiausiu_laimikiu": {
            "name": "surikiuoti_did\u0117jan\u010dia_dien\u0173_seka_bei_rasti_diena_su_did\u017eiausiu_laimikiu",
            "location": 25,
            "return": [],
            "arguments": {
                "dienos_ir_grybai": []
            }
        },
        "sukeisti_did\u017eiausi\u0105_jei_laimikis_geresnis": {
            "name": "sukeisti_did\u017eiausi\u0105_jei_laimikis_geresnis",
            "location": 48,
            "return": [],
            "arguments": {
                "daugiausia": [],
                "diena": [],
                "grybai": []
            }
        },
        "susumuoti_dien\u0173_gryb\u0173_kiekius_ignoruojant_dienas_be_gryb\u0173": {
            "name": "susumuoti_dien\u0173_gryb\u0173_kiekius_ignoruojant_dienas_be_gryb\u0173",
            "location": 55,
            "return": [],
            "arguments": {
                "eilu\u010di\u0173_masyvas": []
            }
        },
        "main": {
            "name": "main",
            "location": 73,
            "return": [],
            "arguments": {
                "duomen\u0173_direktorija": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2007/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2007/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2008/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2009/pagrindinis/u1/u1.py": {
        "calculate_nominals": {
            "name": "calculate_nominals",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "nominals": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "ammount": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "output_results": {
            "name": "output_results",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "nominals": [
                    "Iterable[float]",
                    "str",
                    "List[T]",
                    "List[bytes]"
                ],
                "ammounts": [
                    "int",
                    "Optional[str]",
                    "BinaryIO"
                ],
                "output_stream": [
                    "int",
                    "IO[str]",
                    "bytes",
                    "bool",
                    "Sequence[int]"
                ]
            }
        },
        "calculate_sum": {
            "name": "calculate_sum",
            "location": 29,
            "return": [
                "tuple",
                "int",
                "str",
                "Tuple[int, int]",
                "Union[List[str], str]",
                "List[str]",
                "list"
            ],
            "arguments": {
                "nominals": [
                    "int",
                    "Callable",
                    "str"
                ],
                "ammounts": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "prepare_data": {
            "name": "prepare_data",
            "location": 39,
            "return": [
                "str",
                "int",
                "Generator",
                "bool"
            ],
            "arguments": {
                "input_stream": [
                    "str"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {
                "input_stream": [
                    "bool",
                    "str"
                ],
                "output_stream": [
                    "str",
                    "Optional[int]",
                    "int",
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2009/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2009/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/bandomasis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/bandomasis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/bandomasis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2010/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2011/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2012/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "test_equal_case": {
            "name": "test_equal_case",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/u1/u1.py": {
        "read_ints": {
            "name": "read_ints",
            "location": 22,
            "return": [
                "List[str]",
                "pathlib.Path",
                "str"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "read_data": {
            "name": "read_data",
            "location": 26,
            "return": [
                "str",
                "int",
                "Generator",
                "bool"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        },
        "Player.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "k": [
                    "bool",
                    "List[\"DiscountedLineItemPortion\"]",
                    "str",
                    "Optional[\"Node\"]",
                    "int"
                ],
                "times": [
                    "List[int]",
                    "float",
                    "int",
                    "bool",
                    "Optional[float]"
                ]
            }
        },
        "Player.get_better_player_by": {
            "name": "get_better_player_by",
            "location": 13,
            "return": [
                "str",
                "dict",
                "Iterable[int]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "bool",
                    "str",
                    "dict"
                ],
                "prop": [
                    "Optional[bool]",
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/u2/u2.py": {
        "parse_ints": {
            "name": "parse_ints",
            "location": 5,
            "return": [
                "List[Dict]",
                "str",
                "List[int]",
                "List[List[Any]]",
                "Union[List[float], List[int]]",
                "list",
                "float",
                "Sequence[str]"
            ],
            "arguments": {
                "line": [
                    "str",
                    "int"
                ]
            }
        },
        "read_row": {
            "name": "read_row",
            "location": 9,
            "return": [
                "bool",
                "List[str]",
                "str",
                "Optional[Any]",
                "Sequence"
            ],
            "arguments": {
                "lines": [
                    "str",
                    "dict",
                    "int"
                ],
                "k": [
                    "int",
                    "bytes",
                    "Callable",
                    "bool"
                ]
            }
        },
        "get_points": {
            "name": "get_points",
            "location": 16,
            "return": [
                "List[str]",
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "points": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_even_points": {
            "name": "get_even_points",
            "location": 20,
            "return": [
                "bool",
                "int",
                "List[Tuple[int, str, str]]",
                "List[Dict[str, Any]]",
                "frozenset"
            ],
            "arguments": {
                "points": [
                    "str",
                    "bool"
                ]
            }
        },
        "read_data": {
            "name": "read_data",
            "location": 24,
            "return": [
                "typing.Iterator[typing.Tuple[builtins.int, builtins.int, builtins.str]]"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "str",
                    "Mapping[str, Any]",
                    "Sequence",
                    "bytes",
                    "dict"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2012/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/u1/u1.py": {
        "read_data": {
            "name": "read_data",
            "location": 12,
            "return": [
                "typing.Iterator[Company]"
            ],
            "arguments": {
                "lines": [
                    "int",
                    "Iterator[str]",
                    "str",
                    "Optional[str]"
                ],
                "n": [
                    "int",
                    "Iterator[str]",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "get_distance": {
            "name": "get_distance",
            "location": 18,
            "return": [
                "int",
                "List[int]",
                "bytes",
                "str"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ]
            }
        },
        "simulate_single_day": {
            "name": "simulate_single_day",
            "location": 22,
            "return": [
                "int",
                "bool",
                "Dict[str, int]",
                "Optional[Union[str, Any]]",
                "float"
            ],
            "arguments": {
                "data": [
                    "dict",
                    "T",
                    "bytes",
                    "Union[bytes, bytearray, memoryview]"
                ],
                "m": [
                    "int",
                    "bool",
                    "bytes",
                    "float",
                    "Optional[Iterable]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/u2/u2.py": {
        "read_ints": {
            "name": "read_ints",
            "location": 15,
            "return": [
                "List[Dict]",
                "List[int]",
                "float",
                "List[List[Any]]",
                "List[float]",
                "Tuple[int, int, int]",
                "list",
                "Tuple[int]",
                "Sequence[str]"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "read_row": {
            "name": "read_row",
            "location": 20,
            "return": [
                "str",
                "int",
                "bytes"
            ],
            "arguments": {
                "lines": [
                    "str",
                    "dict",
                    "Iterator[str]",
                    "Dict[str, str]",
                    "Mapping[str, Any]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        },
        "Record.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district": [
                    "int",
                    "str",
                    "bool"
                ],
                "smallest": [
                    "int",
                    "str",
                    "bool"
                ],
                "total": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2013/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pavyzdinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pavyzdinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pavyzdinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2013/pavyzdinis/u3/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/u1/u1.py": {
        "isvezioti_picas": {
            "name": "isvezioti_picas",
            "location": 6,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "main": {
            "name": "main",
            "location": 35,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/u2/u2.py": {
        "read_row": {
            "name": "read_row",
            "location": 7,
            "return": [
                "str",
                "bool",
                "Optional[int]",
                "Set[str]",
                "Optional[List[Any]]"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "Sequence[str]",
                    "int",
                    "bytes",
                    "Union[str, IO[str]]"
                ]
            }
        },
        "read_data": {
            "name": "read_data",
            "location": 13,
            "return": [
                "Dict[str, List[int]]",
                "dict",
                "str",
                "pathlib.Path",
                "Optional[float]",
                "bytes"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "IO[bytes]",
                    "int"
                ],
                "k": [
                    "int",
                    "bytes",
                    "bool"
                ]
            }
        },
        "calculate_stats": {
            "name": "calculate_stats",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "data": [
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/bandomasis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "test_without_units": {
            "name": "test_without_units",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/u1/u1.py": {
        "read_ints": {
            "name": "read_ints",
            "location": 5,
            "return": [
                "List[Dict]",
                "List[int]",
                "float",
                "List[List[Any]]",
                "List[float]",
                "Tuple[int, int, int]",
                "list",
                "Tuple[int]",
                "Sequence[str]"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "update_totals": {
            "name": "update_totals",
            "location": 9,
            "return": [
                "Callable[[str, str], float]",
                "List[List[int]]",
                "Callable",
                "int",
                "Mapping[str, Any]",
                "list",
                "bytes",
                "bool"
            ],
            "arguments": {
                "totals": [
                    "List[int]",
                    "int",
                    "bool"
                ],
                "update": [
                    "List[int]",
                    "int",
                    "bool"
                ]
            }
        },
        "add_director_points": {
            "name": "add_director_points",
            "location": 13,
            "return": [
                "List[str]",
                "str",
                "int",
                "float",
                "Iterable[T]",
                "type"
            ],
            "arguments": {
                "total_points": [
                    "List[int]",
                    "int",
                    "bool"
                ],
                "director_points": [
                    "List[int]",
                    "int",
                    "bool"
                ],
                "max_point": [
                    "List[int]",
                    "int",
                    "bool"
                ]
            }
        },
        "get_unit_points": {
            "name": "get_unit_points",
            "location": 20,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "points_map": [
                    "Tuple[int]",
                    "int",
                    "float",
                    "list"
                ],
                "votes": [
                    "str",
                    "int",
                    "List[int]"
                ]
            }
        },
        "get_final_points": {
            "name": "get_final_points",
            "location": 29,
            "return": [
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "total_points": [
                    "Optional[int]",
                    "float",
                    "bool",
                    "int",
                    "bytes"
                ],
                "director_points": [
                    "List[int]",
                    "int",
                    "float",
                    "Optional[int]"
                ]
            }
        },
        "get_winner_item": {
            "name": "get_winner_item",
            "location": 38,
            "return": [
                "List[str]",
                "int",
                "tuple",
                "str"
            ],
            "arguments": {
                "points": [
                    "List[int]",
                    "int",
                    "str",
                    "float",
                    "Sequence[int]"
                ]
            }
        },
        "count_votes": {
            "name": "count_votes",
            "location": 43,
            "return": [
                "Callable",
                "pathlib.Path",
                "Dict[str, Any]",
                "Dict[str, int]"
            ],
            "arguments": {
                "lines": [
                    "int",
                    "str",
                    "BrokenPipeError",
                    "TextIO"
                ],
                "points_map": [
                    "bool",
                    "int",
                    "str"
                ],
                "n_items": [
                    "int",
                    "bool",
                    "str",
                    "List[int]",
                    "List[float]"
                ]
            }
        },
        "format_results": {
            "name": "format_results",
            "location": 72,
            "return": [
                "typing.Iterator[builtins.str]"
            ],
            "arguments": {
                "votes": [
                    "List[int]",
                    "Union[str, Tuple[Any]]",
                    "str",
                    "Optional[Any]",
                    "int"
                ],
                "points": [
                    "List[int]",
                    "Union[str, Tuple[Any]]",
                    "str",
                    "Optional[Any]",
                    "int"
                ],
                "winner": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/u2/u2.py": {
        "read_ints": {
            "name": "read_ints",
            "location": 36,
            "return": [
                "List[str]",
                "pathlib.Path",
                "str"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "consume_data": {
            "name": "consume_data",
            "location": 40,
            "return": [
                "typing.Iterator[typing.Tuple[builtins.bool, typing.Tuple[builtins.int, ...]]]"
            ],
            "arguments": {
                "lines": [
                    "int",
                    "List[str]",
                    "Iterator[str]"
                ],
                "rover": [
                    "bytes",
                    "dict",
                    "List[Tuple[str, Any]]",
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "format_results": {
            "name": "format_results",
            "location": 56,
            "return": [
                "typing.Iterator[builtins.str]"
            ],
            "arguments": {
                "results": [
                    "bool",
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        },
        "Rover.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "Union[float, str]"
                ],
                "y": [
                    "int",
                    "float",
                    "Union[float, str]"
                ]
            }
        },
        "Rover.reset": {
            "name": "reset",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "List[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "List[float]"
                ]
            }
        },
        "Rover.has_arrived": {
            "name": "has_arrived",
            "location": 19,
            "return": [
                "bool",
                "Optional[str]",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "float",
                    "List[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "List[float]"
                ]
            }
        },
        "Rover.move": {
            "name": "move",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "int",
                    "list",
                    "str"
                ]
            }
        },
        "Rover.walk_to": {
            "name": "walk_to",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "Tuple[float, float, float, float]",
                    "float"
                ],
                "y": [
                    "Tuple[float, float, float, float]",
                    "float"
                ],
                "n": [
                    "bool",
                    "str",
                    "int",
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "test_director_vote": {
            "name": "test_director_vote",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/u1/u1.py": {
        "read_ints": {
            "name": "read_ints",
            "location": 5,
            "return": [
                "List[Dict]",
                "List[int]",
                "float",
                "List[List[Any]]",
                "List[float]",
                "Tuple[int, int, int]",
                "list",
                "Tuple[int]",
                "Sequence[str]"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "get_director_item": {
            "name": "get_director_item",
            "location": 10,
            "return": [
                "int",
                "str",
                "bool",
                "List[int]",
                "float"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "str",
                    "List[str]"
                ]
            }
        },
        "get_employee_item": {
            "name": "get_employee_item",
            "location": 19,
            "return": [
                "int",
                "str",
                "bool",
                "List[int]",
                "float"
            ],
            "arguments": {
                "votes": [
                    "pathlib.Path",
                    "int"
                ],
                "director_item": [
                    "int",
                    "bool",
                    "FrozenSet[int]",
                    "Callable[..., Awaitable]",
                    "Type['Signature']",
                    "str",
                    "List[int]"
                ]
            }
        },
        "get_worst_item": {
            "name": "get_worst_item",
            "location": 28,
            "return": [
                "float",
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "worst_votes": [
                    "str",
                    "Dict[str, Any]",
                    "Dict[str, int]",
                    "int"
                ],
                "director_item": [
                    "int",
                    "bool"
                ]
            }
        },
        "count_votes": {
            "name": "count_votes",
            "location": 39,
            "return": [
                "str",
                "bool",
                "Optional[Any]",
                "Tuple[float, float]"
            ],
            "arguments": {
                "lines": [
                    "int",
                    "str",
                    "IO[bytes]",
                    "Tuple[Any, int]"
                ],
                "director_item": [
                    "Tuple[int, int]",
                    "List[str]",
                    "int",
                    "str",
                    "pathlib.PureWindowsPath"
                ],
                "n_items": [
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "tmpdir": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/u2/u2.py": {
        "read_ints": {
            "name": "read_ints",
            "location": 5,
            "return": [
                "List[Dict]",
                "List[int]",
                "float",
                "List[List[Any]]",
                "List[float]",
                "Tuple[int, int, int]",
                "list",
                "Tuple[int]",
                "Sequence[str]"
            ],
            "arguments": {
                "lines": [
                    "Iterator[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "move": {
            "name": "move",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "brain": [
                    "int",
                    "Dict[int, Tuple[int, int]]",
                    "str"
                ],
                "step": [
                    "int",
                    "Dict[int, Tuple[int, int]]",
                    "str"
                ],
                "x": [
                    "int",
                    "str",
                    "bytes"
                ],
                "y": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "walk": {
            "name": "walk",
            "location": 16,
            "return": [
                "bool",
                "Callable",
                "str"
            ],
            "arguments": {
                "brain": [
                    "Dict[int, Tuple[int, int]]",
                    "int",
                    "Union[float, str]"
                ],
                "steps": [
                    "bool",
                    "List[int]",
                    "Optional[float]",
                    "int"
                ],
                "x0": [
                    "int",
                    "float",
                    "Dict[int, Tuple[int, int]]"
                ],
                "y0": [
                    "int",
                    "float",
                    "Dict[int, Tuple[int, int]]"
                ]
            }
        },
        "read_lines": {
            "name": "read_lines",
            "location": 29,
            "return": [
                "typing.Iterator[typing.List[typing.Any]]"
            ],
            "arguments": {
                "brain": [
                    "Dict[int, Tuple[int, int]]",
                    "bool",
                    "str",
                    "Set[str]",
                    "int",
                    "Callable"
                ],
                "lines": [
                    "Iterator[str]",
                    "Tuple[str, str]",
                    "str",
                    "pathlib.Path",
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2014/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "i": [
                    "str"
                ],
                "o": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2015/pagrindinis/u1/u1.py": {
        "read_data": {
            "name": "read_data",
            "location": 4,
            "return": [
                "List[str]",
                "str"
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "simulate": {
            "name": "simulate",
            "location": 9,
            "return": [
                "List[Dict[str, Any]]",
                "BaseException",
                "str"
            ],
            "arguments": {
                "data": [
                    "int",
                    "str",
                    "List[int]",
                    "bytes",
                    "dict"
                ]
            }
        },
        "write_data": {
            "name": "write_data",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathlib.Path"
                ],
                "data": [
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathlib.Path"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2015/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2015/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/u1/tests.py": {
        "test_a_pvz": {
            "name": "test_a_pvz",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "test_b_pvz": {
            "name": "test_b_pvz",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/u1/u1.py": {
        "weights": {
            "name": "weights",
            "location": 6,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "main": {
            "name": "main",
            "location": 17,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/u2/u2.py": {
        "read": {
            "name": "read",
            "location": 13,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "aggregate": {
            "name": "aggregate",
            "location": 26,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "sort": {
            "name": "sort",
            "location": 36,
            "return": [],
            "arguments": {
                "items": []
            }
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2016/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2016/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/pagrindinis/u1/tests.py": {
        "test_a_pvz": {
            "name": "test_a_pvz",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2017/pagrindinis/u1/u1.py": {
        "main": {
            "name": "main",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2017/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/pagrindinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/pakartotinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/pakartotinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2017/pakartotinis/u2/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/u1/tests.py": {
        "test": {
            "name": "test",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/u1/u1.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/u1/__init__.py": {},
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/u2/tests.py": {
        "test": {
            "name": "test",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/u2/u2.py": {
        "seconds": {
            "name": "seconds",
            "location": 6,
            "return": [],
            "arguments": {
                "v": [],
                "m": [],
                "s": []
            }
        },
        "save_results": {
            "name": "save_results",
            "location": 11,
            "return": [],
            "arguments": {
                "path": [],
                "pabaiga": []
            }
        },
        "main": {
            "name": "main",
            "location": 20,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "it-brandos-egzaminai-master/exams/E2018/pagrindinis/u2/__init__.py": {}
}
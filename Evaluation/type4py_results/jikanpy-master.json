{
    "jikanpy-master/examples.py": {},
    "jikanpy-master/examplesasync.py": {},
    "jikanpy-master/setup.py": {},
    "jikanpy-master/docs/conf.py": {},
    "jikanpy-master/jikanpy/aiojikan.py": {
        "AioJikan.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "selected_base": [
                    "Mapping[str, str]",
                    "Dict[str, List[bytes]]",
                    "Type",
                    "str",
                    "Optional[Mapping[str, str]]",
                    "Dict[str, Any]"
                ],
                "session": [
                    "str",
                    "Callable",
                    "int",
                    "List[str]",
                    "List[List[str]]"
                ]
            }
        }
    },
    "jikanpy-master/jikanpy/exceptions.py": {
        "APIException.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int",
                    "Optional[int]"
                ],
                "error_json": [
                    "bool",
                    "Mapping[str, Any]",
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "APIException.__str__": {
            "name": "__str__",
            "location": 33,
            "return": [
                "str",
                "Optional[str]",
                "Set[str]",
                "Tuple[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIException.__repr__": {
            "name": "__repr__",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jikanpy-master/jikanpy/jikan.py": {
        "Jikan.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "selected_base": [
                    "Mapping[str, str]",
                    "Dict[str, List[bytes]]",
                    "Type",
                    "str",
                    "Optional[Mapping[str, str]]",
                    "Dict[str, Any]"
                ],
                "session": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "Jikan._wrap_response": {
            "name": "_wrap_response",
            "location": 61,
            "return": [
                "cmk.utils.type_defs.UserId",
                "int"
            ],
            "arguments": {
                "response": [],
                "url": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "Jikan._request": {
            "name": "_request",
            "location": 81,
            "return": [
                "Tuple[int, str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict"
                ]
            }
        },
        "Jikan._get": {
            "name": "_get",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str",
                    "int",
                    "Optional[int]",
                    "Optional[float]"
                ],
                "id": [
                    "str",
                    "int",
                    "Optional[int]",
                    "Optional[float]"
                ],
                "extension": [
                    "str",
                    "int"
                ],
                "page": [
                    "str",
                    "int"
                ]
            }
        },
        "Jikan._get_creator": {
            "name": "_get_creator",
            "location": 99,
            "return": [
                "bool",
                "int",
                "Optional[Dict[str, Any]]",
                "Dict[str, Set[str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "creator_type": [
                    "int",
                    "Optional[str]",
                    "Optional[int]",
                    "str",
                    "bool"
                ],
                "creator_id": [
                    "int",
                    "Optional[str]",
                    "Optional[int]",
                    "str",
                    "bool"
                ],
                "page": [
                    "str",
                    "int",
                    "Optional[List[\"custom_index\"]]"
                ]
            }
        },
        "Jikan.anime": {
            "name": "anime",
            "location": 106,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "extension": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "page": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "Jikan.manga": {
            "name": "manga",
            "location": 130,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "extension": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "page": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "Jikan.character": {
            "name": "character",
            "location": 151,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "extension": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "Jikan.person": {
            "name": "person",
            "location": 168,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "extension": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "Jikan.club": {
            "name": "club",
            "location": 185,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "extension": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ],
                "page": [
                    "Optional[int]",
                    "Optional[bool]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "Jikan.user_list": {
            "name": "user_list",
            "location": 207,
            "return": [
                "typing.Dict[builtins.str, typing.Any]"
            ],
            "arguments": {
                "id": [
                    "str",
                    "Optional[bool]",
                    "Optional[int]",
                    "Optional[float]",
                    "List[int]",
                    "int",
                    "bool"
                ],
                "extension": [
                    "str",
                    "Optional[bool]",
                    "Optional[int]",
                    "Optional[float]",
                    "List[int]",
                    "int",
                    "bool"
                ]
            }
        },
        "Jikan.search": {
            "name": "search",
            "location": 211,
            "return": [
                "str",
                "int",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "search_type": [
                    "str",
                    "dict",
                    "Dict[str, str]"
                ],
                "query": [
                    "str",
                    "dict",
                    "Dict[str, str]"
                ],
                "page": [
                    "str",
                    "dict"
                ],
                "parameters": [
                    "str",
                    "dict"
                ]
            }
        },
        "Jikan.season": {
            "name": "season",
            "location": 244,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "int",
                    "bool"
                ],
                "season": [
                    "int",
                    "bool"
                ]
            }
        },
        "Jikan.season_archive": {
            "name": "season_archive",
            "location": 266,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Jikan.season_later": {
            "name": "season_later",
            "location": 278,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Jikan.schedule": {
            "name": "schedule",
            "location": 290,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Dict[str, Dict[str, Any]]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "day": [
                    "bytes"
                ]
            }
        },
        "Jikan.top": {
            "name": "top",
            "location": 307,
            "return": [
                "bool",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "Optional[bool]",
                    "Optional[int]",
                    "dict",
                    "str"
                ],
                "page": [
                    "Type['Payload']",
                    "str",
                    "Type"
                ],
                "subtype": [
                    "Type['Payload']",
                    "str",
                    "Type"
                ]
            }
        },
        "Jikan.genre": {
            "name": "genre",
            "location": 331,
            "return": [
                "bool",
                "str",
                "Callable[..., None]"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "Optional[str]",
                    "bool"
                ],
                "genre_id": [
                    "Optional[str]",
                    "bool"
                ],
                "page": [
                    "str",
                    "utils.types.Vec3D",
                    "Optional[List[str]]"
                ]
            }
        },
        "Jikan.producer": {
            "name": "producer",
            "location": 353,
            "return": [
                "List[str]",
                "Sequence[str]"
            ],
            "arguments": {
                "self": [],
                "producer_id": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "page": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "Jikan.magazine": {
            "name": "magazine",
            "location": 370,
            "return": [
                "List[str]",
                "Sequence[str]"
            ],
            "arguments": {
                "self": [],
                "magazine_id": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "page": [
                    "int",
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "Jikan.user": {
            "name": "user",
            "location": 388,
            "return": [
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "starlette.requests.Request"
                ],
                "request": [
                    "starlette.requests.Request"
                ],
                "argument": [
                    "bytes",
                    "str",
                    "List[Dict[str, Any]]",
                    "dict"
                ],
                "page": [
                    "bytes",
                    "str",
                    "List[Dict[str, Any]]",
                    "dict"
                ],
                "parameters": [
                    "bytes",
                    "str",
                    "List[Dict[str, Any]]",
                    "dict"
                ]
            }
        },
        "Jikan.meta": {
            "name": "meta",
            "location": 436,
            "return": [
                "bool",
                "int",
                "Dict[str, Any]",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "requests.Session"
                ],
                "type": [
                    "str",
                    "requests.Session"
                ],
                "period": [
                    "str",
                    "requests.Session"
                ],
                "offset": [
                    "raiden.utils.List[raiden.utils.TokenAddress]",
                    "bool"
                ]
            }
        }
    },
    "jikanpy-master/jikanpy/utils.py": {
        "add_jikan_metadata": {
            "name": "add_jikan_metadata",
            "location": 15,
            "return": [
                "bytes",
                "Dict[str, Any]",
                "int",
                "Optional[Dict[str, Any]]",
                "str",
                "Dict[str, Dict[str, str]]",
                "Dict[str, str]"
            ],
            "arguments": {
                "response": [
                    "aiohttp.web.StreamResponse",
                    "aiohttp.web.Request",
                    "aiohttp.web.Response"
                ],
                "response_dict": [
                    "Dict[str, Any]",
                    "requests.Response",
                    "aiohttp.ClientResponse"
                ],
                "url": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "get_url_with_page": {
            "name": "get_url_with_page",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str",
                    "Optional[int]",
                    "Optional[List[str]]"
                ],
                "page": [
                    "str",
                    "Optional[int]",
                    "Optional[List[str]]"
                ],
                "delimiter": [
                    "str",
                    "Optional[int]",
                    "Optional[List[str]]"
                ]
            }
        },
        "get_main_url": {
            "name": "get_main_url",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "int"
                ],
                "endpoint": [
                    "str",
                    "int"
                ],
                "id": [
                    "str",
                    "int"
                ],
                "extension": [
                    "Optional[str]",
                    "int",
                    "Optional[int]"
                ],
                "page": [
                    "str",
                    "Dict[str, Any]",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "get_creator_url": {
            "name": "get_creator_url",
            "location": 51,
            "return": [
                "Optional[str]",
                "str",
                "Sequence[str]",
                "Callable[[], T]"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "int",
                    "Union[int, str]",
                    "bool",
                    "Optional[str]"
                ],
                "creator_type": [
                    "str",
                    "int",
                    "Union[int, str]",
                    "bool",
                    "Optional[str]"
                ],
                "creator_id": [
                    "str",
                    "int",
                    "Union[int, str]",
                    "bool",
                    "Optional[str]"
                ],
                "page": [
                    "Optional[int]",
                    "str",
                    "int"
                ]
            }
        },
        "get_search_url": {
            "name": "get_search_url",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "type"
                ],
                "search_type": [
                    "str",
                    "type"
                ],
                "query": [
                    "str",
                    "type"
                ],
                "page": [
                    "Optional[int]",
                    "str",
                    "dict",
                    "Optional[str]"
                ],
                "parameters": [
                    "Optional[Mapping[str, Any]]",
                    "Optional[str]",
                    "Optional[Sequence[Any]]",
                    "Optional[List[str]]",
                    "Tuple[Optional[str], Optional[str]]",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "get_season_url": {
            "name": "get_season_url",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "int",
                    "List[str]"
                ],
                "year": [
                    "Optional[str]",
                    "str",
                    "Optional[int]"
                ],
                "season": [
                    "Optional[str]",
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "get_schedule_url": {
            "name": "get_schedule_url",
            "location": 83,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "Union[str, int]"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "Callable"
                ],
                "day": [
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "get_season_archive_url": {
            "name": "get_season_archive_url",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "Sequence[str]",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "get_season_later_url": {
            "name": "get_season_later_url",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "Sequence[str]",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "get_top_url": {
            "name": "get_top_url",
            "location": 99,
            "return": [
                "str",
                "Optional[bool]",
                "Any"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "int"
                ],
                "type": [
                    "str",
                    "int"
                ],
                "page": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "subtype": [
                    "Optional[str]",
                    "str",
                    "Optional[List[str]]",
                    "Optional[int]",
                    "Optional[Iterable[str]]"
                ]
            }
        },
        "get_genre_url": {
            "name": "get_genre_url",
            "location": 108,
            "return": [
                "Optional[str]",
                "str",
                "Sequence[str]",
                "Callable[[], T]"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "type": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "genre_id": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "page": [
                    "Optional[int]",
                    "str",
                    "int"
                ]
            }
        },
        "get_user_url": {
            "name": "get_user_url",
            "location": 114,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "request": [
                    "Optional[str]",
                    "Optional[Union[int, str]]",
                    "Optional[int]",
                    "Optional[bool]",
                    "bool"
                ],
                "argument": [
                    "Optional[str]",
                    "Optional[Union[int, str]]",
                    "Optional[int]",
                    "Optional[bool]",
                    "bool"
                ],
                "page": [
                    "Optional[int]",
                    "str",
                    "Optional[str]",
                    "dict"
                ],
                "parameters": [
                    "Optional[str]",
                    "Optional[dict]"
                ]
            }
        },
        "get_meta_url": {
            "name": "get_meta_url",
            "location": 135,
            "return": [
                "Optional[str]",
                "str",
                "Sequence[str]",
                "Callable[[], T]"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "Optional[str]"
                ],
                "request": [
                    "str",
                    "Optional[str]"
                ],
                "type": [
                    "Optional[str]",
                    "Optional[List[str]]",
                    "List[str]"
                ],
                "period": [
                    "Optional[str]",
                    "Optional[List[str]]",
                    "List[str]"
                ],
                "offset": [
                    "Optional[int]",
                    "str"
                ]
            }
        }
    },
    "jikanpy-master/jikanpy/__init__.py": {},
    "jikanpy-master/tests/conftest.py": {
        "pytest_sessionstart": {
            "name": "pytest_sessionstart",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "session": [
                    "str",
                    "list",
                    "Iterable"
                ]
            }
        },
        "response_mock": {
            "name": "response_mock",
            "location": 31,
            "return": [
                "Optional[Dict]",
                "Dict[str, Any]",
                "dict",
                "str",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "use_json_decoder": [
                    "bool",
                    "Optional[int]",
                    "str",
                    "List[dict]",
                    "Optional[dict]"
                ]
            }
        },
        "aio_response_mock": {
            "name": "aio_response_mock",
            "location": 54,
            "return": [
                "Dict[str, Union[int, str]]",
                "str",
                "Optional[List[str]]",
                "Sequence[int]"
            ],
            "arguments": {
                "use_json_decoder": [
                    "bool",
                    "str",
                    "bytes",
                    "List[bytes]"
                ]
            }
        },
        "response_non_dict_mock": {
            "name": "response_non_dict_mock",
            "location": 79,
            "return": [
                "Optional[str]",
                "Dict[str, Any]",
                "int",
                "dict"
            ],
            "arguments": {}
        },
        "aio_response_non_dict_mock": {
            "name": "aio_response_non_dict_mock",
            "location": 92,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "anime_keys": {
            "name": "anime_keys",
            "location": 105,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "anime_episodes_keys": {
            "name": "anime_episodes_keys",
            "location": 147,
            "return": [
                "Dict[str, str]",
                "Exception"
            ],
            "arguments": {}
        },
        "episode_keys": {
            "name": "episode_keys",
            "location": 158,
            "return": [
                "str",
                "int"
            ],
            "arguments": {}
        },
        "manga_keys": {
            "name": "manga_keys",
            "location": 173,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "character_keys": {
            "name": "character_keys",
            "location": 207,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "person_keys": {
            "name": "person_keys",
            "location": 227,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "search_keys": {
            "name": "search_keys",
            "location": 250,
            "return": [
                "Dict[str, str]",
                "Exception"
            ],
            "arguments": {}
        },
        "season_keys": {
            "name": "season_keys",
            "location": 261,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "seasonal_anime_keys": {
            "name": "seasonal_anime_keys",
            "location": 273,
            "return": [
                "Callable",
                "bool",
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "season_archive_keys": {
            "name": "season_archive_keys",
            "location": 296,
            "return": [
                "Dict[str, str]",
                "Exception"
            ],
            "arguments": {}
        },
        "archived_years_keys": {
            "name": "archived_years_keys",
            "location": 301,
            "return": [
                "str",
                "int",
                "Dict[str, Any]",
                "Type[Any]"
            ],
            "arguments": {}
        },
        "schedule_keys": {
            "name": "schedule_keys",
            "location": 306,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "top_keys": {
            "name": "top_keys",
            "location": 311,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "top_anime_keys": {
            "name": "top_anime_keys",
            "location": 316,
            "return": [
                "dict",
                "str",
                "bool",
                "bytes",
                "IO"
            ],
            "arguments": {}
        },
        "genre_keys": {
            "name": "genre_keys",
            "location": 332,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "producer_keys": {
            "name": "producer_keys",
            "location": 344,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "subset_anime_keys": {
            "name": "subset_anime_keys",
            "location": 349,
            "return": [
                "Callable",
                "bool",
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "magazine_keys": {
            "name": "magazine_keys",
            "location": 370,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "magazine_manga_keys": {
            "name": "magazine_manga_keys",
            "location": 375,
            "return": [
                "Callable",
                "bool",
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "user_keys": {
            "name": "user_keys",
            "location": 393,
            "return": [
                "Dict[str, str]"
            ],
            "arguments": {}
        },
        "animelist_keys": {
            "name": "animelist_keys",
            "location": 414,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "club_keys": {
            "name": "club_keys",
            "location": 419,
            "return": [
                "Dict[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "header_keys": {
            "name": "header_keys",
            "location": 441,
            "return": [
                "dict",
                "str",
                "bool",
                "int"
            ],
            "arguments": {}
        },
        "response_mock.ResponseMock.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "response_mock.ResponseMock.json": {
            "name": "json",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "aio_response_mock.ResponseMock.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "response_non_dict_mock.ResponseMock.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "response_non_dict_mock.ResponseMock.json": {
            "name": "json",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "aio_response_non_dict_mock.ResponseMock.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jikanpy-master/tests/constants.py": {},
    "jikanpy-master/tests/test_aiojikan.py": {
        "aio_jikan": {
            "name": "aio_jikan",
            "location": 33,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "jikanpy-master/tests/test_jikan.py": {
        "jikan": {
            "name": "jikan",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "test_strip_base_url": {
            "name": "test_strip_base_url",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_wrap_response": {
            "name": "test_wrap_response",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "header_keys": [
                    "str",
                    "dict",
                    "bytes"
                ],
                "jikan": [
                    "str"
                ]
            }
        },
        "test_wrap_non_dict_response": {
            "name": "test_wrap_non_dict_response",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [],
                "response_non_dict_mock": []
            }
        },
        "test_anime_success": {
            "name": "test_anime_success",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "anime_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_anime_episodes_success": {
            "name": "test_anime_episodes_success",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {
                "anime_episodes_keys": [
                    "str",
                    "bytes",
                    "defaultdict",
                    "Optional[str]"
                ],
                "episode_keys": [
                    "dict",
                    "Optional[dict]",
                    "Dict[str, Any]",
                    "Optional[Dict]",
                    "List[bool]",
                    "int",
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_manga_success": {
            "name": "test_manga_success",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "manga_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_character_success": {
            "name": "test_character_success",
            "location": 97,
            "return": [
                ""
            ],
            "arguments": {
                "character_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_person_success": {
            "name": "test_person_success",
            "location": 106,
            "return": [
                ""
            ],
            "arguments": {
                "person_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str"
                ]
            }
        },
        "test_search_success": {
            "name": "test_search_success",
            "location": 115,
            "return": [
                ""
            ],
            "arguments": {
                "search_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "test_search_genre_exclude_success": {
            "name": "test_search_genre_exclude_success",
            "location": 125,
            "return": [
                ""
            ],
            "arguments": {
                "search_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "dict",
                    "bool",
                    "Tuple[str]",
                    "Dict[str, int]"
                ]
            }
        },
        "test_season_success": {
            "name": "test_season_success",
            "location": 144,
            "return": [
                ""
            ],
            "arguments": {
                "season_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "seasonal_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "test_season_archive_success": {
            "name": "test_season_archive_success",
            "location": 154,
            "return": [
                ""
            ],
            "arguments": {
                "season_archive_keys": [
                    "str",
                    "bytes",
                    "defaultdict",
                    "Callable"
                ],
                "archived_years_keys": [
                    "Dict[str, str]",
                    "dict",
                    "str",
                    "bytes",
                    "Callable",
                    "Mapping"
                ],
                "jikan": [
                    "str",
                    "IO[bytes]",
                    "bytes"
                ]
            }
        },
        "test_season_later_success": {
            "name": "test_season_later_success",
            "location": 166,
            "return": [
                ""
            ],
            "arguments": {
                "season_keys": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "Dict[str, str]"
                ],
                "seasonal_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str",
                    "Optional[List[T]]",
                    "bytes"
                ]
            }
        },
        "test_season_current_success": {
            "name": "test_season_current_success",
            "location": 175,
            "return": [
                ""
            ],
            "arguments": {
                "season_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "seasonal_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str"
                ]
            }
        },
        "test_schedule_success": {
            "name": "test_schedule_success",
            "location": 184,
            "return": [
                ""
            ],
            "arguments": {
                "schedule_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "subset_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str"
                ]
            }
        },
        "test_top_success": {
            "name": "test_top_success",
            "location": 195,
            "return": [
                ""
            ],
            "arguments": {
                "top_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "top_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str",
                    "Dict[str, Optional[int]]"
                ]
            }
        },
        "test_genre_success": {
            "name": "test_genre_success",
            "location": 205,
            "return": [
                ""
            ],
            "arguments": {
                "genre_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "subset_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": []
            }
        },
        "test_producer_success": {
            "name": "test_producer_success",
            "location": 215,
            "return": [
                ""
            ],
            "arguments": {
                "producer_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "subset_anime_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str",
                    "Optional[str]",
                    "cmk.utils.type_defs.HostName"
                ]
            }
        },
        "test_magazine_success": {
            "name": "test_magazine_success",
            "location": 225,
            "return": [
                ""
            ],
            "arguments": {
                "magazine_keys": [
                    "bytes",
                    "str",
                    "Dict[str, Any]"
                ],
                "magazine_manga_keys": [
                    "str",
                    "defaultdict",
                    "bytes",
                    "dict",
                    "List[Dict[str, str]]"
                ],
                "jikan": [
                    "str",
                    "Optional[str]",
                    "cmk.utils.type_defs.HostName"
                ]
            }
        },
        "test_user_success": {
            "name": "test_user_success",
            "location": 235,
            "return": [
                ""
            ],
            "arguments": {
                "user_keys": [
                    "str",
                    "Hashable"
                ],
                "jikan": [
                    "str",
                    "IO"
                ]
            }
        },
        "test_animelist_success": {
            "name": "test_animelist_success",
            "location": 245,
            "return": [
                ""
            ],
            "arguments": {
                "animelist_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "test_club_success": {
            "name": "test_club_success",
            "location": 258,
            "return": [
                ""
            ],
            "arguments": {
                "club_keys": [
                    "str",
                    "bytes"
                ],
                "jikan": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_meta_success": {
            "name": "test_meta_success",
            "location": 267,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": []
            }
        },
        "test_anime_failure": {
            "name": "test_anime_failure",
            "location": 274,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "str",
                    "float"
                ]
            }
        },
        "test_manga_failure": {
            "name": "test_manga_failure",
            "location": 280,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "str",
                    "float"
                ]
            }
        },
        "test_character_failure": {
            "name": "test_character_failure",
            "location": 286,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "str",
                    "float"
                ]
            }
        },
        "test_season_failure": {
            "name": "test_season_failure",
            "location": 292,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "int",
                    "str",
                    "bool",
                    "Optional[int]"
                ]
            }
        },
        "test_club_failure": {
            "name": "test_club_failure",
            "location": 298,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "str",
                    "float"
                ]
            }
        },
        "test_user_list_failure": {
            "name": "test_user_list_failure",
            "location": 304,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": []
            }
        },
        "test_empty_response_json": {
            "name": "test_empty_response_json",
            "location": 310,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "str"
                ],
                "response_mock": []
            }
        },
        "test_season_urls": {
            "name": "test_season_urls",
            "location": 332,
            "return": [
                ""
            ],
            "arguments": {
                "jikan": [
                    "str"
                ]
            }
        }
    },
    "jikanpy-master/tests/test_utils.py": {
        "test_get_url_with_page": {
            "name": "test_get_url_with_page",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_get_url_with_page_none_page": {
            "name": "test_get_url_with_page_none_page",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_get_url_with_page_delimiter": {
            "name": "test_get_url_with_page_delimiter",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_get_main_url": {
            "name": "test_get_main_url",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_get_main_url_with_extension": {
            "name": "test_get_main_url_with_extension",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_get_main_url_with_extension_and_page": {
            "name": "test_get_main_url_with_extension_and_page",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "test_get_main_url_with_no_extension_and_page": {
            "name": "test_get_main_url_with_no_extension_and_page",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "test_get_creator_url": {
            "name": "test_get_creator_url",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "test_get_creator_url_with_page": {
            "name": "test_get_creator_url_with_page",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_get_search_url": {
            "name": "test_get_search_url",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "test_get_search_url_with_page": {
            "name": "test_get_search_url_with_page",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "test_get_search_url_with_parameters": {
            "name": "test_get_search_url_with_parameters",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_get_search_url_with_page_and_parameters": {
            "name": "test_get_search_url_with_page_and_parameters",
            "location": 92,
            "return": [],
            "arguments": {}
        },
        "test_get_season_url": {
            "name": "test_get_season_url",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "test_get_schedule_url": {
            "name": "test_get_schedule_url",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "test_get_schedule_url_with_day": {
            "name": "test_get_schedule_url_with_day",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "test_get_season_archive_url": {
            "name": "test_get_season_archive_url",
            "location": 122,
            "return": [],
            "arguments": {}
        },
        "test_get_season_later_url": {
            "name": "test_get_season_later_url",
            "location": 129,
            "return": [],
            "arguments": {}
        },
        "test_get_top_url": {
            "name": "test_get_top_url",
            "location": 136,
            "return": [],
            "arguments": {}
        },
        "test_get_top_url_with_page": {
            "name": "test_get_top_url_with_page",
            "location": 143,
            "return": [],
            "arguments": {}
        },
        "test_get_top_url_with_page_and_subtype": {
            "name": "test_get_top_url_with_page_and_subtype",
            "location": 150,
            "return": [],
            "arguments": {}
        },
        "test_get_genre_url": {
            "name": "test_get_genre_url",
            "location": 157,
            "return": [],
            "arguments": {}
        },
        "test_get_genre_url_with_page": {
            "name": "test_get_genre_url_with_page",
            "location": 164,
            "return": [],
            "arguments": {}
        },
        "test_get_user_url": {
            "name": "test_get_user_url",
            "location": 171,
            "return": [],
            "arguments": {}
        },
        "test_get_user_url_with_profile": {
            "name": "test_get_user_url_with_profile",
            "location": 185,
            "return": [],
            "arguments": {}
        },
        "test_get_user_url_with_anime_history": {
            "name": "test_get_user_url_with_anime_history",
            "location": 199,
            "return": [],
            "arguments": {}
        },
        "test_get_user_url_with_friends_and_page": {
            "name": "test_get_user_url_with_friends_and_page",
            "location": 213,
            "return": [],
            "arguments": {}
        },
        "test_get_user_url_with_animelist_and_page_parameter": {
            "name": "test_get_user_url_with_animelist_and_page_parameter",
            "location": 227,
            "return": [],
            "arguments": {}
        },
        "test_get_meta_url": {
            "name": "test_get_meta_url",
            "location": 241,
            "return": [],
            "arguments": {}
        },
        "test_get_meta_url_with_type_and_no_period": {
            "name": "test_get_meta_url_with_type_and_no_period",
            "location": 250,
            "return": [],
            "arguments": {}
        },
        "test_get_meta_url_with_no_type_and_period": {
            "name": "test_get_meta_url_with_no_type_and_period",
            "location": 259,
            "return": [],
            "arguments": {}
        },
        "test_get_meta_url_with_weekly_anime_requests_and_offset": {
            "name": "test_get_meta_url_with_weekly_anime_requests_and_offset",
            "location": 268,
            "return": [],
            "arguments": {}
        }
    }
}
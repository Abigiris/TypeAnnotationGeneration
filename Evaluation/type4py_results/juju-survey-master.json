{
    "juju-survey-master/db.py": {},
    "juju-survey-master/setup.py": {},
    "juju-survey-master/api/Survey.py": {
        "SurveyView.all": {
            "name": "all",
            "location": 11,
            "return": [
                "List[Dict[str, Any]]",
                "Dict[str, int]",
                "bool",
                "int",
                "List[Dict]",
                "Tuple[List[Any], int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SurveyView.one": {
            "name": "one",
            "location": 29,
            "return": [
                "int",
                "str",
                "salon.models.Stylist"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str",
                    "transfer.models.Order.ID",
                    "transfer.models.Channel.ID"
                ]
            }
        }
    },
    "juju-survey-master/api/__init__.py": {},
    "juju-survey-master/cli/app.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "juju-survey-master/cli/cli.py": {
        "cli": {
            "name": "cli",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {
                "ctx": [
                    "Optional[str]"
                ],
                "verbose": [
                    "click.Context"
                ],
                "home": [
                    "click.Context",
                    "click.HelpFormatter",
                    "bool"
                ]
            }
        },
        "Context.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.log": {
            "name": "log",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "os.PathLike",
                    "List[str]",
                    "IO"
                ]
            }
        },
        "Context.vlog": {
            "name": "vlog",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "int",
                    "List[str]",
                    "Exception"
                ]
            }
        },
        "CLI.list_commands": {
            "name": "list_commands",
            "location": 33,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "click.Context",
                    "click.core.Context",
                    "bool"
                ]
            }
        },
        "CLI.get_command": {
            "name": "get_command",
            "location": 42,
            "return": [
                "Iterator[object]",
                "bool",
                "Union[tuple, list]"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "click.Context",
                    "str",
                    "click.core.Context",
                    "tuple",
                    "Optional[float]"
                ],
                "name": [
                    "str",
                    "click.Context",
                    "bool",
                    "List[str]"
                ]
            }
        }
    },
    "juju-survey-master/cli/__init__.py": {},
    "juju-survey-master/cli/commands/cmd_api.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "make_api": {
            "name": "make_api",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "api_name": [
                    "str",
                    "dict",
                    "float",
                    "Optional[int]"
                ],
                "model": [
                    "str",
                    "bool",
                    "List[str]"
                ]
            }
        }
    },
    "juju-survey-master/cli/commands/cmd_cov.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "juju-survey-master/cli/commands/cmd_db.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "make_migration": {
            "name": "make_migration",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "migration_name": [
                    "str"
                ],
                "table": [
                    "str",
                    "dict",
                    "Iterable[Any]"
                ],
                "create": [
                    "str",
                    "bool",
                    "Optional[Iterable[str]]"
                ],
                "model": [
                    "str",
                    "bool",
                    "Optional[Iterable[str]]"
                ],
                "api": [
                    "str",
                    "bool",
                    "Optional[Iterable[str]]"
                ]
            }
        },
        "migration_refresh": {
            "name": "migration_refresh",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "migrate": {
            "name": "migrate",
            "location": 56,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "migration_reset": {
            "name": "migration_reset",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "migration_rollback": {
            "name": "migration_rollback",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "migration_status": {
            "name": "migration_status",
            "location": 83,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "make_seed": {
            "name": "make_seed",
            "location": 93,
            "return": [
                ""
            ],
            "arguments": {
                "seed_name": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "db_seed": {
            "name": "db_seed",
            "location": 114,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "make_model": {
            "name": "make_model",
            "location": 125,
            "return": [
                ""
            ],
            "arguments": {
                "model_name": [
                    "str"
                ],
                "migration": [
                    "str",
                    "Tuple[str, str]",
                    "bool"
                ]
            }
        }
    },
    "juju-survey-master/cli/commands/cmd_install.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "juju-survey-master/cli/commands/cmd_loc.py": {
        "count_locs": {
            "name": "count_locs",
            "location": 7,
            "return": [
                "str",
                "int",
                "list"
            ],
            "arguments": {
                "file_type": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "comment_pattern": [
                    "str",
                    "Optional[Any]"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 26,
            "return": [
                "Optional[str]",
                "str",
                "Optional[int]"
            ],
            "arguments": {}
        }
    },
    "juju-survey-master/cli/commands/cmd_middleware.py": {
        "cli": {
            "name": "cli",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "make_middleware": {
            "name": "make_middleware",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "middleware_name": [
                    "str"
                ]
            }
        }
    },
    "juju-survey-master/cli/commands/cmd_routes.py": {
        "cli": {
            "name": "cli",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "list_": {
            "name": "list_",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "juju-survey-master/cli/commands/cmd_secret.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "bytes": [
                    "int",
                    "List[str]",
                    "float",
                    "list",
                    "List[Dict[str, Any]]"
                ]
            }
        }
    },
    "juju-survey-master/cli/commands/cmd_serve.py": {
        "cli": {
            "name": "cli",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "juju-survey-master/cli/commands/cmd_test.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [
                "bool",
                "Optional[Union[Any, Any]]",
                "str",
                "int"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "juju-survey-master/cli/commands/__init__.py": {},
    "juju-survey-master/config/settings.py": {},
    "juju-survey-master/config/static_config.py": {},
    "juju-survey-master/facilities/mimes.py": {
        "get_mimes": {
            "name": "get_mimes",
            "location": 101,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "extension": [
                    "str"
                ]
            }
        },
        "get_extensions": {
            "name": "get_extensions",
            "location": 106,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "mime_type": [
                    "Type",
                    "str",
                    "Set[str]",
                    "int"
                ]
            }
        }
    },
    "juju-survey-master/facilities/__init__.py": {},
    "juju-survey-master/facilities/databases/ActiveRecordMixinDocs.py": {},
    "juju-survey-master/facilities/databases/AllFeaturesMixinDocs.py": {},
    "juju-survey-master/facilities/databases/DBMixins.py": {
        "IDMixin.as_dict": {
            "name": "as_dict",
            "location": 29,
            "return": [
                "str",
                "bool",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserMixin.is_active": {
            "name": "is_active",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserMixin.is_authenticated": {
            "name": "is_authenticated",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserMixin.is_anonymous": {
            "name": "is_anonymous",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserMixin.get_id": {
            "name": "get_id",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserMixin.__eq__": {
            "name": "__eq__",
            "location": 61,
            "return": [
                "str",
                "bool",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "float",
                    "int",
                    "bytes",
                    "List[str]"
                ]
            }
        },
        "UserMixin.__ne__": {
            "name": "__ne__",
            "location": 69,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Collection"
                ]
            }
        },
        "AnonymousUserMixin.is_authenticated": {
            "name": "is_authenticated",
            "location": 85,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnonymousUserMixin.is_active": {
            "name": "is_active",
            "location": 89,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnonymousUserMixin.is_anonymous": {
            "name": "is_anonymous",
            "location": 93,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnonymousUserMixin.get_id": {
            "name": "get_id",
            "location": 96,
            "return": [
                "str",
                "Dict[str, Any]",
                "Union[tuple, list]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "juju-survey-master/facilities/databases/EagerLoadMixinDocs.py": {},
    "juju-survey-master/facilities/databases/ReprMixinDocs.py": {},
    "juju-survey-master/facilities/databases/SmartQueryMixinDocs.py": {},
    "juju-survey-master/facilities/databases/__init__.py": {},
    "juju-survey-master/facilities/middleware/__init__.py": {},
    "juju-survey-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "context": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "revision": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "directives": [
                    "Callable[[Mapping], T]",
                    "list",
                    "List[List[str]]",
                    "int",
                    "str",
                    "tuple"
                ]
            }
        }
    },
    "juju-survey-master/migrations/versions/0a5f95a5bd1e_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "juju-survey-master/models/Choice.py": {
        "Choice.to_dict": {
            "name": "to_dict",
            "location": 16,
            "return": [
                "dict",
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "juju-survey-master/models/Question.py": {
        "Question.to_dict": {
            "name": "to_dict",
            "location": 15,
            "return": [
                "dict",
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "juju-survey-master/models/Survey.py": {
        "Survey.to_dict": {
            "name": "to_dict",
            "location": 14,
            "return": [
                "Dict[str, Any]",
                "Dict[str, Union[str, Set]]",
                "str",
                "dict",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "juju-survey-master/models/__init__.py": {},
    "juju-survey-master/seeds/__init__.py": {}
}
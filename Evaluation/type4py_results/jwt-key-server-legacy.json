{
    "jwt-key-server-legacy/keyserver.py": {},
    "jwt-key-server-legacy/keyserv/auth.py": {
        "add_user": {
            "name": "add_user",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "username": [
                    "str",
                    "int"
                ],
                "password": [
                    "bytes",
                    "str"
                ],
                "level": [
                    "str",
                    "int"
                ]
            }
        },
        "user_loader": {
            "name": "user_loader",
            "location": 62,
            "return": [
                "app.models.GameMember",
                "app.models.course.Course",
                "models.User",
                "int",
                "str",
                "models.UserAuth"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "transfer.models.MatchID",
                    "transfer.models.MatchCommentID",
                    "transfer.models.ShopID",
                    "transfer.models.StorefronID",
                    "transfer.models.ArticleID",
                    "transfer.models.TopicID"
                ]
            }
        },
        "Users.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "username": [
                    "int",
                    "bool",
                    "float"
                ],
                "passwd": [
                    "int",
                    "bool",
                    "float"
                ],
                "level": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Users.get_id": {
            "name": "get_id",
            "location": 51,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Users.check_password": {
            "name": "check_password",
            "location": 54,
            "return": [
                "str",
                "bool",
                "list"
            ],
            "arguments": {
                "self": [],
                "passwd": [
                    "bytes",
                    "str",
                    "Union[bytes, bytearray]",
                    "List[int]",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "jwt-key-server-legacy/keyserv/config.example.py": {},
    "jwt-key-server-legacy/keyserv/endpoints.py": {
        "ActivateKey.post": {
            "name": "post",
            "location": 37,
            "return": [
                "int",
                "str",
                "Optional[Callable]",
                "Optional[Dict]",
                "Optional[str]",
                "Optional"
            ],
            "arguments": {
                "self": []
            }
        },
        "CheckKey.get": {
            "name": "get",
            "location": 85,
            "return": [
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jwt-key-server-legacy/keyserv/forms.py": {},
    "jwt-key-server-legacy/keyserv/keymanager.py": {
        "rand_token": {
            "name": "rand_token",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "length": [
                    "int",
                    "str"
                ],
                "chars": [
                    "int",
                    "str"
                ]
            }
        },
        "token_exists_unsafe": {
            "name": "token_exists_unsafe",
            "location": 75,
            "return": [
                "Callable[[Dict], None]",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "token": [
                    "str"
                ],
                "hwid": [
                    "str"
                ]
            }
        },
        "token_matches_hwid": {
            "name": "token_matches_hwid",
            "location": 82,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str",
                    "Union[bytes, str]",
                    "core.models.User.Key",
                    "List[dict]"
                ],
                "hwid": [
                    "str",
                    "Sequence[str]",
                    "Callable"
                ]
            }
        },
        "generate_token_unsafe": {
            "name": "generate_token_unsafe",
            "location": 89,
            "return": [
                "str",
                "bytes",
                "List[Dict[str, Any]]"
            ],
            "arguments": {}
        },
        "cut_key_unsafe": {
            "name": "cut_key_unsafe",
            "location": 102,
            "return": [
                "str",
                "dict",
                "django.contrib.sites.models.Site",
                "List[str]"
            ],
            "arguments": {
                "activations": [
                    "str"
                ],
                "app_id": [
                    "str",
                    "int",
                    "site.transfer.models.SiteID"
                ],
                "active": [
                    "str",
                    "int",
                    "site.transfer.models.SiteID"
                ],
                "memo": [
                    "str"
                ]
            }
        },
        "disable_key_unsafe": {
            "name": "disable_key_unsafe",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "token": [
                    "str",
                    "int",
                    "List[str]",
                    "List[int]"
                ]
            }
        },
        "_compare": {
            "name": "_compare",
            "location": 140,
            "return": [
                "List[int]",
                "Iterable[str]",
                "Iterable[T]",
                "multinedb.models.workspace.Workspace",
                "int"
            ],
            "arguments": {
                "left": [
                    "List[int]",
                    "list",
                    "bool",
                    "List[float]",
                    "str",
                    "int"
                ],
                "right": [
                    "List[int]",
                    "list",
                    "bool",
                    "List[float]",
                    "str",
                    "int"
                ]
            }
        },
        "key_exists_const": {
            "name": "key_exists_const",
            "location": 149,
            "return": [
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "str",
                    "dict",
                    "List[int]"
                ],
                "token": [
                    "str",
                    "Dict[str, Any]",
                    "int"
                ],
                "origin": [
                    "str",
                    "dict",
                    "bool",
                    "bytes",
                    "sqlalchemy.orm.Session"
                ]
            }
        },
        "key_valid_const": {
            "name": "key_valid_const",
            "location": 166,
            "return": [
                "int",
                "Dict[str, Any]",
                "str",
                "datetime.timedelta"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "str",
                    "dict",
                    "list"
                ],
                "token": [
                    "str",
                    "Dict[str, Any]"
                ],
                "origin": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "key_get_unsafe": {
            "name": "key_get_unsafe",
            "location": 184,
            "return": [
                "str",
                "Optional[str]",
                "List[str]",
                "Callable"
            ],
            "arguments": {
                "app_id": [
                    "str",
                    "Iterable[str]"
                ],
                "token": [
                    "str",
                    "List[str]"
                ],
                "origin": [
                    "str",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "activate_key_unsafe": {
            "name": "activate_key_unsafe",
            "location": 196,
            "return": [
                "str",
                "Union[tuple, list]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "str"
                ],
                "token": [
                    "str",
                    "int"
                ],
                "origin": [
                    "str",
                    "Type[Any]"
                ]
            }
        },
        "Origin.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "ip": [
                    "dict",
                    "str",
                    "int",
                    "Dict[str, str]",
                    "bool",
                    "id3c.db.session.DatabaseSession"
                ],
                "machine": [
                    "dict",
                    "str",
                    "int",
                    "Dict[str, str]",
                    "bool",
                    "id3c.db.session.DatabaseSession"
                ],
                "user": [
                    "dict",
                    "str",
                    "int",
                    "Dict[str, str]",
                    "bool",
                    "id3c.db.session.DatabaseSession"
                ],
                "hardware_id": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "Origin.__str__": {
            "name": "__str__",
            "location": 55,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Origin.__repr__": {
            "name": "__repr__",
            "location": 58,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jwt-key-server-legacy/keyserv/models.py": {
        "Key.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "List[str]",
                    "bool"
                ],
                "remaining": [
                    "str",
                    "int",
                    "Dict[str, str]",
                    "dict"
                ],
                "app_id": [
                    "str",
                    "Optional[str]",
                    "int",
                    "Set[int]"
                ],
                "enabled": [
                    "str",
                    "int",
                    "Dict[str, str]",
                    "dict"
                ],
                "memo": [
                    "str",
                    "int",
                    "Dict[str, str]",
                    "dict"
                ],
                "hwid": [
                    "str",
                    "int",
                    "Dict[str, str]",
                    "dict"
                ]
            }
        },
        "Key.__str__": {
            "name": "__str__",
            "location": 73,
            "return": [
                "str",
                "Dict[int, str]",
                "Optional[Dict[str, Any]]",
                "Literal",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuditLog.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key_id": [
                    "str",
                    "int"
                ],
                "app_id": [
                    "Optional[str]",
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "message": [
                    "bool",
                    "str",
                    "Optional[Callable[[], bool]]",
                    "Optional[str]"
                ],
                "event_type": [
                    "str",
                    "int",
                    "Optional[\"Span\"]",
                    "bool",
                    "List[str]",
                    "Optional[Dict]"
                ]
            }
        },
        "AuditLog.from_key": {
            "name": "from_key",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ],
                "key": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ],
                "message": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ],
                "event_type": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "jwt-key-server-legacy/keyserv/views.py": {
        "favicon": {
            "name": "favicon",
            "location": 38,
            "return": [
                "dict",
                "List[str]",
                "Optional[str]",
                "\"TopicQuery\"",
                "Tuple[str, int, Dict[str, str]]"
            ],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 45,
            "return": [
                "int",
                "List[str]",
                "Dict[str, Any]",
                "jumeaux.models.Res2ResAddOnPayload",
                "str"
            ],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 63,
            "return": [
                "str",
                "Dict[str, str]",
                "bool",
                "int"
            ],
            "arguments": {}
        },
        "keys": {
            "name": "keys",
            "location": 70,
            "return": [
                "str",
                "bytes",
                "dict"
            ],
            "arguments": {}
        },
        "apps": {
            "name": "apps",
            "location": 76,
            "return": [
                "str",
                "bool",
                "Optional[int]"
            ],
            "arguments": {}
        },
        "logs": {
            "name": "logs",
            "location": 82,
            "return": [
                "str",
                "int",
                "dict"
            ],
            "arguments": {}
        },
        "modify_key": {
            "name": "modify_key",
            "location": 88,
            "return": [
                "str",
                "salon.models.Stylist",
                "int"
            ],
            "arguments": {
                "key_id": [
                    "str",
                    "int"
                ]
            }
        },
        "add_key": {
            "name": "add_key",
            "location": 146,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "bool"
                ]
            }
        },
        "add_app": {
            "name": "add_app",
            "location": 168,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "modify_app": {
            "name": "modify_app",
            "location": 189,
            "return": [
                "str",
                "bool",
                "int",
                "Optional[Dict]",
                "Dict[str, str]"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "str"
                ]
            }
        },
        "detail_key": {
            "name": "detail_key",
            "location": 215,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "Union[str, bytes]"
            ],
            "arguments": {
                "key_id": [
                    "str",
                    "int"
                ]
            }
        },
        "detail_app": {
            "name": "detail_app",
            "location": 227,
            "return": [
                "str"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "keys_for_app": {
            "name": "keys_for_app",
            "location": 239,
            "return": [
                "str",
                "Optional[str]",
                "Type[Dict[str, Any]]",
                "int",
                "bool"
            ],
            "arguments": {
                "app_id": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "disable_key": {
            "name": "disable_key",
            "location": 251,
            "return": [
                "str",
                "salon.models.Stylist",
                "int"
            ],
            "arguments": {
                "key_id": [
                    "str",
                    "int"
                ]
            }
        },
        "enable_key": {
            "name": "enable_key",
            "location": 266,
            "return": [
                "str",
                "salon.models.Stylist",
                "int"
            ],
            "arguments": {
                "key_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "jwt-key-server-legacy/keyserv/__init__.py": {
        "format_event": {
            "name": "format_event",
            "location": 33,
            "return": [
                "app.models.GameMember",
                "app.models.course.Course",
                "str"
            ],
            "arguments": {
                "value": [
                    "List[str]",
                    "Dict[str, Any]",
                    "range",
                    "Tuple[str, str]",
                    "str",
                    "Tuple[bytes, int]"
                ]
            }
        },
        "format_datetime": {
            "name": "format_datetime",
            "location": 37,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "value": [
                    "Optional[str]",
                    "Optional[Dict[str, Any]]",
                    "Optional[bool]",
                    "Optional[Union[str, Any]]",
                    "float",
                    "bytes",
                    "str"
                ]
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 47,
            "return": [
                "flask.Flask"
            ],
            "arguments": {
                "config": [
                    "dict",
                    "bool",
                    "List[str]",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "create_app.initdb_command": {
            "name": "initdb_command",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "create_app.create_user_command": {
            "name": "create_user_command",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        }
    }
}
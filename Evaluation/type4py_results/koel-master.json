{
    "koel-master/main.py": {
        "handler": {
            "name": "handler",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "str"
                ],
                "context": [
                    "str"
                ]
            }
        }
    },
    "koel-master/koel/alerts.py": {
        "Alert.published_date": {
            "name": "published_date",
            "location": 24,
            "return": [
                "list",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Alert.updated_date": {
            "name": "updated_date",
            "location": 30,
            "return": [
                "list",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Alert.sms": {
            "name": "sms",
            "location": 36,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertStorage.read_storage": {
            "name": "read_storage",
            "location": 49,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "fs_path": [
                    "str",
                    "IO[Any]"
                ]
            }
        },
        "AlertStorage.write_storage": {
            "name": "write_storage",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "fs_path": [
                    "str",
                    "Optional[str]",
                    "List[str]"
                ],
                "alerts_log": [
                    "str",
                    "dict",
                    "Tuple[int, int]",
                    "bool"
                ]
            }
        },
        "AlertStorage.create_storage": {
            "name": "create_storage",
            "location": 99,
            "return": [
                ""
            ],
            "arguments": {
                "fs_path": [
                    "str"
                ]
            }
        },
        "AlertStorage.storage_exists": {
            "name": "storage_exists",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {
                "fs_path": [
                    "str",
                    "TextIO"
                ]
            }
        },
        "Alerter.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "sms_client": [
                    "str",
                    "dict"
                ],
                "fs_path": [
                    "str"
                ],
                "alerts": [
                    "str",
                    "MutableMapping[str, str]",
                    "List[Dict]",
                    "dict",
                    "int",
                    "bool"
                ]
            }
        },
        "Alerter.notify_and_store_alerts": {
            "name": "notify_and_store_alerts",
            "location": 132,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Alerter.notify_and_store_alert": {
            "name": "notify_and_store_alert",
            "location": 139,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "alert": [
                    "bool",
                    "bytes",
                    "str"
                ]
            }
        },
        "Alerter.upsert_alerts_log": {
            "name": "upsert_alerts_log",
            "location": 173,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "alert": [
                    "Optional[str]"
                ]
            }
        }
    },
    "koel-master/koel/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "koel-master/koel/parser.py": {
        "Parser.parse": {
            "name": "parse",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        }
    },
    "koel-master/koel/sms_client.py": {
        "SMSClient.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict"
                ]
            }
        },
        "SMSClient.send": {
            "name": "send",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "type",
                    "Exception",
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "koel-master/koel/__init__.py": {},
    "koel-master/tests/koel_tests.py": {
        "AlertsTests.test_alert_initialization": {
            "name": "test_alert_initialization",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertsTests.test_alert_published_date": {
            "name": "test_alert_published_date",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertsTests.test_alert_updated_date": {
            "name": "test_alert_updated_date",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertsTests.test_alert_sms": {
            "name": "test_alert_sms",
            "location": 45,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertStorageTests.test_read_storage": {
            "name": "test_read_storage",
            "location": 58,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertStorageTests.test_write_storage": {
            "name": "test_write_storage",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlerterTests.setUp": {
            "name": "setUp",
            "location": 109,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AlerterTests.test_newly_found_alert": {
            "name": "test_newly_found_alert",
            "location": 113,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mocked_read_storage": [
                    "unittesmock.MagicMock",
                    "mock.Mock"
                ],
                "mocked_write_storage": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "AlerterTests.test_known_alert_updated": {
            "name": "test_known_alert_updated",
            "location": 142,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mocked_read_storage": [
                    "unittesmock.MagicMock",
                    "mock.Mock"
                ],
                "mocked_write_storage": [
                    "unittesmock.MagicMock",
                    "mock.MagicMock"
                ]
            }
        },
        "AlerterTests.test_known_alert_not_updated": {
            "name": "test_known_alert_not_updated",
            "location": 175,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mocked_read_storage": [
                    "unittesmock.MagicMock",
                    "mock.Mock"
                ],
                "mocked_write_storage": [
                    "unittesmock.MagicMock",
                    "mock.MagicMock"
                ]
            }
        }
    }
}
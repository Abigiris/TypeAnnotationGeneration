{
    "lambda-basicauth-authorizer-master/authorizers/basicauth.py": {
        "parse_arn": {
            "name": "parse_arn",
            "location": 171,
            "return": [
                "str",
                "dict",
                "Callable[..., None]",
                "Tuple[type]",
                "bool"
            ],
            "arguments": {
                "arn_str": [
                    "str"
                ]
            }
        },
        "basicauth_decode": {
            "name": "basicauth_decode",
            "location": 208,
            "return": [
                "Type",
                "dict",
                "Tuple[str]"
            ],
            "arguments": {
                "encoded_str": [
                    "str",
                    "Optional[int]",
                    "Optional[str]",
                    "BinaryIO",
                    "bytes"
                ]
            }
        },
        "check_basicauth_header_authorization_handler": {
            "name": "check_basicauth_header_authorization_handler",
            "location": 261,
            "return": [
                "Optional[str]",
                "List[str]",
                "Dict[str, str]",
                "int",
                "Dict[str, Any]",
                "bytes",
                "str"
            ],
            "arguments": {
                "event": [],
                "context": [
                    "dict",
                    "list",
                    "str"
                ]
            }
        },
        "AuthPolicy.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "principal": [
                    "int",
                    "str"
                ],
                "aws_accountid": [
                    "str",
                    "bytes",
                    "Dict[str, str]"
                ]
            }
        },
        "AuthPolicy._add_method": {
            "name": "_add_method",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "effect": [
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "verb": [
                    "str",
                    "bool",
                    "List[str]",
                    "dict"
                ],
                "resource": [
                    "str",
                    "bool",
                    "os.DirEntry",
                    "type",
                    "BinaryIO"
                ],
                "conditions": [
                    "List[str]",
                    "str",
                    "Optional[str]",
                    "Dict[str, str]",
                    "list",
                    "dict"
                ]
            }
        },
        "AuthPolicy._get_empty_statement": {
            "name": "_get_empty_statement",
            "location": 114,
            "return": [
                "str",
                "Optional[str]",
                "Optional[Callable]"
            ],
            "arguments": {
                "self": [],
                "effect": [
                    "str"
                ]
            }
        },
        "AuthPolicy._get_statement_for_effect": {
            "name": "_get_statement_for_effect",
            "location": 124,
            "return": [
                "type",
                "str",
                "Type[T]",
                "Union[str, List[str]]",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "effect": [
                    "str",
                    "Optional[str]"
                ],
                "methods": [
                    "str",
                    "Union[int, float]"
                ]
            }
        },
        "AuthPolicy.allow_all_methods": {
            "name": "allow_all_methods",
            "location": 145,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthPolicy.build": {
            "name": "build",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lambda-basicauth-authorizer-master/authorizers/install.py": {
        "install_authorizer_to_restapi_methods": {
            "name": "install_authorizer_to_restapi_methods",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "restapi_id": [
                    "str",
                    "int"
                ]
            }
        },
        "deploy_api": {
            "name": "deploy_api",
            "location": 93,
            "return": [
                ""
            ],
            "arguments": {
                "restapi_id": [
                    "str",
                    "Optional[str]",
                    "int"
                ]
            }
        }
    },
    "lambda-basicauth-authorizer-master/authorizers/__init__.py": {}
}
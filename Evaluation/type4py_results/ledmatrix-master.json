{
    "ledmatrix-master/ledmatrix/matrix.py": {
        "LedMatrix.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "gpio_pin_name": [
                    "str",
                    "Optional[str]"
                ],
                "num_rows": [
                    "int",
                    "List[int]",
                    "float",
                    "tuple"
                ],
                "num_cols": [
                    "int",
                    "bytes",
                    "list"
                ],
                "brightness": [
                    "Optional[int]",
                    "bool",
                    "int",
                    "float",
                    "str"
                ],
                "auto_write": [
                    "Optional[int]",
                    "bool",
                    "int",
                    "float",
                    "str"
                ],
                "pixel_order": [
                    "bool",
                    "Optional[str]",
                    "Union[int, str]",
                    "Union[None, str, Pattern[str]]"
                ],
                "origin": [
                    "str",
                    "Optional[str]",
                    "Iterable[str]",
                    "Optional[int]"
                ],
                "orientation": [
                    "str",
                    "Optional[str]",
                    "Iterable[str]",
                    "Optional[int]"
                ],
                "default_color": [
                    "str",
                    "Optional[str]",
                    "Iterable[str]",
                    "Optional[int]"
                ]
            }
        },
        "LedMatrix.render": {
            "name": "render",
            "location": 105,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "LedMatrix.fill": {
            "name": "fill",
            "location": 115,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "Union[float, int]",
                    "float",
                    "bool"
                ]
            }
        },
        "LedMatrix.shift_left": {
            "name": "shift_left",
            "location": 120,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "values": [
                    "int",
                    "str",
                    "Tuple[Hashable]",
                    "float"
                ]
            }
        },
        "LedMatrix.deinit": {
            "name": "deinit",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "LedMatrix._neopixel_set": {
            "name": "_neopixel_set",
            "location": 131,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]",
                "str",
                "Optional[List[Any]]",
                "Optional[List[str]]",
                "Optional[Union[str, Any]]",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "matrix_row_index": [
                    "int",
                    "Set[Tuple[str, ...]]"
                ],
                "matrix_col_index": [
                    "str",
                    "int",
                    "bool",
                    "Optional[int]"
                ],
                "value": [
                    "Optional[Tuple[int, ...]]",
                    "Optional[Sequence[Any]]",
                    "BinaryIO",
                    "int"
                ]
            }
        },
        "LedMatrix.__repr__": {
            "name": "__repr__",
            "location": 252,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LedMatrix.__len__": {
            "name": "__len__",
            "location": 265,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LedMatrix.__getitem__": {
            "name": "__getitem__",
            "location": 268,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "LedMatrix.__setitem__": {
            "name": "__setitem__",
            "location": 271,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "Callable",
                    "str"
                ],
                "color": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "_LedMatrixRow.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "parent_matrix": [
                    "Callable",
                    "str",
                    "Set[str]",
                    "Optional[Dict[str, str]]",
                    "Iterable[str]",
                    "int"
                ],
                "parent_matrix_index": [
                    "Callable",
                    "str",
                    "Set[str]",
                    "Optional[Dict[str, str]]",
                    "Iterable[str]",
                    "int"
                ],
                "length": [
                    "int",
                    "str",
                    "FrozenSet[Any]",
                    "bool",
                    "float"
                ]
            }
        },
        "_LedMatrixRow.fill": {
            "name": "fill",
            "location": 286,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float",
                    "Union[str, bytes]"
                ]
            }
        },
        "_LedMatrixRow.shift_left": {
            "name": "shift_left",
            "location": 290,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "float",
                    "bool",
                    "Union[int, float]",
                    "int"
                ]
            }
        },
        "_LedMatrixRow.__len__": {
            "name": "__len__",
            "location": 305,
            "return": [
                "int",
                "bool",
                "float",
                "Dict[str, Dict[str, int]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_LedMatrixRow.__getitem__": {
            "name": "__getitem__",
            "location": 308,
            "return": [
                "Tuple[int, int]",
                "float",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "Tuple[int, int]",
                    "int",
                    "str",
                    "Sequence[str]",
                    "bool"
                ]
            }
        },
        "_LedMatrixRow.__setitem__": {
            "name": "__setitem__",
            "location": 311,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "index": [
                    "float",
                    "Iterable[Any]",
                    "str"
                ],
                "value": [
                    "float",
                    "Iterable[Any]",
                    "str"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/__init__.py": {},
    "ledmatrix-master/ledmatrix/animations/color_cycle.py": {
        "ColorCycle.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ColorCycle.next_state": {
            "name": "next_state",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ColorCycle._next_pixel_value": {
            "name": "_next_pixel_value",
            "location": 36,
            "return": [
                "int",
                "str",
                "Tuple[int, int]",
                "Tuple[str, int]"
            ],
            "arguments": {
                "pixel": [
                    "int",
                    "str",
                    "utilities.UtilityValue",
                    "Union[float, int]"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/animations/game_of_life.py": {
        "GameOfLife.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GameOfLife.next_state": {
            "name": "next_state",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GameOfLife._is_alive": {
            "name": "_is_alive",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cell": [
                    "str",
                    "int"
                ]
            }
        },
        "GameOfLife._will_live": {
            "name": "_will_live",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cell": [
                    "str",
                    "int",
                    "list"
                ]
            }
        },
        "GameOfLife._get_neighbor_coordinates": {
            "name": "_get_neighbor_coordinates",
            "location": 84,
            "return": [
                "list",
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "cell": [
                    "int",
                    "bool"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/animations/strobe.py": {
        "Strobe.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "int",
                "List[str]",
                "List[Tuple[str, str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Strobe.next_state": {
            "name": "next_state",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ledmatrix-master/ledmatrix/animations/ticker.py": {
        "Ticker.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Ticker.write_static": {
            "name": "write_static",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bytes"
                ],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "Ticker.write_scroll": {
            "name": "write_scroll",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "Optional[bytes]"
                ],
                "color": [
                    "str",
                    "Set[str]",
                    "List[str]",
                    "bool"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/animations/__init__.py": {},
    "ledmatrix-master/ledmatrix/stubs/mock_board.py": {
        "MockBoard.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockBoard.__getattribute__": {
            "name": "__getattribute__",
            "location": 16,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "attr_name": [
                    "str",
                    "Type"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/stubs/mock_gpio_pin.py": {
        "MockGpioPin.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "pin_index": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/stubs/mock_neopixel.py": {
        "MockNeoPixel.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "gpio_pin": [
                    "int",
                    "bool",
                    "str"
                ],
                "pixel_width": [
                    "int",
                    "float"
                ],
                "brightness": [
                    "int",
                    "float",
                    "Optional[List[Any]]",
                    "bytes"
                ],
                "auto_write": [
                    "int",
                    "float",
                    "Optional[List[Any]]",
                    "bytes"
                ],
                "pixel_order": [
                    "int",
                    "float",
                    "Optional[List[Any]]",
                    "bytes"
                ]
            }
        },
        "MockNeoPixel.__repr__": {
            "name": "__repr__",
            "location": 32,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockNeoPixel.__len__": {
            "name": "__len__",
            "location": 42,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockNeoPixel.__getitem__": {
            "name": "__getitem__",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "MockNeoPixel.__setitem__": {
            "name": "__setitem__",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "Sequence[int]",
                    "str"
                ],
                "color": [
                    "List[int]",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "MockNeoPixel.fill": {
            "name": "fill",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "color": [
                    "List[int]",
                    "board.Color",
                    "str"
                ]
            }
        },
        "MockNeoPixel.show": {
            "name": "show",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MockNeoPixel.deinit": {
            "name": "deinit",
            "location": 73,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MockNeoPixel._rgb_to_grb": {
            "name": "_rgb_to_grb",
            "location": 78,
            "return": [
                "bytes",
                "int",
                "IO",
                "List[str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "color": [
                    "Optional[bytes]",
                    "Optional[int]",
                    "float",
                    "Optional[str]"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/stubs/__init__.py": {},
    "ledmatrix-master/ledmatrix/utilities/colors.py": {
        "Color.__bool__": {
            "name": "__bool__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Color.__repr__": {
            "name": "__repr__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ledmatrix-master/ledmatrix/utilities/font.py": {
        "Font.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "color": [
                    "bool",
                    "Sequence[str]",
                    "str"
                ],
                "font_path": [
                    "str",
                    "Callable[[str], None]"
                ],
                "font_height_px": [
                    "bool",
                    "Sequence[str]",
                    "str"
                ],
                "enable_antialiasing": [
                    "bool",
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "Font.text_to_matrix": {
            "name": "text_to_matrix",
            "location": 48,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "Tuple[str]"
                ]
            }
        },
        "Font._join_matrices": {
            "name": "_join_matrices",
            "location": 90,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "matrices": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Font._char_to_matrix": {
            "name": "_char_to_matrix",
            "location": 102,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "char": [
                    "int",
                    "str",
                    "float",
                    "Dict[str, Any]"
                ],
                "font_path": [
                    "str",
                    "Tuple[str, str]"
                ],
                "font_height_px": [
                    "str",
                    "int",
                    "bool"
                ],
                "font_expand_px": [
                    "str",
                    "int",
                    "bool",
                    "List[str]",
                    "bytes",
                    "dict"
                ],
                "font_shift_down_px": [
                    "str",
                    "int",
                    "bool",
                    "Optional[Dict[str, Any]]"
                ],
                "enable_antialiasing": [
                    "str",
                    "bool",
                    "Callable[[Optional], None]",
                    "List[str]"
                ]
            }
        },
        "Font._get_font_options": {
            "name": "_get_font_options",
            "location": 149,
            "return": [
                "str",
                "bool",
                "int",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Font._eight_bit_value_to_color": {
            "name": "_eight_bit_value_to_color",
            "location": 197,
            "return": [
                "List[int]",
                "str",
                "int"
            ],
            "arguments": {
                "eight_bit_int": [
                    "int",
                    "List[float]",
                    "bool"
                ],
                "color": [
                    "int",
                    "List[float]",
                    "bool"
                ]
            }
        }
    },
    "ledmatrix-master/ledmatrix/utilities/__init__.py": {}
}
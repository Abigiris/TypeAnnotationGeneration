{
    "lib_detect_encoding-master/build_docs.py": {
        "project_specific": {
            "name": "project_specific",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "repository_slug": [
                    "str",
                    "bool",
                    "Optional[Callable]",
                    "Exception"
                ],
                "repository": [
                    "str",
                    "bool",
                    "Optional[Callable]",
                    "Exception"
                ],
                "repository_dashed": [
                    "str",
                    "bool",
                    "Optional[Callable]",
                    "Exception"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "lib_detect_encoding-master/conftest.py": {
        "pytest_cmdline_preparse": {
            "name": "pytest_cmdline_preparse",
            "location": 8,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "lib_detect_encoding-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 19,
            "return": [
                "str",
                "Optional[str]",
                "Union[str, Tuple[str, str]]"
            ],
            "arguments": {
                "dist_directory": [
                    "pathlib.Path",
                    "int",
                    "Union[str, pathlib.Path]",
                    "Union[pathlib.Path, str]"
                ]
            }
        },
        "is_travis_deploy": {
            "name": "is_travis_deploy",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "strip_links_from_required": {
            "name": "strip_links_from_required",
            "location": 32,
            "return": [
                "Set[str]",
                "List[Match]",
                "List[str]",
                "Dict[str, str]",
                "bool",
                "Iterable[str]"
            ],
            "arguments": {
                "l_required": [
                    "List[str]",
                    "int",
                    "list"
                ]
            }
        }
    },
    "lib_detect_encoding-master/lib_detect_encoding/lib_detect_encoding.py": {
        "_disable_chardet_confidence_logging": {
            "name": "_disable_chardet_confidence_logging",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "detect_encoding": {
            "name": "detect_encoding",
            "location": 24,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "raw_bytes": [
                    "int",
                    "bytes",
                    "slice"
                ]
            }
        },
        "get_encoding": {
            "name": "get_encoding",
            "location": 39,
            "return": [
                "str",
                "int"
            ],
            "arguments": {}
        },
        "get_encoding_linux": {
            "name": "get_encoding_linux",
            "location": 48,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "get_encoding_windows": {
            "name": "get_encoding_windows",
            "location": 53,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {}
        }
    },
    "lib_detect_encoding-master/lib_detect_encoding/__init__.py": {
        "get_version": {
            "name": "get_version",
            "location": 5,
            "return": [
                "str",
                "Optional[str]",
                "Union[str, Tuple[str, str]]"
            ],
            "arguments": {}
        }
    }
}
{
    "littlebit-master/python/littlebit/utils.py": {
        "little_endian_to_int": {
            "name": "little_endian_to_int",
            "location": 1,
            "return": [
                "Dict[str, Any]",
                "bytes",
                "int",
                "dict"
            ],
            "arguments": {
                "bytestring": [
                    "bytes",
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "int_to_little_endian": {
            "name": "int_to_little_endian",
            "location": 8,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "n": [
                    "int",
                    "str",
                    "float",
                    "bytes"
                ],
                "length": [
                    "int",
                    "str",
                    "float",
                    "bytes"
                ]
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/field.py": {
        "FieldElement.__repr__": {
            "name": "__repr__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FieldElement.__post_init__": {
            "name": "__post_init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FieldElement.__eq__": {
            "name": "__eq__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FieldElement.__add__": {
            "name": "__add__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FieldElement.__sub__": {
            "name": "__sub__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FieldElement.__mul__": {
            "name": "__mul__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FieldElement.__pow__": {
            "name": "__pow__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "exponent": []
            }
        },
        "FieldElement.__truediv__": {
            "name": "__truediv__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "FieldElement.__rmul__": {
            "name": "__rmul__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "coefficient": []
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/point.py": {
        "Point.is_identity": {
            "name": "is_identity",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Point.__post_init__": {
            "name": "__post_init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Point.__eq__": {
            "name": "__eq__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__add__": {
            "name": "__add__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__rmul__": {
            "name": "__rmul__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "coefficient": []
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/utils.py": {
        "hash160": {
            "name": "hash160",
            "location": 6,
            "return": [
                "str",
                "Set[str]",
                "dict",
                "list",
                "bool"
            ],
            "arguments": {
                "s": [
                    "str",
                    "int"
                ]
            }
        },
        "hash256": {
            "name": "hash256",
            "location": 13,
            "return": [
                "Callable",
                "Tuple[int, int]",
                "bool",
                "str",
                "list"
            ],
            "arguments": {
                "s": [
                    "str",
                    "int"
                ]
            }
        },
        "encode_base58": {
            "name": "encode_base58",
            "location": 20,
            "return": [
                "str",
                "int",
                "Optional[str]",
                "Callable[[KT], VT]"
            ],
            "arguments": {
                "bytestring": [
                    "bool",
                    "bytes",
                    "str"
                ]
            }
        },
        "checksum": {
            "name": "checksum",
            "location": 46,
            "return": [
                "int",
                "Dict[str, int]",
                "bool"
            ],
            "arguments": {
                "bytestring": [
                    "bytes",
                    "str",
                    "List[List[str]]",
                    "int",
                    "tuple"
                ]
            }
        },
        "encode_base58_checksum": {
            "name": "encode_base58_checksum",
            "location": 53,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "bytestring": [
                    "bytes",
                    "str",
                    "int",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/__init__.py": {},
    "littlebit-master/python/littlebit/cryptography/secp256k1/constants.py": {},
    "littlebit-master/python/littlebit/cryptography/secp256k1/field.py": {
        "S256FieldElement.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "number": [],
                "prime": []
            }
        },
        "S256FieldElement.sqrt": {
            "name": "sqrt",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/secp256k1/point.py": {
        "S256Point.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "a": [],
                "b": []
            }
        },
        "S256Point.__rmul__": {
            "name": "__rmul__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "coefficient": []
            }
        },
        "S256Point.verify": {
            "name": "verify",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "z": [],
                "signature": []
            }
        },
        "S256Point.sec": {
            "name": "sec",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "compressed": []
            }
        },
        "S256Point.parse": {
            "name": "parse",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": [],
                "sec_bin": []
            }
        },
        "S256Point.address": {
            "name": "address",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "compressed": [],
                "testnet": []
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/secp256k1/private_key.py": {
        "PrivateKey.__post_init__": {
            "name": "__post_init__",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateKey.hex": {
            "name": "hex",
            "location": 22,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateKey.sign": {
            "name": "sign",
            "location": 25,
            "return": [
                "set",
                "Optional[Union[str, Any]]",
                "str",
                "signature.Signature"
            ],
            "arguments": {
                "self": [],
                "z": [
                    "float",
                    "bool"
                ]
            }
        },
        "PrivateKey.deterministic_k": {
            "name": "deterministic_k",
            "location": 35,
            "return": [
                "str",
                "bool",
                "Callable",
                "Dict[str, str]",
                "Set[str]"
            ],
            "arguments": {
                "self": [],
                "z": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "PrivateKey.wif": {
            "name": "wif",
            "location": 63,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "compressed": [
                    "int",
                    "Callable",
                    "str"
                ],
                "testnet": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/secp256k1/signature.py": {
        "Signature.__repr__": {
            "name": "__repr__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Signature.der": {
            "name": "der",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Signature.parse": {
            "name": "parse",
            "location": 54,
            "return": [],
            "arguments": {
                "cls": [],
                "signature_bin": []
            }
        }
    },
    "littlebit-master/python/littlebit/cryptography/secp256k1/__init__.py": {},
    "littlebit-master/python/tests/cryptography/test_ecc_finite_fields.py": {
        "test_on_curve": {
            "name": "test_on_curve",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add": {
            "name": "test_add",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_rmul": {
            "name": "test_rmul",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "littlebit-master/python/tests/cryptography/test_field_element.py": {
        "test_number_range": {
            "name": "test_number_range",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_ne": {
            "name": "test_ne",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add": {
            "name": "test_add",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sub": {
            "name": "test_sub",
            "location": 38,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_mul": {
            "name": "test_mul",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_pow": {
            "name": "test_pow",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_div": {
            "name": "test_div",
            "location": 78,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_rmul": {
            "name": "test_rmul",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "littlebit-master/python/tests/cryptography/test_point.py": {
        "test_ne": {
            "name": "test_ne",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add_different_curves": {
            "name": "test_add_different_curves",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add__additive_inverse": {
            "name": "test_add__additive_inverse",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add__line_with_slope": {
            "name": "test_add__line_with_slope",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add__tangent_with_slope": {
            "name": "test_add__tangent_with_slope",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add__vertical_tangent": {
            "name": "test_add__vertical_tangent",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "littlebit-master/python/tests/cryptography/test_secp256k1.py": {
        "test_order": {
            "name": "test_order",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_pubpoint": {
            "name": "test_pubpoint",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_verify": {
            "name": "test_verify",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sign": {
            "name": "test_sign",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sec": {
            "name": "test_sec",
            "location": 72,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_der": {
            "name": "test_der",
            "location": 119,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_address": {
            "name": "test_address",
            "location": 138,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_wif": {
            "name": "test_wif",
            "location": 161,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "littlebit-master/python/tests/cryptography/test_secp256k1_utils.py": {
        "test_base58": {
            "name": "test_base58",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
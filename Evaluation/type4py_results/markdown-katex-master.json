{
    "markdown-katex-master/setup.py": {
        "project_path": {
            "name": "project_path",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "read": {
            "name": "read",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "markdown-katex-master/scripts/exit_0_if_empty.py": {},
    "markdown-katex-master/src/markdown_katex/extension.py": {
        "_clean_block_text": {
            "name": "_clean_block_text",
            "location": 35,
            "return": [],
            "arguments": {
                "block_text": [
                    "str",
                    "Pattern"
                ]
            }
        },
        "make_marker_id": {
            "name": "make_marker_id",
            "location": 43,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "text": [
                    "str",
                    "bool"
                ]
            }
        },
        "svg2img": {
            "name": "svg2img",
            "location": 48,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "html": [
                    "int",
                    "str"
                ]
            }
        },
        "tex2html": {
            "name": "tex2html",
            "location": 72,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "tex": [
                    "str",
                    "VT"
                ],
                "options": [
                    "markdown_katex.wrapper.Options",
                    "Mapping[str, Any]",
                    "Dict[str, Any]",
                    "Dict[str, float]"
                ]
            }
        },
        "md_block2html": {
            "name": "md_block2html",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "block_text": [
                    "str"
                ],
                "default_options": [
                    "markdown_katex.wrapper.Options",
                    "dict",
                    "Dict[str, str]",
                    "DefaultDict[str, int]",
                    "int",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "_clean_inline_text": {
            "name": "_clean_inline_text",
            "location": 104,
            "return": [
                "str",
                "Callable[..., T]",
                "list"
            ],
            "arguments": {
                "inline_text": [
                    "str"
                ]
            }
        },
        "md_inline2html": {
            "name": "md_inline2html",
            "location": 116,
            "return": [
                "str",
                "List[str]",
                "Iterable[int]",
                "bool"
            ],
            "arguments": {
                "inline_text": [
                    "int",
                    "Optional[int]",
                    "Union[int, str]",
                    "str",
                    "bool"
                ],
                "default_options": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "iter_inline_katex": {
            "name": "iter_inline_katex",
            "location": 132,
            "return": [
                "typing.Iterable[InlineCodeItem]"
            ],
            "arguments": {
                "line": [
                    "int",
                    "List[int]",
                    "List[OrderedDict]",
                    "Sequence[Sequence[Any]]",
                    "Tuple[str, str]",
                    "str"
                ]
            }
        },
        "KatexExtension.__init__": {
            "name": "__init__",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KatexExtension.reset": {
            "name": "reset",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KatexExtension.extendMarkdown": {
            "name": "extendMarkdown",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": []
            }
        },
        "KatexPreprocessor.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "bool",
                    "str",
                    "int",
                    "Set[str]"
                ],
                "ext": [
                    "str",
                    "Tuple[str, bool]"
                ]
            }
        },
        "KatexPreprocessor._make_tag_for_block": {
            "name": "_make_tag_for_block",
            "location": 198,
            "return": [
                "type",
                "ForwardRef",
                "str",
                "Callable",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "block_lines": [
                    "int",
                    "Union[int, str]",
                    "List[int]"
                ]
            }
        },
        "KatexPreprocessor._make_tag_for_inline": {
            "name": "_make_tag_for_inline",
            "location": 210,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "inline_text": [
                    "str",
                    "Dict[str, str]"
                ]
            }
        },
        "KatexPreprocessor._iter_out_lines": {
            "name": "_iter_out_lines",
            "location": 218,
            "return": [
                "typing.Iterable[builtins.str]"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "List[str]",
                    "List[AnyStr]",
                    "Iterable[str]",
                    "str"
                ]
            }
        },
        "KatexPreprocessor.run": {
            "name": "run",
            "location": 267,
            "return": [
                "BaseException",
                "Optional[Dict]"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "str",
                    "List[str]",
                    "Counter[str]",
                    "Union[bytes, str]"
                ]
            }
        },
        "KatexPostprocessor.__init__": {
            "name": "__init__",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "bool",
                    "str",
                    "int",
                    "Set[str]"
                ],
                "ext": [
                    "str",
                    "Tuple[str, bool]"
                ]
            }
        },
        "KatexPostprocessor.run": {
            "name": "run",
            "location": 286,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "markdown-katex-master/src/markdown_katex/html.py": {},
    "markdown-katex-master/src/markdown_katex/wrapper.py": {
        "_get_env_paths": {
            "name": "_get_env_paths",
            "location": 56,
            "return": [
                "typing.Iterable[pathlib2.Path]"
            ],
            "arguments": {}
        },
        "_get_local_bin_candidates": {
            "name": "_get_local_bin_candidates",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_get_usr_parts": {
            "name": "_get_usr_parts",
            "location": 83,
            "return": [
                "Optional[str]",
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "_get_pkg_bin_path": {
            "name": "_get_pkg_bin_path",
            "location": 120,
            "return": [
                "str",
                "List[str]",
                "list"
            ],
            "arguments": {
                "osname": [
                    "str"
                ],
                "machine": [
                    "str"
                ]
            }
        },
        "get_bin_cmd": {
            "name": "get_bin_cmd",
            "location": 138,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_iter_output_lines": {
            "name": "_iter_output_lines",
            "location": 147,
            "return": [
                "T",
                "str",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "buf": [
                    "bytes",
                    "TextIO"
                ]
            }
        },
        "read_output": {
            "name": "read_output",
            "location": 156,
            "return": [
                "str",
                "bytes",
                "Union[str, bytes]",
                "Optional[int]"
            ],
            "arguments": {
                "buf": [
                    "Optional[IO[bytes]]",
                    "bool",
                    "Optional[IO[str]]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "_iter_cmd_parts": {
            "name": "_iter_cmd_parts",
            "location": 169,
            "return": [
                "typing.Iterable[builtins.str]"
            ],
            "arguments": {
                "options": [
                    "OrderedDict",
                    "Dict[str, Any]",
                    "List[str]"
                ]
            }
        },
        "_cmd_digest": {
            "name": "_cmd_digest",
            "location": 190,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "tex": [
                    "str",
                    "List[str]",
                    "float"
                ],
                "cmd_parts": [
                    "List[str]",
                    "bool",
                    "dict"
                ]
            }
        },
        "_write_tex2html": {
            "name": "_write_tex2html",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd_parts": [],
                "tex": [
                    "str",
                    "Optional[str]",
                    "Tuple[str]"
                ],
                "tmp_output_file": [
                    "str"
                ]
            }
        },
        "tex2html": {
            "name": "tex2html",
            "location": 237,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "tex": [
                    "bool",
                    "str",
                    "bytearray"
                ],
                "options": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[Tuple[str, str]]",
                    "List[\"Name\"]"
                ]
            }
        },
        "_cleanup_tmp_dir": {
            "name": "_cleanup_tmp_dir",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_get_cmd_help_text": {
            "name": "_get_cmd_help_text",
            "location": 293,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_parse_options_help_text": {
            "name": "_parse_options_help_text",
            "location": 320,
            "return": [
                "bool",
                "type",
                "str"
            ],
            "arguments": {
                "help_text": [
                    "str"
                ]
            }
        },
        "parse_options": {
            "name": "parse_options",
            "location": 343,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "markdown-katex-master/src/markdown_katex/__init__.py": {
        "_make_extension": {
            "name": "_make_extension",
            "location": 20,
            "return": [
                "float",
                "str"
            ],
            "arguments": {}
        }
    },
    "markdown-katex-master/src/markdown_katex/__main__.py": {
        "_selftest": {
            "name": "_selftest",
            "location": 26,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "bool",
                "str",
                "FrozenSet[str]"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "markdown-katex-master/test/test_mdkatex.py": {
        "katex_output": {
            "name": "katex_output",
            "location": 76,
            "return": [
                "str",
                "Tuple[int]",
                "List[bytes]",
                "Iterable[float]",
                "int"
            ],
            "arguments": {}
        },
        "test_svg2img": {
            "name": "test_svg2img",
            "location": 82,
            "return": [
                ""
            ],
            "arguments": {
                "katex_output": [
                    "str",
                    "dict",
                    "Iterable",
                    "Set[str]"
                ]
            }
        },
        "test_regexp": {
            "name": "test_regexp",
            "location": 97,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_inline_parsing": {
            "name": "test_inline_parsing",
            "location": 126,
            "return": [
                ""
            ],
            "arguments": {
                "line": [
                    "Tuple[int]",
                    "dict",
                    "str"
                ],
                "expected": [
                    "Callable[..., Awaitable]"
                ]
            }
        },
        "test_inline_multiple": {
            "name": "test_inline_multiple",
            "location": 131,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_determinism": {
            "name": "test_determinism",
            "location": 147,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_tex2html": {
            "name": "test_tex2html",
            "location": 153,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_basic_block": {
            "name": "test_basic_block",
            "location": 167,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_block_styles": {
            "name": "test_block_styles",
            "location": 191,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_inline_basic": {
            "name": "test_inline_basic",
            "location": 213,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_trailing_whitespace": {
            "name": "test_trailing_whitespace",
            "location": 232,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_inline_quoted": {
            "name": "test_inline_quoted",
            "location": 241,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_marker_uniqueness": {
            "name": "test_marker_uniqueness",
            "location": 259,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_svg_uniqueness": {
            "name": "test_svg_uniqueness",
            "location": 275,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_no_inline_svg": {
            "name": "test_no_inline_svg",
            "location": 310,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_insert_fonts_css": {
            "name": "test_insert_fonts_css",
            "location": 333,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_err_msg": {
            "name": "test_err_msg",
            "location": 350,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_bin_paths": {
            "name": "test_bin_paths",
            "location": 362,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_html_output": {
            "name": "test_html_output",
            "location": 371,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_valid_xml": {
            "name": "test_valid_xml",
            "location": 418,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_ignore_in_non_math_block": {
            "name": "test_ignore_in_non_math_block",
            "location": 444,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_macro_file": {
            "name": "test_macro_file",
            "location": 489,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_md_in_html": {
            "name": "test_md_in_html",
            "location": 524,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_admonition": {
            "name": "test_admonition",
            "location": 564,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_paragraph_for_inline_equation": {
            "name": "test_paragraph_for_inline_equation",
            "location": 588,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "markdown-katex-master/test/__init__.py": {}
}
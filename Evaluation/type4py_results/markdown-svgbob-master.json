{
    "markdown-svgbob-master/setup.py": {
        "project_path": {
            "name": "project_path",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "read": {
            "name": "read",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "markdown-svgbob-master/scripts/exit_0_if_empty.py": {},
    "markdown-svgbob-master/src/markdown_svgbob/extension.py": {
        "_clean_block_text": {
            "name": "_clean_block_text",
            "location": 33,
            "return": [],
            "arguments": {
                "block_text": [
                    "str",
                    "Pattern"
                ]
            }
        },
        "make_marker_id": {
            "name": "make_marker_id",
            "location": 41,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "text": [
                    "str",
                    "bool"
                ]
            }
        },
        "svg2html": {
            "name": "svg2html",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "svg_data": [
                    "str",
                    "Dict[str, Any]",
                    "bytes",
                    "IO[bytes]"
                ],
                "tag_type": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "_parse_min_char_width": {
            "name": "_parse_min_char_width",
            "location": 67,
            "return": [
                "str",
                "List[str]",
                "int"
            ],
            "arguments": {
                "options": [
                    "int",
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "_add_char_padding": {
            "name": "_add_char_padding",
            "location": 78,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "block_text": [
                    "str",
                    "int",
                    "Pattern[str]"
                ],
                "min_width": [
                    "int",
                    "Optional[int]",
                    "Optional[float]",
                    "str"
                ]
            }
        },
        "_postprocess_svg": {
            "name": "_postprocess_svg",
            "location": 109,
            "return": [
                "str",
                "Optional[float]",
                "bool"
            ],
            "arguments": {
                "svg_data": [
                    "bytes",
                    "Dict[str, Any]",
                    "dict",
                    "str"
                ],
                "bg_color": [
                    "str",
                    "Dict[str, Union[str, bool]]",
                    "Callable"
                ],
                "fg_color": [
                    "str",
                    "Dict[str, Union[str, bool]]",
                    "Callable"
                ]
            }
        },
        "draw_bob": {
            "name": "draw_bob",
            "location": 137,
            "return": [
                "dict",
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "block_text": [
                    "str"
                ],
                "default_options": [
                    "markdown_svgbob.wrapper.Options",
                    "markdown_katex.wrapper.Options",
                    "str",
                    "Iterable[Tuple[int, int]]",
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "SvgbobExtension.__init__": {
            "name": "__init__",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SvgbobExtension.reset": {
            "name": "reset",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SvgbobExtension.extendMarkdown": {
            "name": "extendMarkdown",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": []
            }
        },
        "SvgbobPreprocessor.__init__": {
            "name": "__init__",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "bool",
                    "str",
                    "int",
                    "Set[str]"
                ],
                "ext": [
                    "str",
                    "Tuple[str, bool]"
                ]
            }
        },
        "SvgbobPreprocessor.default_options": {
            "name": "default_options",
            "location": 206,
            "return": [
                "bool",
                "Optional[Any]",
                "Union[int, float, complex]",
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "SvgbobPreprocessor._make_tag_for_block": {
            "name": "_make_tag_for_block",
            "location": 217,
            "return": [
                "str",
                "List[str]",
                "Tuple[str]"
            ],
            "arguments": {
                "self": [],
                "block_lines": [
                    "List[str]",
                    "Exception",
                    "Type"
                ]
            }
        },
        "SvgbobPreprocessor._iter_out_lines": {
            "name": "_iter_out_lines",
            "location": 227,
            "return": [
                "typing.Iterable[builtins.str]"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "List[str]",
                    "List[AnyStr]",
                    "Iterable[str]",
                    "str"
                ]
            }
        },
        "SvgbobPreprocessor.run": {
            "name": "run",
            "location": 253,
            "return": [
                "BaseException",
                "Optional[Dict]"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "str",
                    "List[str]",
                    "Counter[str]",
                    "Union[bytes, str]"
                ]
            }
        },
        "SvgbobPostprocessor.__init__": {
            "name": "__init__",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "bool",
                    "str",
                    "int",
                    "Set[str]"
                ],
                "ext": [
                    "str",
                    "Tuple[str, bool]"
                ]
            }
        },
        "SvgbobPostprocessor.run": {
            "name": "run",
            "location": 272,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "markdown-svgbob-master/src/markdown_svgbob/wrapper.py": {
        "_get_env_paths": {
            "name": "_get_env_paths",
            "location": 46,
            "return": [
                "typing.Iterable[pathlib2.Path]"
            ],
            "arguments": {}
        },
        "_get_usr_bin_path": {
            "name": "_get_usr_bin_path",
            "location": 58,
            "return": [
                "str",
                "Dict[str, Any]",
                "bool"
            ],
            "arguments": {}
        },
        "_get_pkg_bin_path": {
            "name": "_get_pkg_bin_path",
            "location": 72,
            "return": [
                "str",
                "List[str]",
                "list"
            ],
            "arguments": {
                "osname": [
                    "str"
                ],
                "machine": [
                    "str"
                ]
            }
        },
        "get_bin_cmd": {
            "name": "get_bin_cmd",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_bin_path": {
            "name": "get_bin_path",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_iter_output_lines": {
            "name": "_iter_output_lines",
            "location": 103,
            "return": [
                "T",
                "str",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "buf": [
                    "bytes",
                    "TextIO"
                ]
            }
        },
        "read_output": {
            "name": "read_output",
            "location": 112,
            "return": [
                "str",
                "bytes",
                "Union[str, bytes]",
                "Optional[int]"
            ],
            "arguments": {
                "buf": [
                    "Optional[IO[bytes]]",
                    "bool",
                    "Optional[IO[str]]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "_iter_cmd_parts": {
            "name": "_iter_cmd_parts",
            "location": 125,
            "return": [
                "typing.Iterable[builtins.str]"
            ],
            "arguments": {
                "options": [
                    "OrderedDict",
                    "Dict[str, Any]",
                    "List[str]"
                ]
            }
        },
        "text2svg": {
            "name": "text2svg",
            "location": 146,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "image_text": [
                    "str",
                    "int"
                ],
                "options": [
                    "str",
                    "bytes",
                    "List[int]",
                    "Tuple[int, int]"
                ]
            }
        },
        "_cleanup_tmp_dir": {
            "name": "_cleanup_tmp_dir",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_get_cmd_help_text": {
            "name": "_get_cmd_help_text",
            "location": 248,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_parse_options_help_text": {
            "name": "_parse_options_help_text",
            "location": 275,
            "return": [
                "bool",
                "type",
                "str"
            ],
            "arguments": {
                "help_text": [
                    "str"
                ]
            }
        },
        "parse_options": {
            "name": "parse_options",
            "location": 297,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "markdown-svgbob-master/src/markdown_svgbob/__init__.py": {
        "_make_extension": {
            "name": "_make_extension",
            "location": 23,
            "return": [
                "float",
                "str"
            ],
            "arguments": {}
        }
    },
    "markdown-svgbob-master/src/markdown_svgbob/__main__.py": {
        "_selftest": {
            "name": "_selftest",
            "location": 47,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 66,
            "return": [
                "str",
                "int",
                "Optional[bool]",
                "Optional[List[Any]]"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "markdown-svgbob-master/test/test_svgbob.py": {
        "test_regexp": {
            "name": "test_regexp",
            "location": 113,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_determinism_svg": {
            "name": "test_determinism_svg",
            "location": 126,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_basic_svg": {
            "name": "test_basic_svg",
            "location": 132,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_trailing_whitespace": {
            "name": "test_trailing_whitespace",
            "location": 157,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_encoding": {
            "name": "test_encoding",
            "location": 165,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_svgbob_options": {
            "name": "test_svgbob_options",
            "location": 191,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_svgbob_config": {
            "name": "test_svgbob_config",
            "location": 216,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extended_svgbob": {
            "name": "test_extended_svgbob",
            "location": 233,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_options_parsing": {
            "name": "test_options_parsing",
            "location": 245,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_postproc": {
            "name": "test_postproc",
            "location": 262,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "test_bin_paths": {
            "name": "test_bin_paths",
            "location": 295,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_html_output": {
            "name": "test_html_output",
            "location": 303,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_ignore_non_bob_blocks": {
            "name": "test_ignore_non_bob_blocks",
            "location": 316,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "markdown-svgbob-master/test/__init__.py": {}
}
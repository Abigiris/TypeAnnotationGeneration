{
    "matomo-dl-master/setup.py": {},
    "matomo-dl-master/matomo_dl/call_tree.py": {
        "normalise_name": {
            "name": "normalise_name",
            "location": 10,
            "return": [
                "str",
                "BaseException",
                "Exception",
                "Type[BaseException]",
                "type",
                "int"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Sequence[Any]",
                    "Optional[str]"
                ],
                "upper_names": [
                    "Collection[str]",
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "normalise_call_names": {
            "name": "normalise_call_names",
            "location": 19,
            "return": [
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "names": [
                    "Iterable[str]",
                    "str",
                    "Type",
                    "Type['Signature']",
                    "Set[str]",
                    "List[str]"
                ],
                "upper_names": [
                    "Collection[str]",
                    "str",
                    "Optional[str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "order_calls_by_dependencies": {
            "name": "order_calls_by_dependencies",
            "location": 54,
            "return": [
                "List[int]",
                "Container[str]",
                "Dict[str, Any]",
                "Type[Any]",
                "set"
            ],
            "arguments": {
                "data": [
                    "bool",
                    "Optional[bool]",
                    "Iterable[bytes]",
                    "bytes"
                ]
            }
        },
        "OrderedCall.normalise": {
            "name": "normalise",
            "location": 40,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": [],
                "upper_names": [
                    "str",
                    "bool",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "OrderedCall.from_callable": {
            "name": "from_callable",
            "location": 50,
            "return": [
                "str",
                "type",
                "Dict[str, str]",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "type",
                    "Union[str, List[str]]",
                    "dict",
                    "int"
                ],
                "call": [
                    "str",
                    "type",
                    "Union[str, List[str]]",
                    "dict",
                    "int"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/colored_diff.py": {
        "ColoredDiffer.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ColoredDiffer.colorise": {
            "name": "colorise",
            "location": 24,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "List[str]",
                    "str",
                    "Iterable[str]"
                ]
            }
        },
        "ColoredDiffer.colorise_char_diff": {
            "name": "colorise_char_diff",
            "location": 30,
            "return": [
                "typing.Iterator[builtins.str]"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "int"
                ],
                "diff": [
                    "bytes",
                    "str",
                    "int",
                    "Tuple[int, int, int]"
                ]
            }
        },
        "ColoredDiffer.compare": {
            "name": "compare",
            "location": 51,
            "return": [
                "typing.Iterator[builtins.str]"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "Union[str, Sequence[str]]",
                    "Sequence[T]",
                    "Iterable[str]",
                    "Sequence[str]",
                    "str",
                    "Iterator[str]"
                ],
                "b": [
                    "Union[str, Sequence[str]]",
                    "Sequence[T]",
                    "Iterable[str]",
                    "Sequence[str]",
                    "AbstractSet[str]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/errors.py": {},
    "matomo-dl-master/matomo_dl/gpg.py": {
        "GpgVerifier.__enter__": {
            "name": "__enter__",
            "location": 26,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GpgVerifier.__exit__": {
            "name": "__exit__",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "ex_type": [
                    "str",
                    "Optional[BaseException]"
                ],
                "value": [
                    "str",
                    "Optional[BaseException]"
                ],
                "traceback": [
                    "str",
                    "Optional[BaseException]"
                ]
            }
        },
        "GpgVerifier.get_tmp_folder": {
            "name": "get_tmp_folder",
            "location": 46,
            "return": [
                "str",
                "Optional[str]",
                "dict",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GpgVerifier.gpg_call": {
            "name": "gpg_call",
            "location": 52,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "GpgVerifier.load_fingerprint": {
            "name": "load_fingerprint",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "fingerprint": [
                    "str",
                    "Callable",
                    "bool"
                ]
            }
        },
        "GpgVerifier.load_public_key": {
            "name": "load_public_key",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key_content": [
                    "str",
                    "Optional[bytes]",
                    "List[int]"
                ]
            }
        },
        "GpgVerifier.verify": {
            "name": "verify",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "str"
                ],
                "signature": [
                    "str",
                    "list",
                    "bytes",
                    "bool",
                    "IO[str]",
                    "Optional[str]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/hashing.py": {
        "all_hashes_for_data": {
            "name": "all_hashes_for_data",
            "location": 11,
            "return": [
                "dict"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "hashes_for_data": {
            "name": "hashes_for_data",
            "location": 15,
            "return": [
                "typing.Iterator[typing.Tuple[builtins.str, builtins.str]]"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "Dict[str, Any]",
                    "str",
                    "bool"
                ]
            }
        },
        "hash_for_data": {
            "name": "hash_for_data",
            "location": 25,
            "return": [
                "bool",
                "str",
                "dict"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "str",
                    "Dict[str, Any]",
                    "bool",
                    "dict"
                ],
                "algo": [
                    "str",
                    "bytes",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/matomo_config.py": {
        "read": {
            "name": "read",
            "location": 13,
            "return": [
                "bool",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "file": [
                    "str",
                    "IO[str]",
                    "List[str]",
                    "BinaryIO",
                    "bool",
                    "list"
                ]
            }
        },
        "write": {
            "name": "write",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {
                "config": [
                    "bool",
                    "Dict[str, Any]",
                    "Optional[Dict]",
                    "Dict[str, str]",
                    "Optional[dict]"
                ],
                "file": [
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, dict]",
                    "str"
                ]
            }
        },
        "_value_to_string": {
            "name": "_value_to_string",
            "location": 63,
            "return": [
                "dict",
                "Callable[[dict], None]",
                "Dict[str, Any]",
                "Optional[float]",
                "bool",
                "Exception",
                "Tuple[bool, str]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "dict"
                ],
                "value": [
                    "Optional[str]",
                    "str",
                    "Optional[Any]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/progress.py": {
        "progressbar": {
            "name": "progressbar",
            "location": 5,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "matomo-dl-master/matomo_dl/__init__.py": {},
    "matomo-dl-master/matomo_dl/__main__.py": {
        "cli": {
            "name": "cli",
            "location": 53,
            "return": [],
            "arguments": {
                "ctx": [],
                "cache_dir": [],
                "cache_level": [],
                "cache_clear": []
            }
        },
        "update": {
            "name": "update",
            "location": 70,
            "return": [],
            "arguments": {
                "ctx": [],
                "distribution_file": [],
                "dry": [],
                "diff": []
            }
        },
        "build": {
            "name": "build",
            "location": 119,
            "return": [],
            "arguments": {
                "ctx": [],
                "distribution_file": [],
                "output_file": [],
                "update_locks": [],
                "fail_if_updates": []
            }
        }
    },
    "matomo-dl-master/matomo_dl/__version__.py": {},
    "matomo-dl-master/matomo_dl/bundle/extract.py": {
        "is_zipinfo_dir": {
            "name": "is_zipinfo_dir",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "info": [
                    "bool",
                    "str",
                    "Optional[Dict[str, Any]]",
                    "Optional[bool]",
                    "Optional[str]"
                ]
            }
        },
        "resolve_filename": {
            "name": "resolve_filename",
            "location": 22,
            "return": [
                "Optional[str]",
                "str",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "destination": [
                    "str",
                    "dict",
                    "List[str]",
                    "int",
                    "List[List[int]]",
                    "list"
                ],
                "name": [
                    "str",
                    "bool",
                    "Callable[..., T]"
                ]
            }
        },
        "extract_zip_file": {
            "name": "extract_zip_file",
            "location": 34,
            "return": [
                "str",
                "pathlib.Path",
                "List[str]"
            ],
            "arguments": {
                "file_data": [
                    "TextIO",
                    "pathlib.Path",
                    "bytes",
                    "IO[bytes]",
                    "zipfile.ZipFile",
                    "Optional[TextIO]",
                    "os.stat_result"
                ],
                "destination": [
                    "pathlib.Path",
                    "bool",
                    "bytes"
                ],
                "root": [
                    "str",
                    "pathlib.Path",
                    "int",
                    "Sequence[str]"
                ],
                "progress": [
                    "Optional[pathlib.Path]",
                    "str",
                    "bool",
                    "TextIO"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/fs_util.py": {
        "iter_tree": {
            "name": "iter_tree",
            "location": 10,
            "return": [
                "typing.Iterator[pathlib.Path]"
            ],
            "arguments": {
                "folder": [
                    "str",
                    "int",
                    "Dict[str, bool]",
                    "bool",
                    "float"
                ]
            }
        },
        "get_path_regex": {
            "name": "get_path_regex",
            "location": 19,
            "return": [
                "str",
                "List[str]",
                "Union[str, pathlib.Path]",
                "list"
            ],
            "arguments": {
                "base_path": [
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "or_regex": {
            "name": "or_regex",
            "location": 48,
            "return": [
                "Optional[str]",
                "str",
                "bool",
                "Optional[int]",
                "Optional[float]"
            ],
            "arguments": {
                "res": [
                    "Set[VT]",
                    "AbstractSet[T]",
                    "str",
                    "Set[str]",
                    "Type[Set[Any]]"
                ]
            }
        },
        "iter_all_matching": {
            "name": "iter_all_matching",
            "location": 58,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "int"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path",
                    "str",
                    "List[pathlib.Path]"
                ],
                "pattern": [
                    "pathlib.Path",
                    "str",
                    "List[pathlib.Path]"
                ]
            }
        },
        "delete_all_matching": {
            "name": "delete_all_matching",
            "location": 64,
            "return": [
                "Optional[Dict]",
                "dict",
                "int"
            ],
            "arguments": {
                "path": [
                    "pathlib.PurePosixPath",
                    "pathlib.PosixPath",
                    "pathlib.Path"
                ]
            }
        },
        "delete_all": {
            "name": "delete_all",
            "location": 78,
            "return": [
                "List[str]",
                "dict",
                "pathlib.Path",
                "str"
            ],
            "arguments": {}
        },
        "delete_all_iter": {
            "name": "delete_all_iter",
            "location": 82,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "bool"
            ],
            "arguments": {
                "paths": [
                    "pathlib.PurePosixPath",
                    "List[pathlib.Path]",
                    "bool",
                    "str",
                    "pathlib.Path",
                    "Iterable[pathlib.Path]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/info.py": {
        "get_environ_build_mtime": {
            "name": "get_environ_build_mtime",
            "location": 16,
            "return": [
                "Optional[str]",
                "bool",
                "Optional[bool]",
                "int"
            ],
            "arguments": {}
        },
        "get_build_mtime": {
            "name": "get_build_mtime",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "default": [
                    "Optional[int]",
                    "Optional[str]",
                    "Optional[Iterable[str]]",
                    "Generator[str, None, None]",
                    "set",
                    "Optional[Dict[str, Any]]",
                    "dict"
                ]
            }
        },
        "BuildInformation.add_source_time": {
            "name": "add_source_time",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "source": [
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "BuildInformation.clamp_mtime": {
            "name": "clamp_mtime",
            "location": 55,
            "return": [
                "str",
                "int",
                "pathlib.Path"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ]
            }
        },
        "BuildInformation.to_output": {
            "name": "to_output",
            "location": 58,
            "return": [
                "Dict[str, List[int]]",
                "str",
                "dict",
                "pathlib.Path",
                "Optional[float]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildInformation.add_removed_files": {
            "name": "add_removed_files",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "files": [
                    "List[str]",
                    "IO[Any]",
                    "IO[str]",
                    "Iterable[pathlib.Path]",
                    "Sequence[str]",
                    "List[Callable]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/stat.py": {
        "is_mode_executable": {
            "name": "is_mode_executable",
            "location": 6,
            "return": [
                "str",
                "bytes",
                "Dict[str, Any]"
            ],
            "arguments": {
                "mode": [
                    "int",
                    "str",
                    "type",
                    "T"
                ]
            }
        },
        "standardise_mode": {
            "name": "standardise_mode",
            "location": 10,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "mode": [
                    "int",
                    "bool",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "standardise_privacy_mode": {
            "name": "standardise_privacy_mode",
            "location": 19,
            "return": [
                "str",
                "List[str]",
                "int"
            ],
            "arguments": {
                "mode": [
                    "int",
                    "bool",
                    "str",
                    "Type[object]",
                    "Optional[str]"
                ]
            }
        },
        "standardise_extended_mode": {
            "name": "standardise_extended_mode",
            "location": 23,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "ext_mode": [
                    "str"
                ]
            }
        },
        "is_extended_mode_dir": {
            "name": "is_extended_mode_dir",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "ext_mode": [
                    "int",
                    "str",
                    "Union[str, bytes]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/__init__.py": {
        "build_release": {
            "name": "build_release",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "session": [
                    "matomo_dl.session.SessionStore",
                    "Optional[\"TaskNode\"]",
                    "Set[str]",
                    "Optional[Mapping[str, str]]"
                ],
                "dist": [
                    "dict",
                    "matomo_dl.session.SessionStore",
                    "str",
                    "Tuple[str, str]"
                ],
                "lock": [
                    "Tuple[str, str]",
                    "bool",
                    "Dict[str, str]",
                    "List[str]",
                    "str",
                    "Union[str, None]"
                ],
                "output_file": [
                    "pathlib.Path",
                    "dict",
                    "robot_server.service.session.configuration.SessionConfiguration"
                ]
            }
        },
        "extract_matomo": {
            "name": "extract_matomo",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "session": [
                    "matomo_dl.session.SessionStore",
                    "bytes",
                    "dict",
                    "Dict[str, Any]"
                ],
                "build": [
                    "Dict[str, Any]"
                ]
            }
        },
        "create_release_tarball": {
            "name": "create_release_tarball",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "build": [
                    "info.BuildInformation",
                    "BinaryIO",
                    "Union[Dict[str, Any], List[Any]]",
                    "IO[bytes]",
                    "Union[str, bytes]"
                ],
                "output_file": [
                    "pathlib.Path"
                ]
            }
        },
        "normalise_tar_info": {
            "name": "normalise_tar_info",
            "location": 111,
            "return": [
                "Optional[int]",
                "Optional[bool]",
                "Optional[str]"
            ],
            "arguments": {
                "build": [
                    "info.BuildInformation",
                    "matomo_dl.bundle.info.BuildInformation"
                ],
                "info": [
                    "tarfile.TarInfo",
                    "dict",
                    "Exception"
                ]
            }
        },
        "iter_folder_for_tar": {
            "name": "iter_folder_for_tar",
            "location": 131,
            "return": [
                "typing.Iterator[typing.Tuple[tarfile.TarInfo, typing.Optional[pathlib.Path]]]"
            ],
            "arguments": {
                "tar": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "build": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "folder": [
                    "pathlib.Path",
                    "str",
                    "Optional[str]",
                    "dict",
                    "Dict[str, Any]"
                ],
                "base_path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/customisation/autoload.py": {
        "regenerate_autoload_classmap": {
            "name": "regenerate_autoload_classmap",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "dict",
                    "bytes"
                ]
            }
        },
        "regenerate_autoload_static": {
            "name": "regenerate_autoload_static",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "dict",
                    "bytes"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/customisation/config.py": {
        "update_plugins_list": {
            "name": "update_plugins_list",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "dict"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/customisation/duplicates.py": {
        "list_duplicates": {
            "name": "list_duplicates",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "pathlib.Path",
                    "dict"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/customisation/manifest.py": {
        "regenerate_manifest": {
            "name": "regenerate_manifest",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "str",
                    "dict",
                    "Callable[[], Any]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/customisation/remove.py": {
        "remove_example_plugins": {
            "name": "remove_example_plugins",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        },
        "remove_build_support": {
            "name": "remove_build_support",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "str"
                ]
            }
        },
        "remove_documentation": {
            "name": "remove_documentation",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "remove_vendored_extras": {
            "name": "remove_vendored_extras",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/customisation/__init__.py": {
        "apply_customisations": {
            "name": "apply_customisations",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "build": [
                    "matomo_dl.bundle.info.BuildInformation",
                    "str"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/bundle/plugin/__init__.py": {
        "extract_plugins": {
            "name": "extract_plugins",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "session": [
                    "Optional[str]",
                    "matomo_dl.session.SessionStore",
                    "bool",
                    "dict",
                    "Optional['SparkSession']",
                    "Optional[int]"
                ],
                "license_key": [
                    "Optional[str]",
                    "matomo_dl.session.SessionStore",
                    "bool",
                    "dict",
                    "Optional['SparkSession']",
                    "Optional[int]"
                ],
                "build": [
                    "Optional[str]",
                    "str",
                    "matomo_dl.session.SessionStore",
                    "sqlalchemy.orm.session.Session",
                    "dict"
                ]
            }
        },
        "extract_versioned_plugin": {
            "name": "extract_versioned_plugin",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "session": [
                    "str",
                    "Dict[str, Any]"
                ],
                "license_key": [
                    "str",
                    "grouper.models.base.session.Session",
                    "Optional[str]"
                ],
                "build": [
                    "str"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ],
                "lock": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/distribution/customisations.py": {
        "filter_customisations": {
            "name": "filter_customisations",
            "location": 17,
            "return": [
                "str",
                "list",
                "Set[str]",
                "Dict[str, Any]",
                "OrderedDict"
            ],
            "arguments": {}
        },
        "Customisation.get_customisation_functions": {
            "name": "get_customisation_functions",
            "location": 28,
            "return": [
                "matomo_dl.bundle.customisation.CustomisationCollection"
            ],
            "arguments": {
                "self": []
            }
        },
        "ManifestCustomisation.get_customisation_functions": {
            "name": "get_customisation_functions",
            "location": 37,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoveCustomisation.get_customisation_functions": {
            "name": "get_customisation_functions",
            "location": 62,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UpdateCustomisation.get_customisation_functions": {
            "name": "get_customisation_functions",
            "location": 88,
            "return": [
                "str",
                "bool",
                "Optional[Tuple[Any, Any]]",
                "Union[str, List[str]]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Customisations.get_customisation_functions": {
            "name": "get_customisation_functions",
            "location": 98,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "matomo-dl-master/matomo_dl/distribution/file.py": {
        "parse_plugin": {
            "name": "parse_plugin",
            "location": 85,
            "return": [
                "str",
                "pathlib.Path",
                "bytes"
            ],
            "arguments": {
                "value": [
                    "Optional[str]",
                    "Optional[int]",
                    "Optional[Union[str, Any]]",
                    "Optional[object]",
                    "Optional[Any]",
                    "str"
                ],
                "_typ": [
                    "int",
                    "Tuple[str, int]",
                    "complex",
                    "list"
                ]
            }
        },
        "unstringify_distribution_file": {
            "name": "unstringify_distribution_file",
            "location": 108,
            "return": [
                "List[str]",
                "Optional[List[str]]",
                "str"
            ],
            "arguments": {
                "base_dir": [
                    "pathlib.Path",
                    "str",
                    "Optional[str]"
                ],
                "file_content": [
                    "str",
                    "dict",
                    "Union[pathlib.Path, str]",
                    "bytes"
                ]
            }
        },
        "stringify_distribution_file": {
            "name": "stringify_distribution_file",
            "location": 116,
            "return": [
                "str",
                "TextIO",
                "BinaryIO",
                "bool",
                "pathlib.Path"
            ],
            "arguments": {
                "dist_file": [
                    "int",
                    "list",
                    "pathlib.Path",
                    "List[Optional[str]]",
                    "List[pathlib.Path]"
                ]
            }
        },
        "DistributionFile._normalise_license_key": {
            "name": "_normalise_license_key",
            "location": 48,
            "return": [
                "Optional[semantic_version.Version]",
                "Optional[dict]",
                "str",
                "Optional[str]",
                "bool",
                "Optional[int]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Optional[pathlib.Path]"
                ],
                "base_dir": [
                    "Optional[pathlib.Path]",
                    "str",
                    "Union[str, int]"
                ],
                "key": [
                    "str"
                ]
            }
        },
        "DistributionFile.normalise_license_key": {
            "name": "normalise_license_key",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "base_dir": [
                    "str",
                    "pathlib.Path",
                    "Sequence[str]"
                ]
            }
        },
        "DistributionFile.versioning_hash": {
            "name": "versioning_hash",
            "location": 71,
            "return": [
                "bool",
                "str",
                "IO[Any]",
                "float",
                "Tuple[bytes]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "matomo-dl-master/matomo_dl/distribution/load_save.py": {
        "lockfile_path_from_distribution": {
            "name": "lockfile_path_from_distribution",
            "location": 13,
            "return": [
                "str",
                "pathlib.Path",
                "Set[pathlib.Path]"
            ],
            "arguments": {
                "distribution_file": [
                    "pathlib.Path",
                    "str",
                    "pathlib.PurePath",
                    "bool"
                ]
            }
        },
        "normfile_path_from_distribution": {
            "name": "normfile_path_from_distribution",
            "location": 20,
            "return": [
                "str",
                "pathlib.Path",
                "Set[pathlib.Path]"
            ],
            "arguments": {
                "distribution_file": [
                    "pathlib.Path",
                    "str",
                    "pathlib.PurePath",
                    "bool"
                ]
            }
        },
        "load_from_distribution_path": {
            "name": "load_from_distribution_path",
            "location": 27,
            "return": [
                "str",
                "bytes",
                "bool",
                "list",
                "int"
            ],
            "arguments": {
                "distribution_file": [
                    "str",
                    "int",
                    "pathlib.Path"
                ]
            }
        },
        "write_lockfile_using_distribution_path": {
            "name": "write_lockfile_using_distribution_path",
            "location": 45,
            "return": [
                ""
            ],
            "arguments": {
                "distribution_file": [
                    "str",
                    "int",
                    "bool"
                ],
                "locks": [
                    "str"
                ]
            }
        },
        "diff_lockfiles": {
            "name": "diff_lockfiles",
            "location": 52,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "old": [
                    "bool",
                    "str",
                    "Callable[..., T]",
                    "Exception",
                    "int"
                ],
                "new": [
                    "Sequence[str]",
                    "float",
                    "Iterable[str]",
                    "bytes",
                    "Optional[str]",
                    "int",
                    "Callable"
                ],
                "quieter": [
                    "int",
                    "bool",
                    "List[Dict[str, Any]]",
                    "float"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/distribution/lock.py": {
        "unstringify_distribution_lock": {
            "name": "unstringify_distribution_lock",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "dist_lock": [
                    "str"
                ]
            }
        },
        "stringify_distribution_lock": {
            "name": "stringify_distribution_lock",
            "location": 79,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dist_lock": [
                    "Callable",
                    "list",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/distribution/version.py": {
        "parse_version": {
            "name": "parse_version",
            "location": 69,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "version": [
                    "str",
                    "Dict[str, str]",
                    "Optional[Pattern[str]]",
                    "dict"
                ]
            }
        },
        "cattr_parse_version": {
            "name": "cattr_parse_version",
            "location": 85,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "Union[float, str]"
            ],
            "arguments": {
                "value": [
                    "str",
                    "int",
                    "float",
                    "AnyStr"
                ],
                "_typ": [
                    "str",
                    "int"
                ]
            }
        },
        "Version.matches_one_only": {
            "name": "matches_one_only",
            "location": 14,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "dict",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Version.matches_any": {
            "name": "matches_any",
            "location": 18,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "dict",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Version.choose_version": {
            "name": "choose_version",
            "location": 21,
            "return": [
                "Tuple[float, float]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "versions": [
                    "str",
                    "List[str]",
                    "Optional[str]",
                    "Union[List[str], str]",
                    "Optional[List[str]]"
                ]
            }
        },
        "Version.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnyVersion.specifier": {
            "name": "specifier",
            "location": 42,
            "return": [
                "str",
                "Set[str]",
                "bool",
                "int",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnyVersion.__str__": {
            "name": "__str__",
            "location": 45,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExactVersion.specifier": {
            "name": "specifier",
            "location": 62,
            "return": [
                "str",
                "Optional[str]",
                "Optional[int]",
                "int",
                "IO"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExactVersion.__str__": {
            "name": "__str__",
            "location": 65,
            "return": [
                "str",
                "Optional[int]",
                "Optional[Dict]",
                "Callable[[], bool]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "matomo-dl-master/matomo_dl/distribution/__init__.py": {},
    "matomo-dl-master/matomo_dl/lock/general.py": {
        "build_lock": {
            "name": "build_lock",
            "location": 15,
            "return": [
                "str",
                "Callable",
                "List[str]"
            ],
            "arguments": {
                "session": [
                    "recidiviz.persistence.database.session.Session"
                ],
                "dist": [
                    "int",
                    "id3c.db.session.DatabaseSession",
                    "Iterable[float]"
                ],
                "lock": [
                    "sqlalchemy.orm.session.Session"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/lock/matomo.py": {
        "get_cache_key": {
            "name": "get_cache_key",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "version": [
                    "str",
                    "bool"
                ]
            }
        },
        "sync_matomo_lock": {
            "name": "sync_matomo_lock",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "session": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]"
                ],
                "version_spec": [
                    "str",
                    "dict",
                    "logging.Logger",
                    "bool",
                    "bytes",
                    "Dict[str, str]"
                ],
                "existing_lock": [
                    "str",
                    "List[int]",
                    "Type['DataclassT']",
                    "int"
                ]
            }
        },
        "get_matomo_version": {
            "name": "get_matomo_version",
            "location": 50,
            "return": [
                "dict",
                "int",
                "bytes",
                "str"
            ],
            "arguments": {
                "session": [
                    "requests.Session",
                    "str",
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, str]"
                ],
                "version": [
                    "str",
                    "Dict[str, Any]",
                    "pymc4.distributions.distribution.Distribution"
                ]
            }
        },
        "resolve_matomo_version_spec": {
            "name": "resolve_matomo_version_spec",
            "location": 75,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "session": [
                    "Dict[str, Any]",
                    "str",
                    "bool"
                ],
                "version_spec": [
                    "dict",
                    "Type[T]"
                ]
            }
        },
        "get_latest_matomo_version": {
            "name": "get_latest_matomo_version",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {
                "session": [
                    "str"
                ]
            }
        },
        "get_all_matomo_versions": {
            "name": "get_all_matomo_versions",
            "location": 101,
            "return": [
                "Set[str]",
                "int"
            ],
            "arguments": {
                "session": [
                    "requests.Session",
                    "str",
                    "recidiviz.persistence.database.session.Session",
                    "Optional[dict]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/lock/__init__.py": {
        "get_zip_extraction_root": {
            "name": "get_zip_extraction_root",
            "location": 7,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "zip_data": [
                    "tarfile.TarFile",
                    "str",
                    "bytes"
                ],
                "root_file": [
                    "str"
                ]
            }
        },
        "get_tar_extraction_root": {
            "name": "get_tar_extraction_root",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "tar_data": [
                    "str",
                    "bytes"
                ],
                "root_file": [
                    "str",
                    "io.BytesIO",
                    "bool"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/lock/plugin/git.py": {
        "sync_git_plugin_lock": {
            "name": "sync_git_plugin_lock",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "session": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "php_version": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "int",
                    "Dict[str, List[Any]]"
                ],
                "matomo_version": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "int",
                    "Dict[str, List[Any]]"
                ],
                "license_key": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "int",
                    "Dict[str, List[Any]]"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "git_url": [
                    "str"
                ],
                "ref": [
                    "str",
                    "bool",
                    "List[str]",
                    "Optional[str]"
                ],
                "existing_lock": [
                    "str",
                    "dict",
                    "Optional[List[str]]",
                    "bool"
                ]
            }
        },
        "get_plugin_using_archive": {
            "name": "get_plugin_using_archive",
            "location": 47,
            "return": [
                "bool",
                "str",
                "Type",
                "dict"
            ],
            "arguments": {
                "git_url": [
                    "str"
                ],
                "ref": [
                    "str"
                ]
            }
        },
        "get_plugin_using_clone": {
            "name": "get_plugin_using_clone",
            "location": 79,
            "return": [
                "Optional[str]",
                "bool",
                "Optional[int]"
            ],
            "arguments": {
                "git_url": [
                    "str"
                ],
                "ref": [
                    "str",
                    "float",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/lock/plugin/versioned.py": {
        "get_cache_key": {
            "name": "get_cache_key",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "version": [
                    "str"
                ]
            }
        },
        "sync_versioned_plugin_lock": {
            "name": "sync_versioned_plugin_lock",
            "location": 22,
            "return": [
                "float",
                "bytearray",
                "List[int]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "session": [
                    "str",
                    "Optional[Dict]",
                    "Dict[str, object]",
                    "Optional[Tuple[bytes, Any]]"
                ],
                "php_version": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.distribution.version.Version",
                    "matomo_dl.session.SessionStore",
                    "List[str]"
                ],
                "matomo_version": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.distribution.version.Version",
                    "matomo_dl.session.SessionStore",
                    "List[str]"
                ],
                "license_key": [
                    "str",
                    "Optional[Dict]",
                    "Dict[str, object]",
                    "Optional[Tuple[bytes, Any]]"
                ],
                "name": [
                    "str",
                    "matomo_dl.distribution.version.Version",
                    "Optional[str]",
                    "List[str]"
                ],
                "version_spec": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.distribution.version.Version",
                    "matomo_dl.session.SessionStore",
                    "List[str]"
                ],
                "existing_lock": [
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "resolve_plugin_version_spec": {
            "name": "resolve_plugin_version_spec",
            "location": 52,
            "return": [
                "bool",
                "str",
                "list",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {
                "session": [
                    "Optional[str]",
                    "str",
                    "requests.Session",
                    "List[str]"
                ],
                "php_version": [
                    "Optional[str]",
                    "str",
                    "requests.Session",
                    "List[str]"
                ],
                "matomo_version": [
                    "Optional[str]",
                    "str",
                    "requests.Session",
                    "List[str]"
                ],
                "license_key": [
                    "Optional[str]",
                    "str",
                    "requests.Session",
                    "List[str]"
                ],
                "version_spec": [
                    "str"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "get_plugin_data": {
            "name": "get_plugin_data",
            "location": 113,
            "return": [
                "str",
                "Dict[str, Any]",
                "Dict[str, List[str]]",
                "int",
                "dict"
            ],
            "arguments": {
                "session": [
                    "str",
                    "dict",
                    "Optional[Dict[str, str]]",
                    "Optional[str]",
                    "requests.Session"
                ],
                "license_key": [
                    "str",
                    "dict",
                    "Optional[Dict[str, str]]",
                    "Optional[str]",
                    "requests.Session"
                ],
                "name": [
                    "str",
                    "Mapping[str, Any]",
                    "Dict[str, Any]",
                    "List[str]",
                    "requests.Response"
                ],
                "matomo_version": [
                    "Optional[str]",
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "get_all_plugin_versions": {
            "name": "get_all_plugin_versions",
            "location": 135,
            "return": [
                "Optional[List[str]]",
                "Optional[Dict]",
                "Optional[str]",
                "List[str]"
            ],
            "arguments": {
                "session": [
                    "requests.Session",
                    "Optional[str]",
                    "str",
                    "dict"
                ],
                "php_version": [
                    "Optional[str]",
                    "str",
                    "float",
                    "bool"
                ],
                "matomo_version": [
                    "str",
                    "Optional[str]",
                    "requests.Session",
                    "int",
                    "requests.models.Response"
                ],
                "license_key": [
                    "requests.Session",
                    "Optional[str]",
                    "str",
                    "dict"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "requests.Session",
                    "Optional[dict]"
                ]
            }
        },
        "plugin_request": {
            "name": "plugin_request",
            "location": 172,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Dict[str, Union[int, str]]",
                "str",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "session": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "PluginData.assert_downloadable": {
            "name": "assert_downloadable",
            "location": 90,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PluginData.iter_versions": {
            "name": "iter_versions",
            "location": 103,
            "return": [
                "typing.Iterator[typing.Tuple[builtins.str, builtins.str, typing.Mapping[builtins.str, builtins.str]]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "matomo-dl-master/matomo_dl/lock/plugin/__init__.py": {
        "sync_plugin_lock": {
            "name": "sync_plugin_lock",
            "location": 13,
            "return": [
                "Dict[str, Any]"
            ],
            "arguments": {
                "session": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.session.SessionStore"
                ],
                "php_version": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.session.SessionStore"
                ],
                "matomo_version": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.session.SessionStore"
                ],
                "license_key": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.session.SessionStore"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "matomo_dl.session.SessionStore"
                ],
                "plugin": [
                    "Optional[Callable]",
                    "Optional[Mapping[str, Any]]",
                    "str",
                    "Optional[int]",
                    "Union[str, List[str]]"
                ],
                "existing_lock": [
                    "str",
                    "Optional[Mapping[str, Any]]",
                    "Optional[Callable]"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/session/caching_store.py": {},
    "matomo-dl-master/matomo_dl/session/store.py": {
        "HttpLoggingAdapter.send": {
            "name": "send",
            "location": 12,
            "return": [
                "List[Dict[str, Any]]",
                "Optional[str]",
                "Tuple[str, int, Dict[str, str]]",
                "Union[str, int, None]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "requests.models.PreparedRequest",
                    "str",
                    "Union[bool, str]",
                    "bool"
                ]
            }
        },
        "SessionStore.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SessionStore.store_cache_data": {
            "name": "store_cache_data",
            "location": 35,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "cache_key": [
                    "str",
                    "pathlib.Path"
                ],
                "data": [
                    "bytes",
                    "str",
                    "Union[str, bytes]",
                    "Dict[str, Any]"
                ]
            }
        },
        "SessionStore.retrieve_cache_data": {
            "name": "retrieve_cache_data",
            "location": 45,
            "return": [
                "bool",
                "Optional[bool]",
                "Optional[float]"
            ],
            "arguments": {
                "self": [],
                "cache_key": [
                    "str",
                    "pathlib.Path"
                ],
                "expected_hash": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "matomo-dl-master/matomo_dl/session/__init__.py": {
        "create_session": {
            "name": "create_session",
            "location": 27,
            "return": [
                "dict",
                "Optional[str]",
                "Dict[str, Any]",
                "Union[str, List[str], Tuple[str, ...]]",
                "bool"
            ],
            "arguments": {
                "cache_dir": [
                    "pathlib.Path",
                    "Optional[pathlib.Path]",
                    "str",
                    "types.PathLike",
                    "Union[pathlib.Path, str]",
                    "dict"
                ],
                "level": [
                    "str",
                    "dict",
                    "List[str]",
                    "Dict[str, Any]",
                    "pathlib.Path"
                ],
                "clear": [
                    "bool",
                    "pathlib.Path",
                    "str",
                    "Tuple[str]"
                ]
            }
        },
        "create_cached_session_store": {
            "name": "create_cached_session_store",
            "location": 50,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "cache_dir": [
                    "pathlib.Path",
                    "str",
                    "dict"
                ],
                "backend": [
                    "str",
                    "pathlib.Path",
                    "List[str]",
                    "bool",
                    "Union[str, Sequence[str]]",
                    "Tuple[str]"
                ]
            }
        },
        "standardise_level": {
            "name": "standardise_level",
            "location": 74,
            "return": [
                "list",
                "bool",
                "types.Resolver",
                "Dict[str, Any]"
            ],
            "arguments": {
                "level": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "remove_dir": {
            "name": "remove_dir",
            "location": 99,
            "return": [
                "set",
                "mypy.types.Instance"
            ],
            "arguments": {
                "input_path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        }
    },
    "matomo-dl-master/support/release.py": {
        "run_output": {
            "name": "run_output",
            "location": 13,
            "return": [
                "int"
            ],
            "arguments": {
                "cmd": [
                    "bool",
                    "Sequence[str]",
                    "str",
                    "int"
                ]
            }
        },
        "repo_mtime": {
            "name": "repo_mtime",
            "location": 25,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "file": [
                    "Union[None, str, pathlib.Path]",
                    "Optional[TextIO]",
                    "Optional[Union[str, pathlib.Path]]",
                    "Optional[str]",
                    "str",
                    "Optional[pathlib.Path]"
                ]
            }
        },
        "get_version_info": {
            "name": "get_version_info",
            "location": 44,
            "return": [
                "str",
                "bool",
                "Optional[str]",
                "Dict[str, str]"
            ],
            "arguments": {}
        },
        "get_build_time": {
            "name": "get_build_time",
            "location": 57,
            "return": [
                "str",
                "Optional[str]",
                "Callable",
                "dict"
            ],
            "arguments": {
                "sha": [
                    "str",
                    "Mapping[str, Any]",
                    "bool",
                    "list",
                    "Callable"
                ]
            }
        },
        "fix_times": {
            "name": "fix_times",
            "location": 64,
            "return": [
                "int",
                "bool",
                "float",
                "List[float]",
                "str"
            ],
            "arguments": {
                "timestamp": [
                    "Mapping[str, str]",
                    "Dict[str, Any]",
                    "Mapping[str, Sequence[str]]",
                    "bool"
                ],
                "folder": [
                    "float",
                    "pathlib.Path",
                    "int",
                    "str"
                ]
            }
        },
        "do_multistage_release": {
            "name": "do_multistage_release",
            "location": 84,
            "return": [
                ""
            ],
            "arguments": {
                "file_paths": [
                    "pathlib.Path",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 136,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "matomo-dl-master/tests/fixtures.py": {
        "download_matomo_zip": {
            "name": "download_matomo_zip",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "version": [
                    "str",
                    "dict",
                    "int"
                ],
                "f": [
                    "IO",
                    "str",
                    "bytes",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "dowload_cache_matomo_zip": {
            "name": "dowload_cache_matomo_zip",
            "location": 32,
            "return": [
                "str",
                "Iterable[Hashable]",
                "list"
            ],
            "arguments": {
                "version": [
                    "str",
                    "Sequence[Sequence[T]]"
                ],
                "f": [
                    "IO",
                    "dict",
                    "os.DirEntry",
                    "List[str]",
                    "Dict[str, str]",
                    "Exception"
                ]
            }
        },
        "with_matomo_zip": {
            "name": "with_matomo_zip",
            "location": 62,
            "return": [
                ""
            ],
            "arguments": {
                "version": [
                    "str",
                    "pathlib.Path",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "with_extracted_matomo": {
            "name": "with_extracted_matomo",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "version": [
                    "str",
                    "int",
                    "Union[int, str]"
                ]
            }
        }
    },
    "matomo-dl-master/tests/test_config_customisation.py": {
        "test_base_install_generates_good_config": {
            "name": "test_base_install_generates_good_config",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "matomo-dl-master/tests/test_matomo_config.py": {
        "test_read": {
            "name": "test_read",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_write": {
            "name": "test_write",
            "location": 45,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_with_real_global": {
            "name": "test_with_real_global",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "matomo-dl-master/tests/test_reproducable.py": {
        "test_reproducable_build": {
            "name": "test_reproducable_build",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "cli_runner": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "matomo-dl-master/tests/__init__.py": {}
}
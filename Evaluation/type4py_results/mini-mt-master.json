{
    "mini-mt-master/main.py": {},
    "mini-mt-master/config/config.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "list",
                    "Optional[\"Source\"]",
                    "Optional[str]",
                    "Optional['Directory']"
                ]
            }
        },
        "Settings.read_config": {
            "name": "read_config",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "mini-mt-master/config/__init__.py": {},
    "mini-mt-master/connection/client_core.py": {
        "main": {
            "name": "main",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "Optional[str]",
                    "subprocess.Popen",
                    "Mapping",
                    "Dict[str, int]",
                    "str"
                ]
            }
        },
        "contact_server": {
            "name": "contact_server",
            "location": 69,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "settings": [
                    "int",
                    "str"
                ],
                "attempts": [
                    "Optional[int]",
                    "int",
                    "float",
                    "Optional[Mapping[int, complex]]"
                ]
            }
        },
        "set_time": {
            "name": "set_time",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "time": [
                    "str",
                    "int",
                    "Dict[Optional[str], str]",
                    "time.struct_time",
                    "List[datetime.date]",
                    "float",
                    "Optional[int]"
                ]
            }
        },
        "start_wlan_measurement": {
            "name": "start_wlan_measurement",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "str"
                ],
                "stop_event": [
                    "threading.Event",
                    "list",
                    "Sequence[Dict]",
                    "Optional[Iterable[str]]",
                    "Dict[str, Any]",
                    "List[Dict[str, str]]"
                ],
                "override_command": [
                    "Optional[str]",
                    "str"
                ]
            }
        }
    },
    "mini-mt-master/connection/server_core.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "List[str]",
                    "List[Dict[str, Any]]",
                    "IO",
                    "bool",
                    "Dict[str, str]"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "client_socket": [
                    "threading.Event",
                    "config.config.Settings",
                    "bool",
                    "raiden.messages.Message"
                ],
                "address": [
                    "logging.Logger",
                    "str",
                    "Callable"
                ],
                "settings": [
                    "config.config.Settings",
                    "bytes",
                    "dict"
                ]
            }
        }
    },
    "mini-mt-master/connection/socket_wrapper.py": {
        "SocketWrapper.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_socket": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "SocketWrapper._send": {
            "name": "_send",
            "location": 33,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "Sequence[T]",
                    "List[float]",
                    "str",
                    "list",
                    "List[Dict[str, Any]]",
                    "Dict[str, Any]"
                ]
            }
        },
        "SocketWrapper._receive": {
            "name": "_receive",
            "location": 44,
            "return": [
                "bool",
                "str",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "nr_bytes": [
                    "bool",
                    "int"
                ]
            }
        },
        "SocketWrapper.send_message": {
            "name": "send_message",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "buf": [
                    "str",
                    "List[int]",
                    "list",
                    "Iterator[int]",
                    "List[str]",
                    "Sequence[int]"
                ]
            }
        },
        "SocketWrapper.receive_message": {
            "name": "receive_message",
            "location": 63,
            "return": [
                "str",
                "bytes",
                "int",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mini-mt-master/connection/__init__.py": {},
    "mini-mt-master/messages/command_message.py": {
        "CommandMessage.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "command": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "CommandMessage.__bytes__": {
            "name": "__bytes__",
            "location": 15,
            "return": [
                "str",
                "Type[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandMessage.from_bytes": {
            "name": "from_bytes",
            "location": 22,
            "return": [
                "float",
                "str",
                "int"
            ],
            "arguments": {
                "bb": [
                    "bytes",
                    "bool",
                    "int",
                    "trezor.messages.TxOutputType.TxOutputType"
                ]
            }
        }
    },
    "mini-mt-master/messages/message_types.py": {},
    "mini-mt-master/messages/serialization.py": {
        "from_bytes": {
            "name": "from_bytes",
            "location": 9,
            "return": [
                "float",
                "bool"
            ],
            "arguments": {
                "bb": [
                    "bool",
                    "bytes",
                    "Optional[Union[float, int]]",
                    "Union[int, slice]",
                    "int"
                ]
            }
        }
    },
    "mini-mt-master/messages/string_message.py": {
        "StringMessage.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "StringMessage.__bytes__": {
            "name": "__bytes__",
            "location": 12,
            "return": [
                "str",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringMessage.from_bytes": {
            "name": "from_bytes",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "bb": [
                    "bool",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "mini-mt-master/messages/time_message.py": {
        "TimeMessage.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeMessage.__bytes__": {
            "name": "__bytes__",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeMessage.from_bytes": {
            "name": "from_bytes",
            "location": 24,
            "return": [
                "float",
                "str",
                "int"
            ],
            "arguments": {
                "bb": [
                    "bool",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "mini-mt-master/messages/__init__.py": {},
    "mini-mt-master/mtexceptions/network_exceptions.py": {},
    "mini-mt-master/mtexceptions/__init__.py": {},
    "mini-mt-master/util/save_files.py": {
        "save_data": {
            "name": "save_data",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "to_save": [
                    "str",
                    "bytes"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "load_data": {
            "name": "load_data",
            "location": 18,
            "return": [
                "dict",
                "str",
                "int",
                "Dict[str, Dict[str, float]]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "zip_and_delete": {
            "name": "zip_and_delete",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "settings": [
                    "str",
                    "bool",
                    "Union[str, bytes]"
                ]
            }
        }
    },
    "mini-mt-master/util/__init__.py": {}
}
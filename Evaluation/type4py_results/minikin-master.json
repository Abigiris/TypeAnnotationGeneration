{
    "minikin-master/setup.py": {},
    "minikin-master/minikin/app.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 19,
            "return": [
                "bool",
                "str",
                "Callable",
                "logging.Logger"
            ],
            "arguments": {}
        },
        "argument_parser": {
            "name": "argument_parser",
            "location": 72,
            "return": [
                "argparse.ArgumentParser",
                "Callable[[str, Mapping], Any]"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "argv": [
                    "List[str]",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "minikin-master/minikin/db.py": {
        "URLNotFound.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "slug": [
                    "str",
                    "Union[str, List[str], Tuple[str, ...]]",
                    "bool"
                ]
            }
        }
    },
    "minikin-master/minikin/handlers.py": {},
    "minikin-master/minikin/load_cache.py": {
        "argument_parser": {
            "name": "argument_parser",
            "location": 14,
            "return": [
                "argparse.ArgumentParser",
                "Callable[[str, Mapping], Any]"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "argv": [
                    "List[str]",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "minikin-master/minikin/middlewares.py": {
        "create_error_middleware": {
            "name": "create_error_middleware",
            "location": 13,
            "return": [
                "str",
                "List[str]",
                "Optional[Set[str]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "overrides": [
                    "BaseException",
                    "str"
                ]
            }
        }
    },
    "minikin-master/minikin/utils.py": {
        "base62_encode": {
            "name": "base62_encode",
            "location": 12,
            "return": [
                "int",
                "List[str]",
                "Optional[float]"
            ],
            "arguments": {
                "num": [
                    "int",
                    "Dict[int, int]"
                ]
            }
        },
        "generate_slug": {
            "name": "generate_slug",
            "location": 26,
            "return": [
                "int",
                "bytearray",
                "bytes",
                "float"
            ],
            "arguments": {
                "text": [
                    "int",
                    "str",
                    "Optional[str]"
                ],
                "size": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "validate_url": {
            "name": "validate_url",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "minikin-master/minikin/__init__.py": {},
    "minikin-master/tests/load/locustfile.py": {
        "gen_url": {
            "name": "gen_url",
            "location": 18,
            "return": [
                "str",
                "bytes"
            ],
            "arguments": {}
        },
        "Tasks.shorten_url": {
            "name": "shorten_url",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Tasks.not_found": {
            "name": "not_found",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Tasks.found": {
            "name": "found",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "minikin-master/tests/load/run.py": {
        "argument_parser": {
            "name": "argument_parser",
            "location": 12,
            "return": [
                "argparse.ArgumentParser",
                "Callable[[str, Mapping], Any]"
            ],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "locustfile": [
                    "Optional[int]",
                    "float",
                    "Optional[bytes]",
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "host": [
                    "Optional[int]",
                    "float",
                    "Optional[bytes]",
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "num": [
                    "str",
                    "Optional[str]",
                    "int",
                    "float",
                    "List[str]",
                    "Optional[bytes]",
                    "Optional[int]"
                ],
                "web": [
                    "int",
                    "str"
                ],
                "concurrency": [
                    "str",
                    "List[str]",
                    "bytes",
                    "Dict[str, Sequence[str]]"
                ],
                "hatch_rate": [
                    "str",
                    "List[str]",
                    "bytes",
                    "Dict[str, Sequence[str]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "argv": [
                    "List[str]",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "minikin-master/tests/unit/helpers.py": {
        "make_future": {
            "name": "make_future",
            "location": 55,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "result": [
                    "str",
                    "Type",
                    "dict",
                    "bytes"
                ],
                "exception": [
                    "Exception",
                    "Union[Tuple[Any, Any, T], Tuple[T, T, T]]",
                    "str",
                    "dict",
                    "Optional[Dict[str, str]]"
                ]
            }
        },
        "FakeConnection.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "results": [
                    "Optional[List[str]]",
                    "Optional[float]",
                    "Optional[Callable]",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "FakeConnection.__aenter__": {
            "name": "__aenter__",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeConnection.__aexit__": {
            "name": "__aexit__",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeConnection.transaction": {
            "name": "transaction",
            "location": 30,
            "return": [
                "Sequence[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeConnection.execute": {
            "name": "execute",
            "location": 44,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeConnection.fetchrow": {
            "name": "fetchrow",
            "location": 49,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeConnection.transaction._Transaction.__aenter__": {
            "name": "__aenter__",
            "location": 33,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeConnection.transaction._Transaction.__aexit__": {
            "name": "__aexit__",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "minikin-master/tests/unit/test_db.py": {},
    "minikin-master/tests/unit/test_handlers.py": {},
    "minikin-master/tests/unit/test_middlewares.py": {},
    "minikin-master/tests/unit/test_utils.py": {
        "test_base62_encode": {
            "name": "test_base62_encode",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "num": [
                    "str",
                    "int"
                ],
                "expected": [
                    "str",
                    "Optional[str]",
                    "List[\"ItemShippingTarget\"]"
                ]
            }
        },
        "test_generate_slug": {
            "name": "test_generate_slug",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "text": [
                    "str",
                    "int",
                    "list",
                    "Optional[str]"
                ],
                "size": [
                    "int",
                    "str",
                    "list"
                ],
                "expected": [
                    "str"
                ]
            }
        },
        "test_valid_url": {
            "name": "test_valid_url",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {
                "url": [
                    "Set[str]",
                    "str",
                    "List[str]",
                    "List[bytes]"
                ]
            }
        },
        "test_invalid_url": {
            "name": "test_invalid_url",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "url": [
                    "Set[str]",
                    "str",
                    "List[str]",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "minikin-master/tests/unit/__init__.py": {}
}
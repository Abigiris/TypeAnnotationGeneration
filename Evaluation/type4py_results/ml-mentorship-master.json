{
    "ml-mentorship-master/tasks.py": {
        "download_emails": {
            "name": "download_emails",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "download_labels": {
            "name": "download_labels",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_pipeline": {
            "name": "run_pipeline",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ml-mentorship-master/mentorship/engine.py": {
        "run_pipeline": {
            "name": "run_pipeline",
            "location": 12,
            "return": [
                "Set[str]",
                "str",
                "IO[str]",
                "List[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "input_data": [
                    "pandas.DataFrame",
                    "dict",
                    "str",
                    "Sequence[str]"
                ],
                "steps": [
                    "str",
                    "pandas.DataFrame",
                    "bool",
                    "Optional[Dict]",
                    "int"
                ]
            }
        },
        "osemn_pipeline": {
            "name": "osemn_pipeline",
            "location": 25,
            "return": [
                "float",
                "bool",
                "int",
                "List[int]"
            ],
            "arguments": {
                "input_data": [
                    "pandas.DataFrame",
                    "dict"
                ],
                "obtain_step": [
                    "pandas.DataFrame",
                    "dict"
                ],
                "scrub_step": [
                    "pandas.DataFrame",
                    "dict"
                ],
                "explore_step": [
                    "pandas.DataFrame",
                    "dict"
                ],
                "model_step": [
                    "pandas.DataFrame",
                    "dict"
                ],
                "interpret_step": [
                    "pandas.DataFrame",
                    "dict"
                ]
            }
        }
    },
    "ml-mentorship-master/mentorship/__init__.py": {},
    "ml-mentorship-master/mentorship/email_classification/pipeline.py": {
        "identity": {
            "name": "identity",
            "location": 26,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dataframe": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "obtain_emails": {
            "name": "obtain_emails",
            "location": 32,
            "return": [
                "int",
                "dict"
            ],
            "arguments": {
                "dataframe": [
                    "pandas.DataFrame",
                    "int",
                    "bool",
                    "Callable[[], T]",
                    "List[int]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "scrub_emails": {
            "name": "scrub_emails",
            "location": 60,
            "return": [
                "str",
                "pandas.DataFrame",
                "deque",
                "int",
                "list"
            ],
            "arguments": {
                "dataframe": [
                    "str",
                    "pandas.DataFrame",
                    "deque",
                    "int",
                    "list"
                ]
            }
        },
        "get_pipeline_steps": {
            "name": "get_pipeline_steps",
            "location": 65,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "ml-mentorship-master/mentorship/email_classification/utils.py": {
        "extract_subject": {
            "name": "extract_subject",
            "location": 1,
            "return": [
                "Dict[str, Any]",
                "bool",
                "Dict[str, Dict[str, int]]"
            ],
            "arguments": {
                "row": [
                    "Dict[str, str]",
                    "List[dict]",
                    "Dict[str, Any]",
                    "Dict[str, Union[str, Set]]"
                ]
            }
        }
    },
    "ml-mentorship-master/mentorship/email_classification/__init__.py": {},
    "ml-mentorship-master/mentorship/gmail/api.py": {
        "as_date": {
            "name": "as_date",
            "location": 153,
            "return": [
                "Optional[str]",
                "datetime.date",
                "datetime.datetime",
                "str",
                "int"
            ],
            "arguments": {
                "date": [
                    "datetime.datetime",
                    "datetime.date",
                    "Optional[datetime.datetime]"
                ]
            }
        },
        "GmailApi.initialize": {
            "name": "initialize",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GmailApi.get_labels": {
            "name": "get_labels",
            "location": 37,
            "return": [
                "str",
                "Dict[str, Any]",
                "bytes",
                "Callable",
                "Optional[Dict[str, Any]]",
                "Dict[str, str]",
                "int",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GmailApi.get_messages_for_page": {
            "name": "get_messages_for_page",
            "location": 41,
            "return": [
                "str",
                "dict",
                "set",
                "List[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "after": [
                    "bool",
                    "Callable[[str, str], float]",
                    "int"
                ],
                "before": [
                    "bool",
                    "Callable[[str, str], float]",
                    "int"
                ],
                "includeSpamTrash": [
                    "Optional[str]",
                    "Optional[Dict[str, str]]",
                    "Optional[cirq.google.serializable_gate_seSerializableGateSet]",
                    "str",
                    "Dict[str, str]",
                    "Callable[[Any], bool]"
                ],
                "limit": [
                    "Optional[str]",
                    "Optional[Dict[str, str]]",
                    "Optional[cirq.google.serializable_gate_seSerializableGateSet]",
                    "str",
                    "Dict[str, str]",
                    "Callable[[Any], bool]"
                ],
                "page_token": [
                    "Optional[str]",
                    "Optional[Dict[str, str]]",
                    "Optional[cirq.google.serializable_gate_seSerializableGateSet]",
                    "str",
                    "Dict[str, str]",
                    "Callable[[Any], bool]"
                ]
            }
        },
        "GmailApi.get_messages": {
            "name": "get_messages",
            "location": 65,
            "return": [
                "bool",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "after": [
                    "List[int]",
                    "int"
                ],
                "before": [
                    "List[int]",
                    "int"
                ],
                "includeSpamTrash": [
                    "List[int]",
                    "int"
                ],
                "limit": [
                    "List[int]",
                    "int"
                ]
            }
        },
        "GmailApi.get_message": {
            "name": "get_message",
            "location": 100,
            "return": [
                "str",
                "Optional[str]",
                "bytes",
                "int",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ],
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "GmailApi.build_query": {
            "name": "build_query",
            "location": 113,
            "return": [
                "BaseException",
                "int",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "after": [
                    "int",
                    "Callable[..., bool]"
                ],
                "before": [
                    "int",
                    "Callable[..., bool]"
                ]
            }
        },
        "GmailApi.get_service": {
            "name": "get_service",
            "location": 123,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GmailApi.authenticate": {
            "name": "authenticate",
            "location": 128,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GmailApi.get_or_create_credentials": {
            "name": "get_or_create_credentials",
            "location": 135,
            "return": [
                "List[str]",
                "int",
                "str",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ml-mentorship-master/mentorship/gmail/data.py": {},
    "ml-mentorship-master/mentorship/gmail/factory.py": {
        "MessageHeaderFactory.build": {
            "name": "build",
            "location": 9,
            "return": [
                "str",
                "dict",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "header": [
                    "Dict[str, str]",
                    "str"
                ]
            }
        },
        "MessagePartFactory.build": {
            "name": "build",
            "location": 15,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "Callable",
                    "dict",
                    "Dict[str, Any]",
                    "Type[T]",
                    "T"
                ],
                "part": [
                    "Union[Dict, Tuple]",
                    "dict"
                ]
            }
        },
        "MessageFactory.build": {
            "name": "build",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "List[str]",
                    "Dict[str, Any]",
                    "Dict[int, str]",
                    "bool",
                    "T"
                ],
                "message": [
                    "dict",
                    "T",
                    "bool"
                ]
            }
        },
        "MessageIdFactory.build": {
            "name": "build",
            "location": 55,
            "return": [
                "dict",
                "Dict[str, Any]",
                "Callable"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "list"
                ],
                "message_id": [
                    "Dict[str, str]",
                    "str",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "ml-mentorship-master/mentorship/gmail/__init__.py": {},
    "ml-mentorship-master/mentorship/tests/test_engine.py": {
        "multiply_by_two": {
            "name": "multiply_by_two",
            "location": 6,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dataframe": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "multiply_by_three": {
            "name": "multiply_by_three",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dataframe": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "test_pipeline": {
            "name": "test_pipeline",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "ml-mentorship-master/mentorship/tests/__init__.py": {}
}
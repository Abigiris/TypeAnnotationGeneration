{
    "muhblog-master/muhblog/controllers.py": {
        "front": {
            "name": "front",
            "location": 20,
            "return": [
                "werkzeug.Response",
                "werkzeug.wrappers.Response",
                "Optional[str]",
                "dict",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "page": [
                    "int"
                ]
            }
        },
        "_archive_response": {
            "name": "_archive_response",
            "location": 32,
            "return": [
                "werkzeug.wrappers.Response",
                "Optional[str]",
                "pyramid.response.Response",
                "str"
            ],
            "arguments": {
                "entries": [
                    "str",
                    "Iterable[models.Entry]",
                    "bytes",
                    "Optional[str]"
                ],
                "title": [
                    "str",
                    "Iterable[models.Entry]",
                    "bytes",
                    "Optional[str]"
                ]
            }
        },
        "archive": {
            "name": "archive",
            "location": 46,
            "return": [
                "List[str]",
                "Dict[str, Any]",
                "raiden.utils.Dict[str, raiden.utils.Any]",
                "Dict[str, dict]",
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "archive_by_year": {
            "name": "archive_by_year",
            "location": 53,
            "return": [
                "List[str]",
                "Dict[str, Any]",
                "raiden.utils.Dict[str, raiden.utils.Any]",
                "Dict[str, dict]",
                "str",
                "bool"
            ],
            "arguments": {
                "year": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "archive_by_month": {
            "name": "archive_by_month",
            "location": 65,
            "return": [
                "List[str]",
                "str",
                "Dict[str, Any]",
                "Dict[str, dict]",
                "raiden.utils.Dict[str, raiden.utils.Any]",
                "Optional[str]"
            ],
            "arguments": {
                "year": [
                    "str"
                ],
                "month": [
                    "str"
                ]
            }
        },
        "archive_by_day": {
            "name": "archive_by_day",
            "location": 78,
            "return": [
                "List[str]",
                "Optional[str]",
                "int",
                "Dict[str, str]",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "year": [
                    "str",
                    "float",
                    "bool"
                ],
                "month": [
                    "str",
                    "float",
                    "bool"
                ],
                "day": [
                    "str",
                    "float",
                    "bool"
                ]
            }
        },
        "archive_by_tag": {
            "name": "archive_by_tag",
            "location": 92,
            "return": [
                "Tuple[str, int, Dict[str, str]]",
                "int",
                "flask.Response",
                "robot_server.service.legacy.models.settings.PipetteSettings",
                "str"
            ],
            "arguments": {
                "slug": [
                    "purplship.core.utils.soap.Envelope",
                    "zerver.models.Realm",
                    "Dict[str, Any]",
                    "List[str]"
                ]
            }
        },
        "entry": {
            "name": "entry",
            "location": 108,
            "return": [
                "werkzeug.wrappers.Response",
                "Dict[str, Any]",
                "Optional[str]",
                "bool",
                "str",
                "List[str]",
                "List[dict]"
            ],
            "arguments": {
                "year": [
                    "str",
                    "float",
                    "bool"
                ],
                "month": [
                    "str",
                    "float",
                    "bool"
                ],
                "day": [
                    "str",
                    "float",
                    "bool"
                ],
                "slug": [
                    "str",
                    "float",
                    "bool"
                ]
            }
        },
        "about": {
            "name": "about",
            "location": 123,
            "return": [
                "werkzeug.wrappers.Response",
                "Dict[str, Any]",
                "Optional[str]",
                "bool",
                "str",
                "List[str]",
                "List[dict]"
            ],
            "arguments": {}
        }
    },
    "muhblog-master/muhblog/database.py": {},
    "muhblog-master/muhblog/markdown.py": {
        "render": {
            "name": "render",
            "location": 41,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "text": [
                    "str",
                    "bool"
                ]
            }
        },
        "SpoilerRenderer.image": {
            "name": "image",
            "location": 11,
            "return": [
                "str",
                "Optional[str]",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "title": [
                    "str",
                    "List[str]",
                    "Sequence[int]",
                    "Optional[str]",
                    "dict"
                ],
                "text": [
                    "str",
                    "int",
                    "MutableMapping[str, Any]"
                ]
            }
        },
        "SpoilerRenderer.paragraph": {
            "name": "paragraph",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "SpoilerRenderer.block_code": {
            "name": "block_code",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "int"
                ],
                "lang": [
                    "str"
                ]
            }
        }
    },
    "muhblog-master/muhblog/models.py": {
        "MarkdownModel.render_markdown": {
            "name": "render_markdown",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entry.create": {
            "name": "create",
            "location": 31,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "Tuple[str, str]",
                    "float",
                    "datetime.datetime",
                    "str"
                ],
                "text": [
                    "str",
                    "bool",
                    "Optional[int]",
                    "datetime.date",
                    "datetime.datetime"
                ]
            }
        },
        "Entry.render_stub": {
            "name": "render_stub",
            "location": 49,
            "return": [
                "str",
                "dict",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entry.next_entry": {
            "name": "next_entry",
            "location": 55,
            "return": [
                "bool",
                "int",
                "Union[List[str], List[Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entry.previous_entry": {
            "name": "previous_entry",
            "location": 62,
            "return": [
                "bool",
                "int",
                "Union[List[str], List[Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.create": {
            "name": "create",
            "location": 79,
            "return": [
                "str",
                "bool",
                "Callable",
                "dict"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Set[str]",
                    "List[str]",
                    "int"
                ],
                "name": [
                    "str",
                    "int"
                ]
            }
        },
        "EntryTag.create": {
            "name": "create",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "int",
                    "Iterable[str]"
                ],
                "entry": [
                    "str",
                    "Tuple[Type]",
                    "bool"
                ],
                "name": [
                    "str",
                    "Tuple[Type]",
                    "bool"
                ]
            }
        }
    },
    "muhblog-master/muhblog/utils.py": {
        "_get_js": {
            "name": "_get_js",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_get_css": {
            "name": "_get_css",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_get_favicon_url": {
            "name": "_get_favicon_url",
            "location": 85,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "template_response": {
            "name": "template_response",
            "location": 94,
            "return": [
                "Dict[str, Any]",
                "dict",
                "str"
            ],
            "arguments": {}
        },
        "Paginator.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "int",
                    "bool",
                    "Optional[Union[\"IPUtilityFunction\", \"UtilityDistribution\"]]",
                    "str"
                ],
                "current_page": [
                    "Optional[str]",
                    "bool",
                    "Callable",
                    "Optional[dict]",
                    "zerver.models.DefaultStreamGroup",
                    "str"
                ]
            }
        },
        "Paginator.get_entries": {
            "name": "get_entries",
            "location": 24,
            "return": [
                "str",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Paginator.get_total_pages": {
            "name": "get_total_pages",
            "location": 28,
            "return": [
                "str",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Paginator.has_previous_page": {
            "name": "has_previous_page",
            "location": 31,
            "return": [
                "int",
                "Callable",
                "models.Question",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Paginator.has_next_page": {
            "name": "has_next_page",
            "location": 34,
            "return": [
                "str",
                "bool",
                "models.Profile"
            ],
            "arguments": {
                "self": []
            }
        },
        "Paginator.page_number_group": {
            "name": "page_number_group",
            "location": 37,
            "return": [
                "str",
                "List[int]",
                "int",
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "muhblog-master/muhblog/wsgi.py": {
        "initialise_database": {
            "name": "initialise_database",
            "location": 22,
            "return": [
                "app.models.Article"
            ],
            "arguments": {
                "app": []
            }
        },
        "create": {
            "name": "create",
            "location": 60,
            "return": [
                "flask.Flask"
            ],
            "arguments": {}
        },
        "create.freeze": {
            "name": "freeze",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "muhblog-master/muhblog/__init__.py": {}
}
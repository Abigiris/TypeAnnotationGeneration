{
    "mypy-example-master/mypy_example/examples.py": {
        "func_with_optional": {
            "name": "func_with_optional",
            "location": 31,
            "return": [
                "str",
                "bool",
                "dict"
            ],
            "arguments": {
                "opt": [
                    "Optional[int]",
                    "T",
                    "List[str]",
                    "Optional[List[Callable]]"
                ]
            }
        },
        "add_to_banana": {
            "name": "add_to_banana",
            "location": 48,
            "return": [
                "int",
                "List[str]",
                "Dict[str, str]",
                "dict",
                "bytes"
            ],
            "arguments": {
                "to_add": [
                    "bool",
                    "Callable[[], bool]",
                    "str",
                    "List[dict]",
                    "Optional[int]"
                ]
            }
        },
        "some_func": {
            "name": "some_func",
            "location": 52,
            "return": [
                "float",
                "Callable[[T], bool]"
            ],
            "arguments": {
                "num": [
                    "Callable",
                    "bool",
                    "Union[Callable, Type]",
                    "Dict[str, Any]"
                ]
            }
        },
        "fib": {
            "name": "fib",
            "location": 59,
            "return": [
                "typing.Iterator[builtins.int]"
            ],
            "arguments": {
                "n": [
                    "int",
                    "Optional[int]"
                ]
            }
        },
        "foo": {
            "name": "foo",
            "location": 74,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "a": [
                    "str",
                    "int",
                    "Optional[float]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "Person.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "Person.rename": {
            "name": "rename",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "List[str]"
                ]
            }
        },
        "Person.describe": {
            "name": "describe",
            "location": 19,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-example-master/mypy_example/fancier_examples.py": {
        "complex_dict_consumer": {
            "name": "complex_dict_consumer",
            "location": 13,
            "return": [
                "float",
                "str",
                "int",
                "dict",
                "bool",
                "Tuple[str, str]"
            ],
            "arguments": {
                "jawn": [
                    "Optional[bool]",
                    "str",
                    "Dict[Any, bool]",
                    "dict",
                    "Optional[Dict[str, Any]]"
                ]
            }
        }
    },
    "mypy-example-master/mypy_example/nltk_examples.py": {},
    "mypy-example-master/mypy_example/__init__.py": {}
}
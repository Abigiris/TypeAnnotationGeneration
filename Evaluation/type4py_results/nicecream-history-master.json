{
    "nicecream-history-master/alembic/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/alembic/migrations/versions/0ee140bf938a_add_users_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/alembic/migrations/versions/1f74339f95ba_add_bookmarks_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/alembic/migrations/versions/5a935c07953e_seed_channels_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/alembic/migrations/versions/ad617e352b38_base_structure.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/api/api.py": {},
    "nicecream-history-master/api/auth.py": {
        "private_path": {
            "name": "private_path",
            "location": 22,
            "return": [
                "int",
                "str",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "handler": [
                    "str",
                    "bool",
                    "Callable"
                ]
            }
        }
    },
    "nicecream-history-master/api/cors.py": {
        "generate_cors_headers": {
            "name": "generate_cors_headers",
            "location": 25,
            "return": [
                "dict",
                "int",
                "Dict[str, Union[str, int]]",
                "Dict[str, Dict[str, str]]",
                "Optional[Dict[str, Any]]",
                "List[dict]",
                "Dict[str, str]"
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/api/csrf.py": {
        "csrf_protection": {
            "name": "csrf_protection",
            "location": 16,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "handler": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "nicecream-history-master/api/database.py": {
        "fetch_history.mapper": {
            "name": "mapper",
            "location": 127,
            "return": [
                "Dict[str, Any]",
                "Dict[str, Dict[str, int]]"
            ],
            "arguments": {
                "item": [
                    "T",
                    "Sequence[str]",
                    "bool",
                    "Pattern"
                ]
            }
        }
    },
    "nicecream-history-master/api/exception.py": {},
    "nicecream-history-master/api/logger.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "aiohttp.web.Application"
                ]
            }
        },
        "get_logger": {
            "name": "get_logger",
            "location": 21,
            "return": [
                "logging.Logger",
                "str"
            ],
            "arguments": {
                "name": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "nicecream-history-master/api/openapi.py": {
        "clean": {
            "name": "clean",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "lookup": {
            "name": "lookup",
            "location": 90,
            "return": [
                "typing.Iterable[builtins.str]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "dict",
                    "bool",
                    "bytes",
                    "\"ks.Series\""
                ],
                "data": [
                    "dict",
                    "str",
                    "bytes",
                    "Mapping[str, Any]"
                ]
            }
        }
    },
    "nicecream-history-master/api/redis.py": {},
    "nicecream-history-master/api/schemas.py": {
        "request_validation": {
            "name": "request_validation",
            "location": 96,
            "return": [
                "Mapping[str, Any]",
                "str",
                "Callable",
                "Callable[[None, None], bool]"
            ],
            "arguments": {
                "query_schema": [
                    "marshmallow.Schema",
                    "bytes",
                    "Mapping[str, Optional[float]]",
                    "List[Tuple[bytes, bytes]]"
                ],
                "body_schema": [
                    "marshmallow.Schema",
                    "bytes",
                    "Mapping[str, Optional[float]]",
                    "List[Tuple[bytes, bytes]]"
                ],
                "path_schema": [
                    "marshmallow.Schema",
                    "bytes",
                    "Mapping[str, Optional[float]]",
                    "List[Tuple[bytes, bytes]]"
                ]
            }
        },
        "BaseSchema.pre_dump": {
            "name": "pre_dump",
            "location": 13,
            "return": [
                "List[str]",
                "Sequence[dict]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Union[List, Dict]",
                    "dict",
                    "str",
                    "Union[Dict, List]",
                    "Dict[str, str]"
                ],
                "many": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "request_validation.handler_wrapper": {
            "name": "handler_wrapper",
            "location": 97,
            "return": [
                "int",
                "list"
            ],
            "arguments": {
                "handler": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "nicecream-history-master/api/settings.py": {},
    "nicecream-history-master/api/sse.py": {
        "sse_response": {
            "name": "sse_response",
            "location": 47,
            "return": [
                "int",
                "bool",
                "str",
                "Callable[[None, None], bool]"
            ],
            "arguments": {
                "request": [
                    "aiohttp.web.Request",
                    "int",
                    "Iterable[Callable]"
                ]
            }
        },
        "SSEResponse.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SSEResponse.enable_compression": {
            "name": "enable_compression",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "force": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "nicecream-history-master/api/swagger.py": {},
    "nicecream-history-master/api/utils.py": {
        "issubclass_py37": {
            "name": "issubclass_py37",
            "location": 4,
            "return": [
                "int",
                "bool",
                "Generator",
                "float"
            ],
            "arguments": {
                "cls": [
                    "Type",
                    "str",
                    "Optional[int]"
                ],
                "cls_info": [
                    "Type",
                    "str",
                    "Optional[int]"
                ]
            }
        }
    },
    "nicecream-history-master/api/views.py": {},
    "nicecream-history-master/api/__init__.py": {},
    "nicecream-history-master/cloudformation/alert/slack_alert_lambda.py": {
        "get_slack_emoji": {
            "name": "get_slack_emoji",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "event_src": [
                    "str"
                ],
                "topic_name": [
                    "str"
                ],
                "event_cond": [
                    "str"
                ]
            }
        },
        "get_slack_username": {
            "name": "get_slack_username",
            "location": 58,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "event_src": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_slack_channel": {
            "name": "get_slack_channel",
            "location": 73,
            "return": [
                "Optional[str]",
                "bool",
                "Dict[str, Dict[str, Any]]",
                "int",
                "str"
            ],
            "arguments": {
                "region": [
                    "str",
                    "bool"
                ],
                "event_src": [
                    "str",
                    "bool"
                ],
                "topic_name": [
                    "str",
                    "Optional[str]"
                ],
                "channel_map": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "autoscaling_capacity_change": {
            "name": "autoscaling_capacity_change",
            "location": 83,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "cause": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "lambda_handler": {
            "name": "lambda_handler",
            "location": 91,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "Callable",
                    "\"keras.models.Sequential\""
                ],
                "context": [
                    "str"
                ]
            }
        }
    },
    "nicecream-history-master/crawler/crawler.py": {
        "extract": {
            "name": "extract",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "content": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "nicecream-history-master/crawler/__init__.py": {},
    "nicecream-history-master/crawler/__main__.py": {},
    "nicecream-history-master/tests/integration/test_smoke.py": {
        "test_worker": {
            "name": "test_worker",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
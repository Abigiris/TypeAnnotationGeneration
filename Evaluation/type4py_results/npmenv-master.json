{
    "npmenv-master/dev.py": {
        "_cd": {
            "name": "_cd",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[pathlib.Path]",
                    "Optional[str]",
                    "Union[str, pathlib.Path]",
                    "Union[pathlib.Path, str]",
                    "pathlib.Path"
                ]
            }
        },
        "_documentation": {
            "name": "_documentation",
            "location": 40,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "inv": [
                    "str",
                    "Tuple[str, str]",
                    "List[pathlib.Path]"
                ]
            }
        },
        "_get_ci_status": {
            "name": "_get_ci_status",
            "location": 84,
            "return": [
                "bool",
                "pathlib.Path",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "commit": [
                    "str",
                    "bool",
                    "bytes",
                    "List[str]"
                ]
            }
        },
        "_get_new_version": {
            "name": "_get_new_version",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "last_str": [
                    "int",
                    "str"
                ]
            }
        },
        "_set_version_in_module": {
            "name": "_set_version_in_module",
            "location": 135,
            "return": [
                ""
            ],
            "arguments": {
                "version": [
                    "str",
                    "type",
                    "Tuple[str]"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 154,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [],
                "python": [
                    "int",
                    "str"
                ]
            }
        },
        "test_lint": {
            "name": "test_lint",
            "location": 167,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [
                    "str",
                    "Dict[str, Sequence[str]]"
                ]
            }
        },
        "test_unit": {
            "name": "test_unit",
            "location": 180,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [
                    "str"
                ],
                "pdb": [
                    "str",
                    "Mapping[str, Any]"
                ],
                "failed": [
                    "str",
                    "Mapping[str, Any]"
                ]
            }
        },
        "doc": {
            "name": "doc",
            "location": 191,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [
                    "str",
                    "Optional[pathlib.Path]",
                    "pathlib.Path",
                    "int"
                ]
            }
        },
        "package": {
            "name": "package",
            "location": 197,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [
                    "str",
                    "List[str]"
                ],
                "version": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "release": {
            "name": "release",
            "location": 232,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [
                    "str"
                ]
            }
        },
        "release_real": {
            "name": "release_real",
            "location": 345,
            "return": [
                ""
            ],
            "arguments": {
                "inv": [
                    "str",
                    "float",
                    "Tuple[int, int]"
                ],
                "version": [
                    "int"
                ],
                "msg": [
                    "List[str]",
                    "Optional[List[str]]",
                    "numpy.random.RandomState",
                    "Sequence[str]"
                ],
                "iknowwhatimdoing": [
                    "str",
                    "pathlib.Path",
                    "bool",
                    "Callable"
                ]
            }
        },
        "release.git_out": {
            "name": "git_out",
            "location": 236,
            "return": [
                "Optional[int]",
                "Optional[bool]",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "cmd": [
                    "bool",
                    "Callable",
                    "Optional[str]",
                    "dict",
                    "str"
                ]
            }
        },
        "release.sub_pipenv": {
            "name": "sub_pipenv",
            "location": 284,
            "return": [
                "str",
                "bytes",
                "int",
                "bool"
            ],
            "arguments": {
                "cmd": [
                    "str",
                    "Tuple[str, str]"
                ]
            }
        }
    },
    "npmenv-master/npmenv.py": {
        "_cd": {
            "name": "_cd",
            "location": 52,
            "return": [
                "typing.Generator[pathlib.Path, None, None]"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[pathlib.Path]",
                    "Optional[str]",
                    "Union[str, pathlib.Path]",
                    "Union[pathlib.Path, str]",
                    "pathlib.Path"
                ]
            }
        },
        "_list_all_files": {
            "name": "_list_all_files",
            "location": 63,
            "return": [
                "str",
                "pathlib.Path",
                "int"
            ],
            "arguments": {
                "root": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "_shell": {
            "name": "_shell",
            "location": 72,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "args": []
            }
        },
        "_args_to_str": {
            "name": "_args_to_str",
            "location": 78,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "args": []
            }
        },
        "_get_env_id": {
            "name": "_get_env_id",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "proj_dir": [
                    "pathlib.Path",
                    "cerulean.Path",
                    "cerulean.path.Path"
                ]
            }
        },
        "_get_env_dir": {
            "name": "_get_env_dir",
            "location": 92,
            "return": [
                "pathlib.Path",
                "str"
            ],
            "arguments": {
                "proj_dir": [
                    "str",
                    "norfs.fs.base.Path"
                ]
            }
        },
        "_resolve_proj_dir": {
            "name": "_resolve_proj_dir",
            "location": 97,
            "return": [
                "pathlib.Path",
                "Dict[str, cerulean.Path]"
            ],
            "arguments": {
                "given_proj_dir": [
                    "Optional[str]",
                    "Optional[pathlib.Path]",
                    "str",
                    "TextIO",
                    "Path"
                ]
            }
        },
        "_cli": {
            "name": "_cli",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "env_npm": {
            "name": "env_npm",
            "location": 183,
            "return": [
                "str",
                "dict",
                "Iterable[Tuple[str, str]]"
            ],
            "arguments": {
                "args": [],
                "proj_dir": [
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "env_rm": {
            "name": "env_rm",
            "location": 226,
            "return": [
                "str",
                "Iterable[str]",
                "pathlib.Path"
            ],
            "arguments": {
                "identifier": [
                    "int",
                    "str"
                ]
            }
        },
        "env_cleanup": {
            "name": "env_cleanup",
            "location": 253,
            "return": [
                "str",
                "int",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "env_list": {
            "name": "env_list",
            "location": 263,
            "return": [
                "List[str]",
                "str",
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "env_location": {
            "name": "env_location",
            "location": 285,
            "return": [
                "str",
                "pathlib.Path",
                "List[str]"
            ],
            "arguments": {
                "proj_dir": [
                    "str",
                    "pathlib.PurePath"
                ]
            }
        },
        "env_run": {
            "name": "env_run",
            "location": 290,
            "return": [
                "str",
                "pathlib.Path",
                "IO[Any]",
                "List[str]"
            ],
            "arguments": {
                "args": [],
                "proj_dir": [
                    "str",
                    "Union[pathlib.Path, str]"
                ],
                "run_kwargs": [
                    "str",
                    "bool",
                    "List[str]",
                    "IO",
                    "Tuple[str]"
                ]
            }
        },
        "_cli.issue_to_str": {
            "name": "issue_to_str",
            "location": 119,
            "return": [
                "str",
                "bytes"
            ],
            "arguments": {
                "issue": [
                    "List['cirq.Qid']"
                ]
            }
        }
    },
    "npmenv-master/npmenv_test.py": {
        "assert_exit_with_success": {
            "name": "assert_exit_with_success",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "success": [
                    "dict",
                    "pathlib.Path",
                    "Dict[str, List[Any]]",
                    "str",
                    "OrderedDict[str, Any]"
                ]
            }
        },
        "sandbox": {
            "name": "sandbox",
            "location": 50,
            "return": [
                "dict",
                "List[int]",
                "bytes",
                "Iterable[Hashable]"
            ],
            "arguments": {
                "request": [
                    "Callable"
                ],
                "tmpdir_factory": [
                    "str"
                ],
                "monkeypatch": [
                    "str",
                    "bytes"
                ]
            }
        },
        "insert_project_files": {
            "name": "insert_project_files",
            "location": 92,
            "return": [
                "str",
                "List[str]",
                "pathlib.Path"
            ],
            "arguments": {
                "sandbox": [
                    "bool",
                    "Tuple[str, str]",
                    "Set[pathlib.Path]"
                ]
            }
        },
        "fake_project": {
            "name": "fake_project",
            "location": 104,
            "return": [
                "str",
                "Iterable[str]",
                "Optional[pathlib.Path]",
                "pathlib.Path",
                "Union[pathlib.Path, str]"
            ],
            "arguments": {}
        },
        "test__cd": {
            "name": "test__cd",
            "location": 125,
            "return": [
                ""
            ],
            "arguments": {
                "sandbox": [
                    "pathlib.Path",
                    "IO[str]",
                    "str",
                    "taskiinfrastructure.data.json.repositories.project_repository.JsonProjectRepository"
                ]
            }
        },
        "test__get_env_id": {
            "name": "test__get_env_id",
            "location": 133,
            "return": [
                ""
            ],
            "arguments": {
                "fake_project": [
                    "pathlib.Path"
                ]
            }
        },
        "test__get_env_dir": {
            "name": "test__get_env_dir",
            "location": 138,
            "return": [
                ""
            ],
            "arguments": {
                "fake_project": [
                    "pathlib.Path",
                    "pypi2nix.path.Path"
                ]
            }
        },
        "test__resolve_proj_dir": {
            "name": "test__resolve_proj_dir",
            "location": 142,
            "return": [
                ""
            ],
            "arguments": {
                "sandbox": [
                    "pathlib.Path"
                ]
            }
        },
        "test_env_rm": {
            "name": "test_env_rm",
            "location": 292,
            "return": [
                ""
            ],
            "arguments": {
                "sandbox": [
                    "int"
                ]
            }
        },
        "test_env_list": {
            "name": "test_env_list",
            "location": 312,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_env_cleanup": {
            "name": "test_env_cleanup",
            "location": 321,
            "return": [
                ""
            ],
            "arguments": {
                "sandbox": [
                    "pathlib.Path",
                    "Dict[str, cerulean.Path]",
                    "List[str]"
                ],
                "insert_project_files": [
                    "path.Path",
                    "str",
                    "Optional[str]",
                    "pathlib.Path"
                ],
                "tmpdir_factory": [
                    "path.Path",
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "test_env_location": {
            "name": "test_env_location",
            "location": 346,
            "return": [
                ""
            ],
            "arguments": {
                "sandbox": [
                    "pathlib.Path"
                ]
            }
        },
        "test_env_run": {
            "name": "test_env_run",
            "location": 353,
            "return": [
                ""
            ],
            "arguments": {
                "sandbox": [
                    "str"
                ],
                "capfd": []
            }
        },
        "insert_project_files.inner": {
            "name": "inner",
            "location": 94,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "package": [
                    "str",
                    "Iterable[pathlib.Path]",
                    "bool",
                    "List[Tuple[str, Any]]",
                    "List[pathlib.Path]"
                ],
                "lock": [
                    "str",
                    "Iterable[pathlib.Path]",
                    "bool",
                    "List[Tuple[str, Any]]",
                    "List[pathlib.Path]"
                ]
            }
        },
        "TestCli._patch_argv": {
            "name": "_patch_argv",
            "location": 158,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "Optional[bool]",
                    "Optional[str]",
                    "int",
                    "bool"
                ],
                "args": []
            }
        },
        "TestCli.test_env_list": {
            "name": "test_env_list",
            "location": 162,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "sandbox": [
                    "int",
                    "Sequence[int]"
                ],
                "monkeypatch": [
                    "int",
                    "Tuple[float, float, float, float, float]",
                    "float"
                ],
                "capfd": [
                    "int",
                    "pathlib.Path",
                    "Callable",
                    "Sequence[int]",
                    "str"
                ]
            }
        },
        "TestCli.test_env_cleanup": {
            "name": "test_env_cleanup",
            "location": 171,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [],
                "sandbox": [
                    "pathlib.Path",
                    "str",
                    "bytes"
                ],
                "insert_project_files": [
                    "str",
                    "path.Path",
                    "Optional[str]"
                ],
                "tmpdir": [
                    "pathlib.Path",
                    "str",
                    "bytes"
                ],
                "capfd": [
                    "str",
                    "int"
                ]
            }
        },
        "TestCli.test_env_location": {
            "name": "test_env_location",
            "location": 184,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "str",
                    "pathlib.Path",
                    "dict",
                    "int"
                ],
                "sandbox": [
                    "Optional[str]",
                    "Set[int]"
                ],
                "capfd": [
                    "Optional[str]",
                    "Set[int]"
                ]
            }
        },
        "TestCli.test_env_modules": {
            "name": "test_env_modules",
            "location": 189,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "Dict[str, float]"
                ],
                "sandbox": [
                    "str",
                    "List[str]"
                ],
                "capfd": [
                    "int",
                    "Sequence[int]",
                    "str"
                ]
            }
        },
        "TestCli.test_env_rm": {
            "name": "test_env_rm",
            "location": 198,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "str",
                    "int",
                    "Type"
                ]
            }
        },
        "TestCli.test_env_run": {
            "name": "test_env_run",
            "location": 208,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "str",
                    "float"
                ]
            }
        },
        "TestCli.test_npm": {
            "name": "test_npm",
            "location": 214,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "str",
                    "float"
                ],
                "capfd": [
                    "int",
                    "Sequence[int]",
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "TestCli.test_args": {
            "name": "test_args",
            "location": 223,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        },
        "TestEnvNpm.test_no_files_init": {
            "name": "test_no_files_init",
            "location": 239,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "sandbox": [
                    "path.Path"
                ]
            }
        },
        "TestEnvNpm.test_no_files_install": {
            "name": "test_no_files_install",
            "location": 245,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "sandbox": [
                    "Callable",
                    "path.Path"
                ]
            }
        },
        "TestEnvNpm.test_only_package": {
            "name": "test_only_package",
            "location": 251,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "insert_project_files": [
                    "pathlib.Path",
                    "path.Path",
                    "str"
                ]
            }
        },
        "TestEnvNpm.test_both_files": {
            "name": "test_both_files",
            "location": 263,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "insert_project_files": [
                    "str",
                    "pathlib.Path",
                    "bool"
                ]
            }
        },
        "TestEnvNpm.test_unlink": {
            "name": "test_unlink",
            "location": 276,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "insert_project_files": [
                    "str",
                    "pathlib.Path",
                    "bool",
                    "path.Path"
                ]
            }
        },
        "test_env_rm.rm_with_checks": {
            "name": "rm_with_checks",
            "location": 294,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "npmenv-master/setup.py": {}
}
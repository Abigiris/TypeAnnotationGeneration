{
    "opening_hours_lib-master/setup.py": {},
    "opening_hours_lib-master/__init__.py": {},
    "opening_hours_lib-master/parsing_tools/test_tools.py": {
        "full_example_dict": {
            "name": "full_example_dict",
            "location": 76,
            "return": [
                "Dict[str, List[int]]",
                "dict",
                "str",
                "Optional[float]",
                "int"
            ],
            "arguments": {}
        },
        "TestParse.test_prettify_time": {
            "name": "test_prettify_time",
            "location": 83,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParse.test_flatten_dict": {
            "name": "test_flatten_dict",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParse.test_parse_periods": {
            "name": "test_parse_periods",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParse.test_prettify_periods": {
            "name": "test_prettify_periods",
            "location": 95,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParse.test_parse": {
            "name": "test_parse",
            "location": 104,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_flatten": [
                    "unittesmock.Mock"
                ],
                "mock_parse_periods": [
                    "unittesmock.Mock",
                    "mock.MagicMock"
                ],
                "mock_prettify": [
                    "unittesmock.Mock"
                ]
            }
        },
        "TestParse.test_stringify_parsed_json": {
            "name": "test_stringify_parsed_json",
            "location": 110,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParse.full_test": {
            "name": "full_test",
            "location": 116,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opening_hours_lib-master/parsing_tools/tools.py": {
        "_flatten_dict": {
            "name": "_flatten_dict",
            "location": 10,
            "return": [
                "List[str]",
                "List[Dict]",
                "Union[str, List[Any]]",
                "bool",
                "str"
            ],
            "arguments": {
                "opening_hours": [
                    "dict",
                    "Dict[str, Any]",
                    "Mapping[str, Any]"
                ]
            }
        },
        "_parse_periods": {
            "name": "_parse_periods",
            "location": 24,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "flat_dicts": [
                    "int",
                    "list",
                    "List[List[int]]",
                    "str",
                    "List[str]"
                ]
            }
        },
        "_prettify_time": {
            "name": "_prettify_time",
            "location": 35,
            "return": [
                "str",
                "bool",
                "int",
                "Dict[int, datetime.datetime]",
                "Tuple[int, int]",
                "Optional[datetime.timedelta]"
            ],
            "arguments": {
                "epoch_time": [
                    "datetime.datetime"
                ]
            }
        },
        "_prettify_periods": {
            "name": "_prettify_periods",
            "location": 43,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "periods": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 63,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "json": [
                    "dict",
                    "List[float]",
                    "str"
                ]
            }
        },
        "stringify_parsed_json": {
            "name": "stringify_parsed_json",
            "location": 73,
            "return": [
                "str",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "pretty_dict": [
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, float]",
                    "Dict[str, Dict[str, Any]]"
                ]
            }
        }
    },
    "opening_hours_lib-master/parsing_tools/__init__.py": {}
}
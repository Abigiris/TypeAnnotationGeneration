{
    "ossaudit-master/setup.py": {},
    "ossaudit-master/ossaudit/audit.py": {
        "components": {
            "name": "components",
            "location": 30,
            "return": [
                "int",
                "str",
                "Sequence[Any]",
                "tuple",
                "Tuple[int, int]"
            ],
            "arguments": {
                "pkgs": [
                    "str",
                    "int",
                    "Set[str]"
                ],
                "username": [
                    "str",
                    "Set[str]",
                    "List[List[int]]",
                    "dict"
                ],
                "token": [
                    "str",
                    "Set[str]",
                    "List[List[int]]",
                    "dict"
                ],
                "ignore_cache": [
                    "str",
                    "int",
                    "Set[str]"
                ]
            }
        },
        "_from_api": {
            "name": "_from_api",
            "location": 48,
            "return": [
                "typing.Generator"
            ],
            "arguments": {
                "pkgs": [
                    "dict",
                    "str",
                    "List[int]",
                    "List[str]",
                    "Optional[Tuple[str, str]]",
                    "Tuple[List[int], List[str]]"
                ],
                "ignore_cache": [
                    "bool",
                    "Any"
                ],
                "username": [
                    "int",
                    "bool",
                    "Dict[\"core.Edge\", \"state.State\"]"
                ],
                "token": [
                    "int",
                    "bool",
                    "Dict[\"core.Edge\", \"state.State\"]"
                ]
            }
        },
        "_from_cache": {
            "name": "_from_cache",
            "location": 78,
            "return": [
                "typing.Generator"
            ],
            "arguments": {
                "pkgs": [
                    "bool",
                    "List[packages.Package]",
                    "str",
                    "int"
                ],
                "ignore_cache": [
                    "bool",
                    "List[packages.Package]",
                    "str",
                    "int"
                ]
            }
        },
        "_transform": {
            "name": "_transform",
            "location": 86,
            "return": [
                "str",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "pkg": [
                    "dict",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ],
                "vuln": [
                    "dict",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "ossaudit-master/ossaudit/cache.py": {
        "get": {
            "name": "get",
            "location": 12,
            "return": [
                "Optional[int]",
                "bool",
                "str",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]",
                "dict",
                "Optional[List[Any]]"
            ],
            "arguments": {
                "coordinate": [
                    "float",
                    "Exception",
                    "Match",
                    "Type[T]",
                    "dict"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "entry": [
                    "dict",
                    "Mapping",
                    "Dict[str, str]"
                ]
            }
        },
        "reset": {
            "name": "reset",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_is_valid": {
            "name": "_is_valid",
            "location": 55,
            "return": [
                "Dict[str, int]",
                "str",
                "dict",
                "int"
            ],
            "arguments": {
                "entry": [
                    "str",
                    "Union[Dict, str]",
                    "List[Dict[str, Any]]",
                    "dict"
                ]
            }
        }
    },
    "ossaudit-master/ossaudit/cli.py": {
        "cli": {
            "name": "cli",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "installed": [
                    "bool",
                    "Mapping[Any, str]",
                    "str",
                    "Optional[str]"
                ],
                "files": [
                    "Optional[str]",
                    "str"
                ],
                "username": [
                    "int",
                    "Optional[str]",
                    "bool"
                ],
                "token": [
                    "int",
                    "Optional[str]",
                    "bool"
                ],
                "columns": [
                    "List[str]",
                    "int",
                    "set",
                    "List[List[Any]]",
                    "List[int]",
                    "dict"
                ],
                "ignore_ids": [
                    "int",
                    "Optional[str]",
                    "bool"
                ],
                "ignore_cache": [
                    "int",
                    "Optional[str]",
                    "bool"
                ],
                "reset_cache": [
                    "bool",
                    "Mapping[Any, str]",
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "ossaudit-master/ossaudit/const.py": {},
    "ossaudit-master/ossaudit/option.py": {
        "add": {
            "name": "add",
            "location": 38,
            "return": [
                "bool",
                "Dict[int, dict]",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "add_config": {
            "name": "add_config",
            "location": 45,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {}
        },
        "Option.full_process_value": {
            "name": "full_process_value",
            "location": 17,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "click.Context"
                ],
                "value": [
                    "Optional[str]",
                    "str",
                    "click.Context",
                    "bool",
                    "click.core.Context"
                ]
            }
        },
        "add_config.cb": {
            "name": "cb",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "click.Context",
                    "str"
                ],
                "_param": [
                    "click.Parameter",
                    "str",
                    "Tuple[str]",
                    "click.Context"
                ],
                "value": [
                    "Optional[str]",
                    "str",
                    "click.Context"
                ]
            }
        }
    },
    "ossaudit-master/ossaudit/packages.py": {
        "get_from_files": {
            "name": "get_from_files",
            "location": 81,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "fhs": [
                    "bool",
                    "List[str]",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "get_installed": {
            "name": "get_installed",
            "location": 137,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {}
        },
        "Package.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "bool",
                    "Optional[Sequence[Any]]"
                ],
                "version": [
                    "bool",
                    "int",
                    "str",
                    "Optional[str]",
                    "Sequence"
                ]
            }
        },
        "Package.name": {
            "name": "name",
            "location": 20,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.version": {
            "name": "version",
            "location": 24,
            "return": [
                "str",
                "Callable[[], bool]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.coordinate": {
            "name": "coordinate",
            "location": 28,
            "return": [
                "str",
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.__eq__": {
            "name": "__eq__",
            "location": 33,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "float",
                    "Union[int, str]",
                    "Collection[str]"
                ]
            }
        },
        "_Version.__iadd__": {
            "name": "__iadd__",
            "location": 40,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "num": [
                    "int"
                ]
            }
        },
        "_Version.__isub__": {
            "name": "__isub__",
            "location": 48,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "num": [
                    "int"
                ]
            }
        }
    },
    "ossaudit-master/ossaudit/__init__.py": {},
    "ossaudit-master/ossaudit/__main__.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ossaudit-master/tests/helpers.py": {
        "PatchedTestCase.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PatchedTestCase.tearDown": {
            "name": "tearDown",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ossaudit-master/tests/test_audit.py": {
        "TestComponents.test_ok": {
            "name": "test_ok",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_max_packages": {
            "name": "test_max_packages",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_no_packages": {
            "name": "test_no_packages",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_missing_fields": {
            "name": "test_missing_fields",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_too_many_requests": {
            "name": "test_too_many_requests",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_unknown_status": {
            "name": "test_unknown_status",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_from_cache": {
            "name": "test_from_cache",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_save_cache": {
            "name": "test_save_cache",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_from_ignored_cache": {
            "name": "test_from_ignored_cache",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_dont_save_cache": {
            "name": "test_dont_save_cache",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_invalid_credentials": {
            "name": "test_invalid_credentials",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_credentials": {
            "name": "test_credentials",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_missing_username": {
            "name": "test_missing_username",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_missing_token": {
            "name": "test_missing_token",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComponents.test_from_cache.getfun": {
            "name": "getfun",
            "location": 109,
            "return": [],
            "arguments": {
                "coordinate": []
            }
        },
        "TestComponents.test_from_ignored_cache.getfun": {
            "name": "getfun",
            "location": 168,
            "return": [
                "bool",
                "dict",
                "Dict[str, str]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "coordinate": [
                    "str",
                    "Mapping",
                    "Callable",
                    "T",
                    "List[str]",
                    "dict"
                ]
            }
        }
    },
    "ossaudit-master/tests/test_cache.py": {
        "CacheTestCase.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CacheTestCase.tearDown": {
            "name": "tearDown",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CacheTestCase._write_cache": {
            "name": "_write_cache",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "dst": [
                    "int",
                    "str",
                    "Optional[int]",
                    "list",
                    "pathlib.Path"
                ],
                "timestamp": [
                    "int",
                    "list",
                    "Tuple[float, float]"
                ],
                "n": [
                    "int",
                    "List[List[int]]"
                ]
            }
        },
        "TestGet.test_no_cache": {
            "name": "test_no_cache",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGet.test_have_cached_entry": {
            "name": "test_have_cached_entry",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGet.test_have_old_cached_entry": {
            "name": "test_have_old_cached_entry",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGet.test_missing_cached_entry": {
            "name": "test_missing_cached_entry",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGet.test_invalid_cache": {
            "name": "test_invalid_cache",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSave.test_mkdir": {
            "name": "test_mkdir",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSave.test_remove_old": {
            "name": "test_remove_old",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSave.test_remove_partially_old": {
            "name": "test_remove_partially_old",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSave.test_ignore_invalid": {
            "name": "test_ignore_invalid",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReset.test_reset_exist": {
            "name": "test_reset_exist",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReset.test_reset_non_exist": {
            "name": "test_reset_non_exist",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIsValid.test_missing_time": {
            "name": "test_missing_time",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIsValid.test_old": {
            "name": "test_old",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIsValid.test_valid": {
            "name": "test_valid",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ossaudit-master/tests/test_cli.py": {
        "TestCli.test_run": {
            "name": "test_run",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_installed": {
            "name": "test_installed",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_files": {
            "name": "test_files",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_mixed": {
            "name": "test_mixed",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_credentials": {
            "name": "test_credentials",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_audit_error": {
            "name": "test_audit_error",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_config_error": {
            "name": "test_config_error",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_have_vulnerabilities": {
            "name": "test_have_vulnerabilities",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_no_vulnerabilities": {
            "name": "test_no_vulnerabilities",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_ignore_some_ids_arg": {
            "name": "test_ignore_some_ids_arg",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_ignore_all_ids_arg": {
            "name": "test_ignore_all_ids_arg",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_reset_cache": {
            "name": "test_reset_cache",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ossaudit-master/tests/test_option.py": {
        "TestOption.test_without_config": {
            "name": "test_without_config",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOption.test_missing_config": {
            "name": "test_missing_config",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOption.test_invalid_config": {
            "name": "test_invalid_config",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOption.test_with_config": {
            "name": "test_with_config",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOption.test_with_config_other_name": {
            "name": "test_with_config_other_name",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOption.test_with_config_and_overrides": {
            "name": "test_with_config_and_overrides",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdd.test_add": {
            "name": "test_add",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOption.test_without_config.fun": {
            "name": "fun",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "TestOption.test_missing_config.fun": {
            "name": "fun",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "TestOption.test_invalid_config.fun": {
            "name": "fun",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "TestOption.test_with_config.fun": {
            "name": "fun",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "TestOption.test_with_config_other_name.fun": {
            "name": "fun",
            "location": 111,
            "return": [],
            "arguments": {}
        },
        "TestOption.test_with_config_and_overrides.fun": {
            "name": "fun",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestAdd.test_add.fun": {
            "name": "fun",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [
                    "str",
                    "int",
                    "bool",
                    "float",
                    "Tuple[float, float, float, float, float, float]",
                    "Type[str]"
                ],
                "b": [
                    "int",
                    "List[Tuple[int, int]]",
                    "str",
                    "bytes"
                ],
                "c": [
                    "List[int]",
                    "float"
                ]
            }
        }
    },
    "ossaudit-master/tests/test_packages.py": {
        "TestVersion.test_arithmetic": {
            "name": "test_arithmetic",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCoordinate.test_downcase": {
            "name": "test_downcase",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFromFiles.test_requirements": {
            "name": "test_requirements",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFromFiles.test_pipfile": {
            "name": "test_pipfile",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFromFiles.test_pipfile_lock": {
            "name": "test_pipfile_lock",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFromFiles.test_tox": {
            "name": "test_tox",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFromFiles.test_multiple": {
            "name": "test_multiple",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFromFiles.test_duplicates": {
            "name": "test_duplicates",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetInstalled.test_installed": {
            "name": "test_installed",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPackage.test_eq": {
            "name": "test_eq",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ossaudit-master/tests/__init__.py": {}
}
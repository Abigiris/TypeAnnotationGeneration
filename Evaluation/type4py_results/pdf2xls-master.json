{
    "pdf2xls-master/setup.py": {},
    "pdf2xls-master/demo/callout.py": {
        "Callout.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "chart": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "Callout.boundingRect": {
            "name": "boundingRect",
            "location": 38,
            "return": [
                "float",
                "str",
                "int",
                "Tuple[int, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Callout.paint": {
            "name": "paint",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": [
                    "str",
                    "Callable[[], None]",
                    "bool",
                    "Callable"
                ],
                "option": [
                    "str",
                    "bool",
                    "list"
                ],
                "widget": [
                    "str",
                    "bool",
                    "list"
                ]
            }
        },
        "Callout.mousePressEvent": {
            "name": "mousePressEvent",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict",
                    "Dict[str, Any]",
                    "Mapping",
                    "Callable"
                ]
            }
        },
        "Callout.mouseMoveEvent": {
            "name": "mouseMoveEvent",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict"
                ]
            }
        },
        "Callout.set_text": {
            "name": "set_text",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "int",
                    "Tuple[int, int]"
                ]
            }
        },
        "Callout.set_anchor": {
            "name": "set_anchor",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "point": [
                    "bool",
                    "float"
                ]
            }
        },
        "Callout.update_geometry": {
            "name": "update_geometry",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "View.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "View.resizeEvent": {
            "name": "resizeEvent",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "QtWidgets.QGraphicsSceneMouseEvent",
                    "int"
                ]
            }
        },
        "View.mouseMoveEvent": {
            "name": "mouseMoveEvent",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict"
                ]
            }
        },
        "View.keep_callout": {
            "name": "keep_callout",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "View.tooltip": {
            "name": "tooltip",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "point": [
                    "Dict[str, \"Outcome\"]"
                ],
                "state": [
                    "dict"
                ]
            }
        }
    },
    "pdf2xls-master/demo/__init__.py": {},
    "pdf2xls-master/pdf2xls/automation.py": {
        "firefox_profile": {
            "name": "firefox_profile",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dtemp": [
                    "bool",
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "mv_pdf_from_tmp_to_data": {
            "name": "mv_pdf_from_tmp_to_data",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "dtemp": [
                    "str",
                    "Union[int, str]",
                    "Optional[str]",
                    "int"
                ],
                "year": [
                    "Optional[int]",
                    "str",
                    "bytes",
                    "int",
                    "float"
                ],
                "month": [
                    "str",
                    "Union[int, str]",
                    "Optional[str]",
                    "int"
                ],
                "data_path": [
                    "Optional[int]",
                    "str",
                    "bytes",
                    "int",
                    "float"
                ]
            }
        },
        "get_last_local": {
            "name": "get_last_local",
            "location": 67,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "data_path": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "try_fetch_new_data": {
            "name": "try_fetch_new_data",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "username": [
                    "bool",
                    "Optional[bool]",
                    "List[Union[str, int]]",
                    "list"
                ],
                "password": [
                    "bool",
                    "Optional[bool]",
                    "List[Union[str, int]]",
                    "list"
                ],
                "data_path": [
                    "Optional[int]",
                    "List[str]",
                    "bool",
                    "str"
                ]
            }
        },
        "Date.next": {
            "name": "next",
            "location": 27,
            "return": [
                "str",
                "Optional[str]",
                "Optional[datetime.tzinfo]",
                "Optional[datetime.date]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Date.get_year_months": {
            "name": "get_year_months",
            "location": 36,
            "return": [
                "typing.Iterable[Date]"
            ],
            "arguments": {
                "self": []
            }
        },
        "try_fetch_new_data.change_year": {
            "name": "change_year",
            "location": 90,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "year": [
                    "str",
                    "Optional[BaseException]"
                ]
            }
        },
        "try_fetch_new_data.download_for_month": {
            "name": "download_for_month",
            "location": 103,
            "return": [
                "int",
                "List[int]"
            ],
            "arguments": {
                "month": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/constants.py": {
        "_resource": {
            "name": "_resource",
            "location": 6,
            "return": [
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Callable[[str], str]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/freezetableview.py": {
        "FreezeTableView.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "PyQt5.QtWidgets.QWidget",
                    "PyQt5.QtCore.QObject"
                ],
                "model": [
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "FreezeTableView.selectionModel": {
            "name": "selectionModel",
            "location": 40,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FreezeTableView._reset_columns": {
            "name": "_reset_columns",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/loader.py": {
        "_create_json_from_pdf": {
            "name": "_create_json_from_pdf",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "pdf_file_name": [
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "_get_reader": {
            "name": "_get_reader",
            "location": 20,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "pdf_file_name": [
                    "str"
                ],
                "force": [
                    "List[str]",
                    "Iterable[List[Any]]",
                    "bool",
                    "str",
                    "Optional[bool]"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 34,
            "return": [
                "str",
                "dict",
                "Iterable[str]",
                "Pattern",
                "list"
            ],
            "arguments": {
                "data_path": [
                    "pathlib.Path",
                    "str",
                    "waterbutler.core.path.WaterButlerPath",
                    "Dict[str, pathlib.Path]",
                    "path.Path"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/mainui.py": {
        "new_settingsui": {
            "name": "new_settingsui",
            "location": 20,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "settings": [
                    "bool",
                    "str",
                    "type",
                    "ClassVar",
                    "int"
                ]
            }
        },
        "new_mainui": {
            "name": "new_mainui",
            "location": 40,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "settings": [
                    "int",
                    "bool",
                    "str",
                    "IO"
                ],
                "model": [
                    "Dict[str, Any]"
                ],
                "settingsui": [
                    "str",
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "new_settingsui.save_settings": {
            "name": "save_settings",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "new_settingsui.open_folder": {
            "name": "open_folder",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "new_mainui.update_helper": {
            "name": "update_helper",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "new_mainui.update_status_bar": {
            "name": "update_status_bar",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "_selected": [
                    "int",
                    "bool",
                    "List[str]"
                ],
                "_deselected": [
                    "int",
                    "bool",
                    "List[str]"
                ]
            }
        },
        "new_mainui.remove_jsons_helper": {
            "name": "remove_jsons_helper",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pdf2xls-master/pdf2xls/model.py": {
        "parse_infos": {
            "name": "parse_infos",
            "location": 61,
            "return": [
                "int",
                "dict",
                "Optional[Dict[str, Any]]",
                "Dict[str, str]",
                "bytes"
            ],
            "arguments": {
                "infos": [
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/removejsons.py": {
        "remove_jsons": {
            "name": "remove_jsons",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "data_path": [
                    "pathlib.Path",
                    "os.PathLike",
                    "str",
                    "path.Path"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/settings.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings.username": {
            "name": "username",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "int",
                    "float",
                    "Tuple[float, float]",
                    "dict",
                    "Tuple[int]"
                ]
            }
        },
        "Settings.password": {
            "name": "password",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "Settings.data_path": {
            "name": "data_path",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_path": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/viewmodel.py": {
        "by_column": {
            "name": "by_column",
            "location": 26,
            "return": [],
            "arguments": {
                "info": [],
                "i": []
            }
        },
        "max_min_this": {
            "name": "max_min_this",
            "location": 34,
            "return": [],
            "arguments": {
                "data": [],
                "row": [],
                "column": []
            }
        },
        "ViewModel.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [],
                "infos": []
            }
        },
        "ViewModel._set_infos": {
            "name": "_set_infos",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "infos": []
            }
        },
        "ViewModel.rowCount": {
            "name": "rowCount",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "_parent": []
            }
        },
        "ViewModel.columnCount": {
            "name": "columnCount",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "_parent": []
            }
        },
        "ViewModel.headerData": {
            "name": "headerData",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "section": [],
                "orientation": [],
                "role": []
            }
        },
        "ViewModel.data": {
            "name": "data",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "role": []
            }
        },
        "ViewModel.sort": {
            "name": "sort",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "order": []
            }
        },
        "ViewModel.load": {
            "name": "load",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "infos": []
            }
        },
        "SortFilterViewModel.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "settings": []
            }
        },
        "SortFilterViewModel.filterAcceptsRow": {
            "name": "filterAcceptsRow",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "source_row": [],
                "source_parent": []
            }
        },
        "SortFilterViewModel.filterChanged": {
            "name": "filterChanged",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "SortFilterViewModel.sort": {
            "name": "sort",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "column": [],
                "order": []
            }
        },
        "SortFilterViewModel.selectionChanged": {
            "name": "selectionChanged",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "selection_model": [],
                "statusbar": []
            }
        },
        "SortFilterViewModel.update": {
            "name": "update",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortFilterViewModel.get_categories": {
            "name": "get_categories",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortFilterViewModel.get_rows": {
            "name": "get_rows",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewModel.sort.key": {
            "name": "key",
            "location": 151,
            "return": [],
            "arguments": {
                "row": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/__init__.py": {},
    "pdf2xls-master/pdf2xls/__main__.py": {},
    "pdf2xls-master/pdf2xls/chartwidget/chart.py": {
        "Chart.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Chart.x_zoom": {
            "name": "x_zoom",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x_min": [
                    "datetime.datetime",
                    "datetime.date",
                    "str",
                    "Optional[datetime.date]"
                ],
                "x_max": [
                    "datetime.datetime",
                    "datetime.date",
                    "str",
                    "Optional[datetime.date]"
                ],
                "start_date": [
                    "datetime.datetime",
                    "datetime.date",
                    "str",
                    "Optional[datetime.date]"
                ],
                "end_date": [
                    "datetime.datetime",
                    "datetime.date",
                    "str",
                    "Optional[datetime.date]"
                ]
            }
        },
        "Chart.replace_series": {
            "name": "replace_series",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "series": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Chart.series": {
            "name": "series",
            "location": 41,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/charthover.py": {
        "ChartHover.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "PyQt5.QtWidgets.QWidget",
                    "PyQt5.QtCore.QObject"
                ]
            }
        },
        "ChartHover.set_howmuchs": {
            "name": "set_howmuchs",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "howmuchs": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/chartslider.py": {
        "ChartSlider.dump": {
            "name": "dump",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": [
                    "float",
                    "str",
                    "Dict[str, Any]",
                    "bool",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "ChartSlider.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str",
                    "dict",
                    "int",
                    "Callable[[], None]",
                    "Optional[Callable]",
                    "bool"
                ],
                "parent": [
                    "str",
                    "dict",
                    "int",
                    "Callable[[], None]",
                    "Optional[Callable]",
                    "bool"
                ]
            }
        },
        "ChartSlider.source_model_reset": {
            "name": "source_model_reset",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChartSlider.__init__._start_date_changed": {
            "name": "_start_date_changed",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "days": [
                    "datetime.date",
                    "datetime.datetime",
                    "int",
                    "datetime.datetime.date"
                ]
            }
        },
        "ChartSlider.__init__._end_date_changed": {
            "name": "_end_date_changed",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "days": [
                    "datetime.date",
                    "datetime.datetime",
                    "Month.date",
                    "str"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/chartview.py": {
        "tick_interval": {
            "name": "tick_interval",
            "location": 98,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "y_max": [
                    "int",
                    "list",
                    "Tuple[float, float]"
                ],
                "n": [
                    "int",
                    "list",
                    "Tuple[float, float]"
                ]
            }
        },
        "SeriesModel.from_infos": {
            "name": "from_infos",
            "location": 45,
            "return": [
                "datetime.datetime",
                "Union[str, int]",
                "str"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "datetime.datetime",
                    "bool"
                ],
                "infos": [
                    "dict",
                    "List[Dict[str, Any]]",
                    "Callable",
                    "Dict[str, Any]",
                    "Type[T]"
                ]
            }
        },
        "ChartView.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ],
                "parent": [
                    "PySide2.QtCore.QObject",
                    "PyQt5.QtCore.QObject",
                    "PyQt5.QtWidgets.QWidget"
                ]
            }
        },
        "ChartView.start_date_changed": {
            "name": "start_date_changed",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start_date": [
                    "str",
                    "datetime.date",
                    "datetime.datetime"
                ]
            }
        },
        "ChartView.end_date_changed": {
            "name": "end_date_changed",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "end_date": [
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "hypothesis.strategies.SearchStrategy[datetime.date.time]"
                ]
            }
        },
        "ChartView._date_changed": {
            "name": "_date_changed",
            "location": 133,
            "return": [
                "int",
                "decimal.Decimal",
                "tuple",
                "dict",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChartView.model_reset": {
            "name": "model_reset",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChartView.mouseMoveEvent": {
            "name": "mouseMoveEvent",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict[datetime.date, Dict[str, Any]]"
                ]
            }
        },
        "ChartView.drawForeground": {
            "name": "drawForeground",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": [
                    "str"
                ],
                "rect": [
                    "int"
                ]
            }
        },
        "ChartView.move_hover": {
            "name": "move_hover",
            "location": 207,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "bool",
                    "float",
                    "nevergrad.common.ArrayLike",
                    "Iterable[Iterable[float]]",
                    "list",
                    "str",
                    "T",
                    "bytes"
                ],
                "howmuchs": [
                    "int",
                    "str",
                    "Union[int, float]",
                    "Union[int, str]",
                    "bool"
                ]
            }
        },
        "SeriesModel.from_infos.get_howmuch": {
            "name": "get_howmuch",
            "location": 66,
            "return": [
                "Optional[List[str]]",
                "List[Tuple[int, str, str]]",
                "bool",
                "int",
                "Tuple[int, int]",
                "List[Tuple[int, int]]",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "info": [
                    "str",
                    "int"
                ],
                "column_header": [
                    "dict",
                    "bool",
                    "Dict[str, Any]",
                    "int",
                    "Optional[str]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/chartwidget.py": {
        "ChartWidget.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "model": [
                    "Dict[str, Set[str]]",
                    "T",
                    "str",
                    "list"
                ],
                "parent": [
                    "PyQt5.QtWidgets.QWidget"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/common.py": {
        "date2days": {
            "name": "date2days",
            "location": 7,
            "return": [
                "str",
                "Tuple[int, int]",
                "float",
                "Type[T]",
                "Dict[str, str]",
                "int"
            ],
            "arguments": {
                "d": [
                    "float",
                    "int",
                    "Iterable[Tuple[Any, Any]]",
                    "datetime.date",
                    "str",
                    "Dict[str, Dict[str, Any]]",
                    "bool"
                ]
            }
        },
        "days2date": {
            "name": "days2date",
            "location": 11,
            "return": [
                "Callable",
                "str",
                "int"
            ],
            "arguments": {
                "days": [
                    "int",
                    "datetime.datetime",
                    "str",
                    "List[int]"
                ]
            }
        },
        "date2QDateTime": {
            "name": "date2QDateTime",
            "location": 15,
            "return": [
                "int",
                "datetime.datetime",
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "d": [
                    "datetime.datetime",
                    "str",
                    "Optional[datetime.tzinfo]",
                    "datetime.date",
                    "datetime.timedelta"
                ]
            }
        },
        "date2millis": {
            "name": "date2millis",
            "location": 19,
            "return": [
                "str",
                "Dict[str, Tuple[Any, Any]]",
                "bool",
                "Dict[str, Any]",
                "Optional[float]"
            ],
            "arguments": {
                "d": [
                    "type",
                    "datetime.date",
                    "Dict[str, Dict[str, Any]]",
                    "bool",
                    "Optional[bool]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/datetimeaxis.py": {
        "first_january": {
            "name": "first_january",
            "location": 14,
            "return": [
                "str",
                "Optional[str]",
                "datetime.date",
                "int",
                "Sequence[str]",
                "float",
                "datetime.datetime"
            ],
            "arguments": {
                "d": [
                    "int"
                ]
            }
        },
        "next_first_of_the_month": {
            "name": "next_first_of_the_month",
            "location": 20,
            "return": [
                "str",
                "Optional[datetime.datetime]",
                "Optional[str]"
            ],
            "arguments": {
                "day": [
                    "Optional[int]",
                    "Optional[datetime.datetime]",
                    "datetime",
                    "bool",
                    "Callable"
                ]
            }
        },
        "create_days": {
            "name": "create_days",
            "location": 26,
            "return": [
                "typing.Iterator[datetime.date]"
            ],
            "arguments": {
                "begin": [
                    "str",
                    "int"
                ],
                "end": [
                    "str",
                    "int"
                ]
            }
        },
        "DateTimeAxis.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x_min": [
                    "datetime.datetime",
                    "int",
                    "Optional[str]",
                    "float",
                    "bool"
                ],
                "x_max": [
                    "datetime.datetime",
                    "int",
                    "Optional[str]",
                    "float",
                    "bool"
                ],
                "parent": [
                    "Callable"
                ]
            }
        },
        "DateTimeAxis.reset_categories": {
            "name": "reset_categories",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/chartwidget/__init__.py": {},
    "pdf2xls-master/pdf2xls/reader/abcreader.py": {
        "ABCReader.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "ABCReader.read_infos": {
            "name": "read_infos",
            "location": 13,
            "return": [
                "builtins.list[model.Info]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/reader/historyreader.py": {
        "_column": {
            "name": "_column",
            "location": 38,
            "return": [
                "Dict[int, dict]",
                "int"
            ],
            "arguments": {
                "raw_column": [
                    "float",
                    "Dict[str, Any]",
                    "Optional[Iterable[str]]",
                    "int",
                    "Iterable[str]"
                ]
            }
        },
        "_additional_detail": {
            "name": "_additional_detail",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "raw_additional_detail": [
                    "dict",
                    "str"
                ]
            }
        },
        "_info": {
            "name": "_info",
            "location": 62,
            "return": [
                "datetime.datetime",
                "str"
            ],
            "arguments": {
                "raw_info": [
                    "bool",
                    "dict",
                    "str"
                ]
            }
        },
        "HistoryReader.read_infos": {
            "name": "read_infos",
            "location": 72,
            "return": [
                "Dict[str, Any]",
                "tuple",
                "bool",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/reader/pdfreader.py": {
        "extract_periodo": {
            "name": "extract_periodo",
            "location": 124,
            "return": [
                "str",
                "datetime.datetime",
                "Optional[str]",
                "datetime.date",
                "int",
                "Sequence[str]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract": {
            "name": "extract",
            "location": 142,
            "return": [
                "str",
                "gmail_img_dl.model.Email"
            ],
            "arguments": {
                "el": [
                    "str",
                    "Tuple[str, str]",
                    "slice"
                ]
            }
        },
        "extract_minimo": {
            "name": "extract_minimo",
            "location": 157,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Callable",
                    "dict",
                    "T"
                ]
            }
        },
        "extract_scatti": {
            "name": "extract_scatti",
            "location": 161,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Callable",
                    "dict",
                    "T"
                ]
            }
        },
        "extract_superm": {
            "name": "extract_superm",
            "location": 165,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Callable",
                    "dict",
                    "T"
                ]
            }
        },
        "extract_edr": {
            "name": "extract_edr",
            "location": 169,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Callable",
                    "dict",
                    "T"
                ]
            }
        },
        "extract_sup_ass": {
            "name": "extract_sup_ass",
            "location": 173,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Callable",
                    "dict",
                    "T"
                ]
            }
        },
        "extract_totale_retributivo": {
            "name": "extract_totale_retributivo",
            "location": 177,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Callable",
                    "dict",
                    "T"
                ]
            }
        },
        "extract_netto_da_pagare": {
            "name": "extract_netto_da_pagare",
            "location": 181,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_ferie_a_prec": {
            "name": "extract_ferie_a_prec",
            "location": 188,
            "return": [
                "str"
            ],
            "arguments": {
                "table": [
                    "bytes",
                    "str",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "extract_ferie_spett": {
            "name": "extract_ferie_spett",
            "location": 195,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_ferie_godute": {
            "name": "extract_ferie_godute",
            "location": 202,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_ferie_saldo": {
            "name": "extract_ferie_saldo",
            "location": 209,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_par_a_prec": {
            "name": "extract_par_a_prec",
            "location": 216,
            "return": [
                "str"
            ],
            "arguments": {
                "table": [
                    "bytes",
                    "str",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "extract_par_spett": {
            "name": "extract_par_spett",
            "location": 223,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_par_godute": {
            "name": "extract_par_godute",
            "location": 230,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_par_saldo": {
            "name": "extract_par_saldo",
            "location": 237,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "dict",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        },
        "extract_legenda": {
            "name": "extract_legenda",
            "location": 244,
            "return": [
                "str",
                "int",
                "pandas.DataFrame",
                "bool"
            ],
            "arguments": {
                "table_keys": [
                    "str",
                    "dict",
                    "Optional[Sequence[str]]",
                    "Mapping",
                    "bool"
                ],
                "table_values": [
                    "Iterable[T]",
                    "Optional[List[str]]",
                    "int",
                    "Tuple[float, float]",
                    "Union[AsyncIterable[Any], Iterable[Any]]",
                    "Iterable[object]"
                ],
                "key": [
                    "str",
                    "Optional[str]",
                    "Sequence[str]",
                    "List[str]"
                ]
            }
        },
        "extract_details": {
            "name": "extract_details",
            "location": 254,
            "return": [
                "typing.Iterator[model.AdditionalDetail]"
            ],
            "arguments": {
                "table": [
                    "Optional[str]",
                    "Optional[Tuple[Any, Any]]",
                    "Tuple[str, Optional[str]]",
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "PdfReader.read_infos": {
            "name": "read_infos",
            "location": 25,
            "return": [
                "str",
                "OrderedDict",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/reader/__init__.py": {},
    "pdf2xls-master/pdf2xls/resources/__init__.py": {},
    "pdf2xls-master/pdf2xls/writer/abcwriter.py": {
        "ABCWriter.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "ABCWriter.write_infos": {
            "name": "write_infos",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "infos": [
                    "Iterable[model.info.InfoPoint]",
                    "model.keys.Keys",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/writer/csvwriter.py": {
        "clean": {
            "name": "clean",
            "location": 14,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "descrizione": [
                    "str"
                ]
            }
        },
        "fieldnames": {
            "name": "fieldnames",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "infos": [
                    "Set[str]",
                    "int"
                ]
            }
        },
        "rows": {
            "name": "rows",
            "location": 34,
            "return": [
                "str",
                "model.Integration",
                "dict"
            ],
            "arguments": {
                "infos": [
                    "List[Dict]",
                    "bool"
                ]
            }
        },
        "CsvWriter.write_infos": {
            "name": "write_infos",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "infos": [
                    "str",
                    "TextIO"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/writer/historywriter.py": {
        "_raw_column": {
            "name": "_raw_column",
            "location": 14,
            "return": [
                "int"
            ],
            "arguments": {
                "column": [
                    "bool",
                    "Optional[str]",
                    "List[str]",
                    "Optional[Callable[..., Any]]"
                ]
            }
        },
        "_raw_additional_details": {
            "name": "_raw_additional_details",
            "location": 21,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "additional_detail": [
                    "int",
                    "str",
                    "float",
                    "List['cirq.Qid']"
                ]
            }
        },
        "_raw_info": {
            "name": "_raw_info",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "info": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "HistoryWriter.write_infos": {
            "name": "write_infos",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "infos": [
                    "Iterable[str]"
                ]
            }
        }
    },
    "pdf2xls-master/pdf2xls/writer/xlswriter.py": {
        "XlsWriter.write_infos": {
            "name": "write_infos",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "infos": []
            }
        },
        "XlsWriter._cell": {
            "name": "_cell",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "sheet": [],
                "value": [],
                "number_format": []
            }
        },
        "XlsWriter.write_infos.clean": {
            "name": "clean",
            "location": 58,
            "return": [],
            "arguments": {
                "descrizione": []
            }
        }
    },
    "pdf2xls-master/pdf2xls/writer/__init__.py": {},
    "pdf2xls-master/tests/__init__.py": {},
    "pdf2xls-master/tests/pdf2xls/test_pdf2xls.py": {
        "TestPdf2Xls.testReadRealPdf": {
            "name": "testReadRealPdf",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/__init__.py": {
        "stub_open": {
            "name": "stub_open",
            "location": 10,
            "return": [
                "typing.Iterator[unittest.mock.MagicMock]"
            ],
            "arguments": {
                "content": [
                    "str",
                    "List[str]",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "loadResourcePdf": {
            "name": "loadResourcePdf",
            "location": 15,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "year": [
                    "int"
                ],
                "month": [
                    "int"
                ]
            }
        },
        "resourceXls": {
            "name": "resourceXls",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/reader/test_historyreader.py": {
        "TestHistoryReader.testReadInfos": {
            "name": "testReadInfos",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/reader/test_pdfreader.py": {
        "extract": {
            "name": "extract",
            "location": 121,
            "return": [
                "int",
                "Tuple[int, int]",
                "List[Tuple[int, int]]",
                "List[str]"
            ],
            "arguments": {
                "infos": [
                    "Hashable",
                    "List[T]",
                    "str",
                    "Optional[int]",
                    "set",
                    "bool"
                ],
                "key": [
                    "str",
                    "int",
                    "type",
                    "bytes"
                ]
            }
        },
        "TestPdfReader.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "methodName": [
                    "str"
                ]
            }
        },
        "TestPdfReader.testRead201901": {
            "name": "testRead201901",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPdfReader.testRead201208": {
            "name": "testRead201208",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPdfReader.testRead201213": {
            "name": "testRead201213",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPdfReader.test_ferie_godute": {
            "name": "test_ferie_godute",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPdfReader.test_legenda_2019_01": {
            "name": "test_legenda_2019_01",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPdfReader.test_legenda_2017_02": {
            "name": "test_legenda_2017_02",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPdfReader.test_month_2012_09": {
            "name": "test_month_2012_09",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/reader/__init__.py": {},
    "pdf2xls-master/tests/pdf2xls/writer/test_csvwriter.py": {
        "TestCsvWriter.test_fieldnames": {
            "name": "test_fieldnames",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvWriter.test_rows": {
            "name": "test_rows",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCsvWriter.test_write_infos": {
            "name": "test_write_infos",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/writer/test_historywriter.py": {
        "TestHistoryWriter.testWriteInfos": {
            "name": "testWriteInfos",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/writer/test_xlswriter.py": {
        "TestXlsWriter.testWriteInfos": {
            "name": "testWriteInfos",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/writer/test_xlswriter_2.py": {
        "TestXlsWriter.testWriteZeroRows": {
            "name": "testWriteZeroRows",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestXlsWriter.testWriteOneInfoMultipleColumns": {
            "name": "testWriteOneInfoMultipleColumns",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestXlsWriter.testWriteMultipleInfosDifferentColumns": {
            "name": "testWriteMultipleInfosDifferentColumns",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pdf2xls-master/tests/pdf2xls/writer/__init__.py": {}
}
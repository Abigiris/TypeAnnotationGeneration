{
    "pixel_sorting-master/main.py": {
        "main": {
            "name": "main",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "pixel_sorting-master/setup.py": {},
    "pixel_sorting-master/pixel_sorting/art_factory.py": {
        "get_all_sorters": {
            "name": "get_all_sorters",
            "location": 30,
            "return": [
                "str",
                "set"
            ],
            "arguments": {}
        },
        "run_all_sorters_on_directory": {
            "name": "run_all_sorters_on_directory",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {
                "path_to_dir": [
                    "str",
                    "int"
                ]
            }
        },
        "run_favorite_sorters_on_directory": {
            "name": "run_favorite_sorters_on_directory",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "path_to_dir": [
                    "str"
                ]
            }
        },
        "run_sorters_on_directory": {
            "name": "run_sorters_on_directory",
            "location": 58,
            "return": [
                ""
            ],
            "arguments": {
                "path_to_dir": [
                    "str",
                    "Optional[str]"
                ],
                "sorters_to_use": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "dict",
                    "Dict[str, Optional[str]]",
                    "Optional[List[str]]"
                ]
            }
        },
        "process_batch": {
            "name": "process_batch",
            "location": 105,
            "return": [
                ""
            ],
            "arguments": {
                "batch": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "pipe": [
                    "str"
                ]
            }
        },
        "create_batch_queue": {
            "name": "create_batch_queue",
            "location": 133,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "images": [
                    "List[pixel_sorting.helper.PixelImage]",
                    "bool",
                    "Optional[int]",
                    "Optional[dict]",
                    "Optional[List]"
                ],
                "sorters_to_use": [
                    "List[pixel_sorting.helper.PixelImage]",
                    "bool",
                    "Optional[int]",
                    "Optional[dict]",
                    "Optional[List]"
                ],
                "max_batch_size": [
                    "int",
                    "bool"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/helper.py": {
        "get_pixels": {
            "name": "get_pixels",
            "location": 98,
            "return": [
                "str",
                "bool",
                "dict",
                "set",
                "List[str]"
            ],
            "arguments": {
                "image": [
                    "int",
                    "float",
                    "numpy.ndarray",
                    "str"
                ]
            }
        },
        "save_to_image": {
            "name": "save_to_image",
            "location": 109,
            "return": [
                ""
            ],
            "arguments": {
                "width": [
                    "int",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "height": [
                    "int",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "mode": [
                    "int",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "pixels": [
                    "str",
                    "Callable[[int, int], None]",
                    "float",
                    "int"
                ],
                "filename": [
                    "str",
                    "Callable[[int, int], None]",
                    "float",
                    "int"
                ]
            }
        },
        "is_image_file": {
            "name": "is_image_file",
            "location": 113,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "is_generated_image": {
            "name": "is_generated_image",
            "location": 121,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "remove_extension": {
            "name": "remove_extension",
            "location": 128,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_images": {
            "name": "get_images",
            "location": 138,
            "return": [
                "str",
                "List[str]",
                "List[T]",
                "List[Dict]",
                "Optional[Type]",
                "List[int]"
            ],
            "arguments": {
                "path_to_dir": [
                    "str",
                    "Sequence[str]",
                    "List[str]"
                ]
            }
        },
        "create_pixel_image": {
            "name": "create_pixel_image",
            "location": 146,
            "return": [
                "str",
                "int",
                "BinaryIO",
                "Optional[str]"
            ],
            "arguments": {
                "path": [
                    "str",
                    "Dict[int, Set[str]]"
                ]
            }
        },
        "PixelImage.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "width": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "height": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "file_path": [
                    "bool",
                    "str",
                    "bytes"
                ]
            }
        },
        "PixelImage.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "str",
                "bool",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImage.__eq__": {
            "name": "__eq__",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int",
                    "List[int]",
                    "str",
                    "float"
                ]
            }
        },
        "PixelImage.load_pixels": {
            "name": "load_pixels",
            "location": 31,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImage.get_extension": {
            "name": "get_extension",
            "location": 37,
            "return": [
                "List[str]",
                "List[Tuple[str, str]]",
                "str",
                "List[Optional[str]]",
                "dict",
                "int",
                "Tuple[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImage.create_directory": {
            "name": "create_directory",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImage.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "pixel_image": [
                    "str",
                    "numpy.ndarray",
                    "float",
                    "bytes"
                ],
                "sorter": [
                    "int",
                    "bytes",
                    "bool",
                    "str",
                    "list"
                ],
                "criteria": [
                    "int",
                    "bytes",
                    "bool",
                    "str",
                    "list"
                ]
            }
        },
        "SortingImage.__str__": {
            "name": "__str__",
            "location": 53,
            "return": [
                "str",
                "numpy.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImage.__eq__": {
            "name": "__eq__",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "AbstractSet[T]",
                    "Optional[numpy.ndarray]"
                ]
            }
        },
        "SortingImage.get_new_path": {
            "name": "get_new_path",
            "location": 61,
            "return": [
                "str",
                "List[str]",
                "set",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImage.sort": {
            "name": "sort",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImage.save": {
            "name": "save",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Timer.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "str",
                    "Optional[logging.Logger]",
                    "nucypher.utilities.logging.Logger",
                    "List[str]"
                ],
                "name": [
                    "List[str]",
                    "str",
                    "dict"
                ]
            }
        },
        "Timer.__enter__": {
            "name": "__enter__",
            "location": 87,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Timer.__exit__": {
            "name": "__exit__",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]",
                    "str",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ],
                "exc_val": [
                    "Optional[Type[BaseException]]",
                    "str",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ],
                "exc_tb": [
                    "Optional[Type[BaseException]]",
                    "str",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sort_criteria.py": {
        "built_in": {
            "name": "built_in",
            "location": 1,
            "return": [
                "List[str]",
                "Dict[str, str]",
                "Iterable[Tuple[str, str]]",
                "list"
            ],
            "arguments": {}
        },
        "red": {
            "name": "red",
            "location": 7,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "green": {
            "name": "green",
            "location": 11,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "blue": {
            "name": "blue",
            "location": 15,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "brightness": {
            "name": "brightness",
            "location": 19,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "avg": {
            "name": "avg",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "hue": {
            "name": "hue",
            "location": 28,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "saturation": {
            "name": "saturation",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "lightness": {
            "name": "lightness",
            "location": 47,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "threshold": {
            "name": "threshold",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "criteria": [
                    "bool",
                    "int",
                    "Iterable[T]",
                    "Sequence[str]",
                    "float"
                ],
                "num": [
                    "bool",
                    "int",
                    "Iterable[T]",
                    "Sequence[str]",
                    "float"
                ]
            }
        },
        "get_half_threshold": {
            "name": "get_half_threshold",
            "location": 70,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "crit_str": [
                    "str",
                    "int"
                ]
            }
        },
        "built_in.ret_lambda": {
            "name": "ret_lambda",
            "location": 2,
            "return": [],
            "arguments": {
                "pixel": []
            }
        },
        "threshold.ret_lambda": {
            "name": "ret_lambda",
            "location": 64,
            "return": [
                "bool",
                "List[int]",
                "int",
                "Union[str, bool, None]",
                "Optional[bool]"
            ],
            "arguments": {
                "pixel": [
                    "Tuple[int, int]",
                    "tuple",
                    "float"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/stencils.py": {
        "Stencil.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "img_width": [
                    "int",
                    "Optional[float]",
                    "Optional[int]"
                ],
                "img_height": [
                    "int",
                    "bool",
                    "Union[str, float]",
                    "tuple"
                ],
                "x": [
                    "int",
                    "bool",
                    "Union[str, float]",
                    "tuple"
                ],
                "y": [
                    "int",
                    "bool",
                    "float",
                    "str"
                ]
            }
        },
        "Stencil.cut_out_pixels": {
            "name": "cut_out_pixels",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int"
                ]
            }
        },
        "Stencil.put_in_pixels": {
            "name": "put_in_pixels",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "str",
                    "IO",
                    "T",
                    "Optional[str]",
                    "Optional[List[str]]",
                    "bool"
                ],
                "rect_pixels": [
                    "str",
                    "IO",
                    "T",
                    "Optional[str]",
                    "Optional[List[str]]",
                    "bool"
                ]
            }
        },
        "RectangleStencil.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "img_width": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "img_height": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "x": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "y": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "width": [
                    "int",
                    "float",
                    "Optional[List[Any]]"
                ],
                "height": [
                    "int",
                    "float",
                    "Optional[List[Any]]"
                ]
            }
        },
        "RectangleStencil.cut_out_pixels": {
            "name": "cut_out_pixels",
            "location": 26,
            "return": [
                "bool",
                "List[object]",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "float",
                    "List[List[int]]",
                    "List[int]"
                ]
            }
        },
        "RectangleStencil.put_in_pixels": {
            "name": "put_in_pixels",
            "location": 43,
            "return": [
                "bool",
                "str",
                "Tuple[int, int]",
                "zulipterminal.helper.Message",
                "int"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ],
                "rect_pixels": [
                    "List[int]",
                    "float",
                    "Dict[str, Any]"
                ]
            }
        },
        "CircleStencil.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "img_width": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "img_height": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "x": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "y": [
                    "int",
                    "str",
                    "Mapping",
                    "bool",
                    "float"
                ],
                "radius": [
                    "int",
                    "float",
                    "Optional[List[Any]]"
                ]
            }
        },
        "CircleStencil.cut_out_pixels": {
            "name": "cut_out_pixels",
            "location": 58,
            "return": [
                "bool",
                "List[object]",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "float",
                    "List[List[int]]",
                    "List[int]"
                ]
            }
        },
        "CircleStencil.put_in_pixels": {
            "name": "put_in_pixels",
            "location": 81,
            "return": [
                "bool",
                "str",
                "Tuple[int, int]",
                "zulipterminal.helper.Message",
                "int"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ],
                "rect_pixels": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/__init__.py": {},
    "pixel_sorting-master/pixel_sorting/sorters/algorithm.py": {
        "Algorithm.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Algorithm.sort_pixels": {
            "name": "sort_pixels",
            "location": 10,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_width": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool"
                ],
                "criteria": [
                    "int",
                    "list",
                    "bool"
                ]
            }
        },
        "EdgeHighlighter.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "EdgeHighlighter.sort_pixels": {
            "name": "sort_pixels",
            "location": 18,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_width": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool"
                ],
                "criteria": [
                    "int",
                    "list",
                    "bool"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/basic.py": {
        "PixelSorter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "reverse": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "PixelSorter.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_width": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool"
                ],
                "criteria": [
                    "int",
                    "list",
                    "bool"
                ]
            }
        },
        "BasicSorter.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "BasicSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 36,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "dict",
                    "Sequence[Union[str, Any]]"
                ],
                "img_width": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool"
                ],
                "criteria": [
                    "int",
                    "list",
                    "dict",
                    "Sequence[Union[str, Any]]"
                ]
            }
        },
        "Inverter.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Inverter.sort_pixels": {
            "name": "sort_pixels",
            "location": 50,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "Sequence[int]"
                ],
                "img_width": [
                    "int",
                    "list",
                    "bool"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool"
                ],
                "criteria": [
                    "int",
                    "list",
                    "bool"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/checker_board.py": {
        "CheckerBoardSorter.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "int",
                    "bool",
                    "Tuple[str, int]"
                ],
                "sorter": [
                    "int",
                    "bool",
                    "Tuple[str, int]"
                ],
                "width": [
                    "int",
                    "str",
                    "Tuple[str, int]",
                    "Optional[str]"
                ],
                "height": [
                    "int",
                    "str",
                    "Tuple[str, int]",
                    "bool"
                ]
            }
        },
        "CheckerBoardSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "float",
                    "str"
                ],
                "img_width": [
                    "int"
                ],
                "img_height": [
                    "int",
                    "bool",
                    "str",
                    "Sequence"
                ],
                "criteria": [
                    "bool",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "ExtendedCheckerBoardSorter.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "str",
                    "int",
                    "bool"
                ],
                "criterias": [
                    "int",
                    "Optional[int]",
                    "bool"
                ],
                "sorters": [
                    "Optional[int]",
                    "Union[float, int]",
                    "List[float]",
                    "int",
                    "bool",
                    "tuple"
                ],
                "width": [
                    "int",
                    "bool"
                ],
                "height": [
                    "int",
                    "bool"
                ]
            }
        },
        "ExtendedCheckerBoardSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 46,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "float",
                    "str"
                ],
                "img_width": [
                    "int"
                ],
                "img_height": [
                    "int",
                    "bool",
                    "str",
                    "Sequence"
                ],
                "criteria": [
                    "float",
                    "int",
                    "bool",
                    "str",
                    "List[float]"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/circle.py": {
        "CircleSorter.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "CircleSorter.center": {
            "name": "center",
            "location": 12,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "width": [
                    "int",
                    "Union[int, str]",
                    "Iterator[int]"
                ],
                "height": [
                    "int",
                    "Union[int, str]",
                    "str",
                    "float",
                    "bool"
                ]
            }
        },
        "CircleSorter.draw_pixel": {
            "name": "draw_pixel",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "pixels": [
                    "int",
                    "float",
                    "Optional[float]",
                    "Optional[int]"
                ],
                "temp_pixels": [
                    "int",
                    "bool"
                ],
                "index": [
                    "int",
                    "bool"
                ],
                "img_width": [
                    "int",
                    "float",
                    "Union[float, List[float]]"
                ],
                "img_height": [
                    "int",
                    "Union[float, List[float]]",
                    "float",
                    "str"
                ],
                "x": [
                    "bool",
                    "int"
                ],
                "y": []
            }
        },
        "CircleSorter.draw_octant_pixels": {
            "name": "draw_octant_pixels",
            "location": 31,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ],
                "temp_pixels": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ],
                "index": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ],
                "img_width": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ],
                "img_height": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ],
                "x": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ],
                "y": [
                    "int",
                    "tuple",
                    "list",
                    "Union[float, List[float]]"
                ]
            }
        },
        "CircleSorter.draw_circle": {
            "name": "draw_circle",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "Mapping[str, Tuple[float, float, float]]"
                ],
                "temp_pixels": [
                    "int",
                    "Mapping[str, Tuple[float, float, float]]"
                ],
                "pixel_set": [
                    "List[int]",
                    "str",
                    "Optional[List[str]]",
                    "List[float]",
                    "List[List[int]]"
                ],
                "index": [
                    "int",
                    "Mapping[str, Tuple[float, float, float]]"
                ],
                "img_width": [
                    "int",
                    "Mapping[str, Tuple[float, float, float]]"
                ],
                "img_height": [
                    "int",
                    "Mapping[str, Tuple[float, float, float]]"
                ],
                "radius": [
                    "int",
                    "str",
                    "Optional[int]",
                    "Tuple[int, int]",
                    "Tuple[float, float]"
                ]
            }
        },
        "CircleSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 67,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "Union[int, float]",
                    "Sequence[Union[str, Any]]",
                    "list",
                    "List[Tuple[Any, Any]]",
                    "List[tuple]",
                    "int",
                    "Sequence[T]"
                ],
                "img_width": [
                    "bool",
                    "str",
                    "int",
                    "Union[int, float]"
                ],
                "img_height": [
                    "bool",
                    "str",
                    "int",
                    "Union[int, float]"
                ],
                "criteria": [
                    "int",
                    "list",
                    "dict",
                    "Sequence[Union[str, Any]]"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/column.py": {
        "ColumnSorter.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "column": [
                    "int",
                    "str",
                    "Union[str, float]",
                    "float",
                    "List[str]"
                ],
                "reverse": [
                    "List[str]",
                    "Sequence[str]",
                    "float",
                    "int",
                    "Union[Sequence[Any], Tuple[float, float]]"
                ]
            }
        },
        "ColumnSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 11,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "list",
                    "int",
                    "str",
                    "Sequence[int]",
                    "List[int]"
                ],
                "img_width": [
                    "list",
                    "int",
                    "str",
                    "Sequence[int]",
                    "List[int]"
                ],
                "img_height": [
                    "int",
                    "Union[int, float]"
                ],
                "criteria": [
                    "int",
                    "list",
                    "dict",
                    "Sequence[Union[str, Any]]"
                ]
            }
        },
        "AlternatingColumnSorter.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "int"
                ],
                "alternation": [
                    "int"
                ]
            }
        },
        "AlternatingColumnSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "bool",
                    "str",
                    "List[str]"
                ],
                "img_width": [
                    "bool",
                    "str",
                    "int"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool",
                    "str",
                    "List[str]"
                ],
                "criteria": [
                    "int",
                    "list",
                    "bool",
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/diamond.py": {
        "DiamondSorter.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "DiamondSorter.next_position": {
            "name": "next_position",
            "location": 13,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "pos": [
                    "int",
                    "float"
                ]
            }
        },
        "DiamondSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 36,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "list",
                    "Sequence[Union[str, Any]]",
                    "List[int]",
                    "int"
                ],
                "img_width": [
                    "int",
                    "List[int]",
                    "list",
                    "Tuple[int, int]",
                    "List[str]"
                ],
                "img_height": [
                    "int",
                    "float"
                ],
                "criteria": [
                    "int",
                    "list",
                    "dict",
                    "Sequence[Union[str, Any]]"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/row.py": {
        "RowSorter.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "row": [
                    "Dict[str, Any]",
                    "Dict[str, int]",
                    "int",
                    "Dict[str, Dict[str, Any]]",
                    "Optional[int]"
                ],
                "reverse": [
                    "bool",
                    "int",
                    "str",
                    "Union[str, int]"
                ]
            }
        },
        "RowSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "List[int]",
                    "list"
                ],
                "img_width": [
                    "int",
                    "Sequence[Any]"
                ],
                "img_height": [
                    "int",
                    "list",
                    "bool"
                ],
                "criteria": [
                    "int",
                    "list",
                    "dict",
                    "Sequence[Union[str, Any]]"
                ]
            }
        },
        "AlternatingRowSorter.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "reverse": [
                    "int"
                ],
                "alternation": [
                    "int"
                ]
            }
        },
        "AlternatingRowSorter.sort_pixels": {
            "name": "sort_pixels",
            "location": 29,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pixels": [
                    "int",
                    "list",
                    "List[int]"
                ],
                "img_width": [
                    "int",
                    "list",
                    "List[int]"
                ],
                "img_height": [
                    "int",
                    "list",
                    "Sequence"
                ],
                "criteria": [
                    "int",
                    "list",
                    "List[int]"
                ]
            }
        }
    },
    "pixel_sorting-master/pixel_sorting/sorters/__init__.py": {},
    "pixel_sorting-master/tests/test_art_factory.py": {
        "PipeMock.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "tester": [
                    "int",
                    "Union[float, Tuple[float, float]]",
                    "Callable"
                ],
                "skipped": [
                    "int",
                    "Union[float, Tuple[float, float]]",
                    "Callable"
                ],
                "processed": [
                    "int",
                    "Union[float, Tuple[float, float]]",
                    "Callable"
                ],
                "errors": [
                    "int",
                    "Union[float, Tuple[float, float]]",
                    "Callable"
                ]
            }
        },
        "PipeMock.send": {
            "name": "send",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "Optional[str]",
                    "list",
                    "int"
                ]
            }
        },
        "ArtFactoryTest.testProcessBatch": {
            "name": "testProcessBatch",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtFactoryTest.testCreateBatchQueue": {
            "name": "testCreateBatchQueue",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtFactoryTest.testRunSortersOnDirectory": {
            "name": "testRunSortersOnDirectory",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtFactoryTest.testGetAllSorters": {
            "name": "testGetAllSorters",
            "location": 104,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtFactoryTest.testCreateBatchQueue.make": {
            "name": "make",
            "location": 57,
            "return": [
                "str",
                "tuple",
                "float",
                "bool"
            ],
            "arguments": {
                "criteria": [
                    "str",
                    "int",
                    "tuple"
                ]
            }
        }
    },
    "pixel_sorting-master/tests/test_criteria.py": {
        "CriteriaTest.testHSLConversion": {
            "name": "testHSLConversion",
            "location": 260,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CriteriaTest.testThreshold": {
            "name": "testThreshold",
            "location": 270,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pixel_sorting-master/tests/test_helper.py": {
        "execute_draw_circle": {
            "name": "execute_draw_circle",
            "location": 198,
            "return": [
                ""
            ],
            "arguments": {
                "tester": [
                    "bool",
                    "str",
                    "List[Tuple[Any, Any]]",
                    "dict",
                    "Dict[str, bool]",
                    "List[str]"
                ],
                "circle_sorter": [
                    "List[bool]"
                ],
                "expected_result": [
                    "bool",
                    "str",
                    "List[Tuple[Any, Any]]",
                    "dict",
                    "Dict[str, bool]",
                    "List[str]"
                ],
                "radius": [],
                "circle_pixels": [
                    "bool",
                    "float",
                    "numpy.array",
                    "int",
                    "Set[str]"
                ],
                "pixel_source": []
            }
        },
        "create_test_image": {
            "name": "create_test_image",
            "location": 220,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str",
                    "Optional[str]"
                ],
                "test_pixels": [
                    "List[str]",
                    "bool",
                    "int",
                    "list"
                ]
            }
        },
        "PixelImageTest.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImageTest.testNotEquals": {
            "name": "testNotEquals",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImageTest.testToString": {
            "name": "testToString",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImageTest.testGetExtension": {
            "name": "testGetExtension",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImageTest.testCreateDirectory": {
            "name": "testCreateDirectory",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImageTest.testLoadPixels": {
            "name": "testLoadPixels",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PixelImageMock.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ],
                "pixels": [
                    "Optional[Set[int]]",
                    "str"
                ]
            }
        },
        "PixelImageMock.load_pixels": {
            "name": "load_pixels",
            "location": 60,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImageTest.setUp": {
            "name": "setUp",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImageTest.testEquals": {
            "name": "testEquals",
            "location": 72,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImageTest.testToString": {
            "name": "testToString",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImageTest.testGetNewPath": {
            "name": "testGetNewPath",
            "location": 83,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImageTest.testSort": {
            "name": "testSort",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SortingImageTest.testSave": {
            "name": "testSave",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TimerTest.testTimer": {
            "name": "testTimer",
            "location": 106,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.setUp": {
            "name": "setUp",
            "location": 122,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.tearDown": {
            "name": "tearDown",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testRemoveExtension": {
            "name": "testRemoveExtension",
            "location": 130,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testIsImageFile": {
            "name": "testIsImageFile",
            "location": 134,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testIsGeneratedImage": {
            "name": "testIsGeneratedImage",
            "location": 140,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testCreatePixelImage": {
            "name": "testCreatePixelImage",
            "location": 145,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testGetImages": {
            "name": "testGetImages",
            "location": 150,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testSaveToImage": {
            "name": "testSaveToImage",
            "location": 182,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "HelperTest.testGetPixels": {
            "name": "testGetPixels",
            "location": 189,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TimerTest.testTimer.LoggerMock.info": {
            "name": "info",
            "location": 113,
            "return": [
                ""
            ],
            "arguments": {
                "this": [
                    "str",
                    "Union[List, Dict]",
                    "List[float]",
                    "int"
                ],
                "msg": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "pixel_sorting-master/tests/test_sorter.py": {
        "create_image": {
            "name": "create_image",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "SorterTests.setUp": {
            "name": "setUp",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.tearDown": {
            "name": "tearDown",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testPixelSorter": {
            "name": "testPixelSorter",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testInverter": {
            "name": "testInverter",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterBuiltIn": {
            "name": "testBasicSorterBuiltIn",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterRed": {
            "name": "testBasicSorterRed",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterGreen": {
            "name": "testBasicSorterGreen",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterBlue": {
            "name": "testBasicSorterBlue",
            "location": 81,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterBrightness": {
            "name": "testBasicSorterBrightness",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterAverage": {
            "name": "testBasicSorterAverage",
            "location": 101,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterHue": {
            "name": "testBasicSorterHue",
            "location": 111,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterSaturation": {
            "name": "testBasicSorterSaturation",
            "location": 121,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testBasicSorterLightness": {
            "name": "testBasicSorterLightness",
            "location": 131,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testRowSorter": {
            "name": "testRowSorter",
            "location": 141,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testAlternatingRowSorter": {
            "name": "testAlternatingRowSorter",
            "location": 159,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testColumnSorter": {
            "name": "testColumnSorter",
            "location": 169,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testAlternatingColumnSorter": {
            "name": "testAlternatingColumnSorter",
            "location": 184,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testDiamondSorterNextPosition": {
            "name": "testDiamondSorterNextPosition",
            "location": 194,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testDiamondSorter": {
            "name": "testDiamondSorter",
            "location": 240,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testCheckerBoardSorter1": {
            "name": "testCheckerBoardSorter1",
            "location": 252,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testCheckerBoardSorter2": {
            "name": "testCheckerBoardSorter2",
            "location": 272,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testExtendedCheckerBoardSorter1": {
            "name": "testExtendedCheckerBoardSorter1",
            "location": 292,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SorterTests.testExtendedCheckerBoardSorter2": {
            "name": "testExtendedCheckerBoardSorter2",
            "location": 311,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.setUp": {
            "name": "setUp",
            "location": 336,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.tearDown": {
            "name": "tearDown",
            "location": 340,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.circle_sorter_draw_pixel_setup": {
            "name": "circle_sorter_draw_pixel_setup",
            "location": 344,
            "return": [
                "str",
                "bytearray",
                "bool"
            ],
            "arguments": {}
        },
        "CircleSorterTest.testPixel1": {
            "name": "testPixel1",
            "location": 355,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testPixel2": {
            "name": "testPixel2",
            "location": 365,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testPixel3": {
            "name": "testPixel3",
            "location": 375,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testPixel4": {
            "name": "testPixel4",
            "location": 387,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testPixel5": {
            "name": "testPixel5",
            "location": 399,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testPixel6": {
            "name": "testPixel6",
            "location": 411,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testOctant1": {
            "name": "testOctant1",
            "location": 420,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testOctant2": {
            "name": "testOctant2",
            "location": 437,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testOctant3": {
            "name": "testOctant3",
            "location": 454,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testDrawCircle1": {
            "name": "testDrawCircle1",
            "location": 470,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testDrawCircle2": {
            "name": "testDrawCircle2",
            "location": 482,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testDrawCircle3": {
            "name": "testDrawCircle3",
            "location": 494,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testDrawCircle4": {
            "name": "testDrawCircle4",
            "location": 506,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testDrawCircle5": {
            "name": "testDrawCircle5",
            "location": 518,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testSorter": {
            "name": "testSorter",
            "location": 531,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CircleSorterTest.testWithRealFile": {
            "name": "testWithRealFile",
            "location": 544,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pixel_sorting-master/tests/test_stencil.py": {
        "StencilTests.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "StencilTests.tearDown": {
            "name": "tearDown",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "StencilTests.testStencil": {
            "name": "testStencil",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "StencilTests.testRectangle": {
            "name": "testRectangle",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "StencilTests.testCirlce": {
            "name": "testCirlce",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pixel_sorting-master/tests/__init__.py": {}
}
{
    "pomdp-master/pomdp/distribution.py": {},
    "pomdp-master/pomdp/models.py": {
        "Action.from_object": {
            "name": "from_object",
            "location": 16,
            "return": [
                "Mapping[str, Any]",
                "Dict[str, Any]",
                "dict",
                "str",
                "Exception",
                "Dict[str, Union[str, Set]]"
            ],
            "arguments": {
                "state": [
                    "List[str]",
                    "List[int]",
                    "str"
                ],
                "obj": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Action.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]"
                ],
                "state": [
                    "bool",
                    "Sequence",
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "reward": [
                    "bool",
                    "Sequence",
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "transitions": [
                    "bool",
                    "Sequence",
                    "str",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "Action.name": {
            "name": "name",
            "location": 32,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Action.full_name": {
            "name": "full_name",
            "location": 36,
            "return": [
                "str",
                "Tuple[str]",
                "Union[str, List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Action.state": {
            "name": "state",
            "location": 40,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Action.reward": {
            "name": "reward",
            "location": 44,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Action.transitions": {
            "name": "transitions",
            "location": 48,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "State.from_object": {
            "name": "from_object",
            "location": 56,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "Callable",
                    "Callable[[None, None], bool]"
                ]
            }
        },
        "State.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "State.name": {
            "name": "name",
            "location": 65,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "State.actions": {
            "name": "actions",
            "location": 69,
            "return": [
                "str",
                "int",
                "Callable[[Mapping], T]",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "State.get_action": {
            "name": "get_action",
            "location": 72,
            "return": [
                "str",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "action_name": [
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "State.add_action": {
            "name": "add_action",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "action": [
                    "Callable[..., Awaitable]",
                    "list",
                    "Optional[BaseException]",
                    "Set[str]",
                    "List[Dict[str, Any]]",
                    "List[str]"
                ]
            }
        },
        "MDP.from_object": {
            "name": "from_object",
            "location": 83,
            "return": [
                "str",
                "Callable",
                "Callable[[None, None], bool]"
            ],
            "arguments": {
                "obj": [
                    "dict",
                    "str",
                    "int",
                    "Exception",
                    "Dict[str, Any]"
                ]
            }
        },
        "MDP.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "MDP.name": {
            "name": "name",
            "location": 107,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MDP.states": {
            "name": "states",
            "location": 111,
            "return": [
                "bool",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MDP.get_state": {
            "name": "get_state",
            "location": 114,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "state_name": [
                    "str",
                    "Dict[str, Any]",
                    "Collection[str]"
                ]
            }
        },
        "MDP.add_state": {
            "name": "add_state",
            "location": 117,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "state": [
                    "List[str]",
                    "Sequence[str]"
                ]
            }
        },
        "MDP.to_graph": {
            "name": "to_graph",
            "location": 120,
            "return": [
                "float",
                "dict",
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "MDP.draw": {
            "name": "draw",
            "location": 137,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pomdp-master/pomdp/__init__.py": {},
    "pomdp-master/pomdp/__main__.py": {},
    "pomdp-master/tests/models_test.py": {
        "MDPTests.test_from_obj": {
            "name": "test_from_obj",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pomdp-master/tests/__init__.py": {},
    "pomdp-master/tests/__main__.py": {}
}
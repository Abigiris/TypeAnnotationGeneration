{
    "post_lunch_prep_bot-master/announce.py": {
        "send_message": {
            "name": "send_message",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "bool",
                    "str"
                ],
                "context": [
                    "bool",
                    "str"
                ]
            }
        },
        "pre_announce": {
            "name": "pre_announce",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "announce": {
            "name": "announce",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "post_announce": {
            "name": "post_announce",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "post_lunch_prep_bot-master/post_lunch_prep_bot.py": {
        "help": {
            "name": "help",
            "location": 36,
            "return": [
                "bool",
                "Dict[str, Any]",
                "Optional[str]"
            ],
            "arguments": {
                "command": [
                    "str",
                    "Callable[..., None]",
                    "bool"
                ]
            }
        },
        "set_resource": {
            "name": "set_resource",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "command": [
                    "bool",
                    "float"
                ]
            }
        },
        "set_topic": {
            "name": "set_topic",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "command": [
                    "str",
                    "List[List[str]]",
                    "int",
                    "Sequence",
                    "list"
                ]
            }
        },
        "set_host": {
            "name": "set_host",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "command": [
                    "str",
                    "List[List[str]]",
                    "int",
                    "Sequence",
                    "list"
                ]
            }
        },
        "set_one": {
            "name": "set_one",
            "location": 60,
            "return": [
                "str",
                "dict",
                "Optional[int]"
            ],
            "arguments": {
                "command": [
                    "bool",
                    "float"
                ]
            }
        },
        "set_two": {
            "name": "set_two",
            "location": 64,
            "return": [
                "str",
                "dict",
                "Optional[int]"
            ],
            "arguments": {
                "command": [
                    "bool",
                    "float"
                ]
            }
        },
        "stop": {
            "name": "stop",
            "location": 68,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "command": [
                    "str",
                    "Callable[..., None]",
                    "bool"
                ]
            }
        },
        "start": {
            "name": "start",
            "location": 73,
            "return": [
                "int",
                "str",
                "Dict[str, Any]",
                "List[int]"
            ],
            "arguments": {
                "command": [
                    "int",
                    "Dict[str, str]",
                    "Callable",
                    "bool",
                    "str",
                    "Optional"
                ]
            }
        },
        "print_setup": {
            "name": "print_setup",
            "location": 78,
            "return": [
                "str",
                "bytearray",
                "bool"
            ],
            "arguments": {
                "command": [
                    "str",
                    "Callable[..., None]",
                    "bool"
                ]
            }
        },
        "get_env": {
            "name": "get_env",
            "location": 100,
            "return": [
                "str",
                "Optional[str]",
                "List[Dict[str, Any]]",
                "Optional[List[str]]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Tuple[str]"
                ]
            }
        },
        "HelloWorldHandler.usage": {
            "name": "usage",
            "location": 134,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "HelloWorldHandler.announce": {
            "name": "announce",
            "location": 143,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "str"
                ],
                "bot_handler": [
                    "bool",
                    "str"
                ]
            }
        },
        "HelloWorldHandler.handle_message": {
            "name": "handle_message",
            "location": 151,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "bool",
                    "dict",
                    "str",
                    "MutableMapping[str, Any]",
                    "Optional[str]"
                ],
                "bot_handler": [
                    "Dict[str, Any]",
                    "bool",
                    "Dict[str, str]"
                ]
            }
        },
        "HelloWorldHandler.authenticate": {
            "name": "authenticate",
            "location": 172,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int"
                ],
                "sent_msg": [
                    "int",
                    "str"
                ]
            }
        },
        "HelloWorldHandler.parse_message": {
            "name": "parse_message",
            "location": 178,
            "return": [
                "bytes",
                "dict"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str"
                ]
            }
        },
        "HelloWorldHandler.command_valid": {
            "name": "command_valid",
            "location": 186,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cmd_arr": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "HelloWorldHandler.parse_command": {
            "name": "parse_command",
            "location": 197,
            "return": [
                "list",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        }
    },
    "post_lunch_prep_bot-master/test_post_lunch_prep_bot.py": {
        "TestHelpBot.test_bot": {
            "name": "test_bot",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "post_lunch_prep_bot-master/__init__.py": {}
}
{
    "praytracing-master/src/0_hello_world.py": {},
    "praytracing-master/src/1_simple_camera.py": {
        "color": {
            "name": "color",
            "location": 12,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray",
                    "src.autoks.core.covariance.Covariance",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "praytracing-master/src/2_simple_sphere.py": {
        "hit_sphere": {
            "name": "hit_sphere",
            "location": 15,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "center": [
                    "bool",
                    "Optional[bool]",
                    "str",
                    "src.autoks.core.covariance.Covariance",
                    "int"
                ],
                "radius": [
                    "float"
                ],
                "ray": [
                    "int"
                ]
            }
        },
        "color": {
            "name": "color",
            "location": 30,
            "return": [
                "utils.Node",
                "Optional[int]",
                "cmk.utils.type_defs.ServiceName",
                "cmk.utils.type_defs.HostName",
                "Optional[List[int]]"
            ],
            "arguments": {
                "ray": [
                    "bool",
                    "Dict[str, Dict[str, Any]]",
                    "str"
                ]
            }
        }
    },
    "praytracing-master/src/3_normals.py": {
        "hit_sphere": {
            "name": "hit_sphere",
            "location": 14,
            "return": [
                "int",
                "bytes"
            ],
            "arguments": {
                "center": [
                    "bool",
                    "Optional[bool]",
                    "str",
                    "src.autoks.core.covariance.Covariance",
                    "int"
                ],
                "radius": [
                    "float"
                ],
                "ray": [
                    "int"
                ]
            }
        },
        "color": {
            "name": "color",
            "location": 39,
            "return": [
                "bool",
                "utils.Node"
            ],
            "arguments": {
                "ray": [
                    "float",
                    "int",
                    "Callable[[List], float]"
                ]
            }
        }
    },
    "praytracing-master/src/4_more_spheres.py": {
        "color": {
            "name": "color",
            "location": 13,
            "return": [
                "trezor.utils.Writer",
                "utils.Node",
                "Callable"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "str"
                ]
            }
        }
    },
    "praytracing-master/src/5_antialiasing.py": {
        "color": {
            "name": "color",
            "location": 16,
            "return": [
                "trezor.utils.Writer",
                "utils.Node",
                "Callable"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "str"
                ]
            }
        }
    },
    "praytracing-master/src/6_matterial.py": {
        "color": {
            "name": "color",
            "location": 29,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager"
                ]
            }
        },
        "random_unit_sphere_point": {
            "name": "random_unit_sphere_point",
            "location": 44,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "praytracing-master/src/6_matterial_abstract.py": {
        "color": {
            "name": "color",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "Optional[str]"
                ],
                "depth": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Callable"
                ]
            }
        }
    },
    "praytracing-master/src/7_metals.py": {
        "color": {
            "name": "color",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "Optional[str]"
                ],
                "depth": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Callable"
                ]
            }
        }
    },
    "praytracing-master/src/8_dielectrics.py": {
        "color": {
            "name": "color",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "Optional[str]"
                ],
                "depth": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Callable"
                ]
            }
        }
    },
    "praytracing-master/src/8_positionable_cam_dielectrics.py": {
        "color": {
            "name": "color",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "Optional[str]"
                ],
                "depth": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Callable"
                ]
            }
        }
    },
    "praytracing-master/src/camera.py": {
        "irandom_in_unit_disk": {
            "name": "irandom_in_unit_disk",
            "location": 77,
            "return": [
                "Iterator",
                "float",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "random_in_unit_disk": {
            "name": "random_in_unit_disk",
            "location": 85,
            "return": [
                "Iterator",
                "float",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "Camera.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "lower_left_corner": [
                    "int",
                    "float",
                    "src.security.Security",
                    "bool"
                ],
                "h_movement": [
                    "float",
                    "bool",
                    "int",
                    "List[List[int]]",
                    "Optional[bool]"
                ],
                "v_movement": [
                    "float",
                    "bool",
                    "int",
                    "List[List[int]]",
                    "Optional[bool]"
                ],
                "origin": [
                    "float",
                    "int",
                    "List[List[int]]",
                    "str",
                    "src.autoks.distance.distance.DistanceBuilder"
                ]
            }
        },
        "Camera.get_ray": {
            "name": "get_ray",
            "location": 25,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "u": [
                    "int",
                    "list",
                    "str",
                    "float"
                ],
                "v": [
                    "int",
                    "list",
                    "str",
                    "float"
                ]
            }
        },
        "PositionableCamera.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "camera_posn": [
                    "int",
                    "Sequence[str]",
                    "Callable",
                    "dict"
                ],
                "camera_aim": [
                    "int",
                    "bool",
                    "float"
                ],
                "up_vector": [
                    "int",
                    "bool",
                    "float"
                ],
                "vfov": [
                    "float",
                    "str"
                ],
                "aspect_ratio": [
                    "float"
                ],
                "aperture": [
                    "float"
                ],
                "focus_dist": [
                    "float",
                    "int",
                    "str"
                ]
            }
        },
        "PositionableCamera.get_ray": {
            "name": "get_ray",
            "location": 65,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "float",
                    "int",
                    "list"
                ],
                "t": [
                    "float",
                    "int",
                    "list"
                ]
            }
        }
    },
    "praytracing-master/src/camera_playground.py": {
        "color": {
            "name": "color",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "Optional[str]"
                ],
                "depth": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Callable"
                ]
            }
        }
    },
    "praytracing-master/src/hittable.py": {
        "HitRecord.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "t": [
                    "float"
                ],
                "p": [
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray",
                    "bool",
                    "int",
                    "str"
                ],
                "normal": [
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray",
                    "bool",
                    "int",
                    "str"
                ],
                "material": [
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray",
                    "bool",
                    "int",
                    "str"
                ],
                "hit_object": [
                    "str",
                    "bool",
                    "Tuple[str]",
                    "Match[str]"
                ]
            }
        },
        "Hittable.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "material": [
                    "str",
                    "int"
                ]
            }
        },
        "Hittable.hit": {
            "name": "hit",
            "location": 41,
            "return": [
                "typing.Optional[HitRecord]"
            ],
            "arguments": {
                "self": [],
                "ray": [
                    "float",
                    "src.ray.Ray",
                    "int",
                    "str"
                ],
                "t_min": [
                    "float",
                    "src.ray.Ray",
                    "int",
                    "str"
                ],
                "t_max": [
                    "float",
                    "src.ray.Ray",
                    "int",
                    "str"
                ]
            }
        },
        "HittableList.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "hittables": []
            }
        },
        "HittableList.hit": {
            "name": "hit",
            "location": 57,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "ray": [
                    "int",
                    "float",
                    "str"
                ],
                "t_min": [
                    "int",
                    "float",
                    "str"
                ],
                "t_max": [
                    "float",
                    "int"
                ]
            }
        }
    },
    "praytracing-master/src/material.py": {
        "random_unit_sphere_point": {
            "name": "random_unit_sphere_point",
            "location": 133,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "reflect": {
            "name": "reflect",
            "location": 167,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "v": [
                    "int",
                    "math_helper.vec3",
                    "List[int]",
                    "backend.src.sheets_commands.sheeGrid",
                    "backend.src.sheets_commands.sheeColumn"
                ],
                "n": [
                    "int",
                    "math_helper.vec3",
                    "List[int]",
                    "backend.src.sheets_commands.sheeGrid",
                    "backend.src.sheets_commands.sheeColumn"
                ]
            }
        },
        "refract": {
            "name": "refract",
            "location": 171,
            "return": [
                "str",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "v": [
                    "list",
                    "int"
                ],
                "n": [
                    "float",
                    "Union[int, float]"
                ],
                "nint": [
                    "float",
                    "Union[int, float]"
                ]
            }
        },
        "ReflectionRecord.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "attenuation": [
                    "str",
                    "int",
                    "pygame.math.Vector2"
                ],
                "scattering": [
                    "str",
                    "int",
                    "pygame.math.Vector2"
                ]
            }
        },
        "Material.scatter": {
            "name": "scatter",
            "location": 29,
            "return": [
                "ReflectionRecord"
            ],
            "arguments": {
                "self": [],
                "incident_ray": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "record": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Vanta.scatter": {
            "name": "scatter",
            "location": 44,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "incident_ray": [
                    "int",
                    "Callable",
                    "str"
                ],
                "record": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Identity.scatter": {
            "name": "scatter",
            "location": 52,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "incident_ray": [
                    "int",
                    "Callable",
                    "str"
                ],
                "record": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Lambertian.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "albedo": [
                    "str",
                    "int",
                    "pygame.math.Vector2"
                ]
            }
        },
        "Lambertian.scatter": {
            "name": "scatter",
            "location": 60,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "incident_ray": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "record": [
                    "str",
                    "Sequence[str]",
                    "Optional[Callable[[Any, Any], Any]]"
                ]
            }
        },
        "Metal.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "albedo": [
                    "str",
                    "int",
                    "pygame.math.Vector2"
                ],
                "fuzz": [
                    "float",
                    "str"
                ]
            }
        },
        "Metal.scatter": {
            "name": "scatter",
            "location": 74,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "incident_ray": [
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray",
                    "str",
                    "pygame.math.Vector2",
                    "eth.abc.MiningChainAPI"
                ],
                "record": [
                    "str",
                    "int",
                    "pygame.math.Vector2",
                    "Optional[Callable[[Any, Any], Any]]",
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray"
                ]
            }
        },
        "Dielectric.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "refractive_index": [
                    "float",
                    "str"
                ]
            }
        },
        "Dielectric.__schlick_approximation": {
            "name": "__schlick_approximation",
            "location": 88,
            "return": [
                "str",
                "Iterable[T]",
                "Optional[BaseException]"
            ],
            "arguments": {
                "self": [],
                "cosine": [
                    "int",
                    "str",
                    "Union[int, float]"
                ]
            }
        },
        "Dielectric.scatter": {
            "name": "scatter",
            "location": 92,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "incident_ray": [
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray",
                    "str",
                    "pygame.math.Vector2",
                    "eth.abc.MiningChainAPI"
                ],
                "record": [
                    "src.autoks.core.covariance.Covariance",
                    "src.ray.Ray",
                    "str",
                    "pygame.math.Vector2",
                    "eth.abc.MiningChainAPI"
                ]
            }
        }
    },
    "praytracing-master/src/ppm.py": {
        "PPM.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "width": [
                    "int",
                    "float"
                ],
                "height": [
                    "int",
                    "float"
                ],
                "default_color": [
                    "int",
                    "Optional[float]",
                    "Optional[int]"
                ]
            }
        },
        "PPM.set_pixel": {
            "name": "set_pixel",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "row": [
                    "Tuple[int, int]",
                    "int",
                    "bool",
                    "List[int]"
                ],
                "col": [
                    "Tuple[int, int]",
                    "int",
                    "bool",
                    "List[int]"
                ],
                "color": [
                    "Tuple[int, int]",
                    "int",
                    "bool",
                    "List[int]"
                ]
            }
        },
        "PPM.write": {
            "name": "write",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "praytracing-master/src/ray.py": {
        "Ray.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "bool",
                    "Optional[int]"
                ],
                "b": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        },
        "Ray.origin": {
            "name": "origin",
            "location": 10,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ray.direction": {
            "name": "direction",
            "location": 14,
            "return": [
                "bool",
                "str",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ray.point_at_parameter": {
            "name": "point_at_parameter",
            "location": 17,
            "return": [
                "List[int]",
                "backend.src.sheets_commands.sheeGrid",
                "List[str]",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "t": [
                    "int"
                ]
            }
        }
    },
    "praytracing-master/src/scene_generator.py": {
        "random_scene": {
            "name": "random_scene",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "x_min": [
                    "Optional[List[Any]]",
                    "List[List[str]]",
                    "Tuple[float, float]"
                ],
                "x_max": [
                    "Optional[List[Any]]",
                    "List[List[str]]",
                    "Tuple[float, float]"
                ],
                "z_min": [
                    "Optional[List[Any]]",
                    "List[List[str]]",
                    "Tuple[float, float]"
                ],
                "z_max": [
                    "Optional[List[Any]]",
                    "List[List[str]]",
                    "Tuple[float, float]"
                ]
            }
        },
        "color": {
            "name": "color",
            "location": 73,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ray": [
                    "src.ray.Ray"
                ],
                "world": [
                    "src.ray.Ray",
                    "src.team_manager.TeamManager",
                    "Optional[str]"
                ],
                "depth": [
                    "int",
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Callable"
                ]
            }
        }
    },
    "praytracing-master/src/sphere.py": {
        "Sphere.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "center": [
                    "str",
                    "bool",
                    "src.vec3.Vec3"
                ],
                "radius": [
                    "float",
                    "int",
                    "Tuple[int, int, int]"
                ],
                "material": [
                    "Optional[src.material.Material]",
                    "bool",
                    "float",
                    "str"
                ],
                "name": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "Sphere.__decide_conjugate": {
            "name": "__decide_conjugate",
            "location": 25,
            "return": [
                "str",
                "Exception",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "t_min": [
                    "float",
                    "Sequence[float]"
                ],
                "t_max": [
                    "float",
                    "Sequence[float]"
                ],
                "neg_conjugate": [
                    "float",
                    "Sequence[float]"
                ],
                "pos_conjugate": [
                    "float",
                    "Sequence[float]"
                ]
            }
        },
        "Sphere.hit": {
            "name": "hit",
            "location": 37,
            "return": [
                "bool",
                "Optional[bool]",
                "Exception",
                "Optional[Sequence[str]]",
                "Optional[Callable]"
            ],
            "arguments": {
                "self": [],
                "ray": [
                    "int",
                    "float"
                ],
                "t_min": [
                    "int",
                    "float",
                    "str"
                ],
                "t_max": [
                    "int",
                    "float",
                    "str"
                ]
            }
        }
    },
    "praytracing-master/src/utils.py": {
        "_derive_ppm_filename": {
            "name": "_derive_ppm_filename",
            "location": 3,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "praytracing-master/src/vec3.py": {
        "Vec3.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "r": [],
                "g": [],
                "b": []
            }
        },
        "Vec3.x": {
            "name": "x",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.y": {
            "name": "y",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.z": {
            "name": "z",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.length": {
            "name": "length",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.squared_length": {
            "name": "squared_length",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.__add__": {
            "name": "__add__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__sub__": {
            "name": "__sub__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__mul__": {
            "name": "__mul__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__rmul__": {
            "name": "__rmul__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__truediv__": {
            "name": "__truediv__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.make_tuple": {
            "name": "make_tuple",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.dot": {
            "name": "dot",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.cross": {
            "name": "cross",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__iadd__": {
            "name": "__iadd__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__isub__": {
            "name": "__isub__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__imul__": {
            "name": "__imul__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.__itruediv__": {
            "name": "__itruediv__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.unit_vector": {
            "name": "unit_vector",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vec3.__eq__": {
            "name": "__eq__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vec3.map": {
            "name": "map",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "Vec3.__str__": {
            "name": "__str__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "praytracing-master/src/vec3_test.py": {
        "Vec3Test.test_cross": {
            "name": "test_cross",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Vec3Test.test_dot": {
            "name": "test_dot",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Vec3Test.test_itruediv": {
            "name": "test_itruediv",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "praytracing-master/src/__init__.py": {}
}
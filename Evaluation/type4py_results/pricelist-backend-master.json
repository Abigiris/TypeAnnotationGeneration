{
    "pricelist-backend-master/client_examples/config.py": {},
    "pricelist-backend-master/client_examples/login.py": {},
    "pricelist-backend-master/server/admin_views.py": {
        "AuthModelMixin.is_accessible": {
            "name": "is_accessible",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAdminView.scaffold_form": {
            "name": "scaffold_form",
            "location": 36,
            "return": [
                "str",
                "int",
                "Exception",
                "Tuple[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAdminView.on_model_change": {
            "name": "on_model_change",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "form": [
                    "bool",
                    "int"
                ],
                "model": [
                    "bool",
                    "Union[int, str]",
                    "str",
                    "float",
                    "raiden.utils.BlockNumber"
                ],
                "is_created": [
                    "bool",
                    "int"
                ]
            }
        },
        "CategoryAdminView._list_thumbnail": {
            "name": "_list_thumbnail",
            "location": 65,
            "return": [
                "str",
                "dict",
                "Optional[str]",
                "List[str]"
            ],
            "arguments": {
                "view": [
                    "bool",
                    "str",
                    "Set[Union[Any, Any]]",
                    "Optional[str]"
                ],
                "context": [
                    "bool",
                    "str",
                    "Set[Union[Any, Any]]",
                    "Optional[str]"
                ],
                "model": [
                    "str",
                    "Optional[List]",
                    "int",
                    "Optional[Dict[str, Any]]",
                    "Optional[bool]"
                ],
                "name": [
                    "bool",
                    "str",
                    "Set[Union[Any, Any]]",
                    "Optional[str]"
                ]
            }
        },
        "ShopAdminView._list_thumbnail": {
            "name": "_list_thumbnail",
            "location": 81,
            "return": [
                "str",
                "dict",
                "Optional[str]",
                "List[str]"
            ],
            "arguments": {
                "view": [
                    "bool",
                    "str",
                    "Set[Union[Any, Any]]",
                    "Optional[str]"
                ],
                "context": [
                    "bool",
                    "str",
                    "Set[Union[Any, Any]]",
                    "Optional[str]"
                ],
                "model": [
                    "Optional[str]",
                    "str",
                    "Iterable[str]",
                    "Optional[Dict[str, Any]]",
                    "Dict[str, Any]"
                ],
                "name": [
                    "bool",
                    "str",
                    "Set[Union[Any, Any]]",
                    "Optional[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/database.py": {
        "Role.__str__": {
            "name": "__str__",
            "location": 27,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Role.__hash__": {
            "name": "__hash__",
            "location": 31,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 52,
            "return": [
                "str",
                "Optional[str]",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.__hash__": {
            "name": "__hash__",
            "location": 56,
            "return": [
                "int",
                "Tuple[int, int]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flavor.__repr__": {
            "name": "__repr__",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shop.__repr__": {
            "name": "__repr__",
            "location": 97,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainCategory.__repr__": {
            "name": "__repr__",
            "location": 123,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.__repr__": {
            "name": "__repr__",
            "location": 148,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kind.__repr__": {
            "name": "__repr__",
            "location": 188,
            "return": [
                "dict",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Price.__repr__": {
            "name": "__repr__",
            "location": 203,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Order.__repr__": {
            "name": "__repr__",
            "location": 225,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindToFlavor.__repr__": {
            "name": "__repr__",
            "location": 249,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindToStrain.__repr__": {
            "name": "__repr__",
            "location": 261,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Strain.__repr__": {
            "name": "__repr__",
            "location": 320,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pricelist-backend-master/server/main.py": {
        "import_prices_click": {
            "name": "import_prices_click",
            "location": 113,
            "return": [
                ""
            ],
            "arguments": {
                "file": [
                    "List[str]",
                    "str",
                    "dict"
                ]
            }
        },
        "shutdown_session": {
            "name": "shutdown_session",
            "location": 118,
            "return": [
                ""
            ],
            "arguments": {
                "exception": [
                    "List[dict]",
                    "django.db.backends.postgresql_psycopg2.schema.DatabaseSchemaEditor",
                    "List[str]",
                    "str"
                ]
            }
        },
        "security_context_processor": {
            "name": "security_context_processor",
            "location": 125,
            "return": [
                "int",
                "str",
                "Optional[str]",
                "Dict[str, str]"
            ],
            "arguments": {}
        },
        "on_user_registered": {
            "name": "on_user_registered",
            "location": 131,
            "return": [
                ""
            ],
            "arguments": {
                "sender": [
                    "boucanpy.core.security.TokenPayload",
                    "Optional[str]",
                    "bool",
                    "str",
                    "server.models.User"
                ],
                "user": [
                    "str",
                    "float",
                    "bob_emploi.frontend.api.user_pb2.User",
                    "boucanpy.db.models.user.User"
                ],
                "confirm_token": [
                    "boucanpy.core.security.TokenPayload",
                    "Optional[str]",
                    "bool",
                    "str",
                    "server.models.User"
                ]
            }
        },
        "load_user": {
            "name": "load_user",
            "location": 158,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "transfer.models.Order.ID"
                ]
            }
        },
        "get_qr_shop_image": {
            "name": "get_qr_shop_image",
            "location": 163,
            "return": [
                "str",
                "dict",
                "list",
                "io.IOBase"
            ],
            "arguments": {
                "shop_id": [
                    "str",
                    "int",
                    "bytes",
                    "bool"
                ]
            }
        },
        "get_qr_shop_table_image": {
            "name": "get_qr_shop_table_image",
            "location": 175,
            "return": [
                "str",
                "Callable",
                "list"
            ],
            "arguments": {
                "shop_id": [
                    "str"
                ],
                "table_id": [
                    "str"
                ]
            }
        },
        "get_qr_category_image": {
            "name": "get_qr_category_image",
            "location": 187,
            "return": [
                "str",
                "dict",
                "list",
                "io.IOBase"
            ],
            "arguments": {
                "shop_id": [
                    "str",
                    "int",
                    "bool",
                    "bytes"
                ],
                "category_id": [
                    "str",
                    "int",
                    "bool",
                    "bytes"
                ]
            }
        },
        "get_qr_product_image": {
            "name": "get_qr_product_image",
            "location": 199,
            "return": [
                "str",
                "Callable"
            ],
            "arguments": {
                "shop_id": [
                    "str",
                    "int",
                    "bytes"
                ],
                "category_id": [
                    "str",
                    "int",
                    "bytes"
                ],
                "product_id": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "get_my_ip": {
            "name": "get_my_ip",
            "location": 211,
            "return": [
                "bool",
                "Optional[Dict]",
                "List[str]",
                "str",
                "Sequence[int]"
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/security.py": {},
    "pricelist-backend-master/server/utils.py": {
        "generate_qr_image": {
            "name": "generate_qr_image",
            "location": 13,
            "return": [
                "str",
                "IO[Any]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "is_ip_allowed": {
            "name": "is_ip_allowed",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "request": [],
                "shop": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "import_prices": {
            "name": "import_prices",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "file": [
                    "str",
                    "IO[str]"
                ]
            }
        },
        "convert_price_string_to_float": {
            "name": "convert_price_string_to_float",
            "location": 75,
            "return": [
                "Optional[str]",
                "Sequence[str]",
                "Optional[Any]",
                "str"
            ],
            "arguments": {
                "price": [
                    "str",
                    "bytes",
                    "Optional[Callable[[Any, Any], None]]"
                ]
            }
        },
        "validate_uuid4": {
            "name": "validate_uuid4",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "uuid_string": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "pricelist-backend-master/server/version.py": {},
    "pricelist-backend-master/server/apis/helpers.py": {
        "get_range_from_args": {
            "name": "get_range_from_args",
            "location": 32,
            "return": [
                "dict",
                "Dict[str, Any]",
                "Mapping[str, Dict[str, Any]]",
                "List[str]",
                "Dict[str, Dict[str, str]]",
                "raiden.utils.Dict[str, raiden.utils.Any]"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_sort_from_args": {
            "name": "get_sort_from_args",
            "location": 48,
            "return": [
                "int",
                "str",
                "sqlalchemy.orm.Session",
                "dict",
                "pymongo.database.Database",
                "bool"
            ],
            "arguments": {
                "args": [],
                "default_sort": [
                    "int",
                    "str",
                    "float",
                    "Sequence"
                ],
                "default_sort_order": [
                    "int",
                    "str",
                    "float",
                    "Sequence"
                ]
            }
        },
        "get_filter_from_args": {
            "name": "get_filter_from_args",
            "location": 64,
            "return": [
                "Optional[Sequence[Any]]",
                "int",
                "Type",
                "Dict[str, Any]",
                "Optional[Dict[str, Any]]",
                "str"
            ],
            "arguments": {
                "args": [],
                "default_filter": [
                    "Dict[str, Any]",
                    "int",
                    "list",
                    "cmk.utils.type_defs.UserId",
                    "dict",
                    "Type"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {
                "item": [
                    "sqlalchemy.orm.session.Session"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 86,
            "return": [
                "str",
                "cmk.utils.type_defs.HostName"
            ],
            "arguments": {
                "model": [
                    "int",
                    "sqlalchemy.orm.session.Session",
                    "Optional[str]"
                ],
                "id": [
                    "int",
                    "sqlalchemy.orm.session.Session",
                    "Optional[bytes]"
                ],
                "fields": [
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "allow_404": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "update": {
            "name": "update",
            "location": 102,
            "return": [
                "Callable",
                "Union[Sequence, 'SweepFixedValues']",
                "bool",
                "list"
            ],
            "arguments": {
                "item": [
                    "int",
                    "dict",
                    "Union[sqlalchemy.sql.ClauseElement, str]",
                    "float"
                ],
                "payload": [
                    "str",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 114,
            "return": [
                ""
            ],
            "arguments": {
                "item": [
                    "str",
                    "type"
                ]
            }
        },
        "query_with_filters": {
            "name": "query_with_filters",
            "location": 123,
            "return": [
                "str",
                "Dict[str, Any]",
                "bool",
                "Callable[[str], bool]",
                "Optional[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "model": [
                    "bool",
                    "Optional[List[str]]",
                    "Dict[str, Any]",
                    "list",
                    "Optional[str]"
                ],
                "query": [
                    "str",
                    "Sequence[str]",
                    "Optional[Dict[str, str]]",
                    "bool"
                ],
                "range": [
                    "int",
                    "Callable[..., None]",
                    "Sequence[int]",
                    "str"
                ],
                "sort": [
                    "List[str]",
                    "str",
                    "Sequence[str]",
                    "Callable",
                    "List[Dict[str, Any]]",
                    "Dict[str, bool]"
                ],
                "filters": [
                    "Optional[Dict]",
                    "int",
                    "bool",
                    "str"
                ],
                "quick_search_columns": [
                    "list",
                    "Sequence[int]",
                    "datetime.date",
                    "int"
                ]
            }
        },
        "upload_file": {
            "name": "upload_file",
            "location": 193,
            "return": [
                ""
            ],
            "arguments": {
                "blob": [
                    "str",
                    "Tuple[int, int]",
                    "float",
                    "Optional[bool]",
                    "bool",
                    "bytes"
                ],
                "file_name": [
                    "str"
                ]
            }
        },
        "name_file": {
            "name": "name_file",
            "location": 210,
            "return": [
                "str",
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "column_name": [
                    "str",
                    "Optional[str]"
                ],
                "record_name": [
                    "str"
                ],
                "image_name": [
                    "str",
                    "Dict[str, str]"
                ]
            }
        },
        "sendMessageToWebSocketServer": {
            "name": "sendMessageToWebSocketServer",
            "location": 226,
            "return": [
                ""
            ],
            "arguments": {
                "payload": [
                    "Pattern[str]",
                    "str",
                    "int",
                    "dict"
                ]
            }
        },
        "invalidateShopCache": {
            "name": "invalidateShopCache",
            "location": 236,
            "return": [
                ""
            ],
            "arguments": {
                "shop_id": [
                    "int",
                    "uuid.UUID"
                ]
            }
        },
        "invalidateCompletedOrdersCache": {
            "name": "invalidateCompletedOrdersCache",
            "location": 247,
            "return": [
                ""
            ],
            "arguments": {
                "order_id": [
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "invalidatePendingOrdersCache": {
            "name": "invalidatePendingOrdersCache",
            "location": 259,
            "return": [
                ""
            ],
            "arguments": {
                "order_id": [
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/__init__.py": {},
    "pricelist-backend-master/server/apis/v1/categories.py": {
        "CategoryResourceList.get": {
            "name": "get",
            "location": 65,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryResourceList.post": {
            "name": "post",
            "location": 84,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryResource.get": {
            "name": "get",
            "location": 96,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "CategoryResource.put": {
            "name": "put",
            "location": 108,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "CategoryResource.delete": {
            "name": "delete",
            "location": 115,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/categories_images.py": {
        "CategoryImageResourceList.get": {
            "name": "get",
            "location": 54,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryImageResource.get": {
            "name": "get",
            "location": 78,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "CategoryImageResource.put": {
            "name": "put",
            "location": 85,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "CategoryImageDeleteResource.put": {
            "name": "put",
            "location": 113,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/flavors.py": {
        "FlavorResourceList.get": {
            "name": "get",
            "location": 44,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlavorResourceList.post": {
            "name": "post",
            "location": 58,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlavorResource.get": {
            "name": "get",
            "location": 70,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "FlavorResource.put": {
            "name": "put",
            "location": 78,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "FlavorResource.delete": {
            "name": "delete",
            "location": 85,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/kinds.py": {
        "KindResourceList.get": {
            "name": "get",
            "location": 100,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindResourceList.post": {
            "name": "post",
            "location": 139,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindResource.get": {
            "name": "get",
            "location": 155,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "KindResource.put": {
            "name": "put",
            "location": 213,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "KindResource.delete": {
            "name": "delete",
            "location": 230,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/kinds_images.py": {
        "KindImageResourceList.get": {
            "name": "get",
            "location": 63,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindImageResource.get": {
            "name": "get",
            "location": 87,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "KindImageResource.put": {
            "name": "put",
            "location": 94,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "KindImageDeleteResource.put": {
            "name": "put",
            "location": 125,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/kinds_to_flavors.py": {
        "KindsToFlavorsResourceList.get": {
            "name": "get",
            "location": 39,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindsToFlavorsResourceList.post": {
            "name": "post",
            "location": 52,
            "return": [
                "pymongo.database.Database",
                "Sequence[str]",
                "int",
                "Mapping[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindsToFlavorsResource.get": {
            "name": "get",
            "location": 86,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "KindsToFlavorsResource.put": {
            "name": "put",
            "location": 94,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "KindsToFlavorsResource.delete": {
            "name": "delete",
            "location": 101,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[int]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/kinds_to_strains.py": {
        "KindsToStrainsResourceList.get": {
            "name": "get",
            "location": 39,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindsToStrainsResourceList.post": {
            "name": "post",
            "location": 52,
            "return": [
                "pymongo.database.Database",
                "Sequence[str]",
                "int",
                "Mapping[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindsToStrainsResource.get": {
            "name": "get",
            "location": 86,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "KindsToStrainsResource.put": {
            "name": "put",
            "location": 94,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "KindsToStrainsResource.delete": {
            "name": "delete",
            "location": 101,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[int]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/kinds_to_tags.py": {
        "KindsToTagsResourceList.get": {
            "name": "get",
            "location": 40,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindsToTagsResourceList.post": {
            "name": "post",
            "location": 53,
            "return": [
                "Optional[Dict]",
                "Optional[str]",
                "str",
                "Optional",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "KindsToTagsResource.get": {
            "name": "get",
            "location": 87,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "KindsToTagsResource.put": {
            "name": "put",
            "location": 95,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Sequence[str]",
                    "int",
                    "List[str]"
                ]
            }
        },
        "KindsToTagsResource.delete": {
            "name": "delete",
            "location": 102,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/main_categories.py": {
        "MainCategoryResourceList.get": {
            "name": "get",
            "location": 54,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainCategoryResourceList.post": {
            "name": "post",
            "location": 71,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainCategoryResource.get": {
            "name": "get",
            "location": 83,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "MainCategoryResource.put": {
            "name": "put",
            "location": 93,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "MainCategoryResource.delete": {
            "name": "delete",
            "location": 100,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[int]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/orders.py": {
        "get_price_rules_total": {
            "name": "get_price_rules_total",
            "location": 108,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "order_items": [
                    "List[str]",
                    "bool",
                    "int",
                    "List[Dict]",
                    "T",
                    "Callable"
                ]
            }
        },
        "get_first_unavailable_product_name": {
            "name": "get_first_unavailable_product_name",
            "location": 122,
            "return": [
                "str"
            ],
            "arguments": {
                "order_items": [
                    "bool",
                    "dict"
                ],
                "shop_id": [
                    "dict",
                    "str",
                    "Type[T]",
                    "int"
                ]
            }
        },
        "OrderResourceList.get": {
            "name": "get",
            "location": 178,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OrderResourceList.post": {
            "name": "post",
            "location": 196,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "OrderResource.get": {
            "name": "get",
            "location": 343,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "ids": [
                    "str",
                    "int",
                    "list",
                    "List[str]"
                ]
            }
        },
        "OrderResource.put": {
            "name": "put",
            "location": 254,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[str]",
                    "Mapping[str, Any]",
                    "dict",
                    "int"
                ]
            }
        },
        "OrderResource.delete": {
            "name": "delete",
            "location": 268,
            "return": [
                "str",
                "int",
                "sqlalchemy.orm.Session"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "OrderResource.patch": {
            "name": "patch",
            "location": 276,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "List[int]",
                    "dict",
                    "int",
                    "Iterable[int]"
                ]
            }
        },
        "PendingOrderResourceList.get": {
            "name": "get",
            "location": 297,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "shop_id": [
                    "str"
                ]
            }
        },
        "CompletedOrderResourceList.get": {
            "name": "get",
            "location": 319,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "shop_id": [
                    "uuid.UUID",
                    "int"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/prices.py": {
        "PriceResourceList.get": {
            "name": "get",
            "location": 51,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PriceResourceList.post": {
            "name": "post",
            "location": 66,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PriceResource.get": {
            "name": "get",
            "location": 77,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "PriceResource.put": {
            "name": "put",
            "location": 85,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "PriceResource.delete": {
            "name": "delete",
            "location": 92,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/products.py": {
        "ProductResourceList.get": {
            "name": "get",
            "location": 86,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductResourceList.post": {
            "name": "post",
            "location": 113,
            "return": [
                "str",
                "Sequence[Sequence[str]]",
                "Sequence[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductResource.get": {
            "name": "get",
            "location": 129,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "ProductResource.put": {
            "name": "put",
            "location": 169,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "ProductResource.delete": {
            "name": "delete",
            "location": 186,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/products_images.py": {
        "ProductImageResourceList.get": {
            "name": "get",
            "location": 62,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductImageResource.get": {
            "name": "get",
            "location": 86,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "ProductImageResource.put": {
            "name": "put",
            "location": 94,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "ProductImageDeleteResource.put": {
            "name": "put",
            "location": 125,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/shops.py": {
        "ShopAllowedIpList.get": {
            "name": "get",
            "location": 104,
            "return": [
                "bool",
                "int",
                "List[str]",
                "Counter",
                "Optional[T]",
                "List[Dict[str, Any]]",
                "frozenset",
                "list"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "ShopAllowedIpList.post": {
            "name": "post",
            "location": 113,
            "return": [
                "str",
                "Tuple[int, int]",
                "List[int]",
                "List[str]",
                "Sequence['cirq.Qid']",
                "bool"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "ShopAllowedIpListRemove.post": {
            "name": "post",
            "location": 131,
            "return": [
                "str",
                "Tuple[int, int]",
                "List[int]",
                "List[str]",
                "Sequence['cirq.Qid']",
                "bool"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "ShopResourceList.get": {
            "name": "get",
            "location": 147,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShopResourceList.post": {
            "name": "post",
            "location": 160,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShopCacheResource.get": {
            "name": "get",
            "location": 171,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "ShopLastCompletedOrderResource.get": {
            "name": "get",
            "location": 181,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "ShopLastPendingOrderResource.get": {
            "name": "get",
            "location": 191,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "ShopResource.get": {
            "name": "get",
            "location": 201,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "ShopResource.put": {
            "name": "put",
            "location": 263,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "ShopResource.delete": {
            "name": "delete",
            "location": 270,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/shops_to_prices.py": {
        "ShopsToPricesResourceList.get": {
            "name": "get",
            "location": 83,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShopsToPricesResourceList.post": {
            "name": "post",
            "location": 107,
            "return": [
                "pymongo.database.Database",
                "Sequence[str]",
                "int",
                "Mapping[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShopToPriceResource.get": {
            "name": "get",
            "location": 174,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[int]",
                    "bool",
                    "int"
                ]
            }
        },
        "ShopToPriceResource.put": {
            "name": "put",
            "location": 189,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "ShopToPriceResource.delete": {
            "name": "delete",
            "location": 211,
            "return": [
                "str",
                "int",
                "sqlalchemy.orm.Session"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "ShopToPriceAvailability.put": {
            "name": "put",
            "location": 224,
            "return": [
                "int",
                "Dict[str, bool]",
                "bool",
                "Iterable[Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/strains.py": {
        "StrainResourceList.get": {
            "name": "get",
            "location": 38,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrainResourceList.post": {
            "name": "post",
            "location": 51,
            "return": [
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrainResource.get": {
            "name": "get",
            "location": 63,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "StrainResource.put": {
            "name": "put",
            "location": 71,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "StrainResource.delete": {
            "name": "delete",
            "location": 78,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/tables.py": {
        "TableResourceList.get": {
            "name": "get",
            "location": 51,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableResourceList.post": {
            "name": "post",
            "location": 68,
            "return": [
                "Optional[int]",
                "list",
                "Optional[str]",
                "Tuple[int, int]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableResource.get": {
            "name": "get",
            "location": 80,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        },
        "TableResource.put": {
            "name": "put",
            "location": 90,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "TableResource.delete": {
            "name": "delete",
            "location": 97,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/tags.py": {
        "TagResourceList.get": {
            "name": "get",
            "location": 38,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TagResourceList.post": {
            "name": "post",
            "location": 51,
            "return": [
                "str",
                "Type[T]",
                "Set[str]",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TagResource.get": {
            "name": "get",
            "location": 63,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "TagResource.put": {
            "name": "put",
            "location": 71,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Union[Sequence, 'SweepFixedValues']",
                "Dict[str, Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "List[str]",
                    "tuple"
                ]
            }
        },
        "TagResource.delete": {
            "name": "delete",
            "location": 78,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "List[str]",
                    "List[bytes]"
                ]
            }
        }
    },
    "pricelist-backend-master/server/apis/v1/users.py": {
        "UserResourceList.get": {
            "name": "get",
            "location": 38,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, Dict[str, str]]",
                "bool",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValidateEmailResource.get": {
            "name": "get",
            "location": 52,
            "return": [
                "bool",
                "str",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "UserResource.get": {
            "name": "get",
            "location": 65,
            "return": [
                "set",
                "bool",
                "Iterable[str]",
                "bob_emploi.frontend.api.user_pb2.User",
                "Dict[str, Any]",
                "user.transfer.models.User"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserResourceCookie.get": {
            "name": "get",
            "location": 77,
            "return": [
                "set",
                "bool",
                "Iterable[str]",
                "bob_emploi.frontend.api.user_pb2.User",
                "Dict[str, Any]",
                "user.transfer.models.User"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pricelist-backend-master/server/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "context": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "revision": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "directives": [
                    "Callable[[Mapping], T]",
                    "list",
                    "List[List[str]]",
                    "int",
                    "str",
                    "tuple"
                ]
            }
        }
    },
    "pricelist-backend-master/server/migrations/versions/132b252067c3_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 78,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/1cf62bad0d77_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/1d2c4f058c53_populate-fs_uniquifier.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/1deb625f8c2e_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/1e4faa3cf4bd_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/338e6fa88d5e_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/33cfa1e5d315_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/38b7e9d236b4_add_complete_by_column.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/4180c1718447_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 38,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/46d5ff426c51_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/4f37d89acc0d_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/51909b2054cf_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/5f89f26268da_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/62e315123504_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/655d2e39050e_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/692f4b3203d8_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/724afaa1a186_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/75c79b52c3b4_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/783682226c9b_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/78a36d111067_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/7f1d088444e7_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/86f5375d4011_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/926ecd384504_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/94987a18f795_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/9d8fc446eec1_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/afacc23c2670_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/b34e3e216a68_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/b401271d2d81_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/b882b9ab026c_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/b98ea2a3d8ea_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/baa58f9b173a_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/be9984e9e6b6_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/c7430c5fca52_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/c7628b49ba8b_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/cb34c1d864fc_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/d4ce7e1204cd_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/d5b0fe563e16_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/d88fa9a45c17_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/dc089ecc2c38_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/eaabfa90f65b_.py": {
        "add_flavor": {
            "name": "add_flavor",
            "location": 87,
            "return": [],
            "arguments": {
                "conn": [],
                "name": []
            }
        },
        "add_tag": {
            "name": "add_tag",
            "location": 99,
            "return": [],
            "arguments": {
                "conn": [],
                "name": []
            }
        },
        "upgrade": {
            "name": "upgrade",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 118,
            "return": [],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/f4c17616f611_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/f6124f577467_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 38,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/server/migrations/versions/fced7eea1ca7_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/tests/__init__.py": {},
    "pricelist-backend-master/tests/unit_tests/conftest.py": {
        "database": {
            "name": "database",
            "location": 41,
            "return": [],
            "arguments": {
                "db_uri": []
            }
        },
        "db_uri": {
            "name": "db_uri",
            "location": 62,
            "return": [],
            "arguments": {
                "worker_id": []
            }
        },
        "app": {
            "name": "app",
            "location": 80,
            "return": [],
            "arguments": {
                "database": []
            }
        },
        "user_roles": {
            "name": "user_roles",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "customer_unconfirmed": {
            "name": "customer_unconfirmed",
            "location": 111,
            "return": [],
            "arguments": {
                "user_roles": []
            }
        },
        "customer": {
            "name": "customer",
            "location": 119,
            "return": [],
            "arguments": {
                "customer_unconfirmed": []
            }
        },
        "admin": {
            "name": "admin",
            "location": 127,
            "return": [],
            "arguments": {
                "user_roles": []
            }
        },
        "admin_logged_in": {
            "name": "admin_logged_in",
            "location": 136,
            "return": [],
            "arguments": {
                "admin": []
            }
        },
        "customer_logged_in": {
            "name": "customer_logged_in",
            "location": 144,
            "return": [],
            "arguments": {
                "customer": []
            }
        },
        "employee_unconfirmed": {
            "name": "employee_unconfirmed",
            "location": 152,
            "return": [],
            "arguments": {
                "user_roles": []
            }
        },
        "employee": {
            "name": "employee",
            "location": 160,
            "return": [],
            "arguments": {
                "employee_unconfirmed": []
            }
        },
        "price_1": {
            "name": "price_1",
            "location": 168,
            "return": [],
            "arguments": {}
        },
        "price_2": {
            "name": "price_2",
            "location": 176,
            "return": [],
            "arguments": {}
        },
        "price_3": {
            "name": "price_3",
            "location": 184,
            "return": [],
            "arguments": {}
        },
        "shop_1": {
            "name": "shop_1",
            "location": 192,
            "return": [],
            "arguments": {}
        },
        "shop_2": {
            "name": "shop_2",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "category_1": {
            "name": "category_1",
            "location": 208,
            "return": [],
            "arguments": {
                "shop_1": []
            }
        },
        "category_2": {
            "name": "category_2",
            "location": 216,
            "return": [],
            "arguments": {
                "shop_1": []
            }
        },
        "tag_1": {
            "name": "tag_1",
            "location": 224,
            "return": [],
            "arguments": {}
        },
        "tag_2": {
            "name": "tag_2",
            "location": 232,
            "return": [],
            "arguments": {}
        },
        "flavor_1": {
            "name": "flavor_1",
            "location": 240,
            "return": [],
            "arguments": {}
        },
        "flavor_2": {
            "name": "flavor_2",
            "location": 248,
            "return": [],
            "arguments": {}
        },
        "strain_1": {
            "name": "strain_1",
            "location": 256,
            "return": [],
            "arguments": {}
        },
        "strain_2": {
            "name": "strain_2",
            "location": 264,
            "return": [],
            "arguments": {}
        },
        "kind_1": {
            "name": "kind_1",
            "location": 272,
            "return": [],
            "arguments": {
                "tag_1": [],
                "flavor_1": [],
                "strain_1": []
            }
        },
        "kind_2": {
            "name": "kind_2",
            "location": 302,
            "return": [],
            "arguments": {}
        },
        "product_1": {
            "name": "product_1",
            "location": 322,
            "return": [],
            "arguments": {}
        },
        "table_1": {
            "name": "table_1",
            "location": 338,
            "return": [],
            "arguments": {
                "shop_1": []
            }
        },
        "shop_with_products": {
            "name": "shop_with_products",
            "location": 347,
            "return": [],
            "arguments": {
                "shop_1": [],
                "kind_1": [],
                "kind_2": [],
                "price_1": [],
                "price_2": [],
                "price_3": [],
                "product_1": [],
                "table_1": []
            }
        },
        "shop_with_orders": {
            "name": "shop_with_orders",
            "location": 359,
            "return": [],
            "arguments": {
                "shop_with_products": [],
                "kind_1": [],
                "kind_2": [],
                "price_1": [],
                "price_2": [],
                "table_1": []
            }
        },
        "shop_with_mixed_orders": {
            "name": "shop_with_mixed_orders",
            "location": 402,
            "return": [],
            "arguments": {
                "shop_with_products": [],
                "kind_1": [],
                "kind_2": [],
                "price_1": [],
                "price_2": [],
                "price_3": [],
                "product_1": [],
                "table_1": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/helpers.py": {
        "login": {
            "name": "login",
            "location": 1,
            "return": [],
            "arguments": {
                "client": [
                    "str",
                    "Optional[str]"
                ],
                "email": [
                    "str",
                    "Optional[str]"
                ],
                "password": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "logout": {
            "name": "logout",
            "location": 5,
            "return": [
                "float",
                "Optional[str]",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "client": [
                    "List[str]"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_accounts.py": {
        "test_customer_login": {
            "name": "test_customer_login",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "customer": [
                    "bool"
                ]
            }
        },
        "test_unconfirmed_customer_login": {
            "name": "test_unconfirmed_customer_login",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "customer_unconfirmed": [
                    "bool"
                ]
            }
        },
        "test_employee_login": {
            "name": "test_employee_login",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "employee": [
                    "bool"
                ]
            }
        },
        "test_unconfirmed_employee_login": {
            "name": "test_unconfirmed_employee_login",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "employee_unconfirmed": [
                    "bool"
                ]
            }
        },
        "test_auth_token_retrieval": {
            "name": "test_auth_token_retrieval",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "app": [],
                "client": [
                    "tests._TestClientFactory"
                ],
                "employee": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_category_endpoint.py": {
        "test_categories_list_endpoint": {
            "name": "test_categories_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        },
        "test_categories_create_endpoint": {
            "name": "test_categories_create_endpoint",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_1": [
                    "bytes"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_endpoints_without_auth.py": {
        "test_shops_endpoint_without_auth": {
            "name": "test_shops_endpoint_without_auth",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_1": [
                    "bool"
                ]
            }
        },
        "test_kinds_endpoint_without_auth": {
            "name": "test_kinds_endpoint_without_auth",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "kind_1": [
                    "bool"
                ]
            }
        },
        "test_categories_endpoint_without_auth": {
            "name": "test_categories_endpoint_without_auth",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "category_1": [
                    "bool"
                ]
            }
        },
        "test_tags_endpoint_without_auth": {
            "name": "test_tags_endpoint_without_auth",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "tag_1": [
                    "bool"
                ]
            }
        },
        "test_flavors_endpoint_without_auth": {
            "name": "test_flavors_endpoint_without_auth",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "flavor_1": [
                    "bool"
                ]
            }
        },
        "test_price_endpoint_without_auth": {
            "name": "test_price_endpoint_without_auth",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        },
        "test_users_endpoint_without_auth": {
            "name": "test_users_endpoint_without_auth",
            "location": 38,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "customer": [
                    "bool"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_fixtures.py": {
        "test_price": {
            "name": "test_price",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "app": [
                    "int",
                    "str"
                ],
                "price_1": [
                    "str"
                ]
            }
        },
        "test_isolation": {
            "name": "test_isolation",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "app": [
                    "int",
                    "str"
                ]
            }
        },
        "test_isolation2": {
            "name": "test_isolation2",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "app": [
                    "int",
                    "str"
                ]
            }
        },
        "test_user": {
            "name": "test_user",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "app": [
                    "int",
                    "str"
                ],
                "customer": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_flavor_endpoint.py": {
        "test_flavors_list_endpoint": {
            "name": "test_flavors_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "flavor_1": [
                    "bool"
                ]
            }
        },
        "test_flavors_create_endpoint": {
            "name": "test_flavors_create_endpoint",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_kinds_endpoint.py": {
        "test_kinds_list_endpoint": {
            "name": "test_kinds_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "kind_1": [
                    "bool"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_kinds_to_flavors_endpoint.py": {
        "test_add_flavor_to_kind": {
            "name": "test_add_flavor_to_kind",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "dict",
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_kinds_to_strain_endpoint.py": {
        "test_add_strain_to_kind": {
            "name": "test_add_strain_to_kind",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "dict",
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_kind_to_tags_endpoint.py": {
        "test_add_tag_to_kind": {
            "name": "test_add_tag_to_kind",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_order_endpoint.py": {
        "test_order_list": {
            "name": "test_order_list",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_with_orders": [
                    "bool",
                    "mock.MagicMock"
                ]
            }
        },
        "test_mixed_order_list": {
            "name": "test_mixed_order_list",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_with_mixed_orders": [
                    "mock.MagicMock",
                    "bool"
                ]
            }
        },
        "test_create_order": {
            "name": "test_create_order",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "Dict[str, Any]"
                ],
                "price_1": [
                    "str",
                    "Tuple[int, int]"
                ],
                "price_2": [
                    "str",
                    "Tuple[int, int]"
                ],
                "kind_1": [
                    "str",
                    "Tuple[int, int]"
                ],
                "kind_2": [
                    "str",
                    "Tuple[int, int]"
                ],
                "shop_with_products": [
                    "Callable"
                ],
                "table_1": [
                    "Optional[\"Game\"]",
                    "str",
                    "bool",
                    "TextIO"
                ]
            }
        },
        "test_create_mixed_order": {
            "name": "test_create_mixed_order",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "Dict[str, Any]"
                ],
                "price_1": [
                    "Optional[List[Any]]",
                    "Optional[\"Game\"]",
                    "Tuple[int, int]",
                    "str",
                    "Container[T]"
                ],
                "price_2": [
                    "Optional[List[Any]]",
                    "Optional[\"Game\"]",
                    "Tuple[int, int]",
                    "str",
                    "Container[T]"
                ],
                "price_3": [
                    "Optional[List[Any]]",
                    "Optional[\"Game\"]",
                    "Tuple[int, int]",
                    "str",
                    "Container[T]"
                ],
                "product_1": [
                    "Optional[List[Any]]",
                    "Optional[\"Game\"]",
                    "Tuple[int, int]",
                    "str",
                    "Container[T]"
                ],
                "kind_1": [
                    "Optional[List[Any]]",
                    "Optional[\"Game\"]",
                    "Tuple[int, int]",
                    "str",
                    "Container[T]"
                ],
                "kind_2": [
                    "Optional[List[Any]]",
                    "Optional[\"Game\"]",
                    "Tuple[int, int]",
                    "str",
                    "Container[T]"
                ],
                "shop_with_products": [
                    "Callable",
                    "List[str]"
                ],
                "table_1": [
                    "Callable",
                    "List[str]"
                ]
            }
        },
        "test_create_order_validation": {
            "name": "test_create_order_validation",
            "location": 131,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "Dict[str, Any]"
                ],
                "price_1": [
                    "str",
                    "Tuple[int, int]"
                ],
                "price_2": [
                    "str",
                    "Tuple[int, int]"
                ],
                "kind_1": [
                    "str",
                    "Tuple[int, int]"
                ],
                "kind_2": [
                    "str",
                    "Tuple[int, int]"
                ],
                "shop_with_products": [
                    "bool"
                ],
                "table_1": [
                    "bool"
                ]
            }
        },
        "test_patch_order_to_complete": {
            "name": "test_patch_order_to_complete",
            "location": 168,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_with_orders": [
                    "mock.MagicMock",
                    "bool"
                ],
                "admin": [
                    "mock.MagicMock"
                ]
            }
        },
        "test_price_rules": {
            "name": "test_price_rules",
            "location": 185,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_price_endpoint.py": {
        "test_prices_list_endpoint": {
            "name": "test_prices_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "price_1": [
                    "bool"
                ]
            }
        },
        "test_prices_create_endpoint": {
            "name": "test_prices_create_endpoint",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_products_endpoint.py": {
        "test_products_list_endpoint": {
            "name": "test_products_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "List[Dict[str, Any]]"
                ],
                "product_1": [
                    "bool",
                    "int",
                    "BinaryIO",
                    "str"
                ]
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_shop_endpoint.py": {
        "test_shops_list_endpoint": {
            "name": "test_shops_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_1": [
                    "bool"
                ]
            }
        },
        "test_shops_detail_endpoint": {
            "name": "test_shops_detail_endpoint",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "client": [],
                "shop_with_products": []
            }
        },
        "test_shops_create_endpoint": {
            "name": "test_shops_create_endpoint",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/test_tag_endpoint.py": {
        "test_tags_list_endpoint": {
            "name": "test_tags_list_endpoint",
            "location": 1,
            "return": [
                ""
            ],
            "arguments": {
                "client": [
                    "List[str]"
                ],
                "tag_1": [
                    "bool",
                    "List[List[str]]"
                ]
            }
        },
        "test_tags_create_endpoint": {
            "name": "test_tags_create_endpoint",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "pricelist-backend-master/tests/unit_tests/__init__.py": {}
}
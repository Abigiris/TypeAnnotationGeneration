{
    "proxmox-slack-bot-master/app/main.py": {
        "receive_event": {
            "name": "receive_event",
            "location": 42,
            "return": [
                "Optional[int]",
                "int"
            ],
            "arguments": {
                "body": [
                    "str",
                    "bytes"
                ]
            }
        },
        "handle_event_callback": {
            "name": "handle_event_callback",
            "location": 68,
            "return": [
                "List[dict]",
                "int",
                "str",
                "bool",
                "Callable"
            ],
            "arguments": {
                "event": [
                    "Mapping[str, Any]",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "proxmox-slack-bot-master/app/slack.py": {
        "api": {
            "name": "api",
            "location": 16,
            "return": [
                "int",
                "bool",
                "bytes",
                "Union[Dict, List]"
            ],
            "arguments": {
                "method": [
                    "str",
                    "Mapping[str, Any]",
                    "type",
                    "dict"
                ],
                "data": [
                    "requests.Response",
                    "Dict[str, Union[str, float]]",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "verify_signature": {
            "name": "verify_signature",
            "location": 27,
            "return": [
                "Set[str]",
                "bool",
                "set",
                "object",
                "Callable[[str, str], float]",
                "Set[Tuple[int, Any, Any]]"
            ],
            "arguments": {
                "signature": [
                    "logging.Logger",
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "timestamp": [
                    "str",
                    "bytes",
                    "Dict[str, str]",
                    "dict"
                ],
                "body": [
                    "str",
                    "bytes",
                    "Dict[str, str]",
                    "dict"
                ],
                "signing_key": [
                    "str",
                    "float",
                    "Optional[str]",
                    "requests.Response"
                ],
                "version": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "send_message": {
            "name": "send_message",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "channel": [
                    "str",
                    "Dict[str, Any]",
                    "dict"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "users_info": {
            "name": "users_info",
            "location": 50,
            "return": [
                "Callable"
            ],
            "arguments": {
                "user": [
                    "str",
                    "logging.Logger",
                    "Callable"
                ]
            }
        }
    },
    "proxmox-slack-bot-master/app/slack_model.py": {},
    "proxmox-slack-bot-master/demo/main.py": {
        "read_root": {
            "name": "read_root",
            "location": 7,
            "return": [
                "bool",
                "Callable",
                "List[dict]",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "read_item": {
            "name": "read_item",
            "location": 12,
            "return": [
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "item_id": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "q": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        }
    }
}
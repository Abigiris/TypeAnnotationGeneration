{
    "pyRAPTOR-master/setup.py": {},
    "pyRAPTOR-master/pyraptor/constants.py": {},
    "pyRAPTOR-master/pyraptor/db_loader.py": {
        "initialize_schedule": {
            "name": "initialize_schedule",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "load_gtfs_feed": {
            "name": "load_gtfs_feed",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "schedule": [
                    "pygtfs.Schedule",
                    "str",
                    "bool",
                    "dict",
                    "float"
                ],
                "filename": [
                    "str",
                    "bool",
                    "int",
                    "Sequence[int]"
                ]
            }
        }
    },
    "pyRAPTOR-master/pyraptor/main.py": {
        "parse_cmd_line": {
            "name": "parse_cmd_line",
            "location": 11,
            "return": [
                "argparse.ArgumentParser",
                "List[str]",
                "dict",
                "argparse.Namespace"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "str",
                "bool",
                "int",
                "List[int]",
                "List[str]",
                "Dict[str, int]",
                "Dict[str, str]",
                "List[Tuple[str, str]]",
                "Optional[str]"
            ],
            "arguments": {
                "origin_stop_id": [
                    "str",
                    "int"
                ],
                "dest_stop_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pyRAPTOR-master/pyraptor/model.py": {
        "StopTime.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stop_id": [
                    "str",
                    "int",
                    "List[str]"
                ],
                "trip_id": [
                    "str",
                    "int",
                    "List[str]"
                ],
                "arrival_time": [
                    "int",
                    "float",
                    "Optional[float]"
                ],
                "departure_time": [
                    "int",
                    "float",
                    "Optional[float]"
                ]
            }
        },
        "Transfer.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_stop_id": [
                    "int",
                    "str",
                    "Optional[int]"
                ],
                "to_stop_id": [
                    "int",
                    "str",
                    "Optional[int]"
                ],
                "transfer_time_mins": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "Route.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gtfs_route_id": [
                    "Optional[int]",
                    "Dict[str, bool]",
                    "str",
                    "Dict[str, Dict[str, Any]]",
                    "int",
                    "dict",
                    "bool"
                ],
                "num_trips": [
                    "int",
                    "Optional[int]"
                ],
                "num_stops": [
                    "int",
                    "Optional[int]"
                ],
                "route_stop_idx": [
                    "int",
                    "List[str]",
                    "List[int]",
                    "Callable",
                    "Tuple[int]"
                ],
                "stop_times_idx": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "pyRAPTOR-master/pyraptor/router.py": {
        "Label.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "stop_id": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "arrival_time": [
                    "Optional[int]",
                    "int",
                    "Optional[str]"
                ],
                "boarded_stop_id": [
                    "int",
                    "str",
                    "Dict[str, Dict[str, Any]]",
                    "Optional[List[str]]"
                ],
                "route_idx": [
                    "int",
                    "bool",
                    "Dict[str, Any]",
                    "tuple",
                    "Callable",
                    "Tuple[int, int]"
                ],
                "trip_id": [
                    "str",
                    "int",
                    "Optional[int]"
                ]
            }
        },
        "Router.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Router.find_route": {
            "name": "find_route",
            "location": 40,
            "return": [
                "Optional[List[str]]",
                "bool",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "origin_stop_id": [
                    "str",
                    "int",
                    "Union[str, List[str]]",
                    "List[bytes]"
                ],
                "dest_stop_id": [
                    "str",
                    "int",
                    "Union[str, List[str]]",
                    "List[bytes]"
                ],
                "departure_time": [
                    "Optional[int]",
                    "Optional[float]",
                    "bool",
                    "T",
                    "List[str]"
                ]
            }
        },
        "Router._build_itineraries": {
            "name": "_build_itineraries",
            "location": 56,
            "return": [
                "bool",
                "Union[int, float, complex]"
            ],
            "arguments": {
                "self": [],
                "origin_stop_id": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "int"
                ],
                "dest_stop_id": [
                    "str",
                    "int",
                    "Optional[datetime.datetime]",
                    "Set[int]",
                    "List[str]"
                ],
                "departure_time": [
                    "int",
                    "datetime.datetime",
                    "Optional[\"UserProvidedIdentifiers\"]"
                ],
                "labels": [
                    "str",
                    "int",
                    "Optional[datetime.datetime]",
                    "Set[int]"
                ]
            }
        },
        "Router._compute_labels": {
            "name": "_compute_labels",
            "location": 114,
            "return": [
                "int",
                "bool",
                "str",
                "Iterable[str]",
                "List[List[str]]"
            ],
            "arguments": {
                "self": [],
                "origin_stop_id": [
                    "str",
                    "int",
                    "Optional[List[str]]"
                ],
                "dest_stop_id": [
                    "str",
                    "bool",
                    "int",
                    "Optional[List[str]]",
                    "List[dict]"
                ],
                "departure_time": [
                    "int",
                    "Optional[int]",
                    "datetime.datetime"
                ]
            }
        },
        "Router._get_current_time_seconds": {
            "name": "_get_current_time_seconds",
            "location": 188,
            "return": [
                "str",
                "datetime.date",
                "int",
                "Sequence[str]",
                "datetime.datetime"
            ],
            "arguments": {}
        },
        "Router._load_schedule": {
            "name": "_load_schedule",
            "location": 203,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyRAPTOR-master/pyraptor/settings.py": {},
    "pyRAPTOR-master/pyraptor/timetable.py": {
        "Timetable.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schedule": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Timetable.earliest_trip": {
            "name": "earliest_trip",
            "location": 24,
            "return": [
                "Optional[str]",
                "Optional[int]",
                "list",
                "bool"
            ],
            "arguments": {
                "self": [],
                "route": [
                    "int"
                ],
                "stop_seq": [
                    "int",
                    "List[int]",
                    "str"
                ],
                "min_departure_time": [
                    "int",
                    "List[int]",
                    "str"
                ]
            }
        },
        "Timetable._build_stop_ids": {
            "name": "_build_stop_ids",
            "location": 43,
            "return": [
                "List[str]",
                "Iterable[str]",
                "List[Tuple[str, Any]]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable._build_stops_dict": {
            "name": "_build_stops_dict",
            "location": 46,
            "return": [
                "List[str]",
                "bool",
                "AbstractSet[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable._build_transfers": {
            "name": "_build_transfers",
            "location": 49,
            "return": [
                "bool",
                "str",
                "Optional[str]",
                "float",
                "Optional[bool]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable._build_routes": {
            "name": "_build_routes",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyRAPTOR-master/pyraptor/__init__.py": {
        "healtcheck": {
            "name": "healtcheck",
            "location": 11,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "get_route": {
            "name": "get_route",
            "location": 16,
            "return": [
                "int",
                "Sequence[Union[str, Any]]",
                "Optional[float]"
            ],
            "arguments": {}
        }
    },
    "pyRAPTOR-master/tests/main_test.py": {
        "test_main": {
            "name": "test_main",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
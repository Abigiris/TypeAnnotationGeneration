{
    "pyenvclasses-master/envclasses/__init__.py": {
        "post_init": {
            "name": "post_init",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "bool"
                ],
                "env_ignore_errors": [
                    "bool",
                    "int"
                ]
            }
        },
        "bool_caster": {
            "name": "bool_caster",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": [
                    "str",
                    "Hashable"
                ]
            }
        },
        "make_cast_function": {
            "name": "make_cast_function",
            "location": 58,
            "return": [
                "int",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "type_": [
                    "Callable",
                    "Type[T]",
                    "str",
                    "List[type]"
                ]
            }
        },
        "_fresh_access_property_maker": {
            "name": "_fresh_access_property_maker",
            "location": 107,
            "return": [
                "int",
                "Dict[str, Any]",
                "complex",
                "str"
            ],
            "arguments": {
                "name": [
                    "str",
                    "List[str]"
                ],
                "cast_function": [
                    "str",
                    "List[str]"
                ],
                "default_set": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "make_cast_function._wrapper": {
            "name": "_wrapper",
            "location": 71,
            "return": [
                "int",
                "bool",
                "float",
                "str"
            ],
            "arguments": {
                "value": [
                    "Union[T, Sequence[T]]",
                    "float",
                    "Optional[Union[int, float]]"
                ]
            }
        },
        "classproperty.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]"
                ]
            }
        },
        "classproperty.__get__": {
            "name": "__get__",
            "location": 96,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "list",
                    "Sequence[int]",
                    "Optional[int]",
                    "Callable",
                    "List[str]"
                ],
                "owner": [
                    "str",
                    "int"
                ]
            }
        },
        "classproperty.__set__": {
            "name": "__set__",
            "location": 103,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "Optional[int]",
                    "Iterable[T]",
                    "bytes"
                ],
                "value": [
                    "float",
                    "str",
                    "int",
                    "T"
                ]
            }
        },
        "_fresh_access_property_maker.prop": {
            "name": "prop",
            "location": 121,
            "return": [
                "str",
                "Sequence[Any]",
                "Type[Any]"
            ],
            "arguments": {
                "cls": [
                    "Union[Dict, Tuple]",
                    "Dict[str, Any]"
                ]
            }
        },
        "EnvClassMeta.__new__": {
            "name": "__new__",
            "location": 137,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "dict"
                ],
                "class_name": [
                    "str",
                    "dict"
                ],
                "superclasses": [
                    "str",
                    "dict"
                ],
                "attributes": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "pyenvclasses-master/tests/test_envclasses.py": {
        "TestEnvClassMeta.test_env_class_meta": {
            "name": "test_env_class_meta",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "TestEnvClassMeta.test_lazy_init_of_env": {
            "name": "test_lazy_init_of_env",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pyenvclasses-master/tests/__init__.py": {}
}
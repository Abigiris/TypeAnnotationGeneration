{
    "pymessagebus-master/setup.py": {},
    "pymessagebus-master/src/pymessagebus/api.py": {
        "MessageBus.add_handler": {
            "name": "add_handler",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type",
                    "Callable"
                ],
                "message_handler": [
                    "type",
                    "Callable"
                ]
            }
        },
        "MessageBus.remove_handler": {
            "name": "remove_handler",
            "location": 14,
            "return": [
                "builtins.bool"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type"
                ],
                "message_handler": [
                    "type"
                ]
            }
        },
        "MessageBus.handle": {
            "name": "handle",
            "location": 18,
            "return": [
                "typing.List[typing.Any]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "MessageBus.has_handler_for": {
            "name": "has_handler_for",
            "location": 22,
            "return": [
                "builtins.bool"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type"
                ]
            }
        },
        "CommandBus.add_handler": {
            "name": "add_handler",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type",
                    "Callable"
                ],
                "message_handler": [
                    "type",
                    "Callable"
                ]
            }
        },
        "CommandBus.remove_handler": {
            "name": "remove_handler",
            "location": 32,
            "return": [
                "builtins.bool"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type"
                ]
            }
        },
        "CommandBus.handle": {
            "name": "handle",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "CommandBus.has_handler_for": {
            "name": "has_handler_for",
            "location": 40,
            "return": [
                "builtins.bool"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type"
                ]
            }
        }
    },
    "pymessagebus-master/src/pymessagebus/_commandbus.py": {
        "CommandBus.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandBus.add_handler": {
            "name": "add_handler",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "dict"
                ],
                "message_handler": [
                    "List[str]",
                    "str",
                    "Callable"
                ]
            }
        },
        "CommandBus.remove_handler": {
            "name": "remove_handler",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "bool",
                    "dict"
                ]
            }
        },
        "CommandBus.handle": {
            "name": "handle",
            "location": 33,
            "return": [
                "bool",
                "Optional[str]",
                "Tuple[float, float]",
                "Callable[..., None]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "bytes"
                ]
            }
        },
        "CommandBus.has_handler_for": {
            "name": "has_handler_for",
            "location": 47,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "pymessagebus-master/src/pymessagebus/_messagebus.py": {
        "MessageBus.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessageBus.add_handler": {
            "name": "add_handler",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type",
                    "Type",
                    "List[str]"
                ],
                "message_handler": [
                    "Callable",
                    "dict",
                    "Union[object, type]"
                ]
            }
        },
        "MessageBus.remove_handler": {
            "name": "remove_handler",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "type",
                    "Optional[List[\"custom_index\"]]",
                    "Dict[str, Any]"
                ],
                "message_handler": [
                    "Callable",
                    "List[Callable]",
                    "Dict[str, str]",
                    "dict"
                ]
            }
        },
        "MessageBus.handle": {
            "name": "handle",
            "location": 51,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "str",
                    "Optional[Exception]"
                ]
            }
        },
        "MessageBus.has_handler_for": {
            "name": "has_handler_for",
            "location": 57,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "message_class": [
                    "Dict[str, Dict[str, str]]",
                    "str",
                    "Set[str]"
                ]
            }
        },
        "MessageBus._trigger_handlers_for_message_as_a_middleware": {
            "name": "_trigger_handlers_for_message_as_a_middleware",
            "location": 60,
            "return": [
                "bool",
                "Dict[str, Tuple[int, int]]",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "Union[List, str]",
                    "bool",
                    "Callable[..., Awaitable]",
                    "Optional[BaseException]"
                ],
                "unused_next": [
                    "Callable",
                    "str",
                    "List[Dict[str, str]]",
                    "Optional[str]",
                    "Iterable[T]"
                ]
            }
        },
        "MessageBus._get_middlewares_callables_chain": {
            "name": "_get_middlewares_callables_chain",
            "location": 68,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "middlewares": [
                    "str",
                    "bool"
                ],
                "message_handler": [
                    "str",
                    "bool"
                ]
            }
        },
        "MessageBus._get_middleware_callable_for_middleware": {
            "name": "_get_middleware_callable_for_middleware",
            "location": 89,
            "return": [
                "Mapping[str, Any]",
                "str",
                "List[Dict]",
                "Dict[str, Any]",
                "bool",
                "Tuple[int, int, int]",
                "Dict[int, Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "middleware": [
                    "List[str]",
                    "Callable",
                    "Dict[str, Any]",
                    "int",
                    "str",
                    "Exception",
                    "List[Dict[str, Any]]"
                ],
                "next_middleware": [
                    "List[str]",
                    "Callable",
                    "Dict[str, Any]",
                    "int",
                    "str",
                    "Exception",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "MessageBus._trigger_handler": {
            "name": "_trigger_handler",
            "location": 98,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ],
                "handler": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "MessageBus._get_middleware_callable_for_middleware.middleware_callable": {
            "name": "middleware_callable",
            "location": 92,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "str",
                    "bool",
                    "Callable",
                    "int"
                ]
            }
        }
    },
    "pymessagebus-master/src/pymessagebus/__init__.py": {},
    "pymessagebus-master/src/pymessagebus/default/commandbus.py": {
        "register_handler": {
            "name": "register_handler",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message_class": [
                    "type"
                ]
            }
        },
        "register_handler.decorator": {
            "name": "decorator",
            "location": 11,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "handler": [
                    "Callable"
                ]
            }
        }
    },
    "pymessagebus-master/src/pymessagebus/default/messagebus.py": {
        "register_handler": {
            "name": "register_handler",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message_class": [
                    "type"
                ]
            }
        },
        "register_handler.decorator": {
            "name": "decorator",
            "location": 11,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "handler": [
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "pymessagebus-master/src/pymessagebus/default/__init__.py": {},
    "pymessagebus-master/src/pymessagebus/middleware/logger.py": {
        "get_logger_middleware": {
            "name": "get_logger_middleware",
            "location": 16,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "logger": [
                    "logging.Logger",
                    "dict",
                    "List[Dict[str, Any]]"
                ],
                "config": [
                    "logging.Logger",
                    "dict",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "get_logger_middleware.logger_middleware": {
            "name": "logger_middleware",
            "location": 22,
            "return": [
                "int",
                "Tuple[int, Dict[str, Any]]",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "message": [
                    "Dict[str, Any]",
                    "List[str]",
                    "Iterable[str]",
                    "str"
                ],
                "next_": [
                    "str",
                    "Union[int, float]",
                    "list"
                ]
            }
        }
    },
    "pymessagebus-master/src/pymessagebus/middleware/__init__.py": {},
    "pymessagebus-master/tests/_commandbus_test.py": {
        "test_simplest_handler": {
            "name": "test_simplest_handler",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_has_handler_for": {
            "name": "test_has_handler_for",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_remove_handler": {
            "name": "test_remove_handler",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_commandbus_can_be_configured_to_not_return_anything_on_command_handling": {
            "name": "test_commandbus_can_be_configured_to_not_return_anything_on_command_handling",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handlers_get_message": {
            "name": "test_handlers_get_message",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handler_must_be_registered_for_a_message_type": {
            "name": "test_handler_must_be_registered_for_a_message_type",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handler_message_must_be_a_type": {
            "name": "test_handler_message_must_be_a_type",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_handlers_for_single_message_triggers_error": {
            "name": "test_multiple_handlers_for_single_message_triggers_error",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handler_is_triggered_each_time": {
            "name": "test_handler_is_triggered_each_time",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_middlewares": {
            "name": "test_middlewares",
            "location": 97,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_locking": {
            "name": "test_locking",
            "location": 134,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "identity_handler": {
            "name": "identity_handler",
            "location": 189,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "test_handler_is_triggered_each_time.handler": {
            "name": "handler",
            "location": 82,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "test_middlewares.middleware_one": {
            "name": "middleware_one",
            "location": 101,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "message": [
                    "List[str]",
                    "list",
                    "str"
                ],
                "next": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_middlewares.middleware_two": {
            "name": "middleware_two",
            "location": 107,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "message": [
                    "List[str]",
                    "list",
                    "str"
                ],
                "next": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_middlewares.handler": {
            "name": "handler",
            "location": 113,
            "return": [
                "List[int]",
                "Dict[str, int]",
                "List[dict]"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "test_locking.handler_which_triggers_handler_two": {
            "name": "handler_which_triggers_handler_two",
            "location": 146,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "msg": [
                    "T",
                    "Sequence['cirq.Qid']",
                    "int"
                ]
            }
        },
        "test_locking.handler_two": {
            "name": "handler_two",
            "location": 152,
            "return": [
                "bool"
            ],
            "arguments": {
                "msg": [
                    "T",
                    "Sequence['cirq.Qid']",
                    "int"
                ]
            }
        }
    },
    "pymessagebus-master/tests/_messagebus_test.py": {
        "test_simplest_handler_can_have_no_handlers_for_a_message": {
            "name": "test_simplest_handler_can_have_no_handlers_for_a_message",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_simplest_handler": {
            "name": "test_simplest_handler",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_has_handler_for": {
            "name": "test_has_handler_for",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_remove_handler": {
            "name": "test_remove_handler",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handlers_get_message": {
            "name": "test_handlers_get_message",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handler_message_must_be_a_type": {
            "name": "test_handler_message_must_be_a_type",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handler_handler_must_be_a_callable": {
            "name": "test_handler_handler_must_be_a_callable",
            "location": 60,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_handlers_for_single_message": {
            "name": "test_multiple_handlers_for_single_message",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_handlers_for_single_message_triggered_in_correct_order": {
            "name": "test_multiple_handlers_for_single_message_triggered_in_correct_order",
            "location": 78,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_handlers_correctly_triggered": {
            "name": "test_multiple_handlers_correctly_triggered",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_handler_is_triggered_each_time": {
            "name": "test_handler_is_triggered_each_time",
            "location": 104,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_middlewares": {
            "name": "test_middlewares",
            "location": 122,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "identity_handler": {
            "name": "identity_handler",
            "location": 205,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "test_handler_is_triggered_each_time.handler": {
            "name": "handler",
            "location": 107,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_middlewares.middleware_one": {
            "name": "middleware_one",
            "location": 126,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "message": [
                    "List[str]",
                    "list",
                    "str"
                ],
                "next": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_middlewares.middleware_two": {
            "name": "middleware_two",
            "location": 132,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "message": [
                    "List[str]",
                    "list",
                    "str"
                ],
                "next": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_middlewares.handler_one": {
            "name": "handler_one",
            "location": 138,
            "return": [
                "int",
                "str",
                "List[str]",
                "List[dict]",
                "bool"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "test_middlewares.handler_two": {
            "name": "handler_two",
            "location": 142,
            "return": [
                "int",
                "str",
                "List[str]",
                "List[dict]",
                "bool"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "pymessagebus-master/tests/__init__.py": {},
    "pymessagebus-master/tests/__init___test.py": {
        "test_messagebus_package_alias": {
            "name": "test_messagebus_package_alias",
            "location": 4,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_commandbus_package_alias": {
            "name": "test_commandbus_package_alias",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "pymessagebus-master/tests/default/commandbus_test.py": {
        "_default_commandbus_unloaded_after_test": {
            "name": "_default_commandbus_unloaded_after_test",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_its_well_and_truly_a_singleton": {
            "name": "test_its_well_and_truly_a_singleton",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_simplest_decorator": {
            "name": "test_simplest_decorator",
            "location": 62,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_decorator_receives_message": {
            "name": "test_decorator_receives_message",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_decorators": {
            "name": "test_multiple_decorators",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_decorators_for_same_message_type_triggers_an_error": {
            "name": "test_multiple_decorators_for_same_message_type_triggers_an_error",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_its_well_and_truly_a_singleton.test1": {
            "name": "test1",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_its_well_and_truly_a_singleton.test2": {
            "name": "test2",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_simplest_decorator.handler": {
            "name": "handler",
            "location": 66,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_decorator_receives_message.add_five": {
            "name": "add_five",
            "location": 81,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "Optional[int]",
                    "int",
                    "IO",
                    "bool"
                ]
            }
        },
        "test_multiple_decorators.handler_one": {
            "name": "handler_one",
            "location": 96,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "test_multiple_decorators.handler_two": {
            "name": "handler_two",
            "location": 100,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "test_multiple_decorators_for_same_message_type_triggers_an_error.handler_one": {
            "name": "handler_one",
            "location": 116,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_its_well_and_truly_a_singleton.test1.handler": {
            "name": "handler",
            "location": 33,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "test_its_well_and_truly_a_singleton.test2.handler": {
            "name": "handler",
            "location": 47,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "test_multiple_decorators_for_same_message_type_triggers_an_error.handler_two": {
            "name": "handler_two",
            "location": 122,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        }
    },
    "pymessagebus-master/tests/default/messagebus_test.py": {
        "_default_messagebus_unloaded_after_test": {
            "name": "_default_messagebus_unloaded_after_test",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_its_well_and_truly_a_singleton": {
            "name": "test_its_well_and_truly_a_singleton",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_simplest_decorator": {
            "name": "test_simplest_decorator",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_decorator_receives_message": {
            "name": "test_decorator_receives_message",
            "location": 73,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_multiple_decorators": {
            "name": "test_multiple_decorators",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_its_well_and_truly_a_singleton.test1": {
            "name": "test1",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_its_well_and_truly_a_singleton.test2": {
            "name": "test2",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_simplest_decorator.handler": {
            "name": "handler",
            "location": 65,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_decorator_receives_message.add_five": {
            "name": "add_five",
            "location": 80,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "Optional[int]",
                    "int",
                    "IO",
                    "bool"
                ]
            }
        },
        "test_multiple_decorators.handler_one": {
            "name": "handler_one",
            "location": 95,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_multiple_decorators.handler_two": {
            "name": "handler_two",
            "location": 99,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_multiple_decorators.handler_three": {
            "name": "handler_three",
            "location": 103,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "test_its_well_and_truly_a_singleton.test1.handler": {
            "name": "handler",
            "location": 29,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "test_its_well_and_truly_a_singleton.test2.handler": {
            "name": "handler",
            "location": 43,
            "return": [],
            "arguments": {
                "msg": []
            }
        }
    },
    "pymessagebus-master/tests/default/__init__.py": {},
    "pymessagebus-master/tests/middleware/logger_test.py": {
        "test_middleware_basic": {
            "name": "test_middleware_basic",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "caplog": []
            }
        },
        "test_middleware_with_error": {
            "name": "test_middleware_with_error",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {
                "caplog": []
            }
        },
        "test_middleware_with_custom_log_levels": {
            "name": "test_middleware_with_custom_log_levels",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "caplog": []
            }
        },
        "test_middleware_with_custom_log_levels_with_error": {
            "name": "test_middleware_with_custom_log_levels_with_error",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "caplog": []
            }
        },
        "errorful_handler": {
            "name": "errorful_handler",
            "location": 129,
            "return": [
                "builtins.object"
            ],
            "arguments": {
                "message": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    }
}
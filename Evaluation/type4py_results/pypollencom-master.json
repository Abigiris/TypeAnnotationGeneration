{
    "pypollencom-master/example.py": {},
    "pypollencom-master/setup.py": {
        "UploadCommand.status": {
            "name": "status",
            "location": 59,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "UploadCommand.initialize_options": {
            "name": "initialize_options",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.finalize_options": {
            "name": "finalize_options",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.run": {
            "name": "run",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pypollencom-master/pypollencom/allergens.py": {
        "Allergens.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "pypollencom-master/pypollencom/asthma.py": {
        "Asthma.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "pypollencom-master/pypollencom/client.py": {
        "Client.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "zip_code": [
                    "Optional[Callable]",
                    "bytes",
                    "bool",
                    "int"
                ],
                "websession": [
                    "str",
                    "List[List[str]]",
                    "int",
                    "bool",
                    "List[int]"
                ]
            }
        }
    },
    "pypollencom-master/pypollencom/decorators.py": {
        "raise_on_invalid_zip": {
            "name": "raise_on_invalid_zip",
            "location": 7,
            "return": [
                "int",
                "List[int]",
                "Sequence[float]",
                "[[]]"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "bool",
                    "List[Dict[str, Any]]"
                ]
            }
        }
    },
    "pypollencom-master/pypollencom/disease.py": {
        "Disease.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "pypollencom-master/pypollencom/errors.py": {},
    "pypollencom-master/pypollencom/__init__.py": {},
    "pypollencom-master/pypollencom/__version__.py": {},
    "pypollencom-master/tests/const.py": {},
    "pypollencom-master/tests/test_allergens.py": {},
    "pypollencom-master/tests/test_asthma.py": {},
    "pypollencom-master/tests/test_client.py": {},
    "pypollencom-master/tests/test_disease.py": {},
    "pypollencom-master/tests/__init__.py": {},
    "pypollencom-master/tests/fixtures/allergens.py": {
        "fixture_current": {
            "name": "fixture_current",
            "location": 6,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "fixture_empty_response": {
            "name": "fixture_empty_response",
            "location": 98,
            "return": [
                "str",
                "bool",
                "Dict[str, bool]",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {}
        },
        "fixture_extended": {
            "name": "fixture_extended",
            "location": 108,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "fixture_historic": {
            "name": "fixture_historic",
            "location": 130,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "fixture_outlook": {
            "name": "fixture_outlook",
            "location": 177,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "pypollencom-master/tests/fixtures/asthma.py": {
        "fixture_current": {
            "name": "fixture_current",
            "location": 6,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "fixture_extended": {
            "name": "fixture_extended",
            "location": 82,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "fixture_historic": {
            "name": "fixture_historic",
            "location": 104,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        }
    },
    "pypollencom-master/tests/fixtures/disease.py": {
        "fixture_extended": {
            "name": "fixture_extended",
            "location": 6,
            "return": [
                "str",
                "bool",
                "Mapping[str, Any]",
                "dict",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        }
    },
    "pypollencom-master/tests/fixtures/__init__.py": {}
}
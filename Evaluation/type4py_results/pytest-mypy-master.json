{
    "pytest-mypy-master/setup.py": {
        "read": {
            "name": "read",
            "location": 10,
            "return": [
                "str",
                "Tuple[str, str]",
                "Tuple[str]",
                "dict",
                "List[str]"
            ],
            "arguments": {
                "fname": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pytest-mypy-master/src/pytest_mypy.py": {
        "default_file_error_formatter": {
            "name": "default_file_error_formatter",
            "location": 20,
            "return": [
                "str",
                "int",
                "Exception"
            ],
            "arguments": {
                "item": [
                    "bool",
                    "List[Type]"
                ],
                "results": [
                    "bool",
                    "List[Type]"
                ],
                "errors": [
                    "str",
                    "Optional[List[str]]",
                    "List[str]",
                    "int"
                ]
            }
        },
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "parser": []
            }
        },
        "_get_xdist_workerinput": {
            "name": "_get_xdist_workerinput",
            "location": 52,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "config_node": [
                    "str",
                    "Callable",
                    "Mapping[str, T]",
                    "Dict[str, Any]"
                ]
            }
        },
        "_is_master": {
            "name": "_is_master",
            "location": 61,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "config": [
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "config": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "pytest_collect_file": {
            "name": "pytest_collect_file",
            "location": 130,
            "return": [
                "pathlib.Path",
                "Union[str, pathlib.Path]",
                "bool",
                "str",
                "Optional[pathlib.Path]"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path",
                    "Union[str, pathlib.Path]",
                    "bool",
                    "Union[pathlib.Path, str]",
                    "Optional[pathlib.Path]"
                ],
                "parent": [
                    "pathlib.Path",
                    "Union[str, pathlib.Path]",
                    "bool",
                    "Union[pathlib.Path, str]",
                    "Optional[pathlib.Path]"
                ]
            }
        },
        "pytest_terminal_summary": {
            "name": "pytest_terminal_summary",
            "location": 315,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "terminalreporter": [
                    "Iterable[str]"
                ],
                "config": [
                    "Optional[Dict]",
                    "str"
                ]
            }
        },
        "MypyFile.from_parent": {
            "name": "from_parent",
            "location": 144,
            "return": [
                "bool",
                "Sequence[str]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "os.PathLike",
                    "Callable[..., T]",
                    "tuple",
                    "Dict[str, Any]",
                    "List[str]"
                ]
            }
        },
        "MypyFile.collect": {
            "name": "collect",
            "location": 149,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyItem.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyItem.collect": {
            "name": "collect",
            "location": 172,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyItem.from_parent": {
            "name": "from_parent",
            "location": 180,
            "return": [
                "bool",
                "Sequence[str]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "os.PathLike",
                    "Callable[..., T]",
                    "tuple",
                    "Dict[str, Any]",
                    "List[str]"
                ]
            }
        },
        "MypyItem.repr_failure": {
            "name": "repr_failure",
            "location": 185,
            "return": [
                "int",
                "Optional[int]",
                "pathlib.Path",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "excinfo": [
                    "Optional[str]",
                    "float"
                ]
            }
        },
        "MypyFileItem.runtest": {
            "name": "runtest",
            "location": 199,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyFileItem.reportinfo": {
            "name": "reportinfo",
            "location": 207,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyStatusItem.runtest": {
            "name": "runtest",
            "location": 220,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyResults.dump": {
            "name": "dump",
            "location": 241,
            "return": [
                "str",
                "Optional[int]",
                "pathlib.Path",
                "int"
            ],
            "arguments": {
                "self": [],
                "results_f": [
                    "dict",
                    "float",
                    "str",
                    "T",
                    "Optional[int]"
                ]
            }
        },
        "MypyResults.load": {
            "name": "load",
            "location": 246,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "IO[str]"
                ],
                "results_f": [
                    "str",
                    "IO[str]"
                ]
            }
        },
        "MypyResults.from_mypy": {
            "name": "from_mypy",
            "location": 251,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "pathlib.Path",
                    "Union[str, BinaryIO]"
                ],
                "items": [
                    "str",
                    "pathlib.Path",
                    "os.DirEntry"
                ]
            }
        },
        "MypyResults.from_session": {
            "name": "from_session",
            "location": 288,
            "return": [
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "MutableMapping",
                    "Callable"
                ],
                "session": [
                    "Dict[str, int]",
                    "dict"
                ]
            }
        },
        "pytest_configure._MypyXdistPlugin.pytest_configure_node": {
            "name": "pytest_configure_node",
            "location": 90,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "node": [
                    "dict",
                    "Callable"
                ]
            }
        }
    },
    "pytest-mypy-master/tests/conftest.py": {},
    "pytest-mypy-master/tests/test_pytest_mypy.py": {
        "xdist_args": {
            "name": "xdist_args",
            "location": 18,
            "return": [
                "str",
                "bool",
                "int",
                "Any"
            ],
            "arguments": {
                "request": [
                    "dict"
                ]
            }
        },
        "test_mypy_success": {
            "name": "test_mypy_success",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [],
                "pyfile_count": [],
                "xdist_args": []
            }
        },
        "test_mypy_pyi": {
            "name": "test_mypy_pyi",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [],
                "xdist_args": []
            }
        },
        "test_mypy_error": {
            "name": "test_mypy_error",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "Callable"
                ],
                "xdist_args": []
            }
        },
        "test_mypy_ignore_missings_imports": {
            "name": "test_mypy_ignore_missings_imports",
            "location": 98,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str"
                ],
                "xdist_args": []
            }
        },
        "test_mypy_config_file": {
            "name": "test_mypy_config_file",
            "location": 132,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [],
                "xdist_args": [
                    "Optional[str]",
                    "Callable",
                    "str"
                ]
            }
        },
        "test_mypy_marker": {
            "name": "test_mypy_marker",
            "location": 160,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "Callable"
                ],
                "xdist_args": []
            }
        },
        "test_non_mypy_error": {
            "name": "test_non_mypy_error",
            "location": 180,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str"
                ],
                "xdist_args": []
            }
        },
        "test_mypy_stderr": {
            "name": "test_mypy_stderr",
            "location": 210,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str",
                    "int"
                ],
                "xdist_args": [
                    "Iterable[Iterable[Any]]",
                    "bool"
                ]
            }
        },
        "test_mypy_unmatched_stdout": {
            "name": "test_mypy_unmatched_stdout",
            "location": 229,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "bool",
                    "str"
                ],
                "xdist_args": [
                    "Iterable[Iterable[Any]]",
                    "bool"
                ]
            }
        },
        "test_api_mypy_argv": {
            "name": "test_api_mypy_argv",
            "location": 248,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str"
                ],
                "xdist_args": [
                    "Iterable[Iterable[Any]]",
                    "bool"
                ]
            }
        },
        "test_api_nodeid_name": {
            "name": "test_api_nodeid_name",
            "location": 261,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str"
                ],
                "xdist_args": [
                    "Iterable[Iterable[Any]]"
                ]
            }
        },
        "test_mypy_indirect": {
            "name": "test_mypy_indirect",
            "location": 292,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str"
                ],
                "xdist_args": [
                    "int",
                    "str",
                    "float",
                    "Tuple[int, int]"
                ],
                "module_name": [
                    "str",
                    "Mapping[str, Any]",
                    "List[str]"
                ]
            }
        },
        "test_api_error_formatter": {
            "name": "test_api_error_formatter",
            "location": 314,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [],
                "xdist_args": [
                    "Iterable[Iterable[Any]]"
                ]
            }
        },
        "test_setup_cfg": {
            "name": "test_setup_cfg",
            "location": 343,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [],
                "xdist_args": [
                    "Iterable[Iterable[Any]]",
                    "bool"
                ]
            }
        },
        "test_looponfail": {
            "name": "test_looponfail",
            "location": 364,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "str",
                    "bool",
                    "int"
                ],
                "module_name": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "test_mypy_item_collect": {
            "name": "test_mypy_item_collect",
            "location": 474,
            "return": [
                ""
            ],
            "arguments": {
                "testdir": [
                    "bool",
                    "Dict[str, Any]"
                ],
                "xdist_args": [
                    "Iterable[Iterable[Any]]"
                ]
            }
        },
        "test_looponfail._expect_session": {
            "name": "_expect_session",
            "location": 408,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_looponfail._expect_failure": {
            "name": "_expect_failure",
            "location": 411,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_looponfail._expect_waiting": {
            "name": "_expect_waiting",
            "location": 424,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_looponfail._fix": {
            "name": "_fix",
            "location": 428,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_looponfail._expect_changed": {
            "name": "_expect_changed",
            "location": 433,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_looponfail._expect_success": {
            "name": "_expect_success",
            "location": 436,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_looponfail._break": {
            "name": "_break",
            "location": 462,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
{
    "python-docker-master/app.py": {
        "hello": {
            "name": "hello",
            "location": 7,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "python-docker-master/create_requirements.py": {
        "make_candidate": {
            "name": "make_candidate",
            "location": 29,
            "return": [
                "Set[str]",
                "List[str]",
                "object",
                "str",
                "Set[int]",
                "list",
                "set"
            ],
            "arguments": {}
        },
        "make_packages": {
            "name": "make_packages",
            "location": 39,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "candidate": [
                    "str",
                    "int",
                    "List[str]"
                ],
                "freezed": [
                    "int"
                ]
            }
        },
        "set2sorted": {
            "name": "set2sorted",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "packages": [
                    "str",
                    "List[str]",
                    "AnyStr"
                ]
            }
        },
        "pkg2requirement": {
            "name": "pkg2requirement",
            "location": 82,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "pkg": [
                    "str",
                    "Tuple['cirq.Qid']"
                ]
            }
        },
        "make_freezed": {
            "name": "make_freezed",
            "location": 98,
            "return": [
                "set",
                "List[str]",
                "Set[str]",
                "str",
                "Dict[str, Set[str]]",
                "list"
            ],
            "arguments": {}
        },
        "exclude_incompatible": {
            "name": "exclude_incompatible",
            "location": 105,
            "return": [
                "str",
                "Optional[Union[str, Any]]",
                "Set[str]",
                "dict"
            ],
            "arguments": {
                "incompatibles": [
                    "int",
                    "Callable",
                    "str"
                ],
                "requirements": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "msg2incompatibles": {
            "name": "msg2incompatibles",
            "location": 122,
            "return": [
                "List[Dict]",
                "List[str]",
                "str",
                "List[int]",
                "List[List[Any]]"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "make_incompatibles": {
            "name": "make_incompatibles",
            "location": 131,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "python-docker-master/samples/chrome.py": {}
}
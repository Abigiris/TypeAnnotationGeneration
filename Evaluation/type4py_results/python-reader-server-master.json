{
    "python-reader-server-master/cli.py": {},
    "python-reader-server-master/reader_server/__init__.py": {},
    "python-reader-server-master/reader_server/backends/interface/db.py": {
        "AbstractDb.feeds": {
            "name": "feeds",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractDb.subscriptions": {
            "name": "subscriptions",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractDb.users": {
            "name": "users",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-reader-server-master/reader_server/backends/interface/feeds.py": {},
    "python-reader-server-master/reader_server/backends/interface/subscriptions.py": {},
    "python-reader-server-master/reader_server/backends/interface/users.py": {},
    "python-reader-server-master/reader_server/backends/interface/__init__.py": {
        "AbstractDb.feeds": {
            "name": "feeds",
            "location": 13,
            "return": [
                "AbstractFeeds"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractDb.subscriptions": {
            "name": "subscriptions",
            "location": 16,
            "return": [
                "AbstractSubscriptions"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractDb.users": {
            "name": "users",
            "location": 19,
            "return": [
                "AbstractUsers"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-reader-server-master/reader_server/backends/memory/connection.py": {
        "Connection.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-reader-server-master/reader_server/backends/memory/db.py": {
        "Db.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Db.feeds": {
            "name": "feeds",
            "location": 16,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Db.subscriptions": {
            "name": "subscriptions",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Db.users": {
            "name": "users",
            "location": 24,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-reader-server-master/reader_server/backends/memory/feeds.py": {
        "Feeds.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "int",
                    "bool",
                    "apistar.types.RouteConfig",
                    "float"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/backends/memory/subscriptions.py": {
        "Subscriptions.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "int",
                    "bool",
                    "apistar.types.RouteConfig",
                    "float"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/backends/memory/users.py": {
        "Users.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "int",
                    "bool",
                    "apistar.types.RouteConfig",
                    "float"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/backends/memory/__init__.py": {},
    "python-reader-server-master/reader_server/graphql/context.py": {},
    "python-reader-server-master/reader_server/graphql/feed.py": {
        "FeedType.resolve_id": {
            "name": "resolve_id",
            "location": 24,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "feed": [
                    "reader_server.types.Feed",
                    "reader_server.types.Subscription",
                    "Callable"
                ],
                "info": [
                    "tuple",
                    "graphql.ResolveInfo"
                ]
            }
        },
        "FeedType.resolve_url": {
            "name": "resolve_url",
            "location": 27,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "feed": [
                    "reader_server.types.Feed",
                    "str"
                ],
                "info": [
                    "Dict[str, Any]",
                    "tuple"
                ]
            }
        },
        "FeedType.resolve_title": {
            "name": "resolve_title",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "feed": [
                    "str",
                    "reader_server.types.Feed",
                    "server.types.RoundMetrics"
                ],
                "info": [
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/graphql/mutations.py": {},
    "python-reader-server-master/reader_server/graphql/query.py": {},
    "python-reader-server-master/reader_server/graphql/scalars.py": {
        "Email.serialize": {
            "name": "serialize",
            "location": 13,
            "return": [
                "str",
                "Iterable[str]",
                "Optional[str]",
                "bool",
                "list",
                "Optional[Union[Any, str]]"
            ],
            "arguments": {
                "email": [
                    "str",
                    "int",
                    "Iterable[str]"
                ]
            }
        },
        "Email.parse_literal": {
            "name": "parse_literal",
            "location": 17,
            "return": [
                "float",
                "Optional[str]",
                "Callable[..., None]",
                "type",
                "List[str]"
            ],
            "arguments": {
                "node": [
                    "str",
                    "dict",
                    "Dict[str, Optional[mypy.types.Type]]"
                ]
            }
        },
        "Email.parse_value": {
            "name": "parse_value",
            "location": 24,
            "return": [
                "int",
                "tuple",
                "List[int]",
                "float"
            ],
            "arguments": {
                "value": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/graphql/subscription.py": {
        "SubscriptionType.resolve_id": {
            "name": "resolve_id",
            "location": 28,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "subscription": [
                    "reader_server.types.Feed",
                    "reader_server.types.Subscription",
                    "Callable"
                ],
                "info": [
                    "tuple",
                    "graphql.ResolveInfo"
                ]
            }
        },
        "SubscriptionType.resolve_feed": {
            "name": "resolve_feed",
            "location": 31,
            "return": [
                "str",
                "OrderedDict",
                "bool",
                "Type"
            ],
            "arguments": {
                "subscription": [
                    "reader_server.types.Subscription",
                    "graphene.ResolveInfo",
                    "graphql.ResolveInfo"
                ],
                "info": [
                    "reader_server.types.Subscription",
                    "graphene.ResolveInfo",
                    "graphql.ResolveInfo"
                ]
            }
        },
        "SubscriptionType.resolve_user": {
            "name": "resolve_user",
            "location": 34,
            "return": [
                "str",
                "bool",
                "dict",
                "Optional[str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "subscription": [
                    "reader_server.types.Subscription",
                    "Dict[str, Any]"
                ],
                "info": [
                    "reader_server.types.Subscription",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/graphql/user.py": {
        "UserType.resolve_id": {
            "name": "resolve_id",
            "location": 24,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "user": [
                    "reader_server.types.User",
                    "str",
                    "Callable",
                    "bool"
                ],
                "info": [
                    "bool",
                    "Iterable[str]",
                    "List[str]",
                    "Optional[Dict[str, Any]]",
                    "arxiv.users.domain.User"
                ]
            }
        },
        "UserType.resolve_email": {
            "name": "resolve_email",
            "location": 27,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "user": [
                    "reader_server.types.User",
                    "User",
                    "bool",
                    "int",
                    "dict",
                    "server.models.User",
                    "lms.lmsdb.models.User"
                ],
                "info": [
                    "bool",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "python-reader-server-master/reader_server/graphql/__init__.py": {},
    "python-reader-server-master/reader_server/types/feed.py": {},
    "python-reader-server-master/reader_server/types/subscription.py": {},
    "python-reader-server-master/reader_server/types/user.py": {},
    "python-reader-server-master/reader_server/types/__init__.py": {},
    "python-reader-server-master/tests/test_schema.py": {
        "test_schema_loads": {
            "name": "test_schema_loads",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
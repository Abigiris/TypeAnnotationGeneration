{
    "recurring-tasks-master/scripts/element_tracking.py": {
        "ElementsCache.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cache_path": [
                    "pathlib.Path",
                    "str",
                    "mkdocs2.types.File"
                ]
            }
        },
        "ElementsCache.__enter__": {
            "name": "__enter__",
            "location": 35,
            "return": [
                "str",
                "Iterable[str]",
                "Dict[str, Any]",
                "dict",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementsCache.__exit__": {
            "name": "__exit__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[types.TracebackType]",
                    "Optional[Type[BaseException]]",
                    "str",
                    "types.TracebackType",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ],
                "exc_val": [
                    "Optional[types.TracebackType]",
                    "Optional[Type[BaseException]]",
                    "str",
                    "types.TracebackType",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ],
                "exc_tb": [
                    "Optional[types.TracebackType]",
                    "Optional[Type[BaseException]]",
                    "str",
                    "types.TracebackType",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ]
            }
        },
        "ElementsInProgress.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "known_elements": [
                    "str",
                    "List[str]",
                    "float",
                    "Dict[str, Any]",
                    "dict",
                    "set"
                ]
            }
        },
        "ElementsInProgress.get": {
            "name": "get",
            "location": 63,
            "return": [
                "Optional[str]",
                "Optional[Dict[str, Any]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "ElementsInProgress.process": {
            "name": "process",
            "location": 70,
            "return": [
                "typing.Iterator[typing.Callable[[builtins.int], None]]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Optional[str]",
                    "str",
                    "T"
                ]
            }
        },
        "ElementsInProgress.process.done": {
            "name": "done",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "dict",
                    "Optional[Union[str, Any]]"
                ]
            }
        }
    },
    "recurring-tasks-master/scripts/import.py": {
        "process": {
            "name": "process",
            "location": 34,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "element_name": [
                    "str",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "element": [
                    "str",
                    "bool",
                    "float"
                ],
                "backend": [
                    "bool",
                    "str",
                    "Optional[str]",
                    "List[Dict]"
                ],
                "year": [
                    "bool",
                    "str",
                    "Optional[str]",
                    "List[Dict]"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 120,
            "return": [
                "argparse.Namespace",
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "arguments": [
                    "argparse.Namespace",
                    "pathlib.Path",
                    "Union[pathlib.Path, str]",
                    "str",
                    "bool",
                    "Optional[str]",
                    "Optional[pathlib.Path]"
                ]
            }
        },
        "add._add": {
            "name": "_add",
            "location": 105,
            "return": [
                "str",
                "list"
            ],
            "arguments": {
                "element": [
                    "Dict[str, Any]",
                    "T",
                    "Type[object]",
                    "float"
                ]
            }
        }
    },
    "recurring-tasks-master/scripts/import_backends.py": {
        "trac_description_text": {
            "name": "trac_description_text",
            "location": 23,
            "return": [
                "str",
                "Exception",
                "Callable[..., T]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "ticket": [
                    "List[str]",
                    "Optional[Callable]",
                    "int"
                ],
                "backend": [
                    "int"
                ]
            }
        },
        "get_github_credential": {
            "name": "get_github_credential",
            "location": 112,
            "return": [
                "str",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {}
        },
        "FakeTracBackend.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeTracBackend.submit": {
            "name": "submit",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "Dict[str, Any]",
                    "bytearray"
                ]
            }
        },
        "FakeTracBackend.title": {
            "name": "title",
            "location": 58,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "ticket_number": [
                    "str",
                    "Dict[str, Any]",
                    "dict",
                    "int",
                    "Dict[str, Dict[str, str]]"
                ]
            }
        },
        "RealTracBackend.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "root": [
                    "Callable",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "RealTracBackend.submit": {
            "name": "submit",
            "location": 88,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "str"
                ]
            }
        },
        "RealTracBackend.title": {
            "name": "title",
            "location": 107,
            "return": [
                "str",
                "Optional[float]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "ticket_number": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "GitHubBackend.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_name": [
                    "str",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "GitHubBackend._section": {
            "name": "_section",
            "location": 181,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "heading": [
                    "str",
                    "int"
                ],
                "body": [
                    "str",
                    "int"
                ]
            }
        },
        "GitHubBackend._original_link": {
            "name": "_original_link",
            "location": 184,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "str",
                    "bool",
                    "type",
                    "Optional[int]",
                    "float"
                ]
            }
        },
        "GitHubBackend.description_text": {
            "name": "description_text",
            "location": 191,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "str",
                    "pathlib.Path",
                    "int"
                ]
            }
        },
        "GitHubBackend.get_or_create_milestone": {
            "name": "get_or_create_milestone",
            "location": 204,
            "return": [
                "List[str]",
                "int",
                "str",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "str",
                    "dict",
                    "Tuple[str, str]"
                ]
            }
        },
        "GitHubBackend.labels": {
            "name": "labels",
            "location": 213,
            "return": [
                "int",
                "str",
                "bool",
                "List[List[str]]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "str",
                    "dict",
                    "Union[str, bytes]"
                ]
            }
        },
        "GitHubBackend.submit": {
            "name": "submit",
            "location": 218,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "str",
                    "int"
                ]
            }
        },
        "GitHubBackend.title": {
            "name": "title",
            "location": 239,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "ticket_number": [
                    "str",
                    "Dict[str, Any]",
                    "dict",
                    "int",
                    "Dict[str, Dict[str, str]]"
                ]
            }
        },
        "Backend.submit": {
            "name": "submit",
            "location": 16,
            "return": [
                "builtins.int"
            ],
            "arguments": {
                "self": [],
                "ticket": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Backend.title": {
            "name": "title",
            "location": 19,
            "return": [
                "builtins.str"
            ],
            "arguments": {
                "self": [],
                "ticket_number": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "recurring-tasks-master/scripts/ticket_type.py": {},
    "recurring-tasks-master/scripts/validate-reachability.py": {
        "strip_dot_yaml": {
            "name": "strip_dot_yaml",
            "location": 14,
            "return": [
                "str",
                "Exception"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    }
}
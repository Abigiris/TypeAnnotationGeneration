{
    "reinforcement-learning-in-tic-tac-toe-game-master/game.py": {
        "Game.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "referee": []
            }
        },
        "Game.several_games": {
            "name": "several_games",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "games_number": [],
                "start_position": [],
                "first_player": [],
                "second_player": []
            }
        },
        "Game.one_game": {
            "name": "one_game",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "start_position": [],
                "first_player": [],
                "second_player": []
            }
        }
    },
    "reinforcement-learning-in-tic-tac-toe-game-master/project_config.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/referee.py": {
        "obj_without_elem_by_value": {
            "name": "obj_without_elem_by_value",
            "location": 14,
            "return": [],
            "arguments": {
                "obj": [],
                "elem_value": []
            }
        },
        "smart_permutations": {
            "name": "smart_permutations",
            "location": 20,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Referee.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Referee.all_possible_fields": {
            "name": "all_possible_fields",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Referee._get_random_free_cell_id_from_tuple": {
            "name": "_get_random_free_cell_id_from_tuple",
            "location": 55,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Referee.get_clear_field": {
            "name": "get_clear_field",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Referee.get_random_field": {
            "name": "get_random_field",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Referee.check_field": {
            "name": "check_field",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "last_step_row": [],
                "last_step_col": []
            }
        },
        "Referee.print_field": {
            "name": "print_field",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Referee._get_horizontal_line": {
            "name": "_get_horizontal_line",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "row": [],
                "col": []
            }
        },
        "Referee._get_vertical_line": {
            "name": "_get_vertical_line",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "row": [],
                "col": []
            }
        },
        "Referee._get_left_diagonal_line": {
            "name": "_get_left_diagonal_line",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "row": [],
                "col": []
            }
        },
        "Referee._get_right_diagonal_line": {
            "name": "_get_right_diagonal_line",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "row": [],
                "col": []
            }
        },
        "Referee._check_line": {
            "name": "_check_line",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Referee._is_field_full": {
            "name": "_is_field_full",
            "location": 141,
            "return": [],
            "arguments": {
                "field": []
            }
        },
        "Referee._check_field_without_last_step": {
            "name": "_check_field_without_last_step",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Referee._check_field_with_last_step": {
            "name": "_check_field_with_last_step",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "row": [],
                "col": []
            }
        },
        "Referee.horizontal_revert": {
            "name": "horizontal_revert",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Referee.vertical_revert": {
            "name": "vertical_revert",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        }
    },
    "reinforcement-learning-in-tic-tac-toe-game-master/configs/__init__.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/configs/player_configs/alice.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/configs/player_configs/bob.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/configs/player_configs/__init__.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/configs/referee_configs/config_3x3.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/configs/referee_configs/__init__.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/players/human_player.py": {
        "HumanPlayer.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "referee": [
                    "dict",
                    "str",
                    "bytes",
                    "Dict[str, Any]",
                    "list"
                ]
            }
        },
        "HumanPlayer.next_step": {
            "name": "next_step",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "Callable[[], None]"
                ]
            }
        },
        "HumanPlayer.game_train": {
            "name": "game_train",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player_result": [
                    "float",
                    "List[str]",
                    "bool",
                    "int",
                    "Iterable"
                ]
            }
        }
    },
    "reinforcement-learning-in-tic-tac-toe-game-master/players/reinforcement_learning_player.py": {
        "free_cells": {
            "name": "free_cells",
            "location": 13,
            "return": [],
            "arguments": {
                "field": []
            }
        },
        "ReinforcementLearningPlayer.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "referee": []
            }
        },
        "ReinforcementLearningPlayer.next_step": {
            "name": "next_step",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "ReinforcementLearningPlayer.game_train": {
            "name": "game_train",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "player_result": []
            }
        },
        "ReinforcementLearningPlayer._step_train": {
            "name": "_step_train",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "prev_field": [],
                "step": []
            }
        },
        "ReinforcementLearningPlayer.save_weight_db": {
            "name": "save_weight_db",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "reinforcement-learning-in-tic-tac-toe-game-master/players/__init__.py": {
        "PlayerAdapter.next_step": {
            "name": "next_step",
            "location": 12,
            "return": [
                "builtins.int"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "bool",
                    "str",
                    "Iterable[Tuple[str, Any]]",
                    "List[str]"
                ]
            }
        },
        "PlayerAdapter.game_train": {
            "name": "game_train",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player_result": [
                    "float",
                    "List[str]",
                    "bool",
                    "int",
                    "Iterable"
                ]
            }
        }
    },
    "reinforcement-learning-in-tic-tac-toe-game-master/scripts/welcome_script.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/scripts/__init__.py": {},
    "reinforcement-learning-in-tic-tac-toe-game-master/tests/test_field_adapter.py": {
        "test_all_possible_fields_method": {
            "name": "test_all_possible_fields_method",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "field_adapter_settings": [
                    "bool"
                ],
                "expected_possible_fields_n": [
                    "Callable",
                    "bool",
                    "Iterable[bytes]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "test_check_field_method": {
            "name": "test_check_field_method",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "field_adapter_settings": [
                    "bool",
                    "Union[str, int]",
                    "bytes",
                    "Set[str]",
                    "str"
                ],
                "field": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "expected_result": [
                    "str",
                    "dict",
                    "Optional[Dict[str, Any]]",
                    "Callable",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "reinforcement-learning-in-tic-tac-toe-game-master/tests/__init__.py": {}
}
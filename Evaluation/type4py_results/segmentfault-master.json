{
    "segmentfault-master/manage.py": {},
    "segmentfault-master/config/asgi.py": {},
    "segmentfault-master/config/celery_app.py": {},
    "segmentfault-master/config/routing.py": {},
    "segmentfault-master/config/urls.py": {
        "home_redirect": {
            "name": "home_redirect",
            "location": 11,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "RESPONSE_500": {
            "name": "RESPONSE_500",
            "location": 64,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "segmentfault-master/config/wsgi.py": {},
    "segmentfault-master/config/__init__.py": {},
    "segmentfault-master/config/settings/base.py": {},
    "segmentfault-master/config/settings/local.py": {},
    "segmentfault-master/config/settings/production.py": {},
    "segmentfault-master/config/settings/test.py": {},
    "segmentfault-master/config/settings/__init__.py": {},
    "segmentfault-master/docs/conf.py": {},
    "segmentfault-master/docs/__init__.py": {},
    "segmentfault-master/my_utils/CONSTANT.py": {},
    "segmentfault-master/my_utils/decorator.py": {
        "ajax_login_requird": {
            "name": "ajax_login_requird",
            "location": 9,
            "return": [
                "Dict[str, Any]",
                "str",
                "bool",
                "Optional[BaseException]"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "ajax_login_requird.new_func": {
            "name": "new_func",
            "location": 11,
            "return": [
                "bool",
                "int",
                "dict",
                "Mapping[str, str]"
            ],
            "arguments": {
                "request": [
                    "django.http.requesHttpRequest",
                    "Exception"
                ]
            }
        }
    },
    "segmentfault-master/my_utils/redis_connect.py": {
        "RedisConnect.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "RedisConnect.redis": {
            "name": "redis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/my_utils/send_mail.py": {
        "send_email": {
            "name": "send_email",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "segmentfault-master/my_utils/__init__.py": {},
    "segmentfault-master/segmentfault/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "settings": [
                    "Optional[str]",
                    "List[str]",
                    "str"
                ],
                "tmpdir": [
                    "Optional[str]",
                    "List[str]",
                    "str"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "str",
                "int"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "int",
                "List[Dict[str, Any]]",
                "bool",
                "list"
            ],
            "arguments": {}
        }
    },
    "segmentfault-master/segmentfault/__init__.py": {},
    "segmentfault-master/segmentfault/apps/__init__.py": {},
    "segmentfault-master/segmentfault/apps/article/admin.py": {},
    "segmentfault-master/segmentfault/apps/article/apps.py": {
        "ArticleConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/article/forms.py": {},
    "segmentfault-master/segmentfault/apps/article/models.py": {
        "ArticleQuerySet.get_published": {
            "name": "get_published",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleQuerySet.get_draft": {
            "name": "get_draft",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.__str__": {
            "name": "__str__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.get_makdown_html": {
            "name": "get_makdown_html",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.get_abspath": {
            "name": "get_abspath",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/article/tests.py": {},
    "segmentfault-master/segmentfault/apps/article/urls.py": {},
    "segmentfault-master/segmentfault/apps/article/views.py": {
        "comment_signal": {
            "name": "comment_signal",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "ArticleCreate.form_valid": {
            "name": "form_valid",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "ArticleCreate.post": {
            "name": "post",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ArticleCreate.get_success_url": {
            "name": "get_success_url",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleList.get_queryset": {
            "name": "get_queryset",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleList.get_context_data": {
            "name": "get_context_data",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleDetail.get_object": {
            "name": "get_object",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "ArticleDetail.get_context_data": {
            "name": "get_context_data",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleUpdate.get_success_url": {
            "name": "get_success_url",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleDrafts.get_queryset": {
            "name": "get_queryset",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/article/__init__.py": {},
    "segmentfault-master/segmentfault/apps/article/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/apps/article/migrations/0002_auto_20190703_1349.py": {},
    "segmentfault-master/segmentfault/apps/article/migrations/0003_remove_article_tags.py": {},
    "segmentfault-master/segmentfault/apps/article/migrations/0004_auto_20190730_2119.py": {},
    "segmentfault-master/segmentfault/apps/article/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/circle/admin.py": {},
    "segmentfault-master/segmentfault/apps/circle/apps.py": {},
    "segmentfault-master/segmentfault/apps/circle/models.py": {
        "CircleMessage.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessage.change_like": {
            "name": "change_like",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "CircleMessage.get_parent": {
            "name": "get_parent",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessage.get_like_num": {
            "name": "get_like_num",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessage.get_like_people": {
            "name": "get_like_people",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessage.get_comment_num": {
            "name": "get_comment_num",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessage.get_comment": {
            "name": "get_comment",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "CircleMessage.get_same_level_comment": {
            "name": "get_same_level_comment",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessage.reply_message": {
            "name": "reply_message",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "context": []
            }
        },
        "CircleMessage.save": {
            "name": "save",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/circle/tasks.py": {},
    "segmentfault-master/segmentfault/apps/circle/tests.py": {},
    "segmentfault-master/segmentfault/apps/circle/urls.py": {},
    "segmentfault-master/segmentfault/apps/circle/views.py": {
        "new_circle": {
            "name": "new_circle",
            "location": 34,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "change_like": {
            "name": "change_like",
            "location": 48,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "delete_circle": {
            "name": "delete_circle",
            "location": 65,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_reply": {
            "name": "get_reply",
            "location": 79,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "reply": {
            "name": "reply",
            "location": 101,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "test": {
            "name": "test",
            "location": 116,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "CircleList.get_queryset": {
            "name": "get_queryset",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleList.get_context_data": {
            "name": "get_context_data",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/circle/__init__.py": {},
    "segmentfault-master/segmentfault/apps/circle/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/apps/circle/migrations/0002_auto_20190625_1342.py": {},
    "segmentfault-master/segmentfault/apps/circle/migrations/0003_auto_20190628_1716.py": {},
    "segmentfault-master/segmentfault/apps/circle/migrations/0004_auto_20190706_1922.py": {},
    "segmentfault-master/segmentfault/apps/circle/migrations/0005_auto_20190730_2119.py": {},
    "segmentfault-master/segmentfault/apps/circle/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/circle/tests/test_model.py": {
        "TestCircleMessage.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCircleMessage.test__str__": {
            "name": "test__str__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/circle/tests/test_views.py": {
        "BaseUser.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/circle/tests/__init__.py": {},
    "segmentfault-master/segmentfault/apps/homepage/admin.py": {},
    "segmentfault-master/segmentfault/apps/homepage/apps.py": {},
    "segmentfault-master/segmentfault/apps/homepage/models.py": {},
    "segmentfault-master/segmentfault/apps/homepage/tests.py": {},
    "segmentfault-master/segmentfault/apps/homepage/views.py": {},
    "segmentfault-master/segmentfault/apps/homepage/__init__.py": {},
    "segmentfault-master/segmentfault/apps/homepage/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/msg/admin.py": {},
    "segmentfault-master/segmentfault/apps/msg/apps.py": {},
    "segmentfault-master/segmentfault/apps/msg/consumer.py": {},
    "segmentfault-master/segmentfault/apps/msg/models.py": {
        "MessageQuerySet.get_conversation": {
            "name": "get_conversation",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "recipient": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.read": {
            "name": "read",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/msg/tests.py": {},
    "segmentfault-master/segmentfault/apps/msg/urls.py": {},
    "segmentfault-master/segmentfault/apps/msg/views.py": {
        "create_data": {
            "name": "create_data",
            "location": 64,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "post_letter": {
            "name": "post_letter",
            "location": 72,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "MessageList.get_queryset": {
            "name": "get_queryset",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageList.get_context_data": {
            "name": "get_context_data",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageDetail.get_queryset": {
            "name": "get_queryset",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageDetail.get_context_data": {
            "name": "get_context_data",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/msg/__init__.py": {},
    "segmentfault-master/segmentfault/apps/msg/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/apps/msg/migrations/0002_auto_20190730_2119.py": {},
    "segmentfault-master/segmentfault/apps/msg/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/notice/admin.py": {},
    "segmentfault-master/segmentfault/apps/notice/apps.py": {},
    "segmentfault-master/segmentfault/apps/notice/consumer.py": {},
    "segmentfault-master/segmentfault/apps/notice/models.py": {
        "Notice.read": {
            "name": "read",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notice.read_all": {
            "name": "read_all",
            "location": 42,
            "return": [],
            "arguments": {
                "cls": [],
                "recipient": []
            }
        },
        "Notice.has_unread": {
            "name": "has_unread",
            "location": 47,
            "return": [],
            "arguments": {
                "cls": [],
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/notice/tests.py": {},
    "segmentfault-master/segmentfault/apps/notice/urls.py": {},
    "segmentfault-master/segmentfault/apps/notice/views.py": {
        "post_notice": {
            "name": "post_notice",
            "location": 35,
            "return": [],
            "arguments": {
                "sender": [],
                "recipient": [],
                "verb": [],
                "content_object": []
            }
        },
        "notice_light": {
            "name": "notice_light",
            "location": 64,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "mark_read": {
            "name": "mark_read",
            "location": 72,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "AllNoticeList.get_queryset": {
            "name": "get_queryset",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnReadNoticeList.get_queryset": {
            "name": "get_queryset",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/notice/__init__.py": {},
    "segmentfault-master/segmentfault/apps/notice/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/apps/notice/migrations/0002_auto_20190730_2119.py": {},
    "segmentfault-master/segmentfault/apps/notice/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/qa/admin.py": {},
    "segmentfault-master/segmentfault/apps/qa/apps.py": {},
    "segmentfault-master/segmentfault/apps/qa/forms.py": {},
    "segmentfault-master/segmentfault/apps/qa/models.py": {
        "Vote.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionQuerySet.get_hasaccept": {
            "name": "get_hasaccept",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionQuerySet.get_noneaccept": {
            "name": "get_noneaccept",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.__str__": {
            "name": "__str__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_markdown": {
            "name": "get_markdown",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_votes": {
            "name": "get_votes",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_answernum": {
            "name": "get_answernum",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_simplecontent": {
            "name": "get_simplecontent",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_users": {
            "name": "get_users",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_abspath": {
            "name": "get_abspath",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.__str__": {
            "name": "__str__",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_markdown": {
            "name": "get_markdown",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_upvote_users": {
            "name": "get_upvote_users",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_downvote_users": {
            "name": "get_downvote_users",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_votes": {
            "name": "get_votes",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/qa/tests.py": {},
    "segmentfault-master/segmentfault/apps/qa/urls.py": {},
    "segmentfault-master/segmentfault/apps/qa/views.py": {
        "votedquestion": {
            "name": "votedquestion",
            "location": 159,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "votedanswer": {
            "name": "votedanswer",
            "location": 183,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "acceptanswer": {
            "name": "acceptanswer",
            "location": 209,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "QuestionBaseView.get_context_data": {
            "name": "get_context_data",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewView.get_queryset": {
            "name": "get_queryset",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnAnswered.get_queryset": {
            "name": "get_queryset",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HotTest.get_queryset": {
            "name": "get_queryset",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionCreate.form_valid": {
            "name": "form_valid",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "QuestionCreate.get_success_url": {
            "name": "get_success_url",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionDetail.get_object": {
            "name": "get_object",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "QuestionDetail.get_context_data": {
            "name": "get_context_data",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnswerCreate.form_valid": {
            "name": "form_valid",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "AnswerCreate.get_success_url": {
            "name": "get_success_url",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AnswerCreate.get_context_data": {
            "name": "get_context_data",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/qa/__init__.py": {},
    "segmentfault-master/segmentfault/apps/qa/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/apps/qa/migrations/0002_question_visited_num.py": {},
    "segmentfault-master/segmentfault/apps/qa/migrations/0003_auto_20190719_1841.py": {},
    "segmentfault-master/segmentfault/apps/qa/migrations/0004_auto_20190730_2119.py": {},
    "segmentfault-master/segmentfault/apps/qa/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/search/apps.py": {},
    "segmentfault-master/segmentfault/apps/search/search_indexes.py": {
        "CircleMessageIndexes.get_model": {
            "name": "get_model",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CircleMessageIndexes.index_queryset": {
            "name": "index_queryset",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        },
        "ArticleIndexes.get_model": {
            "name": "get_model",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleIndexes.index_queryset": {
            "name": "index_queryset",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        },
        "QuestionIndexes.get_model": {
            "name": "get_model",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionIndexes.index_queryset": {
            "name": "index_queryset",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        },
        "UserIndexes.get_model": {
            "name": "get_model",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexes.index_queryset": {
            "name": "index_queryset",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "using": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 10,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 15,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict"
                ],
                "sociallogin": [
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/admin.py": {},
    "segmentfault-master/segmentfault/apps/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tasks.py": {
        "get_users_count": {
            "name": "get_users_count",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "periodic_notification": {
            "name": "periodic_notification",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "message_remind": {
            "name": "message_remind",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "segmentfault-master/segmentfault/apps/users/urls.py": {},
    "segmentfault-master/segmentfault/apps/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserList.get_context_data": {
            "name": "get_context_data",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/__init__.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0002_auto_20190621_1509.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0003_auto_20190621_1515.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0004_auto_20190621_1905.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0005_user_gain_votes.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0006_user_brithday.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0007_auto_20190730_2122.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/0008_user_has_unread_notice.py": {},
    "segmentfault-master/segmentfault/apps/users/migrations/__init__.py": {},
    "segmentfault-master/segmentfault/apps/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "bool",
                    "str",
                    "Callable[[Any], T]"
                ],
                "extracted": [
                    "int",
                    "bool",
                    "str",
                    "Callable[[Any], T]"
                ]
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tests/test_tasks.py": {
        "test_user_count": {
            "name": "test_user_count",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "settings": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tests/test_urls.py": {
        "TestUrl.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUrl.test_update_reverse": {
            "name": "test_update_reverse",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL",
                    "str"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL",
                    "str",
                    "int",
                    "bool"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        }
    },
    "segmentfault-master/segmentfault/apps/users/tests/__init__.py": {},
    "segmentfault-master/segmentfault/contrib/__init__.py": {},
    "segmentfault-master/segmentfault/contrib/sites/__init__.py": {},
    "segmentfault-master/segmentfault/contrib/sites/migrations/0001_initial.py": {},
    "segmentfault-master/segmentfault/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "segmentfault-master/segmentfault/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "segmentfault-master/segmentfault/contrib/sites/migrations/__init__.py": {}
}
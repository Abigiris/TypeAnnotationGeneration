{
    "shmenkins-master/lambda-py/builder/setup.py": {},
    "shmenkins-master/lambda-py/builder/src/main.py": {
        "handler": {
            "name": "handler",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "Callable",
                    "\"keras.models.Sequential\""
                ],
                "ignored": [
                    "str"
                ]
            }
        },
        "handle": {
            "name": "handle",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "bool",
                    "dict",
                    "logging.Logger"
                ]
            }
        },
        "put_project": {
            "name": "put_project",
            "location": 49,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict"
                ]
            }
        },
        "cb_start_build": {
            "name": "cb_start_build",
            "location": 65,
            "return": [
                "List[str]",
                "Dict[str, Any]",
                "Optional[int]",
                "logging.Logger",
                "str",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "project_name": [
                    "str"
                ]
            }
        },
        "is_resource_not_found_error": {
            "name": "is_resource_not_found_error",
            "location": 73,
            "return": [
                "Iterable['Notification']",
                "Type",
                "bool"
            ],
            "arguments": {
                "e": [
                    "int"
                ]
            }
        },
        "cb_create_project": {
            "name": "cb_create_project",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "project_name": [
                    "str",
                    "bool"
                ],
                "url": [
                    "str",
                    "bool"
                ]
            }
        },
        "cb_update_project": {
            "name": "cb_update_project",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "project_name": [
                    "str",
                    "Tuple[str, int]",
                    "Dict[str, Dict[str, Any]]"
                ],
                "url": [
                    "str",
                    "Tuple[str, int]",
                    "Dict[str, Dict[str, Any]]"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/builder/tests/test_handler.py": {
        "test_existing_project": {
            "name": "test_existing_project",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "cb": [],
                "topic": []
            }
        },
        "test_build_new_project": {
            "name": "test_build_new_project",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "cb": [
                    "dict",
                    "Dict[str, Any]"
                ],
                "topic": []
            }
        },
        "test_project_update_error": {
            "name": "test_project_update_error",
            "location": 90,
            "return": [
                ""
            ],
            "arguments": {
                "cb": [
                    "dict"
                ],
                "topic": []
            }
        },
        "test_project_creation_error": {
            "name": "test_project_creation_error",
            "location": 117,
            "return": [
                ""
            ],
            "arguments": {
                "cb": [],
                "topic": []
            }
        }
    },
    "shmenkins-master/lambda-py/builder/tests/__init__.py": {},
    "shmenkins-master/lambda-py/builder/tests-integration/test_handler.py": {
        "test_build": {
            "name": "test_build",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/scheduler/setup.py": {},
    "shmenkins-master/lambda-py/scheduler/src/main.py": {
        "handler": {
            "name": "handler",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "bool",
                    "dict",
                    "logging.Logger"
                ],
                "context": [
                    "str"
                ]
            }
        },
        "publish_event": {
            "name": "publish_event",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "message": [
                    "Dict[str, Any]",
                    "str",
                    "bool",
                    "float",
                    "int"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/scheduler/tests/test_scheduler.py": {
        "test_build_scheduled": {
            "name": "test_build_scheduled",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/shmenkins/setup.py": {},
    "shmenkins-master/lambda-py/shmenkins/src/shmenkins/aws.py": {
        "Topic.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "topic": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Topic.publish": {
            "name": "publish",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "dict",
                    "List[dict]",
                    "list"
                ]
            }
        },
        "Aws.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aws.get_account": {
            "name": "get_account",
            "location": 20,
            "return": [
                "str",
                "dict",
                "Exception",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Aws.get_topic": {
            "name": "get_topic",
            "location": 23,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "topic_name": [
                    "str",
                    "Iterator[bytes]",
                    "bool"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/shmenkins/src/shmenkins/logging.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 5,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/shmenkins/src/shmenkins/__init__.py": {},
    "shmenkins-master/lambda-py/shmenkins/tests/test_aws.py": {
        "test_dummy": {
            "name": "test_dummy",
            "location": 2,
            "return": [],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/shmenkins/tests/__init__.py": {},
    "shmenkins-master/lambda-py/sns_logger/setup.py": {},
    "shmenkins-master/lambda-py/sns_logger/src/main.py": {
        "handler": {
            "name": "handler",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "bool",
                    "dict",
                    "logging.Logger"
                ],
                "context": [
                    "str"
                ]
            }
        },
        "persist_item": {
            "name": "persist_item",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "item": [
                    "dict",
                    "int",
                    "str",
                    "T",
                    "list"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/sns_logger/tests/test_handler.py": {
        "create_event": {
            "name": "create_event",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "test_persist_called": {
            "name": "test_persist_called",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_message_persisted_in_dynamo": {
            "name": "test_message_persisted_in_dynamo",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/sns_logger/tests/__init__.py": {},
    "shmenkins-master/lambda-py/webhook-api/setup.py": {},
    "shmenkins-master/lambda-py/webhook-api/src/main.py": {
        "handler": {
            "name": "handler",
            "location": 13,
            "return": [
                "int",
                "bool",
                "dict"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "logging.Logger"
                ],
                "context": [
                    "str"
                ]
            }
        },
        "publish_event": {
            "name": "publish_event",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "obj": [
                    "List[dict]",
                    "int",
                    "str",
                    "bool",
                    "Callable"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/webhook-api/tests/test_handler.py": {
        "test_build_request_published": {
            "name": "test_build_request_published",
            "location": 234,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/webhook-api/tests/__init__.py": {},
    "shmenkins-master/lambda-py/webhook-api/zip/main.py": {
        "handler": {
            "name": "handler",
            "location": 13,
            "return": [
                "int",
                "bool",
                "dict"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "logging.Logger"
                ],
                "context": [
                    "str"
                ]
            }
        },
        "publish_event": {
            "name": "publish_event",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "obj": [
                    "List[dict]",
                    "int",
                    "str",
                    "bool",
                    "Callable"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/webhook-api/zip/shmenkins/aws.py": {
        "Topic.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "topic_name": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "Topic.publish": {
            "name": "publish",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "dict",
                    "List[dict]",
                    "list"
                ]
            }
        }
    },
    "shmenkins-master/lambda-py/webhook-api/zip/shmenkins/logging.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 5,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/lambda-py/webhook-api/zip/shmenkins/__init__.py": {},
    "shmenkins-master/test/shmenkins.py": {
        "get_published_events": {
            "name": "get_published_events",
            "location": 15,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "interaction_id": [
                    "str",
                    "int",
                    "bytes",
                    "Optional[int]"
                ]
            }
        },
        "get_sns_event": {
            "name": "get_sns_event",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        }
    },
    "shmenkins-master/test/test_builder.py": {
        "test_build_status_published": {
            "name": "test_build_status_published",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/test/test_scheduler.py": {
        "test_when_artifact_outdated_then_artifact_scheduled": {
            "name": "test_when_artifact_outdated_then_artifact_scheduled",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "shmenkins-master/test/test_webhook.py": {
        "test_when_push_notification_then_artifact_outdated_message_published": {
            "name": "test_when_push_notification_then_artifact_outdated_message_published",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
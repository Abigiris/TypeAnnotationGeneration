{
    "simple-ml-api-boilerplate-master/server.py": {
        "hello": {
            "name": "hello",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "req": [
                    "list",
                    "bool"
                ],
                "resp": [
                    "str",
                    "T",
                    "int"
                ]
            }
        }
    },
    "simple-ml-api-boilerplate-master/application/values.py": {},
    "simple-ml-api-boilerplate-master/predictions/task.py": {
        "score": {
            "name": "score",
            "location": 7,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "test_X": [
                    "List[List[float]]",
                    "bool",
                    "int"
                ]
            }
        },
        "predict": {
            "name": "predict",
            "location": 11,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "test_X": [
                    "List[List[float]]",
                    "bool",
                    "int"
                ]
            }
        },
        "predict_proba": {
            "name": "predict_proba",
            "location": 15,
            "return": [
                "int",
                "Optional[int]",
                "str",
                "List[int]",
                "Dict[str, int]"
            ],
            "arguments": {
                "test_X": [
                    "List[List[float]]",
                    "int",
                    "float",
                    "Optional[float]"
                ]
            }
        }
    },
    "simple-ml-api-boilerplate-master/predictions/__init__.py": {},
    "simple-ml-api-boilerplate-master/predictions/models/loader.py": {
        "load_model": {
            "name": "load_model",
            "location": 4,
            "return": [
                "bytes",
                "Dict[str, Any]",
                "dict",
                "Callable",
                "Union[str, bytes]"
            ],
            "arguments": {}
        }
    },
    "simple-ml-api-boilerplate-master/predictions/models/__init__.py": {},
    "simple-ml-api-boilerplate-master/preprocess/config.py": {},
    "simple-ml-api-boilerplate-master/preprocess/task.py": {},
    "simple-ml-api-boilerplate-master/preprocess/__init__.py": {},
    "simple-ml-api-boilerplate-master/trainer/config.py": {},
    "simple-ml-api-boilerplate-master/trainer/task.py": {
        "fit": {
            "name": "fit",
            "location": 11,
            "return": [
                "int",
                "bool",
                "Optional[str]",
                "Optional[Any]"
            ],
            "arguments": {}
        },
        "predict": {
            "name": "predict",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "clf": [
                    "List[List[float]]",
                    "int",
                    "float",
                    "Callable[..., bool]",
                    "bool",
                    "Optional[int]"
                ],
                "test_X": [
                    "List[List[float]]",
                    "int",
                    "float",
                    "Callable[..., bool]",
                    "bool",
                    "Optional[int]"
                ],
                "test_y": [
                    "List[List[float]]",
                    "bool",
                    "float",
                    "Union[Callable, str]",
                    "int"
                ]
            }
        },
        "evaluate": {
            "name": "evaluate",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "clf": [
                    "bool",
                    "Callable[..., Awaitable]"
                ],
                "test_y": [
                    "float",
                    "int",
                    "Optional[List[str]]",
                    "str",
                    "Optional[AbstractSet]",
                    "Optional[Dict[str, str]]"
                ],
                "predicted_y": [
                    "float",
                    "int",
                    "Optional[List[str]]",
                    "str",
                    "Optional[AbstractSet]",
                    "Optional[Dict[str, str]]"
                ]
            }
        }
    },
    "simple-ml-api-boilerplate-master/trainer/util.py": {},
    "simple-ml-api-boilerplate-master/trainer/__init__.py": {}
}
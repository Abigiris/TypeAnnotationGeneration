{
    "skyward_api-master/setup.py": {},
    "skyward_api-master/skyward_api/API.py": {
        "SkywardError.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "SessionError.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "SkywardAPI.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "str",
                    "int"
                ],
                "timeout": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "SkywardAPI.edit_srcs": {
            "name": "edit_srcs",
            "location": 55,
            "return": [
                "Iterable[str]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "page": [
                    "int"
                ]
            }
        },
        "SkywardAPI.timed_request": {
            "name": "timed_request",
            "location": 90,
            "return": [
                "dict",
                "Callable[[Any], bool]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ],
                "data": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ],
                "headers": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ],
                "method": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ],
                "params": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ]
            }
        },
        "SkywardAPI.login": {
            "name": "login",
            "location": 150,
            "return": [
                "str",
                "Optional[float]",
                "int",
                "List[Dict[str, Any]]",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "Optional[Dict[str, str]]",
                    "Optional[Union[Dict, str, int, bytes]]"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "SkywardAPI.setup": {
            "name": "setup",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "SkywardAPI.from_username_password": {
            "name": "from_username_password",
            "location": 211,
            "return": [
                "str",
                "bytes",
                "List[Dict[str, Any]]",
                "IO",
                "Dict[str, Any]",
                "bool"
            ],
            "arguments": {
                "username": [
                    "str",
                    "bytes",
                    "int"
                ],
                "password": [
                    "str",
                    "bytes",
                    "int"
                ],
                "service": [
                    "str",
                    "Optional[bytes]"
                ],
                "timeout": [
                    "str",
                    "Optional[bytes]"
                ]
            }
        },
        "SkywardAPI.from_session_data": {
            "name": "from_session_data",
            "location": 248,
            "return": [
                "Dict[int, Dict[str, Any]]",
                "dict",
                "Dict[str, Any]",
                "List[Dict]",
                "Mapping[str, Any]"
            ],
            "arguments": {
                "service": [
                    "str",
                    "bytes",
                    "Tuple[int, int]",
                    "List[str]"
                ],
                "sky_data": [
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "int"
                ],
                "timeout": [
                    "str",
                    "bool",
                    "int",
                    "List[str]",
                    "tuple"
                ]
            }
        },
        "SkywardAPI.get_session_params": {
            "name": "get_session_params",
            "location": 304,
            "return": [
                "str",
                "float",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardAPI.get_class_grades": {
            "name": "get_class_grades",
            "location": 330,
            "return": [
                "str",
                "type"
            ],
            "arguments": {
                "self": [],
                "sm_grade": [
                    "bool",
                    "str",
                    "int",
                    "Iterable[str]",
                    "Optional[bool]"
                ],
                "grid_count": [
                    "int",
                    "bool",
                    "str"
                ],
                "constant_options": [
                    "str",
                    "Optional[Dict[str, Any]]",
                    "bool",
                    "Dict[str, Any]"
                ],
                "url": [
                    "str",
                    "Optional[int]",
                    "Optional[List[str]]",
                    "list",
                    "dict"
                ],
                "sm_num": [
                    "str",
                    "int",
                    "bool",
                    "Union[str, int]",
                    "float",
                    "Tuple[int, int, int]"
                ]
            }
        },
        "SkywardAPI.get_semester_grades": {
            "name": "get_semester_grades",
            "location": 496,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "semester_num": [
                    "int",
                    "IO[bytes]",
                    "type",
                    "bool",
                    "str",
                    "List[str]"
                ],
                "page": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "SkywardAPI.get_grades": {
            "name": "get_grades",
            "location": 547,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardAPI.get_grades_text": {
            "name": "get_grades_text",
            "location": 580,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardAPI.get_grades_json": {
            "name": "get_grades_json",
            "location": 595,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardAPI.keep_alive": {
            "name": "keep_alive",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "skyward_api-master/skyward_api/assignment.py": {
        "Assignment.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Callable[[], int]"
                ],
                "num_points": [
                    "int",
                    "Optional[int]",
                    "datetime.datetime",
                    "float"
                ],
                "total_points": [
                    "bool",
                    "str"
                ],
                "letter_grade": [
                    "bool",
                    "str"
                ],
                "date": [
                    "str",
                    "Optional[str]",
                    "Optional[Union[str, Any]]"
                ]
            }
        },
        "Assignment.points_str": {
            "name": "points_str",
            "location": 24,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Assignment.__eq__": {
            "name": "__eq__",
            "location": 31,
            "return": [
                "Dict[str, Any]",
                "Mapping",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Assignment.__ne__": {
            "name": "__ne__",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "dict",
                    "AbstractSet[T]",
                    "AbstractSet[T_co]"
                ]
            }
        },
        "Assignment.__le__": {
            "name": "__le__",
            "location": 40,
            "return": [
                "datetime.datetime",
                "int",
                "Union[str, int]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "datetime.datetime",
                    "int",
                    "float",
                    "datetime"
                ]
            }
        },
        "Assignment.__lt__": {
            "name": "__lt__",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "SupportsInt",
                    "float"
                ]
            }
        },
        "Assignment.__ge__": {
            "name": "__ge__",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Assignment.__gt__": {
            "name": "__gt__",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "SupportsInt",
                    "float"
                ]
            }
        },
        "Assignment.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "skyward_api-master/skyward_api/helpers.py": {
        "parse_login_text": {
            "name": "parse_login_text",
            "location": 8,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "Callable",
                "OrderedDict"
            ],
            "arguments": {
                "base_url": [
                    "str"
                ],
                "text": [
                    "str"
                ]
            }
        }
    },
    "skyward_api-master/skyward_api/skyward_class.py": {
        "SkywardClass.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Union[str, List[str]]",
                    "Optional[str]",
                    "Dict[str, Any]"
                ],
                "grades": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "SkywardClass.add_grade": {
            "name": "add_grade",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "grade": [
                    "float",
                    "int"
                ]
            }
        },
        "SkywardClass.sort_grades_by_date": {
            "name": "sort_grades_by_date",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardClass.skyward_title": {
            "name": "skyward_title",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardClass.grades_to_text": {
            "name": "grades_to_text",
            "location": 78,
            "return": [
                "list",
                "List[str]",
                "List[Dict]",
                "List[int]",
                "str",
                "Set[Tuple[int, int, int]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardClass.__str__": {
            "name": "__str__",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkywardClass.__sub__": {
            "name": "__sub__",
            "location": 115,
            "return": [
                "str",
                "int",
                "Exception",
                "Tuple[str, str]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int",
                    "list"
                ]
            }
        },
        "SkywardClass.__add__": {
            "name": "__add__",
            "location": 152,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SkywardClass.__lt__": {
            "name": "__lt__",
            "location": 175,
            "return": [
                "bool",
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "SkywardClass.__gt__": {
            "name": "__gt__",
            "location": 180,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SkywardClass.__le__": {
            "name": "__le__",
            "location": 185,
            "return": [
                "bool",
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "List[str]",
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "SkywardClass.__ge__": {
            "name": "__ge__",
            "location": 188,
            "return": [
                "bool",
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "List[str]",
                    "float",
                    "str",
                    "int"
                ]
            }
        }
    },
    "skyward_api-master/skyward_api/__init__.py": {}
}
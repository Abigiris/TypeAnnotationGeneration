{
    "tailor-master/tailor/etl.py": {
        "run_etl": {
            "name": "run_etl",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "data_dir": [
                    "str"
                ],
                "parquet_dir": [
                    "str"
                ]
            }
        },
        "load_events": {
            "name": "load_events",
            "location": 50,
            "return": [
                "str",
                "bool",
                "float"
            ],
            "arguments": {
                "spark": [
                    "pyspark.sql.session.SparkSession",
                    "str",
                    "dict",
                    "List[str]"
                ],
                "data_dir": [
                    "str",
                    "int"
                ]
            }
        },
        "load_users": {
            "name": "load_users",
            "location": 73,
            "return": [
                "int",
                "str",
                "dict"
            ],
            "arguments": {
                "spark": [
                    "str",
                    "pyspark.sql.session.SparkSession",
                    "Optional[str]"
                ],
                "data_dir": [
                    "str",
                    "pyspark.sql.session.SparkSession",
                    "Optional[str]"
                ]
            }
        },
        "load_channels": {
            "name": "load_channels",
            "location": 80,
            "return": [
                "int",
                "dict",
                "str"
            ],
            "arguments": {
                "spark": [
                    "str",
                    "pyspark.sql.session.SparkSession",
                    "Optional[str]"
                ],
                "data_dir": [
                    "str",
                    "pyspark.sql.session.SparkSession",
                    "Optional[str]"
                ]
            }
        },
        "_rm_rf_dir": {
            "name": "_rm_rf_dir",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "_local_spark": {
            "name": "_local_spark",
            "location": 94,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "_channel_and_date_from_path": {
            "name": "_channel_and_date_from_path",
            "location": 100,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "int"
            ],
            "arguments": {
                "path": [
                    "str",
                    "Pattern[str]"
                ]
            }
        },
        "_single_json_file_to_df": {
            "name": "_single_json_file_to_df",
            "location": 106,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "spark": [
                    "pyspark.sql.session.SparkSession",
                    "Dict[str, Any]",
                    "str",
                    "dict"
                ],
                "json_path": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "_write_parquet": {
            "name": "_write_parquet",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "df": [
                    "str",
                    "edgar_code.types.PathLike",
                    "bytes"
                ],
                "path": [
                    "str"
                ]
            }
        }
    },
    "tailor-master/tailor/view_predictions.py": {
        "load_predictions": {
            "name": "load_predictions",
            "location": 14,
            "return": [
                "bool",
                "List[str]",
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "template_test": {
            "name": "template_test",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    }
}
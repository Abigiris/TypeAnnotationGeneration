{
    "textmetrics-master/setup.py": {},
    "textmetrics-master/textmetrics/common.py": {},
    "textmetrics-master/textmetrics/main.py": {
        "k": {
            "name": "k",
            "location": 39,
            "return": [
                "list",
                "Dict[str, Dict[str, int]]",
                "bool",
                "int"
            ],
            "arguments": {
                "c": [
                    "Callable",
                    "type",
                    "str"
                ],
                "keys": [
                    "str",
                    "int",
                    "dict",
                    "Sequence[str]",
                    "bool",
                    "Tuple[Sequence[Any], Sequence[str], Sequence[Any]]"
                ],
                "default": [
                    "str",
                    "int",
                    "dict",
                    "Sequence[str]",
                    "bool",
                    "Tuple[Sequence[Any], Sequence[str], Sequence[Any]]"
                ]
            }
        },
        "display_results": {
            "name": "display_results",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "candidates": [
                    "dict",
                    "\"ImageStack\"",
                    "int",
                    "Dict[str, Any]"
                ],
                "comparative": [
                    "bool",
                    "type",
                    "List[str]"
                ],
                "intrinsic": [
                    "bool",
                    "type",
                    "List[str]"
                ],
                "verbosity": [
                    "int",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "textmetrics-master/textmetrics/__init__.py": {},
    "textmetrics-master/textmetrics/bleu/bleu.py": {
        "extract_res": {
            "name": "extract_res",
            "location": 25,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "raw_output": [
                    "str",
                    "Callable[[List], List[str]]"
                ]
            }
        },
        "run_bleu": {
            "name": "run_bleu",
            "location": 63,
            "return": [
                "str",
                "bytes",
                "bool",
                "int",
                "type"
            ],
            "arguments": {
                "reference_fns": [
                    "List[str]",
                    "str",
                    "bool",
                    "Optional[Dict[str, str]]"
                ],
                "candidate_fn": [
                    "str",
                    "TextIO",
                    "BinaryIO",
                    "int",
                    "Callable"
                ],
                "script": [
                    "List[str]",
                    "str",
                    "bool",
                    "Optional[Dict[str, str]]"
                ]
            }
        },
        "bleu": {
            "name": "bleu",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "references": [
                    "str",
                    "bytes",
                    "dict"
                ],
                "candidates": [
                    "textmetrics.common.Candidates",
                    "List[str]"
                ]
            }
        }
    },
    "textmetrics-master/textmetrics/bleu/__init__.py": {},
    "textmetrics-master/textmetrics/custom/ngrams.py": {
        "line_ngrams": {
            "name": "line_ngrams",
            "location": 14,
            "return": [
                "int",
                "float",
                "set"
            ],
            "arguments": {
                "line": [
                    "str",
                    "float"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "get_ngram_stats": {
            "name": "get_ngram_stats",
            "location": 23,
            "return": [
                "str",
                "int",
                "List[str]"
            ],
            "arguments": {
                "txt": [
                    "int",
                    "bool",
                    "str"
                ],
                "n": [
                    "int",
                    "str",
                    "Dict[str, int]",
                    "list",
                    "float"
                ]
            }
        },
        "run_ngrams": {
            "name": "run_ngrams",
            "location": 64,
            "return": [
                "Awaitable",
                "str"
            ],
            "arguments": {
                "txt": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "ns": [
                    "int",
                    "list",
                    "bool"
                ]
            }
        },
        "ngrams": {
            "name": "ngrams",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "candidates": [
                    "int",
                    "str",
                    "Callable[[Any], None]",
                    "float",
                    "Union[int, List[int]]"
                ],
                "ns": [
                    "List[int]",
                    "int",
                    "str"
                ]
            }
        }
    },
    "textmetrics-master/textmetrics/custom/__init__.py": {},
    "textmetrics-master/textmetrics/meteor/meteor.py": {
        "run_meteor": {
            "name": "run_meteor",
            "location": 13,
            "return": [
                "str",
                "float",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "reference_fn": [
                    "str",
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ],
                "candidate_fn": [
                    "str",
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ],
                "jar_fn": [
                    "str",
                    "bool",
                    "List[str]",
                    "Optional[List[str]]"
                ]
            }
        },
        "meteor": {
            "name": "meteor",
            "location": 26,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "references": [
                    "dict",
                    "Dict[str, str]",
                    "List[Mapping]",
                    "Callable"
                ],
                "candidates": [
                    "textmetrics.common.Candidates",
                    "List[str]"
                ]
            }
        }
    },
    "textmetrics-master/textmetrics/meteor/__init__.py": {},
    "textmetrics-master/textmetrics/red/red.py": {
        "run_red": {
            "name": "run_red",
            "location": 17,
            "return": [
                "str",
                "int",
                "bool",
                "list"
            ],
            "arguments": {
                "reference_fn": [
                    "str"
                ],
                "candidate_fn": [
                    "str"
                ]
            }
        },
        "red": {
            "name": "red",
            "location": 40,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "references": [
                    "dict",
                    "Dict[str, str]",
                    "List[Mapping]",
                    "Callable"
                ],
                "candidates": [
                    "textmetrics.common.Candidates",
                    "List[str]"
                ]
            }
        }
    },
    "textmetrics-master/textmetrics/red/__init__.py": {},
    "textmetrics-master/textmetrics/test/test_ngrams.py": {
        "TestNgrams.test_uni": {
            "name": "test_uni",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNgrams.test_bi": {
            "name": "test_bi",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNgrams.test_tri": {
            "name": "test_tri",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNgrams.test_quad": {
            "name": "test_quad",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "textmetrics-master/textmetrics/test/__init__.py": {},
    "textmetrics-master/textmetrics/utility/clean.py": {
        "load": {
            "name": "load",
            "location": 10,
            "return": [
                "List[str]",
                "bool",
                "Iterable[str]"
            ],
            "arguments": {
                "f": [
                    "io.TextIOWrapper",
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 15,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "body": [
                    "str"
                ],
                "removal": [
                    "Set[str]",
                    "str",
                    "List[str]",
                    "int",
                    "list"
                ]
            }
        }
    },
    "textmetrics-master/textmetrics/utility/storage.py": {
        "save": {
            "name": "save",
            "location": 23,
            "return": [
                "Union[tuple, list]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "references": [
                    "Optional[textmetrics.common.References]",
                    "Optional[str]",
                    "Optional[dict]",
                    "str",
                    "Optional[gluonts.model.common.Tensor]"
                ],
                "candidates": [
                    "textmetrics.common.Candidates",
                    "List[str]"
                ]
            }
        },
        "cleanup": {
            "name": "cleanup",
            "location": 65,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "references": [
                    "Optional[textmetrics.common.References]",
                    "Optional[str]",
                    "Optional[AnyStr]",
                    "bool",
                    "Sequence[str]"
                ],
                "candidates": [
                    "textmetrics.common.Candidates",
                    "List[str]"
                ]
            }
        }
    },
    "textmetrics-master/textmetrics/utility/__init__.py": {}
}
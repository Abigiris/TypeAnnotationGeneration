{
    "tox-constraints-master/setup.py": {
        "read_requirements": {
            "name": "read_requirements",
            "location": 6,
            "return": [
                "List[str]",
                "str",
                "List[Dict]",
                "list",
                "Optional[List[str]]",
                "tuple",
                "List[int]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "read_install_requires": {
            "name": "read_install_requires",
            "location": 13,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "tox-constraints-master/bin/canaries.py": {
        "breed_one": {
            "name": "breed_one",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "src": [
                    "pathlib.Path",
                    "str",
                    "Union[str, pathlib.Path]"
                ],
                "version": [],
                "good": [],
                "color": [
                    "str"
                ]
            }
        },
        "breed_all": {
            "name": "breed_all",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {
                "src": [
                    "pathlib.Path",
                    "Union[pathlib.Path, str]"
                ]
            }
        }
    },
    "tox-constraints-master/sample_projects/coalmine/setup.py": {
        "_read_requirements": {
            "name": "_read_requirements",
            "location": 6,
            "return": [
                "List[str]",
                "str",
                "List[Dict]",
                "list",
                "Optional[List[str]]",
                "tuple",
                "List[int]"
            ],
            "arguments": {
                "prefix": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "postfix": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "tox-constraints-master/sample_projects/simple/setup.py": {},
    "tox-constraints-master/sample_projects/simple/src/my_package/__init__.py": {},
    "tox-constraints-master/sample_projects/simple/tests/test_my_package.py": {
        "test_my_package_is_available": {
            "name": "test_my_package_is_available",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_virtualenv_seeded_correct_version": {
            "name": "test_virtualenv_seeded_correct_version",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "dist": [
                    "str",
                    "pathlib.Path"
                ]
            }
        }
    },
    "tox-constraints-master/src/tox_constraints/hooks.py": {
        "_header": {
            "name": "_header",
            "location": 26,
            "return": [
                "str",
                "Iterator[bytes]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "_parse_requirements": {
            "name": "_parse_requirements",
            "location": 89,
            "return": [
                "typing.Iterator[pkg_resources.Requirement]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "_expands_requirements": {
            "name": "_expands_requirements",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "tool_config": [
                    "dict"
                ],
                "envconfig": [
                    "Optional[Dict[str, Any]]",
                    "Dict[str, Any]",
                    "dict",
                    "str"
                ]
            }
        },
        "_find_upwards": {
            "name": "_find_upwards",
            "location": 128,
            "return": [
                "int",
                "set",
                "str"
            ],
            "arguments": {
                "start": [
                    "int",
                    "Optional[int]"
                ],
                "filename": [
                    "str",
                    "int"
                ]
            }
        },
        "_patch_envconfigs": {
            "name": "_patch_envconfigs",
            "location": 137,
            "return": [
                ""
            ],
            "arguments": {
                "tool_config": [
                    "dict",
                    "str"
                ],
                "config": [
                    "dict",
                    "str"
                ]
            }
        },
        "_save_if_different": {
            "name": "_save_if_different",
            "location": 149,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "pathlib.Path",
                    "Union[pathlib.Path, str]",
                    "path.Path",
                    "Union[str, pathlib.Path]"
                ],
                "new_content": [
                    "str",
                    "pathlib.Path",
                    "Optional[str]"
                ]
            }
        },
        "_export_deps": {
            "name": "_export_deps",
            "location": 165,
            "return": [
                ""
            ],
            "arguments": {
                "envconfigs": [
                    "Mapping[str, Any]",
                    "dict",
                    "str",
                    "Dict[str, bool]",
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "Dict[str, int]"
                ],
                "path": [
                    "str",
                    "norfs.fs.base.Path"
                ]
            }
        },
        "tox_addoption": {
            "name": "tox_addoption",
            "location": 186,
            "return": [
                ""
            ],
            "arguments": {
                "parser": [
                    "str"
                ]
            }
        },
        "tox_configure": {
            "name": "tox_configure",
            "location": 198,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "config": [
                    "dict",
                    "Dict[str, Any]",
                    "MutableMapping[str, Any]"
                ]
            }
        },
        "_raise_on_legacy": {
            "name": "_raise_on_legacy",
            "location": 215,
            "return": [
                ""
            ],
            "arguments": {
                "deps": [
                    "str",
                    "bool",
                    "bytes",
                    "os.PathLike",
                    "pathlib.Path"
                ]
            }
        },
        "_reqs_from_setenv": {
            "name": "_reqs_from_setenv",
            "location": 223,
            "return": [
                "str",
                "Iterable[Mapping[str, Any]]",
                "Optional[bool]",
                "Iterator[Any]"
            ],
            "arguments": {
                "setenv": [
                    "int",
                    "str",
                    "float",
                    "Optional[str]"
                ]
            }
        },
        "_exact_version": {
            "name": "_exact_version",
            "location": 238,
            "return": [
                "str"
            ],
            "arguments": {
                "req": [
                    "str",
                    "pathlib.Path",
                    "bytes",
                    "Union[int, str]"
                ]
            }
        },
        "_augmented_virtualenv_args": {
            "name": "_augmented_virtualenv_args",
            "location": 245,
            "return": [
                ""
            ],
            "arguments": {
                "args": [],
                "envconfig": [
                    "str"
                ]
            }
        },
        "tox_testenv_create": {
            "name": "tox_testenv_create",
            "location": 262,
            "return": [
                "Sequence[Callable]",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "venv": [
                    "Sequence[str]"
                ],
                "action": [
                    "str",
                    "List[str]",
                    "Optional[bool]",
                    "Dict[str, Any]"
                ]
            }
        },
        "Config.read": {
            "name": "read",
            "location": 48,
            "return": [
                "bool",
                "str",
                "Optional[str]"
            ],
            "arguments": {}
        }
    },
    "tox-constraints-master/src/tox_constraints/__init__.py": {},
    "tox-constraints-master/tests/test_sample_projects.py": {
        "test_does_not_break": {
            "name": "test_does_not_break",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "project_name": [
                    "str",
                    "IO[bytes]"
                ],
                "tmpdir": [
                    "str"
                ]
            }
        }
    }
}
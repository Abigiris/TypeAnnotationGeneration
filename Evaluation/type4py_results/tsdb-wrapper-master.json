{
    "tsdb-wrapper-master/setup.py": {},
    "tsdb-wrapper-master/tests/test_factory.py": {
        "test_factory": {
            "name": "test_factory",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_factory_value_error": {
            "name": "test_factory_value_error",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "tsdb-wrapper-master/tests/test_influx.py": {
        "scope_function": {
            "name": "scope_function",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_schema": {
            "name": "test_get_schema",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_tags": {
            "name": "test_get_tags",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_value_keys": {
            "name": "test_get_value_keys",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_query": {
            "name": "test_query",
            "location": 223,
            "return": [
                ""
            ],
            "arguments": {
                "query": [
                    "str"
                ],
                "expected": [
                    "Mapping[str, Any]",
                    "str",
                    "dict"
                ]
            }
        },
        "test_special_character_query": {
            "name": "test_special_character_query",
            "location": 281,
            "return": [
                ""
            ],
            "arguments": {
                "query": [
                    "str",
                    "Optional[str]"
                ],
                "expected": [
                    "float",
                    "str",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "scope_function.get_points": {
            "name": "get_points",
            "location": 13,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "fname": [
                    "str",
                    "Callable",
                    "Optional[str]"
                ]
            }
        }
    },
    "tsdb-wrapper-master/tests/__init__.py": {},
    "tsdb-wrapper-master/tsdb_wrapper/base.py": {
        "TimeseriesDatabaseConfig.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "database_type": [],
                "host": [],
                "port": [],
                "username": [],
                "password": [],
                "database": []
            }
        },
        "TimeseriesDatabaseConfig.build_masked_str": {
            "name": "build_masked_str",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDatabaseConfig.build_raw_str": {
            "name": "build_raw_str",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDatabaseConfig.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDataSchema.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDataSchema.categories": {
            "name": "categories",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDataSchema.__getitem__": {
            "name": "__getitem__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        },
        "TimeseriesDataSchema.__setitem__": {
            "name": "__setitem__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "tags": []
            }
        },
        "TimeseriesDataSchema.__contains__": {
            "name": "__contains__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        },
        "TimeseriesDataSchema.to_dict": {
            "name": "to_dict",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDatabase.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "username": [],
                "password": [],
                "database": []
            }
        },
        "TimeseriesDatabase.query": {
            "name": "query",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "tags": [],
                "begin_timestamp": [],
                "end_timestamp": [],
                "selects": []
            }
        },
        "TimeseriesDatabase.raw_query": {
            "name": "raw_query",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "TimeseriesDatabase.schema": {
            "name": "schema",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDatabase.get_categories": {
            "name": "get_categories",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeseriesDatabase.get_value_columns_of_category": {
            "name": "get_value_columns_of_category",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        }
    },
    "tsdb-wrapper-master/tsdb_wrapper/_meta.py": {},
    "tsdb-wrapper-master/tsdb_wrapper/__init__.py": {
        "timeseries_database_factory": {
            "name": "timeseries_database_factory",
            "location": 7,
            "return": [
                "Optional[int]",
                "Optional[bool]",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "config": [
                    "dict"
                ]
            }
        }
    },
    "tsdb-wrapper-master/tsdb_wrapper/impl/influx.py": {
        "InfluxDB.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "username": [],
                "password": [],
                "database": []
            }
        },
        "InfluxDB.schema": {
            "name": "schema",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxDB.query": {
            "name": "query",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "tags": [],
                "begin_timestamp": [],
                "end_timestamp": [],
                "selects": []
            }
        },
        "InfluxDB.raw_query": {
            "name": "raw_query",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "InfluxDB.get_categories": {
            "name": "get_categories",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InfluxDB.get_tag_keys_of_category": {
            "name": "get_tag_keys_of_category",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        },
        "InfluxDB.get_tag_values_by_key_of_category": {
            "name": "get_tag_values_by_key_of_category",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "key": []
            }
        },
        "InfluxDB.get_value_columns_of_category": {
            "name": "get_value_columns_of_category",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        },
        "InfluxDB.__convert_to_influx_timequery": {
            "name": "__convert_to_influx_timequery",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "InfluxDB._quote": {
            "name": "_quote",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "val": [],
                "quote_char": []
            }
        },
        "InfluxDB.__repr__": {
            "name": "__repr__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tsdb-wrapper-master/tsdb_wrapper/impl/__init__.py": {}
}
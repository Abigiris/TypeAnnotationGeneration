{
    "twitter-to-slack-message-master/handlers/twitter_to_slack_message.py": {
        "_format_slack_media_attachment": {
            "name": "_format_slack_media_attachment",
            "location": 19,
            "return": [
                "float",
                "bool",
                "Tuple[int, int]"
            ],
            "arguments": {
                "media": [
                    "Dict[str, Any]",
                    "str",
                    "Callable"
                ]
            }
        },
        "_format_slack_message_from_tweet": {
            "name": "_format_slack_message_from_tweet",
            "location": 30,
            "return": [
                "str",
                "int",
                "deque"
            ],
            "arguments": {
                "tweet": [
                    "Dict[str, Any]",
                    "Sequence[int]"
                ]
            }
        },
        "_get_fallback_text": {
            "name": "_get_fallback_text",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "tweet": [
                    "str"
                ]
            }
        },
        "_get_tweet_time": {
            "name": "_get_tweet_time",
            "location": 83,
            "return": [
                "Optional[bool]",
                "Optional[float]",
                "float",
                "str",
                "int",
                "bool",
                "Union[int, Tuple[int, ...]]"
            ],
            "arguments": {
                "tweet": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "_get_tweet_author_url": {
            "name": "_get_tweet_author_url",
            "location": 90,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "screen_name": [
                    "str"
                ],
                "base": [
                    "str"
                ]
            }
        },
        "_get_tweet_url": {
            "name": "_get_tweet_url",
            "location": 95,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "tweet": [
                    "str"
                ],
                "base": [
                    "str",
                    "dict",
                    "int",
                    "bytes"
                ]
            }
        },
        "_get_tweet_author_info": {
            "name": "_get_tweet_author_info",
            "location": 102,
            "return": [
                "str",
                "dict",
                "int"
            ],
            "arguments": {
                "tweet": [
                    "dict",
                    "int"
                ]
            }
        },
        "_publish_sns_message": {
            "name": "_publish_sns_message",
            "location": 111,
            "return": [
                "List[str]",
                "bool",
                "List[Mapping[str, Any]]",
                "Tuple[type]",
                "str"
            ],
            "arguments": {
                "sns_topic_arn": [
                    "str",
                    "int"
                ],
                "message": [
                    "dict",
                    "Dict[str, str]",
                    "Union[int, float]",
                    "Optional[logging.Logger]"
                ]
            }
        },
        "handler": {
            "name": "handler",
            "location": 122,
            "return": [
                "bool",
                "str",
                "dict"
            ],
            "arguments": {
                "event": [
                    "list",
                    "Dict[str, Any]",
                    "int",
                    "Callable",
                    "Optional[int]",
                    "str"
                ],
                "context": [
                    "str"
                ]
            }
        }
    }
}
{
    "watch-master/setup.py": {},
    "watch-master/src/tlwatch/auction_backend.py": {
        "get_latest_block_number": {
            "name": "get_latest_block_number",
            "location": 16,
            "return": [
                "str",
                "Iterable[int]"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "watch_auction_backend": {
            "name": "watch_auction_backend",
            "location": 27,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "base_url": [
                    "str"
                ]
            }
        },
        "auction_backend": {
            "name": "auction_backend",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "List[str]"
                ],
                "riemann_port": [
                    "str",
                    "List[str]"
                ],
                "base_url": [
                    "str",
                    "int",
                    "Callable",
                    "logging.Logger"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/cli.py": {
        "report_version": {
            "name": "report_version",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "handle_signal": {
            "name": "handle_signal",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "signum": [
                    "list",
                    "str",
                    "bytes",
                    "int"
                ],
                "frame": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "ctx": [],
                "version": [
                    "bool",
                    "Union[click.core.Option, click.core.Parameter]",
                    "click.core.Context",
                    "list"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/etherscan.py": {
        "eth_blockNumber": {
            "name": "eth_blockNumber",
            "location": 20,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "chain": [
                    "str"
                ]
            }
        },
        "watch_etherscan": {
            "name": "watch_etherscan",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "chain": [
                    "str",
                    "Type",
                    "Dict[str, str]"
                ]
            }
        },
        "etherscan": {
            "name": "etherscan",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "bytes"
                ],
                "riemann_port": [
                    "str",
                    "bytes"
                ],
                "chain": [
                    "str",
                    "bool",
                    "List[str]"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/jsonrpc.py": {
        "json_rpc_call": {
            "name": "json_rpc_call",
            "location": 14,
            "return": [
                "bool",
                "int",
                "sqlalchemy.util.KeyedTuple"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict",
                    "Dict[str, Any]",
                    "Optional[Dict]"
                ],
                "method": [
                    "str",
                    "bytes",
                    "List[str]"
                ],
                "params": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "get_blockNumber": {
            "name": "get_blockNumber",
            "location": 25,
            "return": [
                "str",
                "Optional[int]",
                "Optional[str]",
                "Dict[str, Any]",
                "Callable"
            ],
            "arguments": {
                "url": [
                    "str",
                    "float",
                    "bool",
                    "List[str]"
                ]
            }
        },
        "get_peerCount": {
            "name": "get_peerCount",
            "location": 30,
            "return": [
                "bytes",
                "dict",
                "bool"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "Callable",
                    "float"
                ]
            }
        },
        "get_syncing": {
            "name": "get_syncing",
            "location": 35,
            "return": [
                "int",
                "List[str]",
                "Dict[str, str]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "Callable",
                    "float"
                ]
            }
        },
        "watch_jsonrpc": {
            "name": "watch_jsonrpc",
            "location": 40,
            "return": [
                "bytes",
                "List[str]",
                "str",
                "bool"
            ],
            "arguments": {
                "url": [
                    "T"
                ],
                "event_host": [
                    "dict",
                    "MutableMapping[str, Any]"
                ]
            }
        },
        "jsonrpc": {
            "name": "jsonrpc",
            "location": 102,
            "return": [
                ""
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "bool"
                ],
                "riemann_port": [
                    "str",
                    "bool"
                ],
                "url": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ],
                "event_host_dwim": [
                    "bool",
                    "str",
                    "dict"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/psql.py": {
        "connect": {
            "name": "connect",
            "location": 13,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dsn": [
                    "str",
                    "bytearray"
                ]
            }
        },
        "build_event_from_row": {
            "name": "build_event_from_row",
            "location": 17,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "row": [
                    "str",
                    "allennlp.common.util.JsonDict"
                ]
            }
        },
        "watch_psql": {
            "name": "watch_psql",
            "location": 27,
            "return": [
                "int",
                "Dict[str, Any]",
                "List[str]"
            ],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        },
        "psql": {
            "name": "psql",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "bytes"
                ],
                "riemann_port": [
                    "str",
                    "bytes"
                ],
                "sqlquery": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/relay.py": {
        "watch_relay": {
            "name": "watch_relay",
            "location": 12,
            "return": [
                "str",
                "bytearray"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "relay": {
            "name": "relay",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "riemann_host": [
                    "str"
                ],
                "riemann_port": [
                    "str"
                ],
                "url": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/util.py": {
        "get_version": {
            "name": "get_version",
            "location": 9,
            "return": [
                "str",
                "Optional[List[str]]",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {}
        },
        "decode_hex_encoded_number": {
            "name": "decode_hex_encoded_number",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "watch_report_loop": {
            "name": "watch_report_loop",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "get_riemann_client": [
                    "int",
                    "str"
                ],
                "watch": [
                    "bool",
                    "str",
                    "int",
                    "Optional[Callable[[], bool]]",
                    "list"
                ],
                "sleep_time": [
                    "bool",
                    "str",
                    "int",
                    "Optional[Callable[[], bool]]",
                    "list"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/website.py": {
        "get_url_source_as_text": {
            "name": "get_url_source_as_text",
            "location": 21,
            "return": [
                "str",
                "Optional[str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict"
                ]
            }
        },
        "calculate_website_source_hash": {
            "name": "calculate_website_source_hash",
            "location": 28,
            "return": [
                "str",
                "Callable",
                "Dict[str, str]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "watch_website": {
            "name": "watch_website",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "original_hash": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict]",
                    "Dict[str, Any]",
                    "int"
                ]
            }
        },
        "get_website_hash": {
            "name": "get_website_hash",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "website": {
            "name": "website",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "Optional[str]"
                ],
                "riemann_port": [
                    "str",
                    "Optional[str]"
                ],
                "url": [
                    "str",
                    "int",
                    "bool",
                    "List[int]",
                    "Optional[logging.Logger]"
                ],
                "original_hash": [
                    "str",
                    "int",
                    "bool",
                    "List[int]",
                    "Optional[logging.Logger]"
                ]
            }
        },
        "calculate_website_source_hash.add_source": {
            "name": "add_source",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {
                "src": [
                    "str",
                    "list"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/__init__.py": {}
}
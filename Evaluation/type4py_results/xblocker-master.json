{
    "xblocker-master/manage.py": {},
    "xblocker-master/setup.py": {},
    "xblocker-master/xblocker/urls.py": {},
    "xblocker-master/xblocker/wsgi.py": {},
    "xblocker-master/xblocker/__init__.py": {},
    "xblocker-master/xblocker/apps/__init__.py": {},
    "xblocker-master/xblocker/apps/api/urls.py": {},
    "xblocker-master/xblocker/apps/api/__init__.py": {},
    "xblocker-master/xblocker/apps/api/v1/blocks.py": {
        "get_blockstore_kvs": {
            "name": "get_blockstore_kvs",
            "location": 16,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "get_user_state_kvs": {
            "name": "get_user_state_kvs",
            "location": 30,
            "return": [
                "Dict[str, Any]",
                "dict",
                "tuple"
            ],
            "arguments": {}
        },
        "get_readonly_runtime_system": {
            "name": "get_readonly_runtime_system",
            "location": 43,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "bundle_block": {
            "name": "bundle_block",
            "location": 60,
            "return": [
                "str",
                "Optional[str]",
                "Dict[str, Any]",
                "bytes"
            ],
            "arguments": {
                "request": [
                    "int",
                    "str"
                ],
                "usage_key_str": [
                    "str",
                    "Optional[Callable]",
                    "Dict[str, Any]",
                    "Mapping[str, str]",
                    "apistar.http.Body",
                    "bytes"
                ],
                "view_name": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "xblocker-master/xblocker/apps/api/v1/bundles.py": {
        "bundle_blocks": {
            "name": "bundle_blocks",
            "location": 14,
            "return": [
                "Optional[Exception]",
                "int",
                "bool"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "str",
                    "http.MITMRequest",
                    "int"
                ],
                "bundle_uuid": [
                    "django.http.HttpRequest",
                    "lunch_buddies.lib.service_contexServiceContext"
                ]
            }
        }
    },
    "xblocker-master/xblocker/apps/api/v1/resources.py": {
        "xblock_resource": {
            "name": "xblock_resource",
            "location": 15,
            "return": [
                "str",
                "Dict[str, Any]",
                "Optional[Dict]",
                "dict",
                "Optional[str]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "block_type": [
                    "str"
                ],
                "path": [
                    "str",
                    "tartare.core.models.PlatformOptions",
                    "List[str]",
                    "core.models.User"
                ]
            }
        }
    },
    "xblocker-master/xblocker/apps/api/v1/urls.py": {},
    "xblocker-master/xblocker/apps/api/v1/__init__.py": {},
    "xblocker-master/xblocker/lib/xblock_utils.py": {
        "xblock_local_resource_url": {
            "name": "xblock_local_resource_url",
            "location": 6,
            "return": [
                "Iterable[str]",
                "str",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "block": [
                    "bytes",
                    "Type",
                    "dict"
                ],
                "uri": [
                    "bytes",
                    "Type",
                    "dict"
                ]
            }
        },
        "xblock_resource_pkg": {
            "name": "xblock_resource_pkg",
            "location": 23,
            "return": [
                "str",
                "type",
                "Optional[Dict[str, str]]",
                "dict",
                "bool"
            ],
            "arguments": {
                "block": [
                    "str"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/blockstore_api/bundles.py": {
        "api_url": {
            "name": "api_url",
            "location": 14,
            "return": [
                "bytes",
                "Callable",
                "bool",
                "List[int]"
            ],
            "arguments": {}
        },
        "get_bundle": {
            "name": "get_bundle",
            "location": 20,
            "return": [
                "Optional[str]",
                "bool",
                "Optional[int]",
                "Optional[bool]",
                "str"
            ],
            "arguments": {
                "bundle_uuid": [
                    "dict",
                    "str"
                ]
            }
        },
        "get_bundle_files": {
            "name": "get_bundle_files",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "bundle_uuid": [
                    "str",
                    "Dict[str, str]",
                    "Union[bool, str]",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "get_bundle_file_metadata": {
            "name": "get_bundle_file_metadata",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "bundle_uuid": [
                    "str",
                    "Optional[MutableMapping[Any, Any]]",
                    "dict"
                ],
                "path": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_bundle_file_data": {
            "name": "get_bundle_file_data",
            "location": 66,
            "return": [
                "str",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "bundle_uuid": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/blockstore_api/olx.py": {
        "_cache_bundle_olx": {
            "name": "_cache_bundle_olx",
            "location": 21,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "bundle_uuid": [
                    "str"
                ]
            }
        },
        "which_olx_file_contains": {
            "name": "which_olx_file_contains",
            "location": 59,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "definition_key": [
                    "str",
                    "int"
                ]
            }
        },
        "list_olx_definitions": {
            "name": "list_olx_definitions",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "bundle_uuid": [
                    "bool",
                    "Optional[int]",
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/blockstore_api/__init__.py": {},
    "xblocker-master/xblocker/lib/xblock_keys/bundle_def.py": {
        "BundleDefinitionLocator.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "bundle_uuid": [
                    "Optional[str]",
                    "str",
                    "Optional[Set[int]]",
                    "Sequence[str]",
                    "bool"
                ],
                "block_type": [
                    "str"
                ],
                "definition_id": [
                    "str",
                    "Optional[List[\"custom_index\"]]",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "BundleDefinitionLocator._to_string": {
            "name": "_to_string",
            "location": 40,
            "return": [
                "Type",
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BundleDefinitionLocator._from_string": {
            "name": "_from_string",
            "location": 51,
            "return": [
                "str",
                "list"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict",
                    "Optional[Tuple]"
                ],
                "serialized": [
                    "str"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_keys/learning_context_key.py": {
        "LearningContextKey.make_usage_key": {
            "name": "make_usage_key",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "definition_key": [
                    "str",
                    "bool",
                    "int",
                    "dict",
                    "MutableSet[str]"
                ],
                "usage_id": [
                    "str",
                    "bool",
                    "int",
                    "dict",
                    "MutableSet[str]"
                ]
            }
        },
        "GlobalContextLocator._to_string": {
            "name": "_to_string",
            "location": 40,
            "return": [
                "str",
                "bool",
                "Optional[List[str]]",
                "int",
                "Optional[str]",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalContextLocator._from_string": {
            "name": "_from_string",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Dict[str, Any]"
                ],
                "serialized": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "GlobalContextLocator.make_usage_key": {
            "name": "make_usage_key",
            "location": 49,
            "return": [
                "str",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "definition_key": [
                    "str",
                    "int",
                    "bool",
                    "float",
                    "List[str]"
                ],
                "usage_id": [
                    "int",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_keys/usage_locator.py": {
        "BlockUsageKeyV2.context_key": {
            "name": "context_key",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "BlockUsageKeyV2.course_key": {
            "name": "course_key",
            "location": 25,
            "return": [
                "str",
                "Optional[str]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalUsageLocator.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "definition_key": [
                    "str",
                    "bytes"
                ]
            }
        },
        "GlobalUsageLocator.context_key": {
            "name": "context_key",
            "location": 48,
            "return": [
                "int",
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalUsageLocator.block_type": {
            "name": "block_type",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalUsageLocator.block_id": {
            "name": "block_id",
            "location": 59,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalUsageLocator._to_string": {
            "name": "_to_string",
            "location": 71,
            "return": [
                "str",
                "Union[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GlobalUsageLocator._from_string": {
            "name": "_from_string",
            "location": 78,
            "return": [
                "str",
                "List[str]",
                "List[Dict[str, Any]]",
                "Optional[str]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "Dict[str, Any]",
                    "List[str]",
                    "Callable[[T], bool]"
                ],
                "serialized": [
                    "str",
                    "Set[str]",
                    "int",
                    "Union[str, Dict[str, Any]]",
                    "List[Dict[str, Any]]",
                    "List[str]",
                    "bool"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_keys/__init__.py": {},
    "xblocker-master/xblocker/lib/xblock_runtime/blockstore_kvs.py": {
        "blockstore_transaction": {
            "name": "blockstore_transaction",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "collect_parsed_fields": {
            "name": "collect_parsed_fields",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "collect_changes": {
            "name": "collect_changes",
            "location": 78,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "BlockstoreKVS.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "BlockstoreKVS.get": {
            "name": "get",
            "location": 116,
            "return": [
                "str",
                "Optional[str]",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "BlockstoreKVS.set": {
            "name": "set",
            "location": 126,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "T",
                    "Optional[bytes]",
                    "VT",
                    "KT"
                ],
                "value": [
                    "str",
                    "T",
                    "Optional[bytes]",
                    "VT",
                    "KT"
                ]
            }
        },
        "BlockstoreKVS.delete": {
            "name": "delete",
            "location": 131,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes",
                    "bool",
                    "Iterable[str]"
                ]
            }
        },
        "BlockstoreKVS.has": {
            "name": "has",
            "location": 134,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Union[Callable[[Dict], Hashable], str]",
                    "Callable[[T], bool]"
                ]
            }
        },
        "BlockstoreKVS.default": {
            "name": "default",
            "location": 147,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Union[float, int]"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_runtime/blockstore_runtime.py": {
        "BlockstoreXBlockRuntime.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "BlockstoreXBlockRuntime.parse_xml_file": {
            "name": "parse_xml_file",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "fileobj": [
                    "str",
                    "int",
                    "list",
                    "List[int]"
                ],
                "id_generator": [
                    "str",
                    "int",
                    "list",
                    "List[int]"
                ]
            }
        },
        "BlockstoreXBlockRuntime._definition_key_from_node": {
            "name": "_definition_key_from_node",
            "location": 31,
            "return": [
                "Optional[str]",
                "str",
                "Dict[str, Any]",
                "List[str]",
                "int"
            ],
            "arguments": {
                "bundle_uuid": [
                    "str",
                    "xml.etree.ElementTree.Element",
                    "Dict[str, int]",
                    "Exception",
                    "Iterable[str]"
                ],
                "node": [
                    "int"
                ]
            }
        },
        "BlockstoreXBlockRuntime._parse_and_cache_olx": {
            "name": "_parse_and_cache_olx",
            "location": 49,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "bundle_uuid": [
                    "Dict[str, str]",
                    "Callable",
                    "bool"
                ],
                "data_url": [
                    "str",
                    "Optional[List[str]]",
                    "dict",
                    "Optional[str]",
                    "Optional[Dict[str, str]]",
                    "Optional[MutableMapping[Any, Any]]"
                ]
            }
        },
        "BlockstoreXBlockRuntime.get_block": {
            "name": "get_block",
            "location": 79,
            "return": [
                "str",
                "bool",
                "int",
                "Mapping"
            ],
            "arguments": {
                "self": [],
                "usage_id": [
                    "str",
                    "Optional[str]"
                ],
                "for_parent": [
                    "str",
                    "int",
                    "float",
                    "List[str]"
                ]
            }
        },
        "BlockstoreXBlockRuntime.add_node_as_child": {
            "name": "add_node_as_child",
            "location": 97,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "block": [
                    "int",
                    "bool",
                    "Sequence[int]"
                ],
                "node": [
                    "int",
                    "bool",
                    "Dict[int, int]"
                ],
                "id_generator": [
                    "bool",
                    "str",
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_runtime/error_tracker.py": {
        "exc_info_to_str": {
            "name": "exc_info_to_str",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "exc_info": [
                    "str",
                    "Type[object]"
                ]
            }
        },
        "in_exception_handler": {
            "name": "in_exception_handler",
            "location": 52,
            "return": [
                "Optional[int]",
                "str",
                "Iterable[T]",
                "Optional[str]",
                "logging.LogRecord"
            ],
            "arguments": {}
        },
        "make_error_tracker": {
            "name": "make_error_tracker",
            "location": 57,
            "return": [
                "int",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "make_error_tracker.error_tracker": {
            "name": "error_tracker",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "msg": [
                    "float",
                    "int",
                    "str"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_runtime/id_managers.py": {
        "OpaqueKeyReader.get_definition_id": {
            "name": "get_definition_id",
            "location": 13,
            "return": [
                "str",
                "dict",
                "List[Dict[str, Any]]",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "usage_id": [
                    "str",
                    "runtime.RemoteObjectId",
                    "Dict[str, Any]",
                    "int",
                    "Dict[int, int]"
                ]
            }
        },
        "OpaqueKeyReader.get_block_type": {
            "name": "get_block_type",
            "location": 37,
            "return": [
                "Type[Any]",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "def_id": [
                    "str",
                    "int",
                    "List[str]",
                    "Set[str]"
                ]
            }
        },
        "OpaqueKeyReader.get_usage_id_from_aside": {
            "name": "get_usage_id_from_aside",
            "location": 48,
            "return": [
                "str",
                "Dict[int, str]",
                "dict",
                "bool",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "aside_id": [
                    "str",
                    "runtime.RemoteObjectId",
                    "int"
                ]
            }
        },
        "OpaqueKeyReader.get_definition_id_from_aside": {
            "name": "get_definition_id_from_aside",
            "location": 60,
            "return": [
                "str",
                "Dict[int, str]",
                "dict",
                "bool",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "aside_id": [
                    "str",
                    "runtime.RemoteObjectId",
                    "int"
                ]
            }
        },
        "OpaqueKeyReader.get_aside_type_from_usage": {
            "name": "get_aside_type_from_usage",
            "location": 72,
            "return": [
                "type",
                "Union[str, List[str]]",
                "Dict[str, Any]",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "aside_id": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "OpaqueKeyReader.get_aside_type_from_definition": {
            "name": "get_aside_type_from_definition",
            "location": 85,
            "return": [
                "type",
                "Union[str, List[str]]",
                "Dict[str, Any]",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "aside_id": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_runtime/runtime.py": {
        "XBlockRuntime.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "system": [
                    "str",
                    "Optional[str]",
                    "int",
                    "Optional[bytes]"
                ],
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "XBlockRuntime.handler_url": {
            "name": "handler_url",
            "location": 45,
            "return": [
                "dict",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "str",
                    "List[str]"
                ],
                "handler_name": [
                    "str",
                    "List[str]"
                ],
                "suffix": [
                    "str",
                    "List[str]"
                ],
                "query": [
                    "str",
                    "List[str]"
                ],
                "thirdparty": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "XBlockRuntime.resource_url": {
            "name": "resource_url",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "resource": [
                    "bool",
                    "Iterator[str]",
                    "django.db.backends.postgresql_psycopg2.schema.DatabaseSchemaEditor",
                    "int",
                    "Tuple[int, int]",
                    "T"
                ]
            }
        },
        "XBlockRuntime.local_resource_url": {
            "name": "local_resource_url",
            "location": 51,
            "return": [
                "dict",
                "int",
                "str",
                "Iterable[str]",
                "IO[str]"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "Dict[str, Any]",
                    "Type",
                    "Tuple[Type[Any]]"
                ],
                "uri": [
                    "Dict[str, Any]",
                    "Type",
                    "Tuple[Type[Any]]"
                ]
            }
        },
        "XBlockRuntime.publish": {
            "name": "publish",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "block": [
                    "int",
                    "str",
                    "bool"
                ],
                "event_type": [
                    "str",
                    "List[str]",
                    "bytes",
                    "bool",
                    "Dict[str, str]"
                ],
                "event_data": [
                    "str",
                    "List[str]",
                    "bytes",
                    "bool",
                    "Dict[str, str]"
                ]
            }
        },
        "XBlockRuntime.applicable_aside_types": {
            "name": "applicable_aside_types",
            "location": 59,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "bool",
                    "Type"
                ]
            }
        },
        "XBlockRuntime.parse_xml_file": {
            "name": "parse_xml_file",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "fileobj": [
                    "str",
                    "int",
                    "list",
                    "List[int]"
                ],
                "id_generator": [
                    "str",
                    "int",
                    "list",
                    "List[int]"
                ]
            }
        },
        "XBlockRuntime.add_node_as_child": {
            "name": "add_node_as_child",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "block": [
                    "bool",
                    "str",
                    "int",
                    "List[int]"
                ],
                "node": [
                    "bool",
                    "str",
                    "int",
                    "List[int]"
                ],
                "id_generator": [
                    "bool",
                    "str",
                    "int",
                    "List[int]"
                ]
            }
        },
        "XBlockRuntime.service": {
            "name": "service",
            "location": 74,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "str",
                    "type"
                ],
                "service_name": [
                    "str",
                    "Optional[str]",
                    "type",
                    "Optional[Union[Any, Any]]"
                ]
            }
        },
        "XBlockRuntimeSystem.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "handler_url": [
                    "str",
                    "bytes",
                    "dict"
                ],
                "authored_data_kvs": [
                    "str",
                    "Optional[List[str]]",
                    "bool",
                    "Sequence[int]"
                ],
                "student_data_kvs": [
                    "str",
                    "Optional[List[str]]",
                    "bool",
                    "Sequence[int]"
                ],
                "runtime_class": [
                    "bool",
                    "str",
                    "int",
                    "type"
                ]
            }
        },
        "XBlockRuntimeSystem.get_runtime": {
            "name": "get_runtime",
            "location": 140,
            "return": [
                "Iterable[str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "XBlockRuntimeSystem.get_service": {
            "name": "get_service",
            "location": 144,
            "return": [
                "bool",
                "Dict[str, str]",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "scope_ids": [
                    "str",
                    "bool",
                    "bytes",
                    "Set[int]"
                ],
                "service_name": [
                    "Optional[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "XBlockRuntimeSystem.get_error_tracker_for_context": {
            "name": "get_error_tracker_for_context",
            "location": 159,
            "return": [
                "Dict[str, Any]",
                "Dict[str, Callable[[], Any]]",
                "Optional[Callable]"
            ],
            "arguments": {
                "self": [],
                "context_key": [
                    "str",
                    "bytes",
                    "int",
                    "Optional[bytes]"
                ]
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_runtime/shims.py": {
        "RuntimeShim.error_tracker": {
            "name": "error_tracker",
            "location": 15,
            "return": [
                "str",
                "Optional[int]",
                "bool",
                "Optional[object]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RuntimeShim.get_policy": {
            "name": "get_policy",
            "location": 25,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "_usage_id": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "RuntimeShim.render_template": {
            "name": "render_template",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "template_name": [
                    "str",
                    "List[Tuple[str, str]]",
                    "Set[str]"
                ],
                "dictionary": [
                    "str",
                    "List[Tuple[str, str]]",
                    "Set[str]"
                ],
                "namespace": [
                    "str",
                    "List[Tuple[str, str]]",
                    "Set[str]"
                ]
            }
        },
        "RuntimeShim.process_xml": {
            "name": "process_xml",
            "location": 45,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "xml": [
                    "bool",
                    "IO[str]",
                    "IO[Any]"
                ]
            }
        },
        "XBlockShim.location": {
            "name": "location",
            "location": 62,
            "return": [
                "bool",
                "Dict[str, Any]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "XBlockShim.system": {
            "name": "system",
            "location": 73,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xblocker-master/xblocker/lib/xblock_runtime/__init__.py": {},
    "xblocker-master/xblocker/settings/base.py": {
        "here": {
            "name": "here",
            "location": 10,
            "return": [
                "str",
                "List[int]"
            ],
            "arguments": {}
        },
        "root": {
            "name": "root",
            "location": 17,
            "return": [
                "Dict[str, Sequence[Any]]"
            ],
            "arguments": {}
        }
    },
    "xblocker-master/xblocker/settings/local.py": {},
    "xblocker-master/xblocker/settings/production.py": {},
    "xblocker-master/xblocker/settings/test.py": {},
    "xblocker-master/xblocker/settings/utils.py": {
        "get_env_setting": {
            "name": "get_env_setting",
            "location": 6,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "setting": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "xblocker-master/xblocker/settings/__init__.py": {}
}
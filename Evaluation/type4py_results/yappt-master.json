{
    "yappt-master/setup.py": {},
    "yappt-master/tests/ast_renderer.py": {},
    "yappt-master/tests/colortrans.py": {
        "_str2hex": {
            "name": "_str2hex",
            "location": 292,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "hexstr": [
                    "int",
                    "bytes",
                    "set"
                ]
            }
        },
        "_strip_hash": {
            "name": "_strip_hash",
            "location": 296,
            "return": [
                "bool",
                "str",
                "IO[Any]",
                "float",
                "Tuple[bytes]",
                "int"
            ],
            "arguments": {
                "rgb": [
                    "str",
                    "Tuple[str]",
                    "int"
                ]
            }
        },
        "_create_dicts": {
            "name": "_create_dicts",
            "location": 303,
            "return": [
                "int",
                "Dict[str, float]",
                "Dict[str, Dict[str, Any]]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "short2rgb": {
            "name": "short2rgb",
            "location": 311,
            "return": [
                "str",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "short": [
                    "dict",
                    "List[float]",
                    "str"
                ]
            }
        },
        "print_all": {
            "name": "print_all",
            "location": 315,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "rgb2short": {
            "name": "rgb2short",
            "location": 327,
            "return": [
                "dict",
                "Dict[str, bool]",
                "bytes",
                "str"
            ],
            "arguments": {
                "rgb": [
                    "int",
                    "dict"
                ]
            }
        }
    },
    "yappt-master/tests/curses_render_harness.py": {
        "main": {
            "name": "main",
            "location": 55,
            "return": [],
            "arguments": {
                "stdscr": []
            }
        }
    },
    "yappt-master/tests/mixins.py": {
        "Foo.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "Optional[str]",
                    "str",
                    "Tuple[int]"
                ]
            }
        }
    },
    "yappt-master/yappt/content.py": {
        "create_cell_format": {
            "name": "create_cell_format",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "body_payload": [
                    "str"
                ],
                "parent_format": [
                    "str",
                    "Dict[str, str]",
                    "int",
                    "Dict[str, Any]",
                    "Set[str]",
                    "Dict[Any, list]"
                ]
            }
        },
        "Content.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "str",
                    "bool"
                ]
            }
        },
        "Body.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "body_payload": [
                    "str",
                    "int",
                    "Iterable",
                    "Union[str, Sequence[str]]",
                    "Callable[[None], bool]"
                ],
                "parent_format": [
                    "str",
                    "int",
                    "Tuple[str, str]",
                    "Tuple[int]"
                ]
            }
        },
        "Body.__iter__": {
            "name": "__iter__",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/curses_renderer.py": {
        "CursesRenderer.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CursesRenderer.escape_html": {
            "name": "escape_html",
            "location": 48,
            "return": [],
            "arguments": {
                "raw": []
            }
        },
        "CursesRenderer.escape_url": {
            "name": "escape_url",
            "location": 52,
            "return": [],
            "arguments": {
                "raw": []
            }
        },
        "CursesRenderer.render": {
            "name": "render",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_inner": {
            "name": "render_inner",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer._newline": {
            "name": "_newline",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "lines": [],
                "cr": [],
                "indent": []
            }
        },
        "CursesRenderer.render_raw_text": {
            "name": "render_raw_text",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_line_break": {
            "name": "render_line_break",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_paragraph": {
            "name": "render_paragraph",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_heading": {
            "name": "render_heading",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_link": {
            "name": "render_link",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_block_code": {
            "name": "render_block_code",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_quote": {
            "name": "render_quote",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_list": {
            "name": "render_list",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_list_item": {
            "name": "render_list_item",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "CursesRenderer.render_thematic_break": {
            "name": "render_thematic_break",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        }
    },
    "yappt-master/yappt/exceptions.py": {
        "YAPPTBaseException.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "IO[str]",
                    "Callable"
                ]
            }
        },
        "YAPPTBaseException.format_message": {
            "name": "format_message",
            "location": 13,
            "return": [
                "str",
                "int",
                "List[List[str]]",
                "tuple"
            ],
            "arguments": {
                "self": []
            }
        },
        "YAPPTBaseException.__str__": {
            "name": "__str__",
            "location": 16,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "YAPPTBaseException.show": {
            "name": "show",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "YAMLParseError.show": {
            "name": "show",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SettingsError.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ],
                "slide": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "SettingsError.show": {
            "name": "show",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MetaDataError.show": {
            "name": "show",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "SlideError.show": {
            "name": "show",
            "location": 56,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutError.show": {
            "name": "show",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ContentError.show": {
            "name": "show",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FormatError.show": {
            "name": "show",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/format.py": {
        "Format.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "dict",
                    "list",
                    "set",
                    "bool"
                ]
            }
        },
        "Format.__repr__": {
            "name": "__repr__",
            "location": 57,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/layout.py": {
        "Layout.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "layout_str": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "Layout.row_count": {
            "name": "row_count",
            "location": 26,
            "return": [
                "int",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layout.cell_count": {
            "name": "cell_count",
            "location": 31,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layout.active_cells": {
            "name": "active_cells",
            "location": 39,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "actives": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "yappt-master/yappt/main.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "verbose": [
                    "List[str]",
                    "bool",
                    "Optional[Sequence[str]]",
                    "Optional[List[str]]"
                ]
            }
        },
        "figlet": {
            "name": "figlet",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "colors": {
            "name": "colors",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "show": {
            "name": "show",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Union[Dict, List]",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "yappt-master/yappt/metasettings.py": {
        "Settings.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "str",
                    "datetime.datetime",
                    "bytes",
                    "bool"
                ]
            }
        },
        "Settings.__repr__": {
            "name": "__repr__",
            "location": 26,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetaData.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "bool",
                    "Dict[str, Any]"
                ]
            }
        },
        "MetaData.__repr__": {
            "name": "__repr__",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/presentation.py": {
        "process_yaml": {
            "name": "process_yaml",
            "location": 21,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "generate_all_widgets": {
            "name": "generate_all_widgets",
            "location": 70,
            "return": [
                "int",
                "datetime.timedelta",
                "str",
                "Set[str]"
            ],
            "arguments": {
                "slides": [
                    "Optional[str]",
                    "str",
                    "List[str]",
                    "list",
                    "Iterable[float]",
                    "Optional[List[Dict]]",
                    "Union[str, List]"
                ]
            }
        },
        "draw_widget": {
            "name": "draw_widget",
            "location": 82,
            "return": [
                ""
            ],
            "arguments": {
                "cur_widget_idx": [
                    "Tuple[FrozenSet[int]]",
                    "int",
                    "bool"
                ],
                "widgets": [
                    "Tuple[FrozenSet[int]]",
                    "int",
                    "bool"
                ],
                "background_widgets": [
                    "dict",
                    "list",
                    "str",
                    "List[str]",
                    "bytes",
                    "bytearray",
                    "int"
                ],
                "screen": [
                    "str",
                    "float",
                    "int",
                    "List[str]"
                ]
            }
        }
    },
    "yappt-master/yappt/renderers.py": {
        "render_header_footer": {
            "name": "render_header_footer",
            "location": 49,
            "return": [],
            "arguments": {
                "win": [],
                "row_num": [],
                "headfoot": []
            }
        },
        "render_content": {
            "name": "render_content",
            "location": 73,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "MyString.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DocWrapper.wrap": {
            "name": "wrap",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        }
    },
    "yappt-master/yappt/screen.py": {
        "create_windows_from_cells": {
            "name": "create_windows_from_cells",
            "location": 15,
            "return": [
                "dict",
                "str"
            ],
            "arguments": {
                "widget": [
                    "int",
                    "str",
                    "dict"
                ],
                "parent_win": [
                    "int"
                ],
                "v_margin": [
                    "int",
                    "float"
                ],
                "h_margin": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Screen.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen.__enter__": {
            "name": "__enter__",
            "location": 70,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen.__exit__": {
            "name": "__exit__",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "typ": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "val": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "tb": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Screen.render": {
            "name": "render",
            "location": 97,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "widget": [
                    "Callable[..., None]"
                ]
            }
        },
        "Screen.wait_for_keyboard_entry": {
            "name": "wait_for_keyboard_entry",
            "location": 152,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen.clear": {
            "name": "clear",
            "location": 158,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen.print": {
            "name": "print",
            "location": 161,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen.calibrate": {
            "name": "calibrate",
            "location": 164,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/slide.py": {
        "Slide.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "dict",
                    "float",
                    "Optional[str]"
                ],
                "data": [
                    "dict",
                    "str",
                    "Dict[str, Any]"
                ],
                "deck_settings": [
                    "dict",
                    "Dict[str, Dict[str, str]]",
                    "bool",
                    "Dict[str, int]",
                    "Dict[str, bool]",
                    "str"
                ],
                "metadata": [
                    "bool",
                    "int",
                    "Optional[str]",
                    "Optional[int]",
                    "Dict[str, Any]"
                ]
            }
        },
        "Slide.__repr__": {
            "name": "__repr__",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/utils.py": {
        "count_widgets_in_stack": {
            "name": "count_widgets_in_stack",
            "location": 9,
            "return": [
                "Dict[str, str]",
                "int",
                "Iterable[Iterable[T]]",
                "List[str]",
                "str"
            ],
            "arguments": {
                "bg_stack": [
                    "int",
                    "str",
                    "float",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "print_color_swatch": {
            "name": "print_color_swatch",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "print_figfonts": {
            "name": "print_figfonts",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "yappt-master/yappt/validator_mixins.py": {
        "KeyExistsMixIn.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "str",
                    "OrderedDict",
                    "bytes",
                    "T",
                    "Optional[Any]",
                    "bool",
                    "dict"
                ]
            }
        },
        "ValIsStrMixIn.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "Dict[str, Any]",
                    "List[Dict[str, Any]]",
                    "str"
                ]
            }
        },
        "ValIsDictMixIn.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "Dict[str, Any]",
                    "int"
                ]
            }
        },
        "ValIsDictHasSubKeysMixIn.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "dict",
                    "Optional[Dict[str, Any]]",
                    "Dict[str, str]",
                    "list"
                ]
            }
        },
        "ValIsDictSubKeysFromMixIn.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "Optional[Dict[str, Any]]",
                    "dict",
                    "bool",
                    "Optional[Dict[str, str]]",
                    "Dict[str, Any]"
                ]
            }
        },
        "ValIsDictCheckSubKeyTypesMixIn.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "yappt-master/yappt/widget.py": {
        "generate_widgets_from_slide": {
            "name": "generate_widgets_from_slide",
            "location": 76,
            "return": [
                "Set[str]",
                "Tuple[str]",
                "Dict[str, Any]",
                "int",
                "Sequence[float]"
            ],
            "arguments": {
                "slide": [
                    "Callable",
                    "Type[Any]",
                    "str"
                ],
                "slide_num": [
                    "Callable",
                    "Type[Any]",
                    "str"
                ],
                "total_slides": [
                    "Callable",
                    "Type[Any]",
                    "str"
                ]
            }
        },
        "Widget.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Widget.__repr__": {
            "name": "__repr__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yappt-master/yappt/__init__.py": {}
}
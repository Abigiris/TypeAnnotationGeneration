{
    "yatiml-master/setup.py": {},
    "yatiml-master/docs/conf.py": {},
    "yatiml-master/docs/examples/class_hierarchy.py": {
        "Shape.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Circle.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center": [
                    "List[float]",
                    "int",
                    "Union[Sequence[Any], Tuple[float, float]]"
                ],
                "radius": [
                    "int",
                    "float",
                    "Iterable[List[str]]",
                    "Tuple[int]"
                ]
            }
        },
        "Square.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center": [
                    "List[float]",
                    "int",
                    "Union[Sequence[Any], Tuple[float, float]]",
                    "str"
                ],
                "width": [
                    "int",
                    "float",
                    "tuple",
                    "List[List[int]]"
                ],
                "height": [
                    "int",
                    "float",
                    "tuple",
                    "List[List[int]]"
                ]
            }
        },
        "Submission.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ],
                "drawing": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/collaborative_submissions.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/custom_class.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/custom_recognition.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "age": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ],
                "tool": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        },
        "Submission._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "yatiml.UnknownNode",
                    "int",
                    "str",
                    "list"
                ]
            }
        },
        "Submission._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "float"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/dashed_keys.py": {
        "Dashed.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "an_attribute": [
                    "int",
                    "bool",
                    "float"
                ],
                "another_attribute": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Dashed._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "yatiml.Node",
                    "tuple",
                    "int",
                    "bytes"
                ]
            }
        },
        "Dashed._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "yatiml.Node",
                    "tuple",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/data_classes.py": {},
    "yatiml-master/docs/examples/default_values.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "age": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ],
                "tool": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/dict_of_strings.py": {},
    "yatiml-master/docs/examples/enums.py": {
        "Shape.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center": [
                    "int",
                    "bool",
                    "float"
                ],
                "color": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Circle.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center": [
                    "str"
                ],
                "color": [
                    "str"
                ],
                "radius": [
                    "str",
                    "List[int]",
                    "Optional[List[Any]]",
                    "float"
                ]
            }
        },
        "Square.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "center": [
                    "bool",
                    "List[float]",
                    "int"
                ],
                "color": [
                    "bool",
                    "List[float]",
                    "int"
                ],
                "width": [
                    "int",
                    "Dict[str, Any]",
                    "float",
                    "str",
                    "bool"
                ],
                "height": [
                    "int",
                    "Dict[str, Any]",
                    "float",
                    "str",
                    "bool"
                ]
            }
        },
        "Submission.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ],
                "drawing": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/enum_lowercase.py": {
        "Color._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "float"
                ]
            }
        },
        "Color._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "Type[object]",
                    "Dict[str, Tuple[int, int]]",
                    "Type"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/enum_use_values.py": {
        "Genotype._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "Type",
                    "dict"
                ],
                "node": [
                    "str"
                ]
            }
        },
        "Genotype._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "node": []
            }
        }
    },
    "yatiml-master/docs/examples/extra_attributes.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ],
                "_yatiml_extra": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/load_any_yaml.py": {},
    "yatiml-master/docs/examples/optional_attribute.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "age": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ],
                "tool": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/parsed_classes.py": {
        "Identifier.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "namespaces": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "name": [
                    "List[str]",
                    "str",
                    "dict"
                ]
            }
        },
        "Identifier._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "yatiml.UnknownNode",
                    "str",
                    "bool",
                    "Pattern"
                ]
            }
        },
        "Identifier._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "str",
                    "Union[None, str, List[str], Dict[str, str]]",
                    "yatiml.Node"
                ]
            }
        },
        "Identifier._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str",
                    "dict"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/private_attributes.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "Submission.__str__": {
            "name": "__str__",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Submission._yatiml_attributes": {
            "name": "_yatiml_attributes",
            "location": 15,
            "return": [
                "Dict[str, Any]",
                "List[str]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yatiml-master/docs/examples/saving.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "age": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ],
                "tool": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/savorizing.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "age": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ],
                "tool": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        },
        "Submission._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "float"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/sweetening.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str, str]]"
                ],
                "age": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ],
                "tool": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "int",
                    "Mapping[str, Any]"
                ]
            }
        },
        "Submission._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "yatiml.Node",
                    "int",
                    "List[T]",
                    "List[int]"
                ],
                "node": [
                    "int"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/typed_class.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/type_error.py": {},
    "yatiml-master/docs/examples/union_dict.py": {},
    "yatiml-master/docs/examples/untyped_class.py": {
        "Submission.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/docs/examples/user_defined_string.py": {
        "TitleCaseString.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "seq": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "Submission.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "age": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ],
                "town": [
                    "int",
                    "str",
                    "Sequence",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "yatiml-master/tests/conftest.py": {
        "tmpdir_path": {
            "name": "tmpdir_path",
            "location": 17,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "yaml_seq_node": {
            "name": "yaml_seq_node",
            "location": 383,
            "return": [],
            "arguments": {}
        },
        "yaml_map_node": {
            "name": "yaml_map_node",
            "location": 415,
            "return": [],
            "arguments": {}
        },
        "yaml_index_node": {
            "name": "yaml_index_node",
            "location": 444,
            "return": [],
            "arguments": {}
        },
        "yaml_node": {
            "name": "yaml_node",
            "location": 494,
            "return": [],
            "arguments": {
                "yaml_seq_node": [],
                "yaml_map_node": [],
                "yaml_index_node": []
            }
        },
        "class_node": {
            "name": "class_node",
            "location": 529,
            "return": [],
            "arguments": {
                "yaml_node": []
            }
        },
        "scalar_node": {
            "name": "scalar_node",
            "location": 534,
            "return": [],
            "arguments": {}
        },
        "recognizer": {
            "name": "recognizer",
            "location": 540,
            "return": [],
            "arguments": {}
        },
        "unknown_node": {
            "name": "unknown_node",
            "location": 545,
            "return": [],
            "arguments": {
                "recognizer": [],
                "yaml_node": []
            }
        },
        "unknown_scalar_node": {
            "name": "unknown_scalar_node",
            "location": 551,
            "return": [],
            "arguments": {
                "recognizer": []
            }
        },
        "unknown_sequence_node": {
            "name": "unknown_sequence_node",
            "location": 557,
            "return": [],
            "arguments": {
                "recognizer": []
            }
        },
        "class_node_dup_key": {
            "name": "class_node_dup_key",
            "location": 563,
            "return": [],
            "arguments": {}
        },
        "Document1.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "attr1": []
            }
        },
        "Vector2D.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "Shape.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "center": []
            }
        },
        "Rectangle.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "center": [],
                "width": [],
                "height": []
            }
        },
        "Circle.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "center": [],
                "radius": []
            }
        },
        "Ellipse.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "center": [],
                "semi_major": [],
                "semi_minor": []
            }
        },
        "Ellipse._yatiml_subobjects": {
            "name": "_yatiml_subobjects",
            "location": 64,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Color2._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Color2._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Document2.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "cursor_at": [],
                "shapes": [],
                "color": [],
                "extra_shape": []
            }
        },
        "Document3.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "cursor_at": [],
                "color": [],
                "age": [],
                "has_siblings": [],
                "score": [],
                "extra_shape": [],
                "another_number": []
            }
        },
        "Document3._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 124,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Document4.__init__": {
            "name": "__init__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "shapes": []
            }
        },
        "Document4._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 135,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Document5.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "attr1": [],
                "attr2": []
            }
        },
        "Document6.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "attr1": [],
                "attr2": []
            }
        },
        "Super.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "subclass": []
            }
        },
        "SubA.__init__": {
            "name": "__init__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "subclass": []
            }
        },
        "SubA._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 161,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "SubB.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "subclass": []
            }
        },
        "SubB._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 170,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Super2.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubA2.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubA2._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 184,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "SubA2._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 188,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "SubA2._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 192,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "SubB2.__init__": {
            "name": "__init__",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubB2._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 201,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "SubB2._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 205,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "SubB2._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 209,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Super3.__init__": {
            "name": "__init__",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Super3Clone.__init__": {
            "name": "__init__",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Super4.__init__": {
            "name": "__init__",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Super5.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Sub45.__init__": {
            "name": "__init__",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Universal.__init__": {
            "name": "__init__",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Universal._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 252,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Universal._yatiml_attributes": {
            "name": "_yatiml_attributes",
            "location": 256,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Extensible.__init__": {
            "name": "__init__",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "_yatiml_extra": []
            }
        },
        "UnionAttribute.__init__": {
            "name": "__init__",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "DictAttribute.__init__": {
            "name": "__init__",
            "location": 273,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "PrivateAttributes.__init__": {
            "name": "__init__",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "PrivateAttributes._yatiml_attributes": {
            "name": "_yatiml_attributes",
            "location": 282,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BrokenPrivateAttributes.__init__": {
            "name": "__init__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "ComplexPrivateAttributes.__init__": {
            "name": "__init__",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "ComplexPrivateAttributes._yatiml_attributes": {
            "name": "_yatiml_attributes",
            "location": 299,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConstrainedString.__init__": {
            "name": "__init__",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "seq": []
            }
        },
        "StringLike.__init__": {
            "name": "__init__",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "StringLike.__str__": {
            "name": "__str__",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringLike.__hash__": {
            "name": "__hash__",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringLike.__eq__": {
            "name": "__eq__",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Postcode.__init__": {
            "name": "__init__",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "digits": [],
                "letters": []
            }
        },
        "Postcode._yatiml_recognize": {
            "name": "_yatiml_recognize",
            "location": 337,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Postcode._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 341,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Postcode._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "DashedAttribute.__init__": {
            "name": "__init__",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "dashed_attribute": []
            }
        },
        "DashedAttribute._yatiml_savorize": {
            "name": "_yatiml_savorize",
            "location": 359,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "DashedAttribute._yatiml_sweeten": {
            "name": "_yatiml_sweeten",
            "location": 363,
            "return": [],
            "arguments": {
                "cls": [],
                "node": []
            }
        },
        "Raises.__init__": {
            "name": "__init__",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        }
    },
    "yatiml-master/tests/test_additional_types.py": {
        "test_load_abs_path": {
            "name": "test_load_abs_path",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_rel_path": {
            "name": "test_load_rel_path",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_with_path": {
            "name": "test_load_with_path",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_abs_path": {
            "name": "test_dump_abs_path",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_rel_path": {
            "name": "test_dump_rel_path",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_with_path": {
            "name": "test_dump_with_path",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_path_json": {
            "name": "test_dump_path_json",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "WithPath.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "pathlib.Path",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "yatiml-master/tests/test_bool_fix.py": {
        "test_load_bool": {
            "name": "test_load_bool",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_int": {
            "name": "test_load_bool_int",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_fix": {
            "name": "test_load_bool_fix",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_fix_int": {
            "name": "test_load_bool_fix_int",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_union_bool": {
            "name": "test_load_bool_union_bool",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_union_int": {
            "name": "test_load_bool_union_int",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_fix_union_bool": {
            "name": "test_load_bool_fix_union_bool",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_fix_union_int": {
            "name": "test_load_bool_fix_union_int",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_object_bool": {
            "name": "test_load_bool_object_bool",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_object_int": {
            "name": "test_load_bool_object_int",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_fix_object_bool": {
            "name": "test_load_bool_fix_object_bool",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool_fix_object_int": {
            "name": "test_load_bool_fix_object_int",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_object_bool": {
            "name": "test_dump_object_bool",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_object_int": {
            "name": "test_dump_object_int",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_object_bool_fix": {
            "name": "test_dump_object_bool_fix",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_object_int_fix": {
            "name": "test_dump_object_int_fix",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BoolTester.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ]
            }
        },
        "BoolFixTester.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ]
            }
        }
    },
    "yatiml-master/tests/test_builtin_types.py": {
        "test_load_str": {
            "name": "test_load_str",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_str_type_error": {
            "name": "test_load_str_type_error",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_int": {
            "name": "test_load_int",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_float": {
            "name": "test_load_float",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_bool": {
            "name": "test_load_bool",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_date": {
            "name": "test_load_date",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_list": {
            "name": "test_load_list",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_list_item_type_mismatch": {
            "name": "test_load_list_item_type_mismatch",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_nested_list": {
            "name": "test_load_nested_list",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_list_mismatch": {
            "name": "test_load_list_mismatch",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_sequence": {
            "name": "test_load_sequence",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_mutable_sequence": {
            "name": "test_load_mutable_sequence",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_dict": {
            "name": "test_load_dict",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_dict_invalid_key": {
            "name": "test_load_dict_invalid_key",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_dict_item_type_mismatch": {
            "name": "test_load_dict_item_type_mismatch",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_mapping": {
            "name": "test_load_mapping",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_mutable_mapping": {
            "name": "test_load_mutable_mapping",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_nested_dict": {
            "name": "test_load_nested_dict",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_mixed_dict_list": {
            "name": "test_load_mixed_dict_list",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_dict_error": {
            "name": "test_load_dict_error",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_union": {
            "name": "test_load_union",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_union_mismatch": {
            "name": "test_union_mismatch",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optional": {
            "name": "test_optional",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_document": {
            "name": "test_empty_document",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_str": {
            "name": "test_dump_str",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_ordereddict": {
            "name": "test_dump_ordereddict",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_str_json": {
            "name": "test_dump_str_json",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_datetime": {
            "name": "test_dump_datetime",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_datetime_json": {
            "name": "test_dump_datetime_json",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_int_json": {
            "name": "test_dump_int_json",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_float_json": {
            "name": "test_dump_float_json",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_bool_json": {
            "name": "test_dump_bool_json",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_null_json": {
            "name": "test_dump_null_json",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "yatiml-master/tests/test_classes.py": {
        "test_load_class": {
            "name": "test_load_class",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_load_class_return_type": {
            "name": "test_load_class_return_type",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_init_raises": {
            "name": "test_init_raises",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "test_recognize_subclass": {
            "name": "test_recognize_subclass",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "test_missing_attribute_class": {
            "name": "test_missing_attribute_class",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "test_missing_attribute": {
            "name": "test_missing_attribute",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "test_extra_attribute": {
            "name": "test_extra_attribute",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "test_incorrect_attribute_type": {
            "name": "test_incorrect_attribute_type",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "test_optional_attribute": {
            "name": "test_optional_attribute",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "test_union_attribute": {
            "name": "test_union_attribute",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "test_dict_attribute": {
            "name": "test_dict_attribute",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "test_custom_recognize": {
            "name": "test_custom_recognize",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "test_built_in_instead_of_class": {
            "name": "test_built_in_instead_of_class",
            "location": 123,
            "return": [],
            "arguments": {}
        },
        "test_parent_fallback": {
            "name": "test_parent_fallback",
            "location": 129,
            "return": [],
            "arguments": {}
        },
        "test_missing_discriminator": {
            "name": "test_missing_discriminator",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "test_any_typed_attributes": {
            "name": "test_any_typed_attributes",
            "location": 141,
            "return": [],
            "arguments": {}
        },
        "test_any_object_tag_strip": {
            "name": "test_any_object_tag_strip",
            "location": 162,
            "return": [],
            "arguments": {}
        },
        "test_any_document": {
            "name": "test_any_document",
            "location": 182,
            "return": [],
            "arguments": {}
        },
        "test_dump_any": {
            "name": "test_dump_any",
            "location": 189,
            "return": [],
            "arguments": {}
        },
        "test_untyped_attributes": {
            "name": "test_untyped_attributes",
            "location": 198,
            "return": [],
            "arguments": {}
        },
        "test_missing_untyped_attributes": {
            "name": "test_missing_untyped_attributes",
            "location": 211,
            "return": [],
            "arguments": {}
        },
        "test_untyped_attributes_tag_strip": {
            "name": "test_untyped_attributes_tag_strip",
            "location": 218,
            "return": [],
            "arguments": {}
        },
        "test_untyped_document": {
            "name": "test_untyped_document",
            "location": 238,
            "return": [],
            "arguments": {}
        },
        "test_dump_untyped": {
            "name": "test_dump_untyped",
            "location": 245,
            "return": [],
            "arguments": {}
        },
        "test_yatiml_extra": {
            "name": "test_yatiml_extra",
            "location": 254,
            "return": [],
            "arguments": {}
        },
        "test_yatiml_extra_empty": {
            "name": "test_yatiml_extra_empty",
            "location": 266,
            "return": [],
            "arguments": {}
        },
        "test_yatiml_extra_strip": {
            "name": "test_yatiml_extra_strip",
            "location": 274,
            "return": [],
            "arguments": {}
        },
        "test_missing_class": {
            "name": "test_missing_class",
            "location": 291,
            "return": [],
            "arguments": {}
        },
        "test_user_class_override": {
            "name": "test_user_class_override",
            "location": 301,
            "return": [],
            "arguments": {}
        },
        "test_user_class_override2": {
            "name": "test_user_class_override2",
            "location": 309,
            "return": [],
            "arguments": {}
        },
        "test_user_class_conflicting_override": {
            "name": "test_user_class_conflicting_override",
            "location": 317,
            "return": [],
            "arguments": {}
        },
        "test_user_class_unknown_override": {
            "name": "test_user_class_unknown_override",
            "location": 325,
            "return": [],
            "arguments": {}
        },
        "test_disambiguated_union": {
            "name": "test_disambiguated_union",
            "location": 333,
            "return": [],
            "arguments": {}
        },
        "test_different_recognitions_of_the_same_type": {
            "name": "test_different_recognitions_of_the_same_type",
            "location": 347,
            "return": [],
            "arguments": {}
        },
        "test_savorize": {
            "name": "test_savorize",
            "location": 353,
            "return": [],
            "arguments": {}
        },
        "test_sweeten": {
            "name": "test_sweeten",
            "location": 359,
            "return": [],
            "arguments": {}
        },
        "test_sweeten_json": {
            "name": "test_sweeten_json",
            "location": 365,
            "return": [],
            "arguments": {}
        },
        "test_load_dashed_attribute": {
            "name": "test_load_dashed_attribute",
            "location": 371,
            "return": [],
            "arguments": {}
        },
        "test_remove_defaulted_attribute": {
            "name": "test_remove_defaulted_attribute",
            "location": 378,
            "return": [],
            "arguments": {}
        },
        "test_yatiml_defaults": {
            "name": "test_yatiml_defaults",
            "location": 408,
            "return": [],
            "arguments": {}
        },
        "test_dump_dashed_attribute": {
            "name": "test_dump_dashed_attribute",
            "location": 415,
            "return": [],
            "arguments": {}
        },
        "test_dump_dashed_attribute_json": {
            "name": "test_dump_dashed_attribute_json",
            "location": 421,
            "return": [],
            "arguments": {}
        },
        "test_dump_document1": {
            "name": "test_dump_document1",
            "location": 427,
            "return": [],
            "arguments": {}
        },
        "test_dump_document1_json": {
            "name": "test_dump_document1_json",
            "location": 433,
            "return": [],
            "arguments": {}
        },
        "test_dump_custom_attributes": {
            "name": "test_dump_custom_attributes",
            "location": 439,
            "return": [],
            "arguments": {}
        },
        "test_dump_custom_attributes_json": {
            "name": "test_dump_custom_attributes_json",
            "location": 450,
            "return": [],
            "arguments": {}
        },
        "test_load_complex_document": {
            "name": "test_load_complex_document",
            "location": 463,
            "return": [],
            "arguments": {}
        },
        "test_dump_complex_document": {
            "name": "test_dump_complex_document",
            "location": 492,
            "return": [],
            "arguments": {}
        },
        "test_dump_complex_document_json": {
            "name": "test_dump_complex_document_json",
            "location": 518,
            "return": [],
            "arguments": {}
        },
        "test_broken_custom_attributes": {
            "name": "test_broken_custom_attributes",
            "location": 554,
            "return": [],
            "arguments": {}
        },
        "test_broken_custom_attributes_json": {
            "name": "test_broken_custom_attributes_json",
            "location": 561,
            "return": [],
            "arguments": {}
        },
        "test_yatiml_attributes": {
            "name": "test_yatiml_attributes",
            "location": 568,
            "return": [],
            "arguments": {}
        },
        "test_yatiml_attributes_json": {
            "name": "test_yatiml_attributes_json",
            "location": 574,
            "return": [],
            "arguments": {}
        },
        "test_private_attributes": {
            "name": "test_private_attributes",
            "location": 580,
            "return": [],
            "arguments": {}
        },
        "test_private_attributes_json": {
            "name": "test_private_attributes_json",
            "location": 586,
            "return": [],
            "arguments": {}
        },
        "test_complex_private_attributes": {
            "name": "test_complex_private_attributes",
            "location": 592,
            "return": [],
            "arguments": {}
        },
        "test_enum_class": {
            "name": "test_enum_class",
            "location": 600,
            "return": [],
            "arguments": {}
        },
        "test_dump_enum": {
            "name": "test_dump_enum",
            "location": 613,
            "return": [],
            "arguments": {}
        },
        "test_dump_enum_json": {
            "name": "test_dump_enum_json",
            "location": 619,
            "return": [],
            "arguments": {}
        },
        "test_dump_enum2": {
            "name": "test_dump_enum2",
            "location": 625,
            "return": [],
            "arguments": {}
        },
        "test_enum_savorize": {
            "name": "test_enum_savorize",
            "location": 633,
            "return": [],
            "arguments": {}
        },
        "test_enum_sweeten": {
            "name": "test_enum_sweeten",
            "location": 640,
            "return": [],
            "arguments": {}
        },
        "test_enum_sweeten_json": {
            "name": "test_enum_sweeten_json",
            "location": 646,
            "return": [],
            "arguments": {}
        },
        "test_enum_list": {
            "name": "test_enum_list",
            "location": 652,
            "return": [],
            "arguments": {}
        },
        "test_enum_dict": {
            "name": "test_enum_dict",
            "location": 662,
            "return": [],
            "arguments": {}
        },
        "test_load_user_string": {
            "name": "test_load_user_string",
            "location": 675,
            "return": [],
            "arguments": {}
        },
        "test_dump_user_string": {
            "name": "test_dump_user_string",
            "location": 685,
            "return": [],
            "arguments": {}
        },
        "test_dump_user_string_json": {
            "name": "test_dump_user_string_json",
            "location": 691,
            "return": [],
            "arguments": {}
        },
        "test_load_user_string_like": {
            "name": "test_load_user_string_like",
            "location": 697,
            "return": [],
            "arguments": {}
        },
        "test_dump_user_string_like": {
            "name": "test_dump_user_string_like",
            "location": 704,
            "return": [],
            "arguments": {}
        },
        "test_dump_user_string_like_json": {
            "name": "test_dump_user_string_like_json",
            "location": 710,
            "return": [],
            "arguments": {}
        },
        "test_load_user_string_key": {
            "name": "test_load_user_string_key",
            "location": 716,
            "return": [],
            "arguments": {}
        },
        "test_dump_user_string_key": {
            "name": "test_dump_user_string_key",
            "location": 730,
            "return": [],
            "arguments": {}
        },
        "test_load_string_like_key": {
            "name": "test_load_string_like_key",
            "location": 737,
            "return": [],
            "arguments": {}
        },
        "test_dump_string_like_key": {
            "name": "test_dump_string_like_key",
            "location": 749,
            "return": [],
            "arguments": {}
        },
        "test_parsed_class": {
            "name": "test_parsed_class",
            "location": 756,
            "return": [],
            "arguments": {}
        },
        "test_dump_parsed_class": {
            "name": "test_dump_parsed_class",
            "location": 764,
            "return": [],
            "arguments": {}
        },
        "test_dump_parsed_class_json": {
            "name": "test_dump_parsed_class_json",
            "location": 770,
            "return": [],
            "arguments": {}
        },
        "test_load_class_return_type.test_fn": {
            "name": "test_fn",
            "location": 27,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "test_load_data_class": {
            "name": "test_load_data_class",
            "location": 780,
            "return": [],
            "arguments": {}
        },
        "test_dump_data_class": {
            "name": "test_dump_data_class",
            "location": 787,
            "return": [],
            "arguments": {}
        }
    },
    "yatiml-master/tests/test_helpers.py": {
        "test_is_scalar": {
            "name": "test_is_scalar",
            "location": 7,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_is_mapping": {
            "name": "test_is_mapping",
            "location": 16,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_is_sequence": {
            "name": "test_is_sequence",
            "location": 22,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_get_value": {
            "name": "test_get_value",
            "location": 28,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_set_value": {
            "name": "test_set_value",
            "location": 32,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_make_mapping": {
            "name": "test_make_mapping",
            "location": 42,
            "return": [],
            "arguments": {
                "scalar_node": []
            }
        },
        "test_has_attribute": {
            "name": "test_has_attribute",
            "location": 50,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_has_attribute_type": {
            "name": "test_has_attribute_type",
            "location": 56,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_get_attribute": {
            "name": "test_get_attribute",
            "location": 64,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_set_attribute": {
            "name": "test_set_attribute",
            "location": 70,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_remove_attribute": {
            "name": "test_remove_attribute",
            "location": 123,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_rename_attribute": {
            "name": "test_rename_attribute",
            "location": 138,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_seq_attribute_to_map": {
            "name": "test_seq_attribute_to_map",
            "location": 151,
            "return": [],
            "arguments": {
                "class_node": [],
                "class_node_dup_key": []
            }
        },
        "test_map_attribute_to_seq": {
            "name": "test_map_attribute_to_seq",
            "location": 183,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_index_attribute_to_map1": {
            "name": "test_index_attribute_to_map1",
            "location": 215,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_index_attribute_to_map2": {
            "name": "test_index_attribute_to_map2",
            "location": 246,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_map_attribute_to_index": {
            "name": "test_map_attribute_to_index",
            "location": 272,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_unders_to_dashes_in_keys": {
            "name": "test_unders_to_dashes_in_keys",
            "location": 305,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_dashes_to_unders_in_keys": {
            "name": "test_dashes_to_unders_in_keys",
            "location": 313,
            "return": [],
            "arguments": {
                "class_node": []
            }
        },
        "test_unknown_node_str": {
            "name": "test_unknown_node_str",
            "location": 321,
            "return": [],
            "arguments": {
                "unknown_node": []
            }
        },
        "test_require_scalar": {
            "name": "test_require_scalar",
            "location": 325,
            "return": [],
            "arguments": {
                "unknown_node": [],
                "unknown_scalar_node": []
            }
        },
        "test_require_mapping": {
            "name": "test_require_mapping",
            "location": 334,
            "return": [],
            "arguments": {
                "unknown_node": [],
                "unknown_scalar_node": []
            }
        },
        "test_require_sequence": {
            "name": "test_require_sequence",
            "location": 343,
            "return": [],
            "arguments": {
                "unknown_node": [],
                "unknown_sequence_node": []
            }
        },
        "test_require_attribute": {
            "name": "test_require_attribute",
            "location": 352,
            "return": [],
            "arguments": {
                "unknown_node": []
            }
        },
        "test_require_attribute_value": {
            "name": "test_require_attribute_value",
            "location": 368,
            "return": [],
            "arguments": {
                "unknown_node": []
            }
        },
        "test_require_attribute_value_not": {
            "name": "test_require_attribute_value_not",
            "location": 378,
            "return": [],
            "arguments": {
                "unknown_node": []
            }
        }
    },
    "yatiml-master/tests/test_load_dump_functions.py": {
        "test_load_from_string": {
            "name": "test_load_from_string",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_from_path": {
            "name": "test_load_from_path",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "test_load_from_stream": {
            "name": "test_load_from_stream",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "path.Path",
                    "str"
                ]
            }
        },
        "test_dump_to_string": {
            "name": "test_dump_to_string",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_to_stream": {
            "name": "test_dump_to_stream",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "path.Path",
                    "str"
                ]
            }
        },
        "test_dump_to_filename": {
            "name": "test_dump_to_filename",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "path.Path",
                    "str"
                ]
            }
        },
        "test_dump_to_path": {
            "name": "test_dump_to_path",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "test_dump_json_to_string": {
            "name": "test_dump_json_to_string",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dump_json_to_stream": {
            "name": "test_dump_json_to_stream",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "path.Path",
                    "str"
                ]
            }
        },
        "test_dump_json_to_filename": {
            "name": "test_dump_json_to_filename",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "path.Path",
                    "str"
                ]
            }
        },
        "test_dump_json_to_path": {
            "name": "test_dump_json_to_path",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_path": [
                    "pathlib.Path",
                    "str",
                    "path.Path"
                ]
            }
        }
    },
    "yatiml-master/tests/__init__.py": {},
    "yatiml-master/yatiml/constructors.py": {
        "Constructor.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "class_": []
            }
        },
        "Constructor.__call__": {
            "name": "__call__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "loader": [],
                "node": []
            }
        },
        "Constructor.__to_plain_containers": {
            "name": "__to_plain_containers",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        },
        "Constructor.__split_off_extra_attributes": {
            "name": "__split_off_extra_attributes",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "known_attrs": []
            }
        },
        "Constructor.__type_matches": {
            "name": "__type_matches",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "type_": []
            }
        },
        "Constructor.__check_no_missing_attributes": {
            "name": "__check_no_missing_attributes",
            "location": 218,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "mapping": []
            }
        },
        "Constructor.__type_check_attributes": {
            "name": "__type_check_attributes",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "mapping": [],
                "argspec": []
            }
        },
        "Constructor.__strip_extra_attributes": {
            "name": "__strip_extra_attributes",
            "location": 284,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "known_attrs": []
            }
        },
        "EnumConstructor.__init__": {
            "name": "__init__",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "class_": []
            }
        },
        "EnumConstructor.__call__": {
            "name": "__call__",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "loader": [],
                "node": []
            }
        },
        "UserStringConstructor.__init__": {
            "name": "__init__",
            "location": 379,
            "return": [],
            "arguments": {
                "self": [],
                "class_": []
            }
        },
        "UserStringConstructor.__call__": {
            "name": "__call__",
            "location": 387,
            "return": [],
            "arguments": {
                "self": [],
                "loader": [],
                "node": []
            }
        },
        "PathConstructor.__call__": {
            "name": "__call__",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "loader": [],
                "node": []
            }
        }
    },
    "yatiml-master/yatiml/dumper.py": {
        "add_to_dumper": {
            "name": "add_to_dumper",
            "location": 174,
            "return": [],
            "arguments": {
                "dumper": [],
                "classes": []
            }
        },
        "dumps_function": {
            "name": "dumps_function",
            "location": 201,
            "return": [],
            "arguments": {}
        },
        "dump_function": {
            "name": "dump_function",
            "location": 264,
            "return": [],
            "arguments": {}
        },
        "dumps_json_function": {
            "name": "dumps_json_function",
            "location": 340,
            "return": [],
            "arguments": {}
        },
        "dump_json_function": {
            "name": "dump_json_function",
            "location": 426,
            "return": [],
            "arguments": {}
        },
        "Dumper.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "default_style": [],
                "default_flow_style": [],
                "canonical": [],
                "indent": [],
                "width": [],
                "allow_unicode": [],
                "line_break": [],
                "encoding": [],
                "explicit_start": [],
                "explicit_end": [],
                "version": [],
                "tags": [],
                "block_seq_indent": [],
                "top_level_colon_align": [],
                "prefix_colon": []
            }
        },
        "Dumper.emit": {
            "name": "emit",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Dumper.emit_json": {
            "name": "emit_json",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Dumper.represent_ordereddict": {
            "name": "represent_ordereddict",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Dumper._do_endline": {
            "name": "_do_endline",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dumps_function.DumpsFunction.__init__": {
            "name": "__init__",
            "location": 246,
            "return": [],
            "arguments": {
                "self": [],
                "dumper": []
            }
        },
        "dumps_function.DumpsFunction.__call__": {
            "name": "__call__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "dump_function.DumpFunction.__init__": {
            "name": "__init__",
            "location": 312,
            "return": [],
            "arguments": {
                "self": [],
                "dumper": []
            }
        },
        "dump_function.DumpFunction.__call__": {
            "name": "__call__",
            "location": 316,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "sink": []
            }
        },
        "dumps_json_function.DumpsJsonFunction.__init__": {
            "name": "__init__",
            "location": 403,
            "return": [],
            "arguments": {
                "self": [],
                "dumper": []
            }
        },
        "dumps_json_function.DumpsJsonFunction.__call__": {
            "name": "__call__",
            "location": 407,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "dump_json_function.DumpJsonFunction.__init__": {
            "name": "__init__",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "dumper": []
            }
        },
        "dump_json_function.DumpJsonFunction.__call__": {
            "name": "__call__",
            "location": 493,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "sink": [],
                "indent": [],
                "ensure_ascii": []
            }
        }
    },
    "yatiml-master/yatiml/exceptions.py": {},
    "yatiml-master/yatiml/helpers.py": {
        "Node.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.is_scalar": {
            "name": "is_scalar",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "typ": []
            }
        },
        "Node.is_mapping": {
            "name": "is_mapping",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.is_sequence": {
            "name": "is_sequence",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.get_value": {
            "name": "get_value",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.set_value": {
            "name": "set_value",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Node.make_mapping": {
            "name": "make_mapping",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.has_attribute": {
            "name": "has_attribute",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "Node.has_attribute_type": {
            "name": "has_attribute_type",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "typ": []
            }
        },
        "Node.get_attribute": {
            "name": "get_attribute",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "Node.set_attribute": {
            "name": "set_attribute",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "value": []
            }
        },
        "Node.remove_attribute": {
            "name": "remove_attribute",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "Node.remove_attributes_with_default_values": {
            "name": "remove_attributes_with_default_values",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "Node.rename_attribute": {
            "name": "rename_attribute",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "new_name": []
            }
        },
        "Node.unders_to_dashes_in_keys": {
            "name": "unders_to_dashes_in_keys",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.dashes_to_unders_in_keys": {
            "name": "dashes_to_unders_in_keys",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.seq_attribute_to_map": {
            "name": "seq_attribute_to_map",
            "location": 421,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "key_attribute": [],
                "value_attribute": [],
                "strict": []
            }
        },
        "Node.map_attribute_to_seq": {
            "name": "map_attribute_to_seq",
            "location": 530,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "key_attribute": [],
                "value_attribute": []
            }
        },
        "Node.index_attribute_to_map": {
            "name": "index_attribute_to_map",
            "location": 635,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "key_attribute": [],
                "value_attribute": []
            }
        },
        "Node.map_attribute_to_index": {
            "name": "map_attribute_to_index",
            "location": 762,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "key_attribute": [],
                "value_attribute": []
            }
        },
        "Node.is_empty": {
            "name": "is_empty",
            "location": 898,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.seq_items": {
            "name": "seq_items",
            "location": 906,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__attr_index": {
            "name": "__attr_index",
            "location": 915,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": []
            }
        },
        "UnknownNode.__init__": {
            "name": "__init__",
            "location": 935,
            "return": [],
            "arguments": {
                "self": [],
                "recognizer": [],
                "node": []
            }
        },
        "UnknownNode.__str__": {
            "name": "__str__",
            "location": 946,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnknownNode.require_scalar": {
            "name": "require_scalar",
            "location": 950,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnknownNode.require_mapping": {
            "name": "require_mapping",
            "location": 979,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnknownNode.require_sequence": {
            "name": "require_sequence",
            "location": 985,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnknownNode.require_attribute": {
            "name": "require_attribute",
            "location": 991,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "typ": []
            }
        },
        "UnknownNode.require_attribute_value": {
            "name": "require_attribute_value",
            "location": 1020,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "value": []
            }
        },
        "UnknownNode.require_attribute_value_not": {
            "name": "require_attribute_value_not",
            "location": 1061,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "value": []
            }
        },
        "Node.remove_attributes_with_default_values.matches": {
            "name": "matches",
            "location": 347,
            "return": [],
            "arguments": {
                "value_node": [],
                "default": []
            }
        }
    },
    "yatiml-master/yatiml/introspection.py": {
        "class_subobjects": {
            "name": "class_subobjects",
            "location": 6,
            "return": [
                "typing.Generator[typing.Tuple[builtins.str, typing_extensions.Type, builtins.bool], None, None]"
            ],
            "arguments": {
                "class_": [
                    "Type",
                    "str",
                    "type",
                    "List[str]",
                    "bytes",
                    "Callable[[None], None]"
                ]
            }
        },
        "defaulted_attributes": {
            "name": "defaulted_attributes",
            "location": 32,
            "return": [
                "int",
                "bool",
                "Dict[str, int]",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "class_": [
                    "str",
                    "bool",
                    "List[str]",
                    "Type"
                ]
            }
        }
    },
    "yatiml-master/yatiml/irecognizer.py": {
        "IRecognizer.recognize": {
            "name": "recognize",
            "location": 22,
            "return": [
                "RecResult"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "Optional[int]",
                    "Union[str, int]",
                    "str",
                    "Tuple[str]",
                    "Tuple[Type[Exception]]"
                ],
                "expected_type": [
                    "Optional[int]",
                    "Union[str, int]",
                    "str",
                    "Tuple[str]",
                    "Tuple[Type[Exception]]"
                ]
            }
        }
    },
    "yatiml-master/yatiml/loader.py": {
        "set_document_type": {
            "name": "set_document_type",
            "location": 211,
            "return": [],
            "arguments": {
                "loader_cls": [],
                "type_": []
            }
        },
        "add_to_loader": {
            "name": "add_to_loader",
            "location": 232,
            "return": [],
            "arguments": {
                "loader_cls": [],
                "classes": []
            }
        },
        "load_function": {
            "name": "load_function",
            "location": 283,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "Loader.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loader.get_single_node": {
            "name": "get_single_node",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loader.get_node": {
            "name": "get_node",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loader.__type_to_tag": {
            "name": "__type_to_tag",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "Loader.__savorize": {
            "name": "__savorize",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Loader.__process_node": {
            "name": "__process_node",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "load_function.LoadFunction.__init__": {
            "name": "__init__",
            "location": 371,
            "return": [],
            "arguments": {
                "self": [],
                "loader": []
            }
        },
        "load_function.LoadFunction.__call__": {
            "name": "__call__",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        }
    },
    "yatiml-master/yatiml/recognizer.py": {
        "Recognizer.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "registered_classes": [],
                "additional_classes": []
            }
        },
        "Recognizer.__recognize_scalar": {
            "name": "__recognize_scalar",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.__recognize_additional": {
            "name": "__recognize_additional",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.__recognize_list": {
            "name": "__recognize_list",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.__recognize_dict": {
            "name": "__recognize_dict",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.__recognize_union": {
            "name": "__recognize_union",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.__recognize_user_class": {
            "name": "__recognize_user_class",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.__recognize_user_classes": {
            "name": "__recognize_user_classes",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        },
        "Recognizer.recognize": {
            "name": "recognize",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "expected_type": []
            }
        }
    },
    "yatiml-master/yatiml/representers.py": {
        "Representer.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "class_": [
                    "str",
                    "Callable",
                    "Sequence",
                    "bool"
                ]
            }
        },
        "Representer.__call__": {
            "name": "__call__",
            "location": 34,
            "return": [
                "Callable",
                "pathlib.Path",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "dumper": [
                    "bool",
                    "bytes",
                    "str",
                    "Dict[str, Any]",
                    "float",
                    "int"
                ],
                "data": [
                    "Dict[str, Any]"
                ]
            }
        },
        "Representer.__sweeten": {
            "name": "__sweeten",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dumper": [
                    "bool",
                    "helpers.TraceContext",
                    "type"
                ],
                "class_": [
                    "Node",
                    "str",
                    "tuple",
                    "Dict[str, Any]"
                ],
                "node": [
                    "bool",
                    "int",
                    "yaml.nodes.Node",
                    "str"
                ]
            }
        },
        "EnumRepresenter.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "class_": [
                    "str",
                    "Callable",
                    "Sequence",
                    "bool"
                ]
            }
        },
        "EnumRepresenter.__call__": {
            "name": "__call__",
            "location": 128,
            "return": [
                "Callable",
                "pathlib.Path",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "dumper": [
                    "Dumper",
                    "Iterable[bool]",
                    "bool"
                ],
                "data": [
                    "Optional[dict]",
                    "Exception",
                    "Dict[str, Any]",
                    "str",
                    "int"
                ]
            }
        },
        "UserStringRepresenter.__init__": {
            "name": "__init__",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "class_": [
                    "str",
                    "Callable",
                    "Sequence",
                    "bool"
                ]
            }
        },
        "UserStringRepresenter.__call__": {
            "name": "__call__",
            "location": 175,
            "return": [
                "Callable",
                "pathlib.Path",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "dumper": [
                    "Dumper",
                    "Union[IO[str], int]",
                    "str",
                    "bool",
                    "int",
                    "bytes",
                    "BinaryIO"
                ],
                "data": [
                    "str",
                    "bool"
                ]
            }
        },
        "PathRepresenter.__call__": {
            "name": "__call__",
            "location": 216,
            "return": [
                "Callable",
                "pathlib.Path",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "dumper": [
                    "pathlib.Path",
                    "str",
                    "Optional[pathlib.Path]"
                ],
                "path": [
                    "str",
                    "Optional[str]",
                    "Set[str]"
                ]
            }
        }
    },
    "yatiml-master/yatiml/util.py": {
        "is_generic_sequence": {
            "name": "is_generic_sequence",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "type_": [
                    "Type",
                    "type",
                    "str",
                    "Type[str]"
                ]
            }
        },
        "is_generic_mapping": {
            "name": "is_generic_mapping",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "type_": [
                    "Type",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "is_generic_union": {
            "name": "is_generic_union",
            "location": 116,
            "return": [
                "str"
            ],
            "arguments": {
                "type_": [
                    "Type",
                    "str"
                ]
            }
        },
        "generic_type_args": {
            "name": "generic_type_args",
            "location": 144,
            "return": [],
            "arguments": {
                "type_": [
                    "Type",
                    "Set[str]"
                ]
            }
        },
        "type_to_desc": {
            "name": "type_to_desc",
            "location": 169,
            "return": [
                "str",
                "type"
            ],
            "arguments": {
                "type_": [
                    "Type",
                    "str"
                ]
            }
        },
        "is_string_like": {
            "name": "is_string_like",
            "location": 211,
            "return": [
                "str"
            ],
            "arguments": {
                "type_": [
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "strip_tags": {
            "name": "strip_tags",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "resolver": [
                    "yaml.nodes.Node",
                    "bool",
                    "str",
                    "Dict[str, Any]"
                ],
                "node": []
            }
        }
    },
    "yatiml-master/yatiml/__init__.py": {}
}
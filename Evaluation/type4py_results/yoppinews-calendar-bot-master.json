{
    "yoppinews-calendar-bot-master/src/layers/__init__.py": {},
    "yoppinews-calendar-bot-master/src/layers/shared_files/__init__.py": {},
    "yoppinews-calendar-bot-master/src/layers/shared_files/python/calendar_config.py": {
        "CalendarBotConfig.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "dic": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "CalendarBotConfig.initialize": {
            "name": "initialize",
            "location": 19,
            "return": [
                "Optional[str]",
                "Dict[str, Any]",
                "int",
                "str"
            ],
            "arguments": {
                "stage": [
                    "str"
                ],
                "config_bucket": [
                    "str"
                ],
                "config_key_name": [
                    "str"
                ]
            }
        },
        "CalendarBotConfig.log_level": {
            "name": "log_level",
            "location": 31,
            "return": [
                "str",
                "Dict[str, Any]",
                "int",
                "dict",
                "list",
                "Tuple[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CalendarBotConfig._get_logger": {
            "name": "_get_logger",
            "location": 35,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "log_level": [
                    "str",
                    "bytes",
                    "dict"
                ]
            }
        },
        "CalendarBotConfig.logger": {
            "name": "logger",
            "location": 46,
            "return": [
                "int",
                "str",
                "bytearray"
            ],
            "arguments": {
                "self": []
            }
        },
        "CalendarBotConfig.timezone": {
            "name": "timezone",
            "location": 50,
            "return": [
                "int",
                "datetime.timedelta",
                "datetime.datetime",
                "float",
                "datetime.timezone"
            ],
            "arguments": {
                "self": []
            }
        },
        "CalendarBotConfig.calendars": {
            "name": "calendars",
            "location": 55,
            "return": [
                "List[int]",
                "Iterable[str]",
                "Iterable[T]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleCalendar.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "calendar_id": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "max_summarized_items": [
                    "int",
                    "str",
                    "bool"
                ],
                "summarize_message_template": [
                    "str",
                    "Optional[str]"
                ],
                "notify_before_event_starts": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "notification_message_template": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "GoogleCalendar.__repr__": {
            "name": "__repr__",
            "location": 78,
            "return": [
                "dict",
                "bool",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleCalendar.__eq__": {
            "name": "__eq__",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Tuple[int, int]",
                    "float"
                ]
            }
        },
        "GoogleCalendar.of": {
            "name": "of",
            "location": 98,
            "return": [
                "int",
                "Dict[str, int]",
                "Iterable[str]",
                "dict"
            ],
            "arguments": {
                "dic": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "GoogleCalendar.calendar_id": {
            "name": "calendar_id",
            "location": 113,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleCalendar.max_summarized_items": {
            "name": "max_summarized_items",
            "location": 117,
            "return": [
                "int",
                "List[int]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleCalendar.summarize_message_template": {
            "name": "summarize_message_template",
            "location": 121,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleCalendar.notify_before_event_starts": {
            "name": "notify_before_event_starts",
            "location": 125,
            "return": [
                "bool",
                "Callable",
                "Callable[..., None]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleCalendar.notification_message_template": {
            "name": "notification_message_template",
            "location": 129,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yoppinews-calendar-bot-master/src/layers/shared_files/python/message.py": {
        "TweetMessage.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "status": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "TweetMessage.of": {
            "name": "of",
            "location": 11,
            "return": [
                "bool",
                "Optional[str]",
                "Optional[Dict[str, Any]]",
                "Optional[List[str]]"
            ],
            "arguments": {
                "d": [
                    "dict",
                    "str"
                ]
            }
        },
        "TweetMessage.status": {
            "name": "status",
            "location": 18,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TweetMessage.dictionary": {
            "name": "dictionary",
            "location": 22,
            "return": [
                "str",
                "dict",
                "Union[str, Dict]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yoppinews-calendar-bot-master/src/layers/shared_files/python/__init__.py": {},
    "yoppinews-calendar-bot-master/src/notify_scheduled_events/app.py": {
        "lambda_handler": {
            "name": "lambda_handler",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "_": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "__": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "handle": {
            "name": "handle",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "api": [
                    "int"
                ],
                "calendars": [
                    "Optional[logging.Logger]",
                    "str",
                    "int",
                    "Callable[[str], None]",
                    "Iterable['Context']"
                ],
                "timezone": [
                    "datetime.datetime",
                    "Optional[str]",
                    "Optional[datetime.date]",
                    "float",
                    "datetime.timedelta"
                ],
                "logger": [
                    "str",
                    "dict",
                    "bool"
                ]
            }
        },
        "tweet": {
            "name": "tweet",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "m": [
                    "str",
                    "bool",
                    "Mapping[str, Any]",
                    "int",
                    "Tuple[str]"
                ],
                "logger": [
                    "logging.Logger",
                    "Tuple[str]",
                    "int",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "yoppinews-calendar-bot-master/src/notify_scheduled_events/scheduled_event.py": {
        "GoogleCalendarAPI.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "api_key": [
                    "str",
                    "Optional[Dict[str, Any]]",
                    "bool",
                    "List[Tuple[str, str]]"
                ],
                "tz": [
                    "str",
                    "bool",
                    "MutableMapping[str, Any]",
                    "dict"
                ]
            }
        },
        "GoogleCalendarAPI.get_items": {
            "name": "get_items",
            "location": 14,
            "return": [
                "[dict]",
                "str"
            ],
            "arguments": {
                "self": [],
                "calendar_id": [
                    "str",
                    "Optional[datetime.datetime]"
                ],
                "start": [
                    "str",
                    "Optional[datetime.datetime]"
                ],
                "end": [
                    "str",
                    "Optional[datetime.datetime]"
                ],
                "max_results": [
                    "str",
                    "Optional[datetime.datetime]"
                ]
            }
        },
        "GoogleCalendarAPI.timezone": {
            "name": "timezone",
            "location": 26,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScheduledEvent.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "item_id": [
                    "str",
                    "int"
                ],
                "title": [
                    "bool",
                    "float",
                    "str"
                ],
                "description": [
                    "bool",
                    "float",
                    "str"
                ],
                "start": [
                    "bool",
                    "float",
                    "str"
                ],
                "notify_needed": [
                    "bool",
                    "float",
                    "str"
                ]
            }
        },
        "ScheduledEvent.dictionary": {
            "name": "dictionary",
            "location": 39,
            "return": [
                "dict",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScheduledEvent.item_id": {
            "name": "item_id",
            "location": 53,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScheduledEvent.notify_needed": {
            "name": "notify_needed",
            "location": 57,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScheduledEvent.description": {
            "name": "description",
            "location": 61,
            "return": [
                "bytes",
                "str",
                "Union[int, float, complex]",
                "Callable",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScheduledEventsRepository.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "s3": [
                    "int",
                    "Union[float, int]",
                    "Optional[int]",
                    "Optional[str]",
                    "float",
                    "str",
                    "bool"
                ],
                "cache_bucket_name": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "api": [
                    "bool",
                    "dict",
                    "int",
                    "str"
                ],
                "calendar_id": [
                    "str",
                    "int",
                    "Optional[int]"
                ]
            }
        },
        "ScheduledEventsRepository.get_events": {
            "name": "get_events",
            "location": 81,
            "return": [
                "bool",
                "str",
                "Union[int, float, complex]",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "str",
                    "int"
                ],
                "end": [
                    "int"
                ]
            }
        },
        "ScheduledEventsRepository.mark_as_notified": {
            "name": "mark_as_notified",
            "location": 98,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "item_id": [
                    "str"
                ]
            }
        },
        "ScheduledEventsRepository._notify_needed": {
            "name": "_notify_needed",
            "location": 101,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "yoppinews-calendar-bot-master/src/notify_scheduled_events/__init__.py": {},
    "yoppinews-calendar-bot-master/src/summarize_schedules/app.py": {
        "lambda_handler": {
            "name": "lambda_handler",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "_": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "__": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "handle": {
            "name": "handle",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "summarizer": [
                    "List[int]",
                    "float"
                ],
                "calendars": [
                    "Optional[logging.Logger]",
                    "str",
                    "int",
                    "Callable[[str], None]",
                    "Iterable['Context']"
                ],
                "timezone": [
                    "int",
                    "float",
                    "datetime.timezone",
                    "str",
                    "datetime.timedelta"
                ],
                "logger": [
                    "logging.Logger",
                    "str",
                    "bool",
                    "Callable",
                    "int"
                ]
            }
        },
        "tweet": {
            "name": "tweet",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {
                "m": [
                    "str",
                    "bool",
                    "Mapping[str, Any]",
                    "int",
                    "Tuple[str]"
                ],
                "logger": [
                    "logging.Logger",
                    "Tuple[str]",
                    "int",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "yoppinews-calendar-bot-master/src/summarize_schedules/calendar_summarizer.py": {
        "GoogleCalendarSummarizer.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "calendar_service": [
                    "int",
                    "bool"
                ],
                "timezone": [
                    "int",
                    "bool"
                ],
                "logger": [
                    "str",
                    "logging.Logger",
                    "List[str]",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "GoogleCalendarSummarizer.summarize": {
            "name": "summarize",
            "location": 18,
            "return": [
                "list",
                "List[T]",
                "List[float]",
                "int"
            ],
            "arguments": {
                "self": [],
                "calendar_id": [
                    "int",
                    "str",
                    "bool"
                ],
                "message_template": [
                    "str",
                    "datetime.datetime.datetime",
                    "datetime.timedelta",
                    "datetime.datetime"
                ],
                "date": [
                    "datetime.datetime",
                    "str",
                    "int",
                    "Sequence[str]"
                ],
                "max_results": [
                    "datetime.datetime",
                    "int",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "GoogleCalendarSummarizer._get_events": {
            "name": "_get_events",
            "location": 42,
            "return": [
                "[dict]"
            ],
            "arguments": {
                "self": [],
                "calendar_id": [
                    "str",
                    "datetime.date",
                    "List[float]"
                ],
                "date": [
                    "datetime.date",
                    "Callable[[], datetime.datetime]",
                    "datetime.datetime",
                    "str"
                ],
                "max_results": [
                    "str",
                    "datetime.date",
                    "List[float]"
                ]
            }
        },
        "GoogleCalendarSummarizer._grouping": {
            "name": "_grouping",
            "location": 63,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "events": [
                    "str",
                    "int",
                    "T"
                ],
                "message_template": [
                    "str"
                ]
            }
        }
    },
    "yoppinews-calendar-bot-master/src/summarize_schedules/__init__.py": {},
    "yoppinews-calendar-bot-master/tests/conftest.py": {},
    "yoppinews-calendar-bot-master/tests/layers/shared_files/test_calendar_config.py": {
        "test_calendar_bot_config_empty": {
            "name": "test_calendar_bot_config_empty",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_calendar_bot_config": {
            "name": "test_calendar_bot_config",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "yoppinews-calendar-bot-master/tests/notify_scheduled_events/test_scheduled_event.py": {
        "test_scheduled_event": {
            "name": "test_scheduled_event",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_scheduled_event_with_html_tags": {
            "name": "test_scheduled_event_with_html_tags",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_scheduled_event_with_nbsp": {
            "name": "test_scheduled_event_with_nbsp",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "yoppinews-calendar-bot-master/tests/summarize_schedules/test_calendar_summarizer.py": {
        "test_grouping": {
            "name": "test_grouping",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
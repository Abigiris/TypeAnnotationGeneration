{
    "Advanced-Comparch-master/make.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 8,
            "return": [
                "typing.Text",
                "str",
                "float"
            ],
            "arguments": {}
        },
        "make": {
            "name": "make",
            "location": 25,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "str",
                    "int",
                    "List[str]",
                    "list[str]",
                    "Sequence[str]",
                    "typing.Sequence[str]"
                ],
                "exercise": [
                    "str"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/setup.py": {},
    "Advanced-Comparch-master/src/ex1/install.py": {
        "cslab_helpcode": {
            "name": "cslab_helpcode",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "root": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "pin": [
                    "str",
                    "Counter[str]",
                    "typing.Counter",
                    "Callable[[], str]",
                    "typing.Callable[[], str]"
                ]
            }
        },
        "pintool": {
            "name": "pintool",
            "location": 57,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "root": [
                    "str",
                    "Callable[[str], str]",
                    "typing.Callable[str, str]",
                    "IO[Any]",
                    "typing.IO",
                    "TextIO",
                    "typing.TextIO",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "parsec": {
            "name": "parsec",
            "location": 84,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "root": [
                    "str",
                    "Optional[Mapping[str, Any]]",
                    "typing.Mapping",
                    "None"
                ]
            }
        },
        "cslab_fixes": {
            "name": "cslab_fixes",
            "location": 117,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "sims": [
                    "str",
                    "Tuple[str, str]",
                    "tuple[typing.Union[str,str]]"
                ],
                "cslab": [
                    "str",
                    "bool"
                ]
            }
        },
        "build_parsec": {
            "name": "build_parsec",
            "location": 135,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "sims": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "build": [],
                "packages": [
                    "bytes",
                    "str",
                    "list"
                ]
            }
        },
        "create_workspace": {
            "name": "create_workspace",
            "location": 162,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "sims": [
                    "str",
                    "int",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Tuple[str]",
                    "tuple[str]",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "cslab": [
                    "str",
                    "bool",
                    "List[str]",
                    "list[str]"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/ex1/plot.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 20,
            "return": [
                "bool",
                "List[int]",
                "int",
                "str",
                "Callable"
            ],
            "arguments": {}
        },
        "find_stats": {
            "name": "find_stats",
            "location": 42,
            "return": [
                "str",
                "List[int]"
            ],
            "arguments": {
                "outputs": [
                    "dict[str, typing.Any]",
                    "Sequence[str]",
                    "bool",
                    "Dict[str, Any]",
                    "Iterable[str]"
                ],
                "config": [
                    "dict",
                    "Optional[List[str]]"
                ]
            }
        },
        "plot_one": {
            "name": "plot_one",
            "location": 114,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "dataframe": [
                    "dict",
                    "Callable[[Any], bool]",
                    "Dict[str, numpy.ndarray]",
                    "float"
                ],
                "savedir": [
                    "bool",
                    "str",
                    "List[Dict]",
                    "list[dict[, ]]",
                    "dict",
                    "dict[, ]"
                ],
                "config": [
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "str",
                    "dict"
                ]
            }
        },
        "plot": {
            "name": "plot",
            "location": 174,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "typing.Sequence[str]",
                    "str",
                    "Sequence[str]",
                    "bool",
                    "None",
                    "int",
                    "Optional[int]",
                    "Optional[bool]"
                ],
                "results": [
                    "str",
                    "int"
                ],
                "plots": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "benchmarks": [
                    "str",
                    "Sequence[str]",
                    "bool",
                    "int",
                    "Optional[int]",
                    "Optional[bool]"
                ],
                "config": [
                    "str",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/ex1/plot10m.py": {
        "find_stats": {
            "name": "find_stats",
            "location": 19,
            "return": [
                "str",
                "Optional[float]",
                "dict",
                "pandas.DataFrame",
                "bool"
            ],
            "arguments": {
                "output": [
                    "str"
                ]
            }
        },
        "plot_one": {
            "name": "plot_one",
            "location": 58,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "dataframe": [
                    "str",
                    "bool",
                    "float",
                    "int",
                    "Union[int, float, complex]"
                ],
                "savedir": [
                    "bool",
                    "str",
                    "List[Dict]",
                    "list[dict[, ]]",
                    "dict",
                    "dict[, ]"
                ],
                "config": [
                    "dict[str, typing.Any]",
                    "int",
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "plot": {
            "name": "plot",
            "location": 96,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "typing.Sequence[str]",
                    "str",
                    "Sequence[str]",
                    "bool",
                    "None",
                    "int",
                    "Optional[int]",
                    "Optional[bool]"
                ],
                "results": [
                    "str",
                    "int"
                ],
                "plots": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "benchmarks": [
                    "str",
                    "Sequence[str]",
                    "bool",
                    "int",
                    "Optional[int]",
                    "Optional[bool]"
                ],
                "config": [
                    "str",
                    "typing.Text"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/ex1/run.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 16,
            "return": [
                "bool",
                "tuple[]"
            ],
            "arguments": {}
        },
        "preparation": {
            "name": "preparation",
            "location": 44,
            "return": [
                "str",
                "bool",
                "pandas.DataFrame",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "root": [
                    "str"
                ],
                "benchmarks": [
                    "dict[, ]",
                    "Sequence[str]",
                    "dict",
                    "int"
                ]
            }
        },
        "zip_benchmarks_cmds": {
            "name": "zip_benchmarks_cmds",
            "location": 78,
            "return": [
                "list[tuple[typing.Text]]",
                "List[str]",
                "bool",
                "List[List[Any]]"
            ],
            "arguments": {
                "benchmarks": [
                    "str",
                    "bool",
                    "int"
                ],
                "cmds": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "configure_options": {
            "name": "configure_options",
            "location": 113,
            "return": [
                "list[]",
                "dict",
                "Dict[str, Set[str]]",
                "Dict[str, Any]",
                "Callable",
                "List['PydanticModelField']"
            ],
            "arguments": {
                "config": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "run_one": {
            "name": "run_one",
            "location": 157,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "option": [
                    "int",
                    "str",
                    "numpy.ndarray"
                ],
                "main": [
                    "Union[str, IO]",
                    "set",
                    "bool"
                ],
                "results": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ],
                "cmd": [
                    "list[tuple[typing.Union[bool,str]]]",
                    "str",
                    "list[]",
                    "List[Tuple[bool, str]]",
                    "list",
                    "bytes"
                ],
                "cwd": [
                    "bool",
                    "str",
                    "list[str]",
                    "int",
                    "List[str]"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 187,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "str"
                ],
                "results": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "benchmarks": [
                    "str"
                ],
                "config": [
                    "str"
                ],
                "time": [
                    "str",
                    "Optional[str]",
                    "int",
                    "None",
                    "Dict[str, Union[str, Any]]",
                    "dict[str, typing.Union[str,typing.Any]]",
                    "Optional[Dict[str, Any]]",
                    "tuple[]",
                    "typing.Type",
                    "tuple",
                    "Type[Any]"
                ]
            }
        },
        "configure_options.convert": {
            "name": "convert",
            "location": 139,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "x": [
                    "list",
                    "List[Union[int, float]]",
                    "List[Dict]",
                    "int",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/ex1/run10m.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 16,
            "return": [
                "int",
                "Optional[Dict[str, int]]",
                "str",
                "numpy.array"
            ],
            "arguments": {}
        },
        "preparation": {
            "name": "preparation",
            "location": 38,
            "return": [
                "str",
                "bool",
                "pandas.DataFrame",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "root": [
                    "str"
                ],
                "benchmarks": [
                    "dict[, ]",
                    "Sequence[str]",
                    "dict",
                    "int"
                ]
            }
        },
        "zip_benchmarks_cmds": {
            "name": "zip_benchmarks_cmds",
            "location": 72,
            "return": [
                "list[tuple[typing.Text]]",
                "List[str]",
                "bool",
                "List[List[Any]]"
            ],
            "arguments": {
                "benchmarks": [
                    "str",
                    "bool",
                    "int"
                ],
                "cmds": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "configure_options": {
            "name": "configure_options",
            "location": 107,
            "return": [
                "list[]",
                "dict",
                "Dict[str, Set[str]]",
                "Dict[str, Any]",
                "Callable",
                "List['PydanticModelField']"
            ],
            "arguments": {
                "config": [
                    "dict",
                    "dict[, ]",
                    "list",
                    "list[]"
                ]
            }
        },
        "run_one": {
            "name": "run_one",
            "location": 136,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "option": [
                    "int",
                    "str",
                    "numpy.ndarray"
                ],
                "main": [
                    "Union[str, IO]",
                    "set",
                    "bool"
                ],
                "results": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ],
                "cmd": [
                    "list[tuple[typing.Union[bool,str]]]",
                    "str",
                    "list[]",
                    "List[Tuple[bool, str]]",
                    "list",
                    "bytes"
                ],
                "cwd": [
                    "bool",
                    "str",
                    "list[str]",
                    "int",
                    "List[str]"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 166,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "str"
                ],
                "results": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "benchmarks": [
                    "str"
                ],
                "config": [
                    "str"
                ],
                "time": [
                    "str",
                    "Optional[str]",
                    "int",
                    "None",
                    "Dict[str, Union[str, Any]]",
                    "dict[str, typing.Union[str,typing.Any]]",
                    "Optional[Dict[str, Any]]",
                    "tuple[]",
                    "typing.Type",
                    "tuple",
                    "Type[Any]"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/ex2/plot.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 28,
            "return": [
                "None",
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "fix_name": {
            "name": "fix_name",
            "location": 57,
            "return": [
                "str",
                "int",
                "Dict[str, Any]",
                "Container[str]",
                "bool",
                "Union[List, Dict]"
            ],
            "arguments": {
                "benchmark": [
                    "str",
                    "Exception"
                ]
            }
        },
        "make_colors": {
            "name": "make_colors",
            "location": 75,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "find_stats": {
            "name": "find_stats",
            "location": 84,
            "return": [
                "dict[str, float]",
                "int",
                "set",
                "str"
            ],
            "arguments": {
                "output": [
                    "str"
                ]
            }
        },
        "plot_one": {
            "name": "plot_one",
            "location": 146,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "stats": [
                    "dict[, ]",
                    "dict[str, numpy.ndarray]",
                    "str",
                    "dict",
                    "List[Dict[str, Any]]",
                    "Dict[str, numpy.ndarray]",
                    "List[float]"
                ],
                "benchmark": [
                    "str",
                    "bool"
                ],
                "savedir": [
                    "str",
                    "bool"
                ]
            }
        },
        "plot": {
            "name": "plot",
            "location": 175,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "str",
                    "typing.Sequence[str]",
                    "Sequence[str]",
                    "list[str]",
                    "List[str]",
                    "Iterable[Dict[str, str]]"
                ],
                "results": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "plots": [
                    "str",
                    "List[str]",
                    "list[str]",
                    "Optional[str]",
                    "None"
                ],
                "benchmarks": [
                    "str",
                    "list[str]",
                    "Sequence[str]",
                    "List[str]",
                    "Iterable[Dict[str, str]]"
                ]
            }
        },
        "make_colors.random_hex": {
            "name": "random_hex",
            "location": 77,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "Advanced-Comparch-master/src/ex2/run.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 18,
            "return": [
                "int",
                "Optional[Dict[str, int]]",
                "str"
            ],
            "arguments": {}
        },
        "preparation": {
            "name": "preparation",
            "location": 37,
            "return": [
                "str",
                "bool",
                "pandas.DataFrame",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "root": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "benchmarks": [
                    "dict[, ]",
                    "Sequence[str]",
                    "dict",
                    "int"
                ]
            }
        },
        "commands": {
            "name": "commands",
            "location": 67,
            "return": [
                "tuple[list[typing.Union[str,int]]]",
                "list",
                "Callable[[Mapping], T]",
                "int",
                "Tuple[str, str]",
                "str"
            ],
            "arguments": {
                "root": [
                    "str"
                ],
                "benchmarks": [
                    "dict[, ]",
                    "Sequence[str]",
                    "dict",
                    "int"
                ]
            }
        },
        "run_one": {
            "name": "run_one",
            "location": 117,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "config": [
                    "str",
                    "bool",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "main": [
                    "list[str]",
                    "str",
                    "list[dict[, ]]",
                    "Dict[str, Any]",
                    "List[str]",
                    "List[dict]"
                ],
                "time": [
                    "bool",
                    "str",
                    "tuple[]",
                    "int",
                    "pandas.DataFrame",
                    "tuple"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 152,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "root": [
                    "str",
                    "int",
                    "Optional[\"LocalizedString\"]",
                    "None"
                ],
                "results": [
                    "List[str]",
                    "str",
                    "list[str]",
                    "tuple",
                    "tuple[]",
                    "List[int]",
                    "list[int]"
                ],
                "benchmarks": [
                    "List[str]",
                    "str",
                    "list[str]",
                    "tuple",
                    "tuple[]",
                    "List[int]",
                    "list[int]"
                ],
                "configs": [
                    "int",
                    "bool",
                    "pandas.DataFrame",
                    "List[int]",
                    "dict",
                    "List[str]"
                ],
                "time": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/helper/dirs.py": {
        "updir": {
            "name": "updir",
            "location": 8,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "root": [
                    "str",
                    "int"
                ],
                "dirs": [
                    "Sized",
                    "int"
                ]
            }
        }
    },
    "Advanced-Comparch-master/src/helper/__init__.py": {}
}
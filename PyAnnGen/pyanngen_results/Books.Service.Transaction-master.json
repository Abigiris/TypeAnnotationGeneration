{
    "Books.Service.Transaction-master/setup.py": {},
    "Books.Service.Transaction-master/tests/context.py": {},
    "Books.Service.Transaction-master/tests/test_database.py": {
        "transaction_db": {
            "name": "transaction_db",
            "location": 15,
            "return": [
                "str",
                "Tuple[int, int, int]",
                "int",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "test_database_whenconnect_thenconnectcalled": {
            "name": "test_database_whenconnect_thenconnectcalled",
            "location": 23,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "patch_couch": [
                    "str"
                ],
                "transaction_db": []
            }
        },
        "test_database_whendisconnect_thendisconnectcalled": {
            "name": "test_database_whendisconnect_thendisconnectcalled",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "transaction_db": [
                    "Set[str]"
                ]
            }
        }
    },
    "Books.Service.Transaction-master/tests/test_health.py": {
        "health_controller": {
            "name": "health_controller",
            "location": 6,
            "return": [
                "int",
                "Sequence[str]"
            ],
            "arguments": {}
        },
        "test_health_whenok_then200": {
            "name": "test_health_whenok_then200",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "health_controller": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_health_whenhealth_then200": {
            "name": "test_health_whenhealth_then200",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "health_controller": [
                    "str",
                    "int",
                    "Sequence[int]"
                ]
            }
        }
    },
    "Books.Service.Transaction-master/transaction/config.py": {},
    "Books.Service.Transaction-master/transaction/__init__.py": {},
    "Books.Service.Transaction-master/transaction/controllers/health.py": {
        "HealthController.ok": {
            "name": "ok",
            "location": 16,
            "return": [
                "tuple[typing.Union[typing.Text,int]]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthController.health": {
            "name": "health",
            "location": 20,
            "return": [
                "tuple[int]",
                "int",
                "str",
                "List[str]",
                "List[dict]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthController.db_health": {
            "name": "db_health",
            "location": 25,
            "return": [
                "tuple[int]",
                "bool",
                "int",
                "str",
                "Optional[Callable]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Books.Service.Transaction-master/transaction/controllers/transaction.py": {
        "TransactionController.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransactionController.post": {
            "name": "post",
            "location": 13,
            "return": [
                "tuple[typing.Union[typing.Text,int]]",
                "Optional[Type]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Books.Service.Transaction-master/transaction/controllers/__init__.py": {},
    "Books.Service.Transaction-master/transaction/storage/database.py": {
        "connect": {
            "name": "connect",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "health": {
            "name": "health",
            "location": 24,
            "return": [
                "Tuple[(bool, dict)]"
            ],
            "arguments": {}
        },
        "disconnect": {
            "name": "disconnect",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Books.Service.Transaction-master/transaction/storage/__init__.py": {}
}
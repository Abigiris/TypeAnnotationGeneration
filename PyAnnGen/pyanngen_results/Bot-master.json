{
    "Bot-master/src/baseCommandModule.py": {
        "BaseCommandModule.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "BaseCommandModule.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "List[str]",
                    "list[str]",
                    "list",
                    "list[]",
                    "Callable[[], T]",
                    "typing.Callable[[], T]"
                ]
            }
        }
    },
    "Bot-master/src/commandErrorHandler.py": {
        "setup": {
            "name": "setup",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "Callable",
                    "str",
                    "bool",
                    "Optional[str]",
                    "Callable[[str], None]"
                ]
            }
        },
        "CommandErrorHandler.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "CommandErrorHandler.exception_to_string": {
            "name": "exception_to_string",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "excp": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "Bot-master/src/config.py": {
        "Config.__new__": {
            "name": "__new__",
            "location": 8,
            "return": [
                "Dict[str, Any]",
                "Dict[str, str]",
                "Optional[str]",
                "Mapping[str, int]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type",
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "Type[Any]",
                    "Dict[str, Any]",
                    "None",
                    "Optional[str]"
                ]
            }
        },
        "Config.loadConfig": {
            "name": "loadConfig",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "None",
                    "Optional[flask_dialogflow.json.JSON]",
                    "typing.Callable[..., None]",
                    "Callable[..., None]",
                    "list[dict[, ]]",
                    "List[Dict]",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "List[Dict[str, Any]]",
                    "typing.Type",
                    "Type[T]",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "T"
                ]
            }
        }
    },
    "Bot-master/src/help.py": {
        "setup": {
            "name": "setup",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": []
            }
        },
        "Help.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "Bot-master/src/StatBotorio.py": {
        "initCogs": {
            "name": "initCogs",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bot-master/src/cogs/debug.py": {
        "setup": {
            "name": "setup",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "asyncio.Lock",
                    "str",
                    "int"
                ]
            }
        },
        "Debug.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "Bot-master/src/cogs/playerStats.py": {
        "setup": {
            "name": "setup",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "PlayerStats.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        }
    },
    "Bot-master/src/cogs/rconCommands.py": {
        "setup": {
            "name": "setup",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "int",
                    "bool",
                    "discord.excommands.boBot",
                    "str",
                    "Optional[asyncio.AbstractEventLoop]"
                ]
            }
        },
        "RconCommands.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        }
    },
    "Bot-master/src/cogs/serverStats.py": {
        "setup": {
            "name": "setup",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "ServerStats.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "Bot-master/src/cogs/__init__.py": {},
    "Bot-master/src/data/schema.py": {},
    "Bot-master/src/data/session.py": {
        "connect": {
            "name": "connect",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Bot-master/src/data/storedProc.py": {
        "sqlFunc": {
            "name": "sqlFunc",
            "location": 7,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {}
        },
        "sqlFunc.decorator": {
            "name": "decorator",
            "location": 9,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "PlayersOnline_Result.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayersOnline_Result.execute": {
            "name": "execute",
            "location": 36,
            "return": [
                "list[]",
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "PlayersOnline_Result.bind": {
            "name": "bind",
            "location": 49,
            "return": [
                "PlayersOnline_Result"
            ],
            "arguments": {
                "x": [
                    "data.AbstractTuple"
                ]
            }
        },
        "sqlFunc.decorator.wrapper": {
            "name": "wrapper",
            "location": 10,
            "return": [
                "Dict[str, int]",
                "Generator",
                "int"
            ],
            "arguments": {}
        }
    },
    "Bot-master/src/data/__init__.py": {},
    "Bot-master/src/models/configModel.py": {},
    "Bot-master/src/models/factorioModels.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.__repr__": {
            "name": "__repr__",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mod.__repr__": {
            "name": "__repr__",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerConfig.__repr__": {
            "name": "__repr__",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerConfig.as_dict": {
            "name": "as_dict",
            "location": 55,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bot-master/src/models/__init__.py": {},
    "Bot-master/src/utilities/diagnostics.py": {
        "executionTime": {
            "name": "executionTime",
            "location": 7,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {}
        },
        "verboseError": {
            "name": "verboseError",
            "location": 20,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [
                    "typing.Callable[, ]",
                    "T",
                    "typing.Type",
                    "Callable",
                    "Type",
                    "type"
                ]
            }
        },
        "benchmark": {
            "name": "benchmark",
            "location": 36,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [
                    "typing.Callable[, ]",
                    "T",
                    "typing.Type",
                    "Callable",
                    "Type"
                ]
            }
        },
        "executionTime.decorator": {
            "name": "decorator",
            "location": 8,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "executionTime.decorator.wrapper": {
            "name": "wrapper",
            "location": 10,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {}
        }
    },
    "Bot-master/src/utilities/embed.py": {
        "Embed.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Embed.getColorList": {
            "name": "getColorList",
            "location": 42,
            "return": [
                "list[list[int]]",
                "bool",
                "List[str]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Embed.setTitleDesc": {
            "name": "setTitleDesc",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "int",
                    "str",
                    "None",
                    "float",
                    "Optional[int]",
                    "bool"
                ],
                "desc": [
                    "int",
                    "str",
                    "None",
                    "float",
                    "Optional[int]",
                    "bool"
                ]
            }
        }
    },
    "Bot-master/src/utilities/handlers.py": {
        "handle_admins": {
            "name": "handle_admins",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_data": [
                    "str"
                ]
            }
        },
        "handle_mods": {
            "name": "handle_mods",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "mods_json": [
                    "str",
                    "dict",
                    "List[List[str]]",
                    "pathlib.Path"
                ],
                "mod_settings_json": [
                    "str",
                    "pathlib.Path",
                    "dict"
                ],
                "files": [
                    "str",
                    "bool"
                ]
            }
        },
        "handle_mod_database": {
            "name": "handle_mod_database",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "handle_config": {
            "name": "handle_config",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "dict"
                ]
            }
        },
        "handle_ip": {
            "name": "handle_ip",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "ip": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "handle_config.munge_value": {
            "name": "munge_value",
            "location": 132,
            "return": [
                "bool"
            ],
            "arguments": {
                "v": [
                    "int",
                    "str",
                    "list"
                ]
            }
        }
    },
    "Bot-master/src/utilities/images.py": {},
    "Bot-master/src/utilities/rcon.py": {
        "RconConnection.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server": [
                    "models.factorioModels.Server"
                ],
                "ctx": [
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        }
    },
    "Bot-master/src/utilities/table.py": {
        "Table.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.addRow": {
            "name": "addRow",
            "location": 15,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.toString": {
            "name": "toString",
            "location": 21,
            "return": [
                "typing.Text",
                "str",
                "Dict[str, str]",
                "Optional[Dict[str, Any]]",
                "Tuple[List[int], List[int], List[int]]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Col.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "header": [
                    "str",
                    "int",
                    "bool"
                ],
                "width": [
                    "int"
                ]
            }
        }
    },
    "Bot-master/src/utilities/textFileFollow.py": {
        "follow": {
            "name": "follow",
            "location": 6,
            "return": [
                "generator"
            ],
            "arguments": {
                "thefile": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "Bot-master/src/utilities/__init__.py": {}
}
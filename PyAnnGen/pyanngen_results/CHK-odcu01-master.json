{
    "CHK-odcu01-master/lib/send_command_to_server.py": {},
    "CHK-odcu01-master/lib/runner/credentials_config_file.py": {
        "read_from_config_file": {
            "name": "read_from_config_file",
            "location": 4,
            "return": [
                "str",
                "Dict[str,str]",
                "bytes",
                "Dict[str,Any]",
                "Dict"
            ],
            "arguments": {
                "key": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "read_from_config_file_with_default": {
            "name": "read_from_config_file_with_default",
            "location": 9,
            "return": [
                "int",
                "str",
                "Mapping[str,Any]",
                "bool"
            ],
            "arguments": {
                "key": [
                    "Sequence[Any]",
                    "Dict",
                    "Callable",
                    "Dict[str,Callable]",
                    "bytes",
                    "str"
                ],
                "default_value": [
                    "Sequence[Any]",
                    "Dict",
                    "Callable",
                    "Dict[str,Callable]",
                    "bytes",
                    "str"
                ]
            }
        },
        "read_properties_file": {
            "name": "read_properties_file",
            "location": 17,
            "return": [
                "Optional[Dict[(str, Union[(bool, str)])]]"
            ],
            "arguments": {}
        },
        "load_properties": {
            "name": "load_properties",
            "location": 23,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "List[Union[Any,Any]]",
                    "int",
                    "bool"
                ],
                "sep": [
                    "str",
                    "Text"
                ],
                "comment_char": [
                    "str",
                    "Text"
                ]
            }
        }
    },
    "CHK-odcu01-master/lib/runner/user_input_action.py": {
        "get_user_input": {
            "name": "get_user_input",
            "location": 1,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "CHK-odcu01-master/lib/runner/utils.py": {
        "Utils.get_config": {
            "name": "get_config",
            "location": 10,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {}
        },
        "Utils.get_runner_config": {
            "name": "get_runner_config",
            "location": 20,
            "return": [
                "str",
                "int",
                "Dict[str, Any]",
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "CHK-odcu01-master/lib/solutions/CHK/checkout_solution.py": {
        "count_items": {
            "name": "count_items",
            "location": 91,
            "return": [
                "Dict[(Any, int)]"
            ],
            "arguments": {
                "skus": [
                    "Dict",
                    "List[int]",
                    "Dict[str,list]",
                    "Tuple[Union[list,list]]",
                    "Optional[dict]",
                    "str",
                    "Optional[str]",
                    "Dict[str,List]",
                    "Tuple[List,List]"
                ]
            }
        },
        "apply_inter_item_promotions": {
            "name": "apply_inter_item_promotions",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "promotions": [
                    "Dict[str,dict[str,int]]",
                    "Dict[str,Dict[str,int]]",
                    "bool",
                    "int"
                ],
                "counter": [
                    "str"
                ]
            }
        },
        "apply_group_promotions": {
            "name": "apply_group_promotions",
            "location": 112,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "promotions": [
                    "str",
                    "int",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "counter": []
            }
        },
        "checkout_items": {
            "name": "checkout_items",
            "location": 132,
            "return": [
                "bool",
                "str",
                "float",
                "List[str]"
            ],
            "arguments": {
                "price_table": [
                    "str",
                    "Callable",
                    "Set",
                    "Callable[[Any],None]"
                ],
                "counter": [
                    "Dict[str,int]",
                    "Dict",
                    "Dict[str,Any]",
                    "bool",
                    "Dict[str,Optional[Any]]",
                    "Iterable[Tuple[Hashable,Any]]"
                ]
            }
        },
        "checkout": {
            "name": "checkout",
            "location": 144,
            "return": [
                "int",
                "bytes",
                "str"
            ],
            "arguments": {
                "skus": [
                    "str",
                    "Optional[Any]",
                    "Any",
                    "List[int]",
                    "int",
                    "Union[str,Tuple[Any]]",
                    "None",
                    "Tuple[Any]",
                    "Union[int,List[int]]"
                ]
            }
        },
        "Item.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "offers": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Item.checkout": {
            "name": "checkout",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "qty": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "CHK-odcu01-master/lib/solutions/FIZ/fizz_buzz_solution.py": {
        "fizz_buzz": {
            "name": "fizz_buzz",
            "location": 2,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "number": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "CHK-odcu01-master/lib/solutions/HLO/hello_solution.py": {
        "hello": {
            "name": "hello",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "friend_name": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "Any",
                    "int",
                    "Iterable[float]",
                    "Callable",
                    "Optional[Callable]"
                ]
            }
        }
    },
    "CHK-odcu01-master/lib/solutions/SUM/sum_solution.py": {
        "compute": {
            "name": "compute",
            "location": 2,
            "return": [
                "str",
                "int",
                "float"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "str",
                    "Union[float,int]"
                ],
                "y": [
                    "int",
                    "float",
                    "str",
                    "Union[float,int]"
                ]
            }
        }
    },
    "CHK-odcu01-master/lib/solutions/TST/one.py": {
        "get": {
            "name": "get",
            "location": 2,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "CHK-odcu01-master/lib/solutions/TST/two.py": {
        "get": {
            "name": "get",
            "location": 2,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "CHK-odcu01-master/test/solution_tests/CHK/test_checkout.py": {
        "TestItem.test_item_checkout_simple_item": {
            "name": "test_item_checkout_simple_item",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestItem.test_item_checkout_single_discount": {
            "name": "test_item_checkout_single_discount",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestItem.test_item_checkout_multi_discount": {
            "name": "test_item_checkout_multi_discount",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInterItemPromotions.test_inter_promotions": {
            "name": "test_inter_promotions",
            "location": 39,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGroupPromotions.test_group_promotions": {
            "name": "test_group_promotions",
            "location": 69,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCheckout.test_checkout_error": {
            "name": "test_checkout_error",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCheckout.test_checkout_no_error": {
            "name": "test_checkout_no_error",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCheckout.test_checkout_ok": {
            "name": "test_checkout_ok",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "CHK-odcu01-master/test/solution_tests/HLO/test_hello.py": {
        "TestHello.test_hello": {
            "name": "test_hello",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "CHK-odcu01-master/test/solution_tests/SUM/test_sum.py": {
        "TestSum.test_sum": {
            "name": "test_sum",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "CHK-odcu01-master/test/solution_tests/TST/test_one.py": {
        "TestSum.test_sum": {
            "name": "test_sum",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "DCCMedusaPackager-master/cx_setup.py": {
        "get_project_metadata": {
            "name": "get_project_metadata",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "create_msi_tablename": {
            "name": "create_msi_tablename",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "python_name": [
                    "str"
                ],
                "fullname": [
                    "bool",
                    "str"
                ]
            }
        }
    },
    "DCCMedusaPackager-master/setup.py": {},
    "DCCMedusaPackager-master/docs/source/conf.py": {
        "get_project_metadata": {
            "name": "get_project_metadata",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "DCCMedusaPackager-master/MedusaPackager/packager.py": {
        "identify_filetype": {
            "name": "identify_filetype",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "create_empty_package": {
            "name": "create_empty_package",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "find_package_files": {
            "name": "find_package_files",
            "location": 92,
            "return": [
                "MedusaPackageData"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "sort_package_by_type": {
            "name": "sort_package_by_type",
            "location": 113,
            "return": [
                "MedusaPackageData"
            ],
            "arguments": {
                "package": [
                    "str",
                    "int"
                ],
                "id_callback": [
                    "str",
                    "int"
                ]
            }
        },
        "default_grouper": {
            "name": "default_grouper",
            "location": 138,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "files": [
                    "str",
                    "BinaryIO",
                    "List[TextIO]"
                ]
            }
        },
        "dash_grouper": {
            "name": "dash_grouper",
            "location": 157,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "files": [
                    "str",
                    "BinaryIO",
                    "List[TextIO]",
                    "IO[str]",
                    "IO"
                ]
            }
        },
        "split_items": {
            "name": "split_items",
            "location": 176,
            "return": [
                "Generator[(MedusaPackageData, Any, None)]"
            ],
            "arguments": {
                "package": [
                    "str",
                    "int",
                    "List[Dict]",
                    "Callable",
                    "List[dict]",
                    "Union[Type,Tuple[Type,...]]",
                    "Type",
                    "Tuple[Union[Type,...]]"
                ],
                "key": [
                    "str",
                    "List[Dict]",
                    "int",
                    "Callable",
                    "Union[Type, Tuple[Type, ...]]"
                ]
            }
        },
        "MedusaPackageData.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MedusaPackageData.isBalanced": {
            "name": "isBalanced",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MedusaPackageData.all_files": {
            "name": "all_files",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MedusaPackageData.all_image_files": {
            "name": "all_image_files",
            "location": 66,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MedusaPackageData.__len__": {
            "name": "__len__",
            "location": 69,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "MedusaPackageData.sorted": {
            "name": "sorted",
            "location": 72,
            "return": [
                "MedusaPackageData"
            ],
            "arguments": {
                "self": [
                    "_TMedusaPackageData@@MedusaPackageData@@"
                ],
                "callback": [
                    "str",
                    "dict",
                    "bool",
                    "int",
                    "Tuple[int, int, str]"
                ]
            }
        },
        "MedusaPackageData.split_items": {
            "name": "split_items",
            "location": 81,
            "return": [
                "List[MedusaPackageData]"
            ],
            "arguments": {
                "self": [],
                "callback": [
                    "str",
                    "List[str]",
                    "Dict[str,Any]",
                    "Callable[,str]",
                    "IO[bytes]",
                    "bytes",
                    "IO"
                ]
            }
        },
        "MedusaPackageData.generate_deployment": {
            "name": "generate_deployment",
            "location": 84,
            "return": [
                "Generator[(package_packet, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "default_grouper.group_filter": {
            "name": "group_filter",
            "location": 146,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "dash_grouper.group_filter": {
            "name": "group_filter",
            "location": 164,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "str",
                    "float",
                    "MutableMapping[str, Any]"
                ]
            }
        }
    },
    "DCCMedusaPackager-master/MedusaPackager/processcli.py": {
        "find_arg_problems": {
            "name": "find_arg_problems",
            "location": 49,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "args": []
            }
        },
        "build_parser": {
            "name": "build_parser",
            "location": 61,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "setup": {
            "name": "setup",
            "location": 93,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "get_worker": {
            "name": "get_worker",
            "location": 107,
            "return": [
                "Union[(CopyWorker, MoveWorker)]"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Processor.process": {
            "name": "process",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "Iterable[Union[str, os.PathLike]]",
                    "Union[str, bytes]",
                    "Union[str, bytes, IO[bytes]]",
                    "Optional[Tuple[Any, Any]]"
                ],
                "destination": [
                    "str",
                    "Iterable[Union[str, os.PathLike]]",
                    "Union[str, bytes]",
                    "Union[str, bytes, IO[bytes]]",
                    "Optional[Tuple[Any, Any]]"
                ]
            }
        },
        "MoveWorker.process": {
            "name": "process",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "destination": [
                    "str"
                ]
            }
        },
        "CopyWorker.process": {
            "name": "process",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "float",
                    "Optional[str]"
                ],
                "destination": [
                    "str",
                    "float",
                    "Optional[str]"
                ]
            }
        }
    },
    "DCCMedusaPackager-master/MedusaPackager/__init__.py": {},
    "DCCMedusaPackager-master/MedusaPackager/__main__.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "DCCMedusaPackager-master/tests/test_package_files.py": {
        "TestFind_package_files_nodashes.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files_nodashes.test_find_package_imageonly": {
            "name": "test_find_package_imageonly",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files_nodashes.test_find_package_ignored": {
            "name": "test_find_package_ignored",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files_nodashes.test_split_item_level_iter": {
            "name": "test_split_item_level_iter",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files_nodashes.test_sorted": {
            "name": "test_sorted",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files_nodashes.test_generate_deployment": {
            "name": "test_generate_deployment",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files2.setUp": {
            "name": "setUp",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files2.test_find_package_imageonly": {
            "name": "test_find_package_imageonly",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files2.test_find_package_ignored": {
            "name": "test_find_package_ignored",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files2.test_split_item_level_iter": {
            "name": "test_split_item_level_iter",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files2.test_sorted": {
            "name": "test_sorted",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files2.test_generate_deployment": {
            "name": "test_generate_deployment",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files.setUp": {
            "name": "setUp",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files.test_find_package_imageonly": {
            "name": "test_find_package_imageonly",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files.test_find_package_ignored": {
            "name": "test_find_package_ignored",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files.test_split_item_level_iter": {
            "name": "test_split_item_level_iter",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files.test_sorted": {
            "name": "test_sorted",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFind_package_files.test_generate_deployment": {
            "name": "test_generate_deployment",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "DCCMedusaPackager-master/tests/__init__.py": {}
}
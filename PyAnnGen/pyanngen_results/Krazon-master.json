{
    "Krazon-master/.ycm_extra_conf.py": {
        "Settings": {
            "name": "Settings",
            "location": 1,
            "return": [
                "dict[typing.Text, typing.Text]",
                "str",
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "Krazon-master/krazon-bot.py": {},
    "Krazon-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Krazon-master/alembic/versions/19f4a63f6045_initial_structure.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Krazon-master/krazon/context.py": {},
    "Krazon-master/krazon/exceptions.py": {
        "ClipNotFound.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FilenameExists.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "MustBeConnected.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TooManyMembers.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Krazon-master/krazon/krazon.py": {
        "play_checks": {
            "name": "play_checks",
            "location": 147,
            "return": [
                "bool"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "discord.excommands.Context",
                    "click.Context"
                ]
            }
        },
        "Clip.get_path": {
            "name": "get_path",
            "location": 47,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "self": [],
                "storage_path": [
                    "pathlib.Path"
                ]
            }
        },
        "GuildVoiceState.__attrs_post_init__": {
            "name": "__attrs_post_init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GuildVoiceState.__reinitialize": {
            "name": "__reinitialize",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GuildVoiceState.is_playing": {
            "name": "is_playing",
            "location": 107,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GuildVoiceState.__play_next_clip": {
            "name": "__play_next_clip",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "Exception",
                    "Optional[Exception]",
                    "BaseException",
                    "str",
                    "None",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "GuildVoiceState.add_to_queue": {
            "name": "add_to_queue",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str",
                    "int",
                    "List[str]",
                    "list[str]"
                ],
                "path": [
                    "str"
                ],
                "user": [
                    "str",
                    "int",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "GuildVoiceState.skip": {
            "name": "skip",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SoundBoard.__attrs_post_init__": {
            "name": "__attrs_post_init__",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SoundBoard.storage_path": {
            "name": "storage_path",
            "location": 188,
            "return": [
                "Path",
                "pathlib.Path",
                "str",
                "List[str]",
                "Optional[pathlib.Path]",
                "pathlib.PosixPath"
            ],
            "arguments": {
                "self": []
            }
        },
        "SoundBoard.get_voice_state": {
            "name": "get_voice_state",
            "location": 191,
            "return": [
                "GuildVoiceState"
            ],
            "arguments": {
                "self": [],
                "guild": [
                    "dict[int, dict[, ]]",
                    "Dict[int, dict]",
                    "dict[str, typing.Any]",
                    "bool",
                    "Dict[str, Any]",
                    "discord.Guild",
                    "int"
                ]
            }
        },
        "Krazon.__init__": {
            "name": "__init__",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Krazon-master/krazon/__init__.py": {}
}
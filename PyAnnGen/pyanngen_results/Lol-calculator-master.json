{
    "Lol-calculator-master/manage.py": {},
    "Lol-calculator-master/apps/calc/admin.py": {},
    "Lol-calculator-master/apps/calc/apps.py": {},
    "Lol-calculator-master/apps/calc/models.py": {},
    "Lol-calculator-master/apps/calc/tests.py": {},
    "Lol-calculator-master/apps/calc/urls.py": {},
    "Lol-calculator-master/apps/calc/views.py": {
        "index": {
            "name": "index",
            "location": 11,
            "return": [
                "dict",
                "bytes",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "initializedb": {
            "name": "initializedb",
            "location": 13,
            "return": [
                "HttpResponse",
                "Optional[str]",
                "int",
                "Dict[str, Any]",
                "Dict[int, str]",
                "str",
                "List[DefaultDict]"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "champion_id_names": {
            "name": "champion_id_names",
            "location": 16,
            "return": [
                "JsonResponse",
                "bool",
                "str",
                "dict",
                "Dict[str, str]",
                "List[Dict[str, Any]]",
                "int"
            ],
            "arguments": {
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "get_item_ids": {
            "name": "get_item_ids",
            "location": 24,
            "return": [
                "JsonResponse",
                "Dict[str, Any]",
                "bool",
                "str",
                "Dict[str, Dict[str, str]]",
                "Optional[int]"
            ],
            "arguments": {
                "request": [
                    "dict[str, str]",
                    "django.http.HttpRequest",
                    "Dict[str, str]"
                ]
            }
        },
        "simulate_combat": {
            "name": "simulate_combat",
            "location": 32,
            "return": [
                "JsonResponse",
                "List[str]",
                "HttpResponseBadRequest",
                "Dict[str, Any]",
                "Dict[str, dict]",
                "str"
            ],
            "arguments": {
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "django.http.requesHttpRequest",
                    "dict"
                ]
            }
        }
    },
    "Lol-calculator-master/apps/calc/__init__.py": {},
    "Lol-calculator-master/apps/calc/calc_core/champion.py": {
        "load_item": {
            "name": "load_item",
            "location": 129,
            "return": [
                "Item"
            ],
            "arguments": {
                "item_id": [
                    "str"
                ]
            }
        },
        "Damage.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "Type",
                    "int",
                    "typing.Type",
                    "Dict[str, int]",
                    "dict[str, int]",
                    "dict",
                    "dict[, ]"
                ],
                "ratio": [
                    "int",
                    "str",
                    "bool"
                ],
                "amount": [
                    "float"
                ],
                "pen_armor_percent": [
                    "List[float]"
                ],
                "pen_lethality": [
                    "float"
                ],
                "pen_magic_flat": [
                    "float"
                ],
                "pen_magic_percent": [
                    "List[float]"
                ]
            }
        },
        "AbstractMinion.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool",
                    "Iterable[str]",
                    "typing.Iterable[str]"
                ]
            }
        },
        "AbstractMinion.get_maxhp": {
            "name": "get_maxhp",
            "location": 76,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractMinion.get_maxmp": {
            "name": "get_maxmp",
            "location": 78,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractMinion.get_attackdamage": {
            "name": "get_attackdamage",
            "location": 80,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractMinion.get_abilitypower": {
            "name": "get_abilitypower",
            "location": 82,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractMinion.get_armor": {
            "name": "get_armor",
            "location": 84,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractMinion.get_magic_resist": {
            "name": "get_magic_resist",
            "location": 92,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractMinion.take_damage": {
            "name": "take_damage",
            "location": 101,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "attack": [
                    "Damage"
                ]
            }
        },
        "ChampStatusModifier.__init__": {
            "name": "__init__",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "attribute_modifiers": [
                    "Dict[(Any, int)]"
                ],
                "condition": [
                    "str",
                    "bool",
                    "Iterable[str]",
                    "typing.Iterable[str]"
                ]
            }
        },
        "Buff.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Debuff.__init__": {
            "name": "__init__",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "onHitEffect.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "typing.Type",
                    "Type",
                    "type",
                    "Type[Any]"
                ],
                "damageamount": [
                    "float"
                ],
                "damageRatio": [
                    "str",
                    "int"
                ],
                "debuff": [
                    "Debuff"
                ],
                "origin": [
                    "AbstractMinion"
                ]
            }
        },
        "onHitEffect.apply_effect": {
            "name": "apply_effect",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "int",
                    "str",
                    "typing.Iterable[C]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Item.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "attribute_modifiers": [
                    "List[Tuple[(Any, float)]]"
                ],
                "unique_passives": [
                    "List[Tuple[(str, Tuple[(Any, int)])]]"
                ],
                "passive_effect": [
                    "Buff"
                ]
            }
        },
        "Tenacity_obj.__init__": {
            "name": "__init__",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tenacity_obj.overall_cc_length": {
            "name": "overall_cc_length",
            "location": 150,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.__init__": {
            "name": "__init__",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Champion.get_maxhp": {
            "name": "get_maxhp",
            "location": 270,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.get_maxmp": {
            "name": "get_maxmp",
            "location": 276,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.get_attackdamage": {
            "name": "get_attackdamage",
            "location": 282,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.get_abilitypower": {
            "name": "get_abilitypower",
            "location": 289,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.get_attack_time": {
            "name": "get_attack_time",
            "location": 291,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.get_attack_range": {
            "name": "get_attack_range",
            "location": 297,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.get_movespeed": {
            "name": "get_movespeed",
            "location": 299,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.gain_exp": {
            "name": "gain_exp",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exp_amount": [
                    "int"
                ]
            }
        },
        "Champion.set_level": {
            "name": "set_level",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": [
                    "str"
                ]
            }
        },
        "Champion.get_all_stats": {
            "name": "get_all_stats",
            "location": 311,
            "return": [
                "Dict[(str, Union[(float, int)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.level_up": {
            "name": "level_up",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Champion.add_stat_mod": {
            "name": "add_stat_mod",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stat": [
                    "bool",
                    "dict",
                    "dict[, ]",
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "mod": [
                    "float"
                ],
                "initial": [
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "Champion.add_item": {
            "name": "add_item",
            "location": 404,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "Item"
                ]
            }
        },
        "Champion.take_damage": {
            "name": "take_damage",
            "location": 406,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "attack": [
                    "Damage"
                ]
            }
        },
        "Champion.basic_attack": {
            "name": "basic_attack",
            "location": 435,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "AbstractMinion"
                ]
            }
        },
        "Champion.Spell1": {
            "name": "Spell1",
            "location": 443,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "int",
                    "str",
                    "typing.Iterable[C]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Champion.Spell2": {
            "name": "Spell2",
            "location": 445,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "int",
                    "str",
                    "typing.Iterable[C]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Champion.Spell3": {
            "name": "Spell3",
            "location": 447,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "int",
                    "str",
                    "typing.Iterable[C]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Champion.Spell4": {
            "name": "Spell4",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "int",
                    "str",
                    "typing.Iterable[C]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Champion.die": {
            "name": "die",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/champ_statistics.py": {
        "get_stat_from_virtual_stat": {
            "name": "get_stat_from_virtual_stat",
            "location": 91,
            "return": [
                "Dict[(ChampStatistic, int)]"
            ],
            "arguments": {
                "v": [
                    "Virtual_Champ_Statistic"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "get_stat_from_string": {
            "name": "get_stat_from_string",
            "location": 97,
            "return": [
                "Union[(ChampStatistic, Virtual_Champ_Statistic)]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/damage_ratio.py": {},
    "Lol-calculator-master/apps/calc/calc_core/damage_type.py": {},
    "Lol-calculator-master/apps/calc/calc_core/fetch_images.py": {
        "splitpath": {
            "name": "splitpath",
            "location": 7,
            "return": [
                "list[typing.Union[str,list[],dict[, ]]]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "maxdepth": [
                    "str",
                    "int"
                ]
            }
        },
        "load_champ_images": {
            "name": "load_champ_images",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "patch": [
                    "str",
                    "int",
                    "bytes",
                    "Iterable[str]",
                    "typing.Iterable[str]"
                ]
            }
        },
        "load_item_images": {
            "name": "load_item_images",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "patch": [
                    "str"
                ]
            }
        },
        "load_rune_images": {
            "name": "load_rune_images",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "load_summoner_spell_images": {
            "name": "load_summoner_spell_images",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "load_champion_spell_images": {
            "name": "load_champion_spell_images",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/initializedb.py": {
        "check_directory": {
            "name": "check_directory",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_and_populate_table": {
            "name": "create_and_populate_table",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "table_name": [
                    "str"
                ],
                "columns": [
                    "Dict[(str, str)]"
                ],
                "values": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        },
        "set_champs_table": {
            "name": "set_champs_table",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_statistics_table": {
            "name": "set_statistics_table",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_item_table": {
            "name": "set_item_table",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_item_recipes": {
            "name": "set_item_recipes",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "set_item_stats": {
            "name": "set_item_stats",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_and_populate_table.clear_table": {
            "name": "clear_table",
            "location": 36,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "create_and_populate_table.create_table": {
            "name": "create_table",
            "location": 41,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "create_and_populate_table.insert_data": {
            "name": "insert_data",
            "location": 47,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/resourcebar.py": {
        "resourcebar_from_text": {
            "name": "resourcebar_from_text",
            "location": 16,
            "return": [
                "ResourceBarType"
            ],
            "arguments": {
                "type": [
                    "str"
                ]
            }
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/tests.py": {
        "CanInstantiate.basic_test": {
            "name": "basic_test",
            "location": 5,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/timer.py": {
        "get_status": {
            "name": "get_status",
            "location": 4,
            "return": [
                "dict"
            ],
            "arguments": {
                "blue_champ": [
                    "float",
                    "int",
                    "bytes"
                ],
                "red_champ": [
                    "float",
                    "int",
                    "bytes"
                ],
                "time_elapsed": [
                    "float"
                ]
            }
        },
        "run_combat": {
            "name": "run_combat",
            "location": 10,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "blue_champion_name": [
                    "str"
                ],
                "blue_champ_level": [
                    "str"
                ],
                "blue_champ_items": [
                    "List[str]"
                ],
                "red_champion_name": [
                    "str"
                ],
                "red_champ_level": [
                    "str"
                ],
                "red_champ_items": [
                    "List[str]"
                ]
            }
        }
    },
    "Lol-calculator-master/apps/calc/calc_core/__init__.py": {},
    "Lol-calculator-master/apps/calc/migrations/__init__.py": {},
    "Lol-calculator-master/lol_calculator/settings.py": {},
    "Lol-calculator-master/lol_calculator/urls.py": {},
    "Lol-calculator-master/lol_calculator/wsgi.py": {},
    "Lol-calculator-master/lol_calculator/__init__.py": {}
}
{
    "PhotoLog-master/app/util.py": {
        "get_db_config": {
            "name": "get_db_config",
            "location": 17,
            "return": [
                "Dict[(str, Optional[str])]"
            ],
            "arguments": {}
        },
        "get_db_prefix": {
            "name": "get_db_prefix",
            "location": 26,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        }
    },
    "PhotoLog-master/app/__init__.py": {},
    "PhotoLog-master/app/application/album.py": {
        "AlbumQueryService.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumQueryService.find_user_all": {
            "name": "find_user_all",
            "location": 20,
            "return": [
                "AlbumList",
                "tracim.models.auth.User",
                "app.db_models.User",
                "int"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "str",
                    "int",
                    "None",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "AlbumQueryService.find": {
            "name": "find",
            "location": 25,
            "return": [
                "Optional[lib.model.album.album.Album]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int"
                ]
            }
        },
        "AlbumQueryService.find_for_gallery": {
            "name": "find_for_gallery",
            "location": 31,
            "return": [
                "None",
                "Optional[str]",
                "bool",
                "Optional[float]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "int",
                    "str"
                ],
                "user": [
                    "str",
                    "lib.model.user.user.User",
                    "int",
                    "float"
                ]
            }
        },
        "AlbumCommandService.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumCommandService.register": {
            "name": "register",
            "location": 44,
            "return": [
                "str",
                "int",
                "bool",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "album": [
                    "str",
                    "bool"
                ]
            }
        },
        "AlbumCommandService.update": {
            "name": "update",
            "location": 48,
            "return": [
                "str",
                "int",
                "Dict[int,str]",
                "Optional[bool]",
                "Dict[str,Dict[str,int]]"
            ],
            "arguments": {
                "self": [],
                "org_album": [
                    "lib.model.album.album.Album",
                    "str",
                    "Dict[str, Tuple[str, str]]",
                    "int",
                    "Optional[Union[\"IPUtilityFunction\", \"UtilityDistribution\"]]",
                    "Optional[List]",
                    "Sized"
                ],
                "new_album": [
                    "Type",
                    "lib.model.album.album.Album",
                    "bool",
                    "Dict[str,Any]",
                    "bytes",
                    "Type[object]"
                ]
            }
        },
        "AlbumCommandService.delete": {
            "name": "delete",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "album": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/album_category.py": {
        "AlbumCategoryQueryService.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumCategoryQueryService.find_user_all": {
            "name": "find_user_all",
            "location": 26,
            "return": [
                "lib.model.category.category_list.CategoryList"
            ],
            "arguments": {
                "self": [],
                "author_id": []
            }
        },
        "AlbumCategoryQueryService.find": {
            "name": "find",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_category_id": []
            }
        },
        "AlbumCategoryCommandService.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumCategoryCommandService.register": {
            "name": "register",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_id": [],
                "album_category": []
            }
        },
        "AlbumCategoryCommandService.update": {
            "name": "update",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "org_album_category": [],
                "new_album_category": []
            }
        },
        "AlbumCategoryCommandService.delete": {
            "name": "delete",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "album_id": [],
                "album_category": []
            }
        }
    },
    "PhotoLog-master/app/application/album_content.py": {
        "AlbumContentQueryService.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContentQueryService.find_by_album_id": {
            "name": "find_by_album_id",
            "location": 17,
            "return": [
                "Optional[lib.model.album_content.album_content_list.AlbumContentList]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int",
                    "lib.model.album.album.AlbumID"
                ]
            }
        },
        "AlbumContentQueryService.find": {
            "name": "find",
            "location": 20,
            "return": [
                "Optional[lib.model.album_content.album_content.AlbumContent]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int"
                ],
                "content_id": [
                    "str",
                    "int"
                ]
            }
        },
        "AlbumContentQueryService.find_linked_content": {
            "name": "find_linked_content",
            "location": 27,
            "return": [
                "lib.model.album_content.album_content_list.AlbumContentList"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str"
                ],
                "content_id": [
                    "str"
                ]
            }
        },
        "AlbumContentCommandService.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContentCommandService.register": {
            "name": "register",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_content": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "AlbumContentCommandService.delete": {
            "name": "delete",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_content": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/category.py": {
        "CategoryCommandService.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryCommandService.link_folder": {
            "name": "link_folder",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "str",
                    "Optional[str]",
                    "Dict",
                    "None",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ],
                "folder": [
                    "str",
                    "Optional[str]",
                    "Dict",
                    "None",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "CategoryCommandService.unlink_folder": {
            "name": "unlink_folder",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "int",
                    "Dict",
                    "str",
                    "float",
                    "Optional[str]",
                    "None"
                ],
                "folder": [
                    "int",
                    "Dict",
                    "str",
                    "float",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "CategoryQueryService.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryQueryService.find_linked_folder": {
            "name": "find_linked_folder",
            "location": 25,
            "return": [
                "lib.model.folder.folder_list.FolderList"
            ],
            "arguments": {
                "self": [],
                "category_id": [
                    "str",
                    "None",
                    "lib.model.album.album.AlbumID",
                    "lib.model.category.category.CategoryID",
                    "Optional[str]"
                ]
            }
        },
        "CategoryQueryService.find": {
            "name": "find",
            "location": 29,
            "return": [
                "str",
                "None",
                "Optional[int]",
                "Dict",
                "bool",
                "int",
                "Tuple[Union[Any,Any]]",
                "Dict[Any,str]",
                "Dict[str,Any]"
            ],
            "arguments": {
                "self": [],
                "category_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/common_category.py": {
        "CommonCategoryQueryService.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommonCategoryQueryService.find_user_all": {
            "name": "find_user_all",
            "location": 20,
            "return": [
                "lib.model.category.category_list.CategoryList"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "int",
                    "str",
                    "Iterable[str]",
                    "Sequence[int]"
                ]
            }
        },
        "CommonCategoryQueryService.find": {
            "name": "find",
            "location": 26,
            "return": [
                "str",
                "None",
                "bool",
                "Optional[int]",
                "Dict",
                "List"
            ],
            "arguments": {
                "self": [],
                "common_category_id": [
                    "str",
                    "int"
                ]
            }
        },
        "CommonCategoryCommandService.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommonCategoryCommandService.register": {
            "name": "register",
            "location": 38,
            "return": [
                "str",
                "int",
                "bool",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "common_category": [
                    "str",
                    "bool"
                ]
            }
        },
        "CommonCategoryCommandService.update": {
            "name": "update",
            "location": 42,
            "return": [
                "float",
                "str",
                "datetime.timedelta",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "org_common_category": [
                    "lib.model.category.category.CommonCategory",
                    "lib.model.category.category.AlbumCategory",
                    "Optional[str]",
                    "Optional[bool]",
                    "datetime.tzinfo",
                    "datetime.datetime",
                    "dict"
                ],
                "new_common_category": [
                    "Dict[str,Any]",
                    "str",
                    "lib.model.category.category.CommonCategory",
                    "Exception",
                    "Optional[Exception]",
                    "None"
                ]
            }
        },
        "CommonCategoryCommandService.delete": {
            "name": "delete",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "common_category": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/file.py": {
        "FileCommandService.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileCommandService.register": {
            "name": "register",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "Dict",
                    "Dict[str,str]",
                    "List[str]",
                    "Optional[str]",
                    "str",
                    "None",
                    "Optional[Dict]",
                    "Union[List,set]",
                    "List",
                    "Set"
                ],
                "file": [
                    "Dict",
                    "Dict[str,str]",
                    "List[str]",
                    "Optional[str]",
                    "str",
                    "None",
                    "Optional[Dict]",
                    "Union[List,set]",
                    "List",
                    "Set"
                ]
            }
        },
        "FileCommandService.register_list": {
            "name": "register_list",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "Dict[str,str]",
                    "Iterator[Any]",
                    "Iterator"
                ],
                "file_list": [
                    "str",
                    "Dict[str,str]",
                    "Iterator[Any]",
                    "Iterator"
                ]
            }
        },
        "FileCommandService.create_thumbnail": {
            "name": "create_thumbnail",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "List[str]",
                    "lib.model.file.file.File",
                    "IO",
                    "BinaryIO",
                    "str",
                    "bool",
                    "parsl.data_provider.files.File",
                    "IO[str]"
                ]
            }
        },
        "FileQueryService.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileQueryService.find_by_folder": {
            "name": "find_by_folder",
            "location": 36,
            "return": [
                "List",
                "bool",
                "str",
                "Dict[str,str]",
                "int",
                "AbstractSet[str]"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "List[str]",
                    "bool",
                    "OrderedDict",
                    "bytes"
                ]
            }
        },
        "FileQueryService.find": {
            "name": "find",
            "location": 40,
            "return": [
                "Optional[lib.model.file.file.File]"
            ],
            "arguments": {
                "self": [],
                "file_id": [
                    "str"
                ]
            }
        },
        "FileSystemStorageService.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileSystemStorageService.find_by_location": {
            "name": "find_by_location",
            "location": 49,
            "return": [
                "Tuple[Union[Literal,Literal,Literal]]",
                "bool",
                "List[tuple[Union[str,Any]]]",
                "Dict[str,str]",
                "List[str]",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "location": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None",
                    "Union[Callable,str]",
                    "Callable"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/folder.py": {
        "FolderQueryService.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FolderQueryService.find_user_all": {
            "name": "find_user_all",
            "location": 19,
            "return": [
                "lib.model.folder.folder_list.FolderList"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "str",
                    "int",
                    "None",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "FolderQueryService.find": {
            "name": "find",
            "location": 24,
            "return": [
                "Optional[lib.model.folder.folder.Folder]"
            ],
            "arguments": {
                "self": [],
                "folder_id": [
                    "str",
                    "int"
                ]
            }
        },
        "FolderCommandService.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FolderCommandService.register": {
            "name": "register",
            "location": 35,
            "return": [
                "str",
                "int",
                "bool",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "bool"
                ]
            }
        },
        "FolderCommandService.update": {
            "name": "update",
            "location": 39,
            "return": [
                "int",
                "str",
                "Optional[bool]",
                "List[dict[str,Any]]",
                "Dict[str,Dict[str,int]]",
                "Dict[str,str]",
                "Dict[int,str]"
            ],
            "arguments": {
                "self": [],
                "org_folder": [
                    "Callable",
                    "List[int]"
                ],
                "new_folder": [
                    "Dict",
                    "Dict[str,Any]",
                    "os.stat_result"
                ]
            }
        },
        "FolderCommandService.delete": {
            "name": "delete",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "bool",
                    "str",
                    "Callable",
                    "Optional[Dict[str, Any]]"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/user.py": {
        "UserFindService.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserFindService.find": {
            "name": "find",
            "location": 10,
            "return": [
                "Optional[lib.model.user.user.User]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "UserRegisterService.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserRegisterService.register": {
            "name": "register",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "float",
                    "bytes",
                    "bool",
                    "models.user.UserModel",
                    "int"
                ]
            }
        }
    },
    "PhotoLog-master/app/application/__init__.py": {},
    "PhotoLog-master/app/infrastructure/album.py": {
        "AlbumDataSource.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumDataSource.find_user_all": {
            "name": "find_user_all",
            "location": 16,
            "return": [
                "List[lib.model.album.album.Album]"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "int",
                    "str"
                ]
            }
        },
        "AlbumDataSource.find": {
            "name": "find",
            "location": 28,
            "return": [
                "Optional[lib.model.album.album.Album]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "int",
                    "str"
                ]
            }
        },
        "AlbumDataSource.register": {
            "name": "register",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "album": [
                    "str",
                    "Dict",
                    "Dict[str,List[str]]",
                    "Dict[str,list[str]]"
                ]
            }
        },
        "AlbumDataSource.update": {
            "name": "update",
            "location": 60,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "album": [
                    "str"
                ]
            }
        },
        "AlbumDataSource.delete": {
            "name": "delete",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "album": [
                    "Dict",
                    "str",
                    "List[str]",
                    "OrderedDict"
                ]
            }
        },
        "AlbumDataSource._to_album_obj": {
            "name": "_to_album_obj",
            "location": 88,
            "return": [
                "lib.model.album.album.Album"
            ],
            "arguments": {
                "self": [],
                "album_row": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]",
                    "Iterable[Dict[str,Any]]"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/album_content.py": {
        "AlbumContentDataSource.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContentDataSource.find_by_album_id": {
            "name": "find_by_album_id",
            "location": 25,
            "return": [
                "Optional[lib.model.album_content.album_content_list.AlbumContentList]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int"
                ]
            }
        },
        "AlbumContentDataSource.find_linked_content": {
            "name": "find_linked_content",
            "location": 40,
            "return": [
                "lib.model.album_content.album_content_list.AlbumContentList"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str"
                ],
                "content_id": [
                    "str",
                    "int"
                ]
            }
        },
        "AlbumContentDataSource.find": {
            "name": "find",
            "location": 59,
            "return": [
                "Optional[lib.model.album_content.album_content.AlbumContent]"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int",
                    "bytes"
                ],
                "content_id": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "AlbumContentDataSource.register": {
            "name": "register",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int"
                ],
                "content_id": [
                    "str",
                    "int"
                ]
            }
        },
        "AlbumContentDataSource.delete": {
            "name": "delete",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "int",
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "content_id": [
                    "int",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "AlbumContentDataSource._rel_to_album_content_obj": {
            "name": "_rel_to_album_content_obj",
            "location": 97,
            "return": [
                "lib.model.album_content.album_content.AlbumContent"
            ],
            "arguments": {
                "self": [],
                "album_content_rel": [
                    "List[dict[str,Any]]",
                    "Dict",
                    "app.models.user.User",
                    "Dict[str,str]",
                    "Union[int,None]",
                    "List[Dict[str,Any]]"
                ]
            }
        },
        "AlbumContentDataSource._to_album_content_obj": {
            "name": "_to_album_content_obj",
            "location": 110,
            "return": [
                "lib.model.album_content.album_content.AlbumContent"
            ],
            "arguments": {
                "self": [],
                "album_content_dict": [
                    "str",
                    "Dict[str,Any]",
                    "Callable",
                    "bool",
                    "int",
                    "Dict"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/category.py": {
        "CategoryDataSource.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryDataSource.find_user_all": {
            "name": "find_user_all",
            "location": 17,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "str",
                    "Dict[str,str]"
                ],
                "category_type": [
                    "str",
                    "Dict[str,str]"
                ]
            }
        },
        "CategoryDataSource.find": {
            "name": "find",
            "location": 29,
            "return": [
                "None",
                "str",
                "Optional[int]",
                "bool",
                "Dict"
            ],
            "arguments": {
                "self": [],
                "category_id": [
                    "int",
                    "str"
                ]
            }
        },
        "CategoryDataSource.register": {
            "name": "register",
            "location": 41,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "bool",
                    "lib.AbstractType",
                    "Sequence[Any]",
                    "Type",
                    "str",
                    "None",
                    "bankroll.model.Currency",
                    "Optional[str]"
                ]
            }
        },
        "CategoryDataSource.update": {
            "name": "update",
            "location": 83,
            "return": [
                "bool",
                "Dict[str,Any]",
                "Dict[str,str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "Type",
                    "bankroll.model.Currency",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "CategoryDataSource.delete": {
            "name": "delete",
            "location": 126,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "Dict",
                    "str",
                    "List[str]",
                    "OrderedDict"
                ]
            }
        },
        "CategoryDataSource._to_category_obj": {
            "name": "_to_category_obj",
            "location": 138,
            "return": [
                "float",
                "dict",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "category_row": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]",
                    "Iterable[Dict[str,Any]]"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/category_link.py": {
        "CategoryFolderLinkDataSource.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryFolderLinkDataSource.find_linked_folder": {
            "name": "find_linked_folder",
            "location": 20,
            "return": [
                "lib.model.folder.folder_list.FolderList"
            ],
            "arguments": {
                "self": [],
                "category_id": [
                    "int",
                    "str"
                ]
            }
        },
        "CategoryFolderLinkDataSource.link_folder": {
            "name": "link_folder",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category_id": [
                    "int",
                    "str",
                    "List[int]"
                ],
                "folder_id": [
                    "int",
                    "str",
                    "List[int]"
                ]
            }
        },
        "CategoryFolderLinkDataSource.unlink_folder": {
            "name": "unlink_folder",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "category_id": [
                    "int",
                    "str"
                ],
                "folder_id": [
                    "int",
                    "str"
                ]
            }
        },
        "CategoryFolderLinkDataSource._to_folder_obj": {
            "name": "_to_folder_obj",
            "location": 63,
            "return": [
                "lib.model.folder.folder.Folder"
            ],
            "arguments": {
                "self": [],
                "folder_row": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]",
                    "Iterable[Dict[str,Any]]"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/datasource.py": {
        "DataSource.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataSource.get": {
            "name": "get",
            "location": 13,
            "return": [
                "bytes",
                "Dict[str, Any]",
                "str",
                "Callable",
                "Optional[str]",
                "Callable[[str], T]"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "Dict[str,str]",
                    "int"
                ],
                "parameter": [
                    "str",
                    "Dict[str,str]",
                    "int"
                ],
                "dict_flag": [
                    "bool",
                    "static_frame.core.util.DtypesSpecifier",
                    "int"
                ]
            }
        },
        "DataSource.insert": {
            "name": "insert",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str"
                ],
                "parameter": [
                    "str"
                ],
                "dict_flag": [
                    "bool",
                    "Tuple[Union[float,float]]",
                    "Tuple[float,float]",
                    "T",
                    "int"
                ]
            }
        },
        "DataSource.update": {
            "name": "update",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "Mapping",
                    "bool",
                    "Union[AsyncIterable[Any],Iterable[Any]]",
                    "collections.abc.AsyncIterable",
                    "Iterable[Any]"
                ],
                "parameter": [
                    "str",
                    "Mapping",
                    "bool",
                    "Union[AsyncIterable[Any],Iterable[Any]]",
                    "collections.abc.AsyncIterable",
                    "Iterable[Any]"
                ],
                "dict_flag": [
                    "bool",
                    "Tuple[Union[float,float]]",
                    "int",
                    "Tuple[float,float]"
                ]
            }
        },
        "DataSource.get_prefix": {
            "name": "get_prefix",
            "location": 62,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/app/infrastructure/file.py": {
        "FileDataSource.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDataSource.register": {
            "name": "register",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "FrozenSet[str]",
                    "frozenset",
                    "Optional[str]",
                    "None"
                ],
                "file": [
                    "str",
                    "FrozenSet[str]",
                    "frozenset",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "FileDataSource.register_list": {
            "name": "register_list",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "Dict"
                ],
                "file_list": [
                    "List[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "FileDataSource.find_by_folder": {
            "name": "find_by_folder",
            "location": 38,
            "return": [
                "None",
                "Optional[str]",
                "FileList",
                "List[Union[str,SqlFile]]",
                "Optional[int]",
                "str"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "int",
                    "List[int]"
                ]
            }
        },
        "FileDataSource.find": {
            "name": "find",
            "location": 53,
            "return": [
                "Optional[lib.model.file.file.File]"
            ],
            "arguments": {
                "self": [],
                "file_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/folder.py": {
        "FolderDataSource.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FolderDataSource.find_user_all": {
            "name": "find_user_all",
            "location": 16,
            "return": [
                "List[lib.model.folder.folder.Folder]"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "int",
                    "str"
                ]
            }
        },
        "FolderDataSource.find": {
            "name": "find",
            "location": 28,
            "return": [
                "Optional[lib.model.folder.folder.Folder]"
            ],
            "arguments": {
                "self": [],
                "folder_id": [
                    "int",
                    "str"
                ]
            }
        },
        "FolderDataSource.register": {
            "name": "register",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "Dict",
                    "Dict[str,List[str]]",
                    "Dict[str,list[str]]"
                ]
            }
        },
        "FolderDataSource.update": {
            "name": "update",
            "location": 60,
            "return": [
                "str",
                "Optional[str]",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str"
                ]
            }
        },
        "FolderDataSource.delete": {
            "name": "delete",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "Dict",
                    "str",
                    "List[str]",
                    "OrderedDict"
                ]
            }
        },
        "FolderDataSource._to_folder_obj": {
            "name": "_to_folder_obj",
            "location": 88,
            "return": [
                "lib.model.folder.folder.Folder"
            ],
            "arguments": {
                "self": [],
                "folder_row": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]",
                    "Iterable[Dict[str,Any]]"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/local_storage.py": {
        "LocalStorageDataSource.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocalStorageDataSource.find_dir_files": {
            "name": "find_dir_files",
            "location": 18,
            "return": [
                "FileList",
                "str",
                "List[str]",
                "Dict"
            ],
            "arguments": {
                "self": [],
                "location": [
                    "str"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/user.py": {
        "UserDataSource.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserDataSource.find": {
            "name": "find",
            "location": 14,
            "return": [
                "Optional[lib.model.user.user.User]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int",
                    "Dict[str,Any]",
                    "List[int]"
                ]
            }
        },
        "UserDataSource.register": {
            "name": "register",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "Union[int, str]"
                ]
            }
        },
        "UserDataSource._to_user_obj": {
            "name": "_to_user_obj",
            "location": 44,
            "return": [
                "lib.model.user.user.User"
            ],
            "arguments": {
                "self": [],
                "user_row": [
                    "models.User",
                    "amundsen_application.models.user.User",
                    "arxiv.users.domain.User"
                ]
            }
        }
    },
    "PhotoLog-master/app/infrastructure/__init__.py": {},
    "PhotoLog-master/app/interface/album.py": {
        "album_index": {
            "name": "album_index",
            "location": 26,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "album": {
            "name": "album",
            "location": 56,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/album_category.py": {
        "album_category_index": {
            "name": "album_category_index",
            "location": 28,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": []
            }
        },
        "album_category": {
            "name": "album_category",
            "location": 62,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": [],
                "album_category_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/album_content.py": {
        "album_content_index": {
            "name": "album_content_index",
            "location": 31,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": []
            }
        },
        "album_content": {
            "name": "album_content",
            "location": 67,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": [],
                "content_id": []
            }
        },
        "_get_content_command_service": {
            "name": "_get_content_command_service",
            "location": 99,
            "return": [
                "Optional[Union[(app.application.album_category.AlbumCategoryQueryService, app.application.common_category.CommonCategoryQueryService, app.application.folder.FolderQueryService)]]"
            ],
            "arguments": {
                "content_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/category.py": {
        "category_folder_index": {
            "name": "category_folder_index",
            "location": 27,
            "return": [
                "bytes"
            ],
            "arguments": {
                "category_id": []
            }
        },
        "category": {
            "name": "category",
            "location": 46,
            "return": [
                "bytes"
            ],
            "arguments": {
                "category_id": [],
                "folder_id": []
            }
        },
        "category_get": {
            "name": "category_get",
            "location": 86,
            "return": [
                "bytes"
            ],
            "arguments": {
                "category_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/common_category.py": {
        "common_category_index": {
            "name": "common_category_index",
            "location": 27,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "common_category": {
            "name": "common_category",
            "location": 62,
            "return": [
                "bytes"
            ],
            "arguments": {
                "common_category_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/file.py": {
        "file_index": {
            "name": "file_index",
            "location": 23,
            "return": [
                "Response"
            ],
            "arguments": {
                "file_id": []
            }
        },
        "file_index_thumb": {
            "name": "file_index_thumb",
            "location": 37,
            "return": [
                "Response"
            ],
            "arguments": {
                "file_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/folder.py": {
        "folder_index": {
            "name": "folder_index",
            "location": 27,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "folder": {
            "name": "folder",
            "location": 58,
            "return": [
                "bytes"
            ],
            "arguments": {
                "folder_id": []
            }
        },
        "folder_file": {
            "name": "folder_file",
            "location": 109,
            "return": [
                "bytes"
            ],
            "arguments": {
                "folder_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/main.py": {
        "user_login": {
            "name": "user_login",
            "location": 74,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "user_register": {
            "name": "user_register",
            "location": 107,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "load_user": {
            "name": "load_user",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "user_id": []
            }
        },
        "unauthorized_handler": {
            "name": "unauthorized_handler",
            "location": 133,
            "return": [],
            "arguments": {}
        },
        "request_loader": {
            "name": "request_loader",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "PhotoLog-master/app/interface/system_file.py": {
        "RegisterFileInterface": {
            "name": "RegisterFileInterface",
            "location": 22,
            "return": [
                "Optional[bytes]"
            ],
            "arguments": {
                "dir_path": []
            }
        }
    },
    "PhotoLog-master/app/interface/user.py": {},
    "PhotoLog-master/app/interface/__init__.py": {},
    "PhotoLog-master/app/interface/gallery/album.py": {
        "album_gallery_index": {
            "name": "album_gallery_index",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "album": {
            "name": "album",
            "location": 36,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/gallery/album_content.py": {
        "album_content_index": {
            "name": "album_content_index",
            "location": 37,
            "return": [],
            "arguments": {
                "album_id": []
            }
        },
        "album_content": {
            "name": "album_content",
            "location": 51,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": [],
                "content_id": []
            }
        },
        "category_folder_index": {
            "name": "category_folder_index",
            "location": 69,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": [],
                "content_id": []
            }
        },
        "folder": {
            "name": "folder",
            "location": 89,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": [],
                "content_id": [],
                "folder_id": []
            }
        },
        "folder_file": {
            "name": "folder_file",
            "location": 107,
            "return": [
                "bytes"
            ],
            "arguments": {
                "album_id": [],
                "content_id": [],
                "folder_id": []
            }
        },
        "file_index": {
            "name": "file_index",
            "location": 132,
            "return": [
                "Response"
            ],
            "arguments": {
                "album_id": [],
                "content_id": [],
                "folder_id": [],
                "file_id": []
            }
        },
        "file_index_thumb": {
            "name": "file_index_thumb",
            "location": 145,
            "return": [
                "Response"
            ],
            "arguments": {
                "album_id": [],
                "content_id": [],
                "folder_id": [],
                "file_id": []
            }
        }
    },
    "PhotoLog-master/app/interface/gallery/static_file.py": {},
    "PhotoLog-master/lib/__init__.py": {},
    "PhotoLog-master/lib/model/content.py": {
        "ContentID.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content_id": [
                    "str",
                    "None",
                    "bytes",
                    "Optional[str]",
                    "int",
                    "Optional[int]",
                    "Optional[bool]"
                ]
            }
        },
        "ContentID.check_content_type": {
            "name": "check_content_type",
            "location": 9,
            "return": [
                "str",
                "int",
                "Tuple[Union[str,str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Content.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Content.get_content_id": {
            "name": "get_content_id",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Content.get_content_type": {
            "name": "get_content_type",
            "location": 24,
            "return": [
                "str",
                "type",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "Content.check_content_type": {
            "name": "check_content_type",
            "location": 28,
            "return": [
                "str",
                "type",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "content_id": [
                    "str"
                ]
            }
        },
        "ContentList.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content_obj_list": [
                    "str",
                    "bool",
                    "IO[bytes]",
                    "IO"
                ]
            }
        },
        "ContentList.add_content": {
            "name": "add_content",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "Dict",
                    "str",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "ContentList.to_dict": {
            "name": "to_dict",
            "location": 39,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/__init__.py": {},
    "PhotoLog-master/lib/model/album/album.py": {
        "AlbumID.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int",
                    "Optional[datetime.timedelta]",
                    "None"
                ]
            }
        },
        "Album.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int",
                    "None",
                    "Optional[int]",
                    "Optional[str]"
                ],
                "info": [
                    "str",
                    "int",
                    "None",
                    "lib.model.user.user.User",
                    "Optional[str]"
                ],
                "share": [
                    "str",
                    "int",
                    "None",
                    "lib.model.user.user.User",
                    "Optional[str]"
                ]
            }
        },
        "Album.to_dict": {
            "name": "to_dict",
            "location": 27,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Album.can_delete": {
            "name": "can_delete",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Album.can_update": {
            "name": "can_update",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Album.can_show_gallery": {
            "name": "can_show_gallery",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "int",
                    "str",
                    "Dict[str,str]",
                    "tracim.models.auth.User",
                    "tildes.models.user.User",
                    "bool"
                ]
            }
        },
        "Album.from_dict": {
            "name": "from_dict",
            "location": 46,
            "return": [
                "Album"
            ],
            "arguments": {
                "dict_data": [
                    "dict"
                ]
            }
        },
        "Album.modify": {
            "name": "modify",
            "location": 53,
            "return": [
                "Album"
            ],
            "arguments": {
                "self": [
                    "_TAlbum@@Album@@"
                ],
                "dict_data": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[Dict[str, str]]",
                    "dict",
                    "Type"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/album/album_factory.py": {
        "_to_album_obj": {
            "name": "_to_album_obj",
            "location": 30,
            "return": [
                "lib.model.album.album.Album"
            ],
            "arguments": {
                "dict_data": [
                    "str",
                    "List[dict]",
                    "bytes",
                    "Dict",
                    "int"
                ]
            }
        },
        "AlbumFactory.create": {
            "name": "create",
            "location": 15,
            "return": [
                "Union[(bool, lib.model.album.album.Album)]"
            ],
            "arguments": {
                "dict_data": [
                    "Dict[str, Any]",
                    "str",
                    "Optional[Callable]",
                    "List[str]",
                    "Type[T]",
                    "int",
                    "Sequence"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/album/album_list.py": {
        "AlbumList.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_obj_list": [
                    "List",
                    "Tuple",
                    "float",
                    "Sequence[Sequence[float]]"
                ]
            }
        },
        "AlbumList.add_album": {
            "name": "add_album",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album": [
                    "T"
                ]
            }
        },
        "AlbumList.to_dict": {
            "name": "to_dict",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/album_content/album_content.py": {
        "AlbumContent.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int"
                ],
                "content": [
                    "str",
                    "bytes",
                    "bool",
                    "Dict[str,str]",
                    "None",
                    "ks.Series",
                    "Optional[str]"
                ],
                "delete_status": [
                    "int",
                    "Dict",
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        },
        "AlbumContent.to_dict": {
            "name": "to_dict",
            "location": 19,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContent.to_dict_for_list": {
            "name": "to_dict_for_list",
            "location": 29,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContent.can_delete": {
            "name": "can_delete",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContent.from_dict": {
            "name": "from_dict",
            "location": 42,
            "return": [
                "AlbumContent"
            ],
            "arguments": {
                "dict_data": [
                    "str",
                    "Dict"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/album_content/album_content_factory.py": {
        "AlbumContentFactory.create": {
            "name": "create",
            "location": 10,
            "return": [
                "Union[(bool, lib.model.album_content.album_content.AlbumContent)]"
            ],
            "arguments": {
                "self": [],
                "dict_data": [
                    "dict",
                    "Dict[str, str]",
                    "bytes",
                    "int",
                    "str"
                ]
            }
        },
        "AlbumContentFactory._to_album_content_obj": {
            "name": "_to_album_content_obj",
            "location": 26,
            "return": [
                "lib.model.album_content.album_content.AlbumContent"
            ],
            "arguments": {
                "self": [],
                "dict_data": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/album_content/album_content_list.py": {
        "AlbumContentList.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "album_id": [
                    "str",
                    "int"
                ],
                "content_list": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "AlbumContentList.to_dict": {
            "name": "to_dict",
            "location": 18,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContentList.can_delete": {
            "name": "can_delete",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumContentList.from_dict": {
            "name": "from_dict",
            "location": 28,
            "return": [
                "AlbumContentList"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/category/category.py": {
        "CategoryID.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "category_id": []
            }
        },
        "Category.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.to_dict": {
            "name": "to_dict",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.from_dict": {
            "name": "from_dict",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "Category.get_content_id": {
            "name": "get_content_id",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.get_content_type": {
            "name": "get_content_type",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommonCategory.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "category_id": [],
                "category_type": [],
                "info": [],
                "share": []
            }
        },
        "CommonCategory.to_dict": {
            "name": "to_dict",
            "location": 72,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommonCategory.can_delete": {
            "name": "can_delete",
            "location": 80,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommonCategory.can_update": {
            "name": "can_update",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommonCategory.from_dict": {
            "name": "from_dict",
            "location": 87,
            "return": [
                "CommonCategory"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "CommonCategory.modify": {
            "name": "modify",
            "location": 95,
            "return": [
                "CommonCategory"
            ],
            "arguments": {
                "self": [
                    "_TCommonCategory@@CommonCategory@@"
                ],
                "dict_data": []
            }
        },
        "AlbumCategory.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "category_id": [],
                "category_type": [],
                "info": []
            }
        },
        "AlbumCategory.to_dict": {
            "name": "to_dict",
            "location": 116,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumCategory.can_delete": {
            "name": "can_delete",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumCategory.can_update": {
            "name": "can_update",
            "location": 126,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlbumCategory.from_dict": {
            "name": "from_dict",
            "location": 130,
            "return": [
                "AlbumCategory"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "AlbumCategory.modify": {
            "name": "modify",
            "location": 137,
            "return": [
                "AlbumCategory"
            ],
            "arguments": {
                "self": [
                    "_TAlbumCategory@@AlbumCategory@@"
                ],
                "dict_data": []
            }
        }
    },
    "PhotoLog-master/lib/model/category/category_factory.py": {
        "CategoryFactory.create": {
            "name": "create",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "dict_data": [
                    "Dict[str, Any]",
                    "dict",
                    "List[str]"
                ]
            }
        },
        "CategoryFactory._to_category_obj": {
            "name": "_to_category_obj",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "dict_data": [
                    "Dict",
                    "str",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]",
                    "Optional[bytes]",
                    "bytes",
                    "None"
                ]
            }
        },
        "CommonCategoryFactory.create": {
            "name": "create",
            "location": 36,
            "return": [
                "Union[(bool, lib.model.category.category.CommonCategory)]"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "bytes",
                    "Dict[str, Any]",
                    "MutableMapping",
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "CommonCategoryFactory._to_category_obj": {
            "name": "_to_category_obj",
            "location": 54,
            "return": [
                "lib.model.category.category.CommonCategory"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "AlbumCategoryFactory.create": {
            "name": "create",
            "location": 65,
            "return": [
                "Union[(bool, lib.model.category.category.AlbumCategory)]"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "bytes",
                    "Dict[str, Any]",
                    "MutableMapping",
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "AlbumCategoryFactory._to_category_obj": {
            "name": "_to_category_obj",
            "location": 80,
            "return": [
                "lib.model.category.category.AlbumCategory"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "Dict[str, Any]",
                    "bool",
                    "Optional['models.LTI1p3Provider']"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/category/category_list.py": {
        "CategoryList.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "category_obj_list": [
                    "List",
                    "Tuple",
                    "float",
                    "Sequence[Sequence[float]]"
                ]
            }
        },
        "CategoryList.add_category": {
            "name": "add_category",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "category": [
                    "T"
                ]
            }
        },
        "CategoryList.to_dict": {
            "name": "to_dict",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/file/file.py": {
        "FileID.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Name.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Path.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Location.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "storage_type": [],
                "path": []
            }
        },
        "Location.from_dict": {
            "name": "from_dict",
            "location": 31,
            "return": [
                "Location"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "Width.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "Height.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "height": []
            }
        },
        "ShapeSize.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": [],
                "height": []
            }
        },
        "ShapeSize.from_dict": {
            "name": "from_dict",
            "location": 52,
            "return": [
                "ShapeSize"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "ShapeSize.to_dict": {
            "name": "to_dict",
            "location": 57,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileType.get_by_name": {
            "name": "get_by_name",
            "location": 113,
            "return": [
                "Type[FileType]"
            ],
            "arguments": {
                "name": []
            }
        },
        "LastUpdateDate.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [
                    "None"
                ]
            }
        },
        "LastUpdateDate.datetime_string": {
            "name": "datetime_string",
            "location": 173,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegisterDate.__init__": {
            "name": "__init__",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [
                    "None"
                ]
            }
        },
        "RegisterDate.datetime_string": {
            "name": "datetime_string",
            "location": 186,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "File.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_id": [],
                "name": [],
                "location": [],
                "file_type": [],
                "shape_size": [],
                "register_date": [],
                "last_update_date": []
            }
        },
        "File.to_dict": {
            "name": "to_dict",
            "location": 203,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "File.from_dict": {
            "name": "from_dict",
            "location": 215,
            "return": [
                "File"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "File._get_url": {
            "name": "_get_url",
            "location": 226,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/file/file_factory.py": {
        "FileFactory.create_by_system": {
            "name": "create_by_system",
            "location": 17,
            "return": [
                "lib.model.file.file.File"
            ],
            "arguments": {
                "file_name_str": [
                    "str",
                    "int"
                ],
                "location": [
                    "str",
                    "bool",
                    "int"
                ],
                "shape_size": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/file/file_list.py": {
        "FileList.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_obj_list": [
                    "List[str]",
                    "ByteSource",
                    "bool",
                    "str",
                    "List[bigsmoke.model.evenEvent]",
                    "Union[str,bytes]",
                    "bytes"
                ]
            }
        },
        "FileList.add_file": {
            "name": "add_file",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "List[str]",
                    "str",
                    "Callable[[str],str]",
                    "Callable[str,str]",
                    "IO[str]",
                    "IO"
                ]
            }
        },
        "FileList.to_dict": {
            "name": "to_dict",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/folder/folder.py": {
        "FolderID.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder_id": [
                    "str",
                    "int",
                    "Optional[datetime.timedelta]",
                    "None"
                ]
            }
        },
        "Folder.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder_id": [
                    "str",
                    "Dict[str,int]",
                    "Tuple[int,str]",
                    "int",
                    "Tuple[Union[int,str]]"
                ],
                "info": [
                    "str",
                    "int",
                    "None",
                    "lib.model.user.user.User",
                    "Optional[str]"
                ],
                "share": [
                    "str",
                    "int",
                    "None",
                    "lib.model.user.user.User",
                    "Optional[str]"
                ]
            }
        },
        "Folder.to_dict": {
            "name": "to_dict",
            "location": 28,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Folder.can_delete": {
            "name": "can_delete",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Folder.can_update": {
            "name": "can_update",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Folder.from_dict": {
            "name": "from_dict",
            "location": 42,
            "return": [
                "Folder"
            ],
            "arguments": {
                "dict_data": [
                    "dict"
                ]
            }
        },
        "Folder.modify": {
            "name": "modify",
            "location": 49,
            "return": [
                "Folder"
            ],
            "arguments": {
                "self": [
                    "_TFolder@@Folder@@"
                ],
                "dict_data": [
                    "str",
                    "Optional[Dict]",
                    "dict"
                ]
            }
        },
        "Folder.get_content_id": {
            "name": "get_content_id",
            "location": 60,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Folder.get_content_type": {
            "name": "get_content_type",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/folder/folder_factory.py": {
        "_to_folder_obj": {
            "name": "_to_folder_obj",
            "location": 30,
            "return": [
                "lib.model.folder.folder.Folder"
            ],
            "arguments": {
                "dict_data": [
                    "str",
                    "List[dict]",
                    "bytes",
                    "Dict",
                    "int"
                ]
            }
        },
        "FolderFactory.create": {
            "name": "create",
            "location": 15,
            "return": [
                "Union[(bool, lib.model.folder.folder.Folder)]"
            ],
            "arguments": {
                "dict_data": [
                    "Dict[str, Any]",
                    "str",
                    "Optional[Callable]",
                    "List[str]",
                    "Type[T]",
                    "int",
                    "Sequence"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/folder/folder_list.py": {
        "FolderList.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder_obj_list": [
                    "List",
                    "Tuple",
                    "float",
                    "Sequence[Sequence[float]]"
                ]
            }
        },
        "FolderList.add_folder": {
            "name": "add_folder",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "T"
                ]
            }
        },
        "FolderList.to_dict": {
            "name": "to_dict",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/folder/__init__.py": {},
    "PhotoLog-master/lib/model/info/info.py": {
        "AuthorID.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "author_id": []
            }
        },
        "Name.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Description.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "description_txt": []
            }
        },
        "Description.__check_character_limit": {
            "name": "__check_character_limit",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LastUpdateDate.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [
                    "None"
                ]
            }
        },
        "LastUpdateDate.datetime_string": {
            "name": "datetime_string",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegisterDate.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [
                    "None"
                ]
            }
        },
        "RegisterDate.datetime_string": {
            "name": "datetime_string",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ThumbnailUrl.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "thumbnail_url": []
            }
        },
        "Info.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "author_id": [],
                "name": [],
                "description": [],
                "last_update_date": [],
                "register_date": [],
                "release_status": [],
                "thumbnail_url": [],
                "delete_status": []
            }
        },
        "Info.to_dict": {
            "name": "to_dict",
            "location": 110,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Info.from_dict": {
            "name": "from_dict",
            "location": 123,
            "return": [
                "Info"
            ],
            "arguments": {
                "dict_data": []
            }
        },
        "Info.modify": {
            "name": "modify",
            "location": 137,
            "return": [
                "Info"
            ],
            "arguments": {
                "self": [
                    "_TInfo@@Info@@"
                ],
                "dict_data": []
            }
        }
    },
    "PhotoLog-master/lib/model/info/info_factory.py": {
        "_to_info_obj": {
            "name": "_to_info_obj",
            "location": 48,
            "return": [
                "lib.model.info.info.Info"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, float]",
                    "Optional[Dict[object, Any]]",
                    "Mapping"
                ]
            }
        },
        "InfoFactory.create": {
            "name": "create",
            "location": 18,
            "return": [
                "Union[(bool, lib.model.info.info.Info)]"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "Dict[str, str]",
                    "str",
                    "MutableMapping",
                    "Dict[str, Any]",
                    "Type[T]"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/share/share.py": {
        "ShareUrl.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "share_url": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "SharePassword.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "share_password": [
                    "str"
                ]
            }
        },
        "Share.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "share_range": [
                    "str",
                    "Dict[str,Any]"
                ],
                "share_password": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "Share.to_dict": {
            "name": "to_dict",
            "location": 39,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Share.modify": {
            "name": "modify",
            "location": 45,
            "return": [
                "Share"
            ],
            "arguments": {
                "self": [
                    "_TShare@@Share@@"
                ],
                "dict_data": [
                    "Dict[str, Any]",
                    "dict",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "Share.from_dict": {
            "name": "from_dict",
            "location": 55,
            "return": [
                "Share"
            ],
            "arguments": {
                "dict_data": [
                    "str",
                    "bytes",
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/share/share_factory.py": {
        "_to_share_obj": {
            "name": "_to_share_obj",
            "location": 23,
            "return": [
                "Share",
                "float",
                "Dict",
                "str",
                "int"
            ],
            "arguments": {
                "dict_data": [
                    "str",
                    "bytes",
                    "Dict[str,Any]",
                    "Union[None,int,str]"
                ]
            }
        },
        "ShareFactory.create": {
            "name": "create",
            "location": 13,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "dict_data": [
                    "Dict[str, Any]",
                    "Union['HTMLSession', 'AsyncHTMLSession']",
                    "dict"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/user/user.py": {
        "UserID.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "Password.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "Password.auth": {
            "name": "auth",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "float",
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "Password.create_hashpw": {
            "name": "create_hashpw",
            "location": 27,
            "return": [
                "Password"
            ],
            "arguments": {
                "password": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "Password.to_base64": {
            "name": "to_base64",
            "location": 33,
            "return": [
                "bytes"
            ],
            "arguments": {
                "password": [
                    "str"
                ]
            }
        },
        "Name.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "Union[bool,str]",
                    "Dict",
                    "bool",
                    "Union[str,bytes]",
                    "bytes",
                    "Optional[Dict]",
                    "None"
                ]
            }
        },
        "NickName.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "BirthDay.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "RegisterDate.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "LastUpdateDate.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "PostalCode.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "Prefecture.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "City.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "HouseNumber.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "BuildingNumber.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "Address.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "postal_code": [
                    "int",
                    "List[int]",
                    "str"
                ],
                "prefecture": [
                    "str",
                    "int",
                    "float",
                    "Dict[str,Any]",
                    "bool"
                ],
                "city": [
                    "str",
                    "int",
                    "float",
                    "Dict[str,Any]",
                    "bool"
                ],
                "house_number": [
                    "str",
                    "int",
                    "Optional[Address]",
                    "List[str]",
                    "None",
                    "Tuple[int,int,int]",
                    "Tuple[Union[int,int,int]]"
                ],
                "building_number": [
                    "str",
                    "int",
                    "float",
                    "Dict[str,Any]",
                    "bool"
                ]
            }
        },
        "Address.from_dict": {
            "name": "from_dict",
            "location": 118,
            "return": [
                "Address"
            ],
            "arguments": {
                "dict_data": [
                    "dict",
                    "Sequence",
                    "Dict[str, str]"
                ]
            }
        },
        "Address.to_sql_dict": {
            "name": "to_sql_dict",
            "location": 126,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EmailAddress.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "PhoneNumber.__init__": {
            "name": "__init__",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "enum.Enum",
                    "int",
                    "datetime.timedelta",
                    "T"
                ]
            }
        },
        "Contact.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "int",
                    "str",
                    "List[str]",
                    "bool"
                ],
                "email_address": [
                    "str",
                    "Dict[str,list]",
                    "Optional[str]",
                    "None"
                ],
                "phone_number": [
                    "int",
                    "str",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "Contact.from_dict": {
            "name": "from_dict",
            "location": 157,
            "return": [
                "Contact"
            ],
            "arguments": {
                "dict_data": [
                    "List[dict]",
                    "Dict[str,Any]",
                    "Dict",
                    "List[Dict]"
                ]
            }
        },
        "Contact.to_sql_dict": {
            "name": "to_sql_dict",
            "location": 164,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int",
                    "List[str]"
                ],
                "password": [
                    "int",
                    "str",
                    "Optional[str]",
                    "None",
                    "Sequence[Dict[str,str]]",
                    "Sequence[dict[str,str]]",
                    "bool"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "nick_name": [
                    "str",
                    "bool"
                ],
                "birthday": [
                    "int",
                    "str",
                    "Optional[str]",
                    "None",
                    "Sequence[Dict[str,str]]",
                    "Sequence[dict[str,str]]",
                    "bool"
                ],
                "contact": [
                    "int",
                    "str",
                    "Optional[str]",
                    "None",
                    "Sequence[Dict[str,str]]",
                    "Sequence[dict[str,str]]",
                    "bool"
                ],
                "gender": [
                    "int",
                    "str",
                    "Optional[str]",
                    "None",
                    "Sequence[Dict[str,str]]",
                    "Sequence[dict[str,str]]",
                    "bool"
                ],
                "terms_status": [
                    "Optional[str]",
                    "str",
                    "int",
                    "None",
                    "Optional[bool]"
                ],
                "user_type": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ],
                "register_date": [
                    "str",
                    "int",
                    "None",
                    "Sequence[str]",
                    "Optional[str]",
                    "List[datetime.date]",
                    "Tuple[Union[str,str]]",
                    "datetime.datetime",
                    "bool",
                    "Tuple[str,str]"
                ],
                "last_update_date": [
                    "str",
                    "None",
                    "datetime.date",
                    "Optional[datetime.datetime]",
                    "datetime.datetime",
                    "Optional[str]"
                ]
            }
        },
        "User.auth": {
            "name": "auth",
            "location": 194,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "imput_password": [
                    "str"
                ]
            }
        },
        "User.set_authenticated": {
            "name": "set_authenticated",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.is_authenticated": {
            "name": "is_authenticated",
            "location": 203,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.is_active": {
            "name": "is_active",
            "location": 206,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.is_anonymous": {
            "name": "is_anonymous",
            "location": 209,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_id": {
            "name": "get_id",
            "location": 212,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.from_dict": {
            "name": "from_dict",
            "location": 216,
            "return": [
                "User"
            ],
            "arguments": {
                "dict_data": [
                    "List[str]",
                    "Dict",
                    "int",
                    "Dict[str,Union[str,int]]"
                ]
            }
        },
        "User.to_sql_dict": {
            "name": "to_sql_dict",
            "location": 230,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PhotoLog-master/lib/model/user/user_factory.py": {
        "UserFactory.create": {
            "name": "create",
            "location": 27,
            "return": [
                "Union[(bool, lib.model.user.user.User)]"
            ],
            "arguments": {
                "self": [],
                "dict_data": [
                    "Dict",
                    "Dict[str,str]",
                    "Dict[str,Any]"
                ]
            }
        },
        "UserFactory._to_user_obj": {
            "name": "_to_user_obj",
            "location": 74,
            "return": [
                "lib.model.user.user.User"
            ],
            "arguments": {
                "self": [],
                "dict_data": [
                    "str",
                    "Dict",
                    "Sequence"
                ]
            }
        }
    },
    "PhotoLog-master/lib/model/user/__init__.py": {},
    "PhotoLog-master/lib/test_mod/mod1.py": {
        "touch.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num": [
                    "int",
                    "float",
                    "Union[str,float]",
                    "str"
                ]
            }
        }
    },
    "PhotoLog-master/lib/test_mod/__init__.py": {},
    "PhotoLog-master/migration/db_init.py": {},
    "PhotoLog-master/sample/echo_path.py": {},
    "PhotoLog-master/sample/enum.py": {}
}
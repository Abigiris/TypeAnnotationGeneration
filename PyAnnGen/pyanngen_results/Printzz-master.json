{
    "Printzz-master/printer_client/printer_client.py": {
        "signal_handler": {
            "name": "signal_handler",
            "location": 13,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "sig": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "frame": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "poll_server": {
            "name": "poll_server",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Printzz-master/server/app.py": {},
    "Printzz-master/server/src/constants.py": {},
    "Printzz-master/server/src/document.py": {
        "get_doc_name": {
            "name": "get_doc_name",
            "location": 14,
            "return": [
                "str",
                "Optional[str]",
                "Dict"
            ],
            "arguments": {
                "doc_id": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "ext": [
                    "str",
                    "int",
                    "Optional[int]"
                ]
            }
        },
        "Document.to_dict": {
            "name": "to_dict",
            "location": 30,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.get_saved_name": {
            "name": "get_saved_name",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Printzz-master/server/src/printer_queue.py": {
        "validate_file": {
            "name": "validate_file",
            "location": 75,
            "return": [
                "Optional[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "get_con": {
            "name": "get_con",
            "location": 87,
            "return": [
                "Tuple[(sqlite3.dbapi2.Connection, sqlite3.dbapi2.Cursor)]"
            ],
            "arguments": {}
        },
        "remove_file": {
            "name": "remove_file",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "document": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "load_doc": {
            "name": "load_doc",
            "location": 103,
            "return": [
                "None",
                "Optional[Callable[[str],Any]]",
                "Optional[bool]",
                "str",
                "Optional[str]",
                "Optional[List[str]]",
                "List[Dict[str,Any]]"
            ],
            "arguments": {
                "user": [
                    "str",
                    "Dict",
                    "user.User"
                ],
                "doc_name": [
                    "str",
                    "bool"
                ]
            }
        },
        "unload_doc": {
            "name": "unload_doc",
            "location": 146,
            "return": [
                "None",
                "Optional[str]",
                "Document",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "user": [
                    "str",
                    "user.User"
                ],
                "settings": [
                    "str",
                    "Dict[str,Any]",
                    "models.User",
                    "bob_emploi.frontend.api.user_pb2.User",
                    "django.contrib.auth.models.User"
                ]
            }
        },
        "get_len": {
            "name": "get_len",
            "location": 175,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "tuple_to_doc": {
            "name": "tuple_to_doc",
            "location": 190,
            "return": [
                "Document",
                "bytes",
                "int",
                "IO",
                "List[str]",
                "cmk.utils.type_defs.HostAddress",
                "str"
            ],
            "arguments": {
                "doc_tuple": [
                    "int"
                ],
                "settings_tuple": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "get_queue": {
            "name": "get_queue",
            "location": 214,
            "return": [
                "list"
            ],
            "arguments": {
                "user": [
                    "None",
                    "Optional[user.User]",
                    "Optional[cmk.utils.type_defs.UserId]"
                ]
            }
        },
        "top": {
            "name": "top",
            "location": 241,
            "return": [
                "None",
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {}
        },
        "pop": {
            "name": "pop",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "add_to_queue": {
            "name": "add_to_queue",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "document": [
                    "int",
                    "bytes"
                ]
            }
        },
        "delete_doc": {
            "name": "delete_doc",
            "location": 309,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": [
                    "int",
                    "user.User",
                    "None",
                    "str",
                    "Optional[int]",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "mode.utils.logging.Severity",
                    "Optional[Dict[str,Any]]"
                ],
                "doc_id": [
                    "str",
                    "int",
                    "Optional[bytes]",
                    "bytes",
                    "None"
                ]
            }
        },
        "update_status": {
            "name": "update_status",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "status": [
                    "bool",
                    "int"
                ]
            }
        },
        "get_status": {
            "name": "get_status",
            "location": 354,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "initialize": {
            "name": "initialize",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Printzz-master/server/src/print_settings.py": {
        "PrintSettings.from_dict": {
            "name": "from_dict",
            "location": 16,
            "return": [
                "Optional[PrintSettings]"
            ],
            "arguments": {
                "settings_dict": [
                    "Dict",
                    "Tuple[str,str]",
                    "Tuple[Union[str,str]]"
                ]
            }
        },
        "PrintSettings.to_dict": {
            "name": "to_dict",
            "location": 37,
            "return": [
                "Dict[(Any, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrintSettings.validate": {
            "name": "validate",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Printzz-master/server/src/server.py": {
        "create_return_json": {
            "name": "create_return_json",
            "location": 33,
            "return": [
                "Dict[(Any, Union[(_T0, _T1, _T2)])]"
            ],
            "arguments": {
                "status": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[Callable]",
                    "bool",
                    "Callable",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]",
                    "int"
                ],
                "data": [
                    "str",
                    "bytes",
                    "None",
                    "Dict[str,Any]"
                ],
                "error": [
                    "str",
                    "None",
                    "Dict[str,Any]",
                    "Optional[int]",
                    "int",
                    "bool"
                ]
            }
        },
        "login_page": {
            "name": "login_page",
            "location": 44,
            "return": [
                "str",
                "Optional[Any]"
            ],
            "arguments": {}
        },
        "page_selection": {
            "name": "page_selection",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "page": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "upload_settings": {
            "name": "upload_settings",
            "location": 74,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "upload_file": {
            "name": "upload_file",
            "location": 105,
            "return": [
                "str",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "get_doc": {
            "name": "get_doc",
            "location": 140,
            "return": [
                "bool",
                "Tuple[float, float]",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "get_settings": {
            "name": "get_settings",
            "location": 163,
            "return": [
                "bool",
                "Tuple[float, float]",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "pop_doc": {
            "name": "pop_doc",
            "location": 183,
            "return": [
                "BaseException",
                "Type",
                "float",
                "Iterable",
                "List[str]",
                "str"
            ],
            "arguments": {}
        },
        "delete_doc": {
            "name": "delete_doc",
            "location": 203,
            "return": [
                "str",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "get_queue": {
            "name": "get_queue",
            "location": 229,
            "return": [
                "str",
                "Tuple[str, str]",
                "Optional[int]"
            ],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 250,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "authenticate": {
            "name": "authenticate",
            "location": 274,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {}
        },
        "update_printer_status": {
            "name": "update_printer_status",
            "location": 297,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {}
        },
        "get_printer_status": {
            "name": "get_printer_status",
            "location": 315,
            "return": [
                "cmk.utils.type_defs.EventRule",
                "Type[T]",
                "dict"
            ],
            "arguments": {}
        }
    },
    "Printzz-master/server/src/user.py": {
        "User.to_dict": {
            "name": "to_dict",
            "location": 13,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Printzz-master/server/src/user_auth.py": {
        "hash_password": {
            "name": "hash_password",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "password": [
                    "str",
                    "bytes"
                ]
            }
        },
        "verify_password": {
            "name": "verify_password",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "password": [
                    "str",
                    "Optional[str]",
                    "None",
                    "int",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]",
                    "bool"
                ],
                "password_hash": [
                    "str",
                    "Optional[str]",
                    "None",
                    "int",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]",
                    "bool"
                ]
            }
        },
        "get_con": {
            "name": "get_con",
            "location": 35,
            "return": [
                "Tuple[(sqlite3.dbapi2.Connection, sqlite3.dbapi2.Cursor)]"
            ],
            "arguments": {}
        },
        "get_user": {
            "name": "get_user",
            "location": 43,
            "return": [
                "None",
                "Optional[str]",
                "User",
                "Optional[int]",
                "int",
                "Optional[Dict]"
            ],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "Dict[str,Any]"
                ]
            }
        },
        "user_exists": {
            "name": "user_exists",
            "location": 61,
            "return": [
                "bool"
            ],
            "arguments": {
                "username": [
                    "int",
                    "str",
                    "List[int]"
                ]
            }
        },
        "register_user": {
            "name": "register_user",
            "location": 79,
            "return": [
                "None",
                "Optional[str]",
                "User",
                "Optional[bool]",
                "str"
            ],
            "arguments": {
                "username": [
                    "str"
                ],
                "password": [
                    "int",
                    "str"
                ]
            }
        },
        "authenticate_user": {
            "name": "authenticate_user",
            "location": 102,
            "return": [
                "None",
                "Optional[str]",
                "User",
                "Optional[bool]",
                "Optional[int]"
            ],
            "arguments": {
                "username": [
                    "int",
                    "str",
                    "bytes",
                    "bool"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "initialize": {
            "name": "initialize",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Printzz-master/user_client/user_client.py": {
        "sign_in": {
            "name": "sign_in",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "need_register": [
                    "str",
                    "bool"
                ]
            }
        },
        "upload_file": {
            "name": "upload_file",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ],
                "file_in": [
                    "str",
                    "Optional[str]"
                ],
                "double_sided": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[Callable[...,Any]]",
                    "Callable[...,Any]"
                ],
                "copies": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[Callable[...,Any]]",
                    "Callable[...,Any]"
                ],
                "color": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[Callable[...,Any]]",
                    "Callable[...,Any]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "RESTinstance-master/noxfile.py": {
        "test": {
            "name": "test",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "nox.sessions.Session"
                ]
            }
        },
        "testenv": {
            "name": "testenv",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "bool"
                ]
            }
        },
        "atest": {
            "name": "atest",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str"
                ]
            }
        },
        "docs": {
            "name": "docs",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str"
                ]
            }
        },
        "black": {
            "name": "black",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "nox.sessions.Session"
                ]
            }
        },
        "prospector": {
            "name": "prospector",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "nox.sessions.Session"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "nox.sessions.Session"
                ]
            }
        },
        "release_testpypi": {
            "name": "release_testpypi",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "session": []
            }
        },
        "install_testpypi": {
            "name": "install_testpypi",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str",
                    "bool"
                ]
            }
        },
        "release": {
            "name": "release",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "nox.sessions.Session"
                ]
            }
        },
        "install": {
            "name": "install",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str",
                    "bool"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str"
                ]
            }
        }
    },
    "RESTinstance-master/setup.py": {},
    "RESTinstance-master/src/REST/compat.py": {},
    "RESTinstance-master/src/REST/keywords.py": {
        "Keywords.get_keyword_names": {
            "name": "get_keyword_names",
            "location": 52,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Keywords.set_client_cert": {
            "name": "set_client_cert",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "cert": []
            }
        },
        "Keywords.set_client_authentication": {
            "name": "set_client_authentication",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "auth_type": [],
                "user": [
                    "None"
                ],
                "password": [
                    "None"
                ]
            }
        },
        "Keywords.set_headers": {
            "name": "set_headers",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "Keywords.expect_request": {
            "name": "expect_request",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "merge": [
                    "bool"
                ]
            }
        },
        "Keywords.expect_response": {
            "name": "expect_response",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "schema": [],
                "merge": [
                    "bool"
                ]
            }
        },
        "Keywords.expect_response_body": {
            "name": "expect_response_body",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "schema": []
            }
        },
        "Keywords.clear_expectations": {
            "name": "clear_expectations",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Keywords.head": {
            "name": "head",
            "location": 285,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.options": {
            "name": "options",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.get": {
            "name": "get",
            "location": 380,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "query": [
                    "None"
                ],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "data": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.post": {
            "name": "post",
            "location": 449,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "body": [
                    "None"
                ],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "data": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.put": {
            "name": "put",
            "location": 507,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "body": [
                    "None"
                ],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "data": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.patch": {
            "name": "patch",
            "location": 565,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "body": [
                    "None"
                ],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "data": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.delete": {
            "name": "delete",
            "location": 623,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "body": [
                    "None"
                ],
                "timeout": [
                    "None"
                ],
                "allow_redirects": [
                    "None"
                ],
                "validate": [
                    "bool"
                ],
                "headers": [
                    "None"
                ],
                "loglevel": [
                    "None"
                ]
            }
        },
        "Keywords.missing": {
            "name": "missing",
            "location": 677,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.null": {
            "name": "null",
            "location": 715,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.boolean": {
            "name": "boolean",
            "location": 757,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "value": [
                    "None"
                ]
            }
        },
        "Keywords.integer": {
            "name": "integer",
            "location": 809,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.number": {
            "name": "number",
            "location": 855,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.string": {
            "name": "string",
            "location": 899,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.object": {
            "name": "object",
            "location": 944,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.array": {
            "name": "array",
            "location": 986,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Keywords.input": {
            "name": "input",
            "location": 1025,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "what": []
            }
        },
        "Keywords.output_schema": {
            "name": "output_schema",
            "location": 1064,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "what": [
                    "typing.Text"
                ],
                "file_path": [
                    "None"
                ],
                "append": [
                    "bool"
                ],
                "sort_keys": [
                    "bool"
                ],
                "also_console": [
                    "bool"
                ]
            }
        },
        "Keywords.output": {
            "name": "output",
            "location": 1154,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "what": [
                    "typing.Text"
                ],
                "file_path": [
                    "None"
                ],
                "append": [
                    "bool"
                ],
                "sort_keys": [
                    "bool"
                ],
                "also_console": [
                    "bool"
                ]
            }
        },
        "Keywords.rest_instances": {
            "name": "rest_instances",
            "location": 1258,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": [],
                "sort_keys": [
                    "bool"
                ]
            }
        },
        "Keywords.set_ssl_verify": {
            "name": "set_ssl_verify",
            "location": 1308,
            "return": [],
            "arguments": {
                "self": [],
                "ssl_verify": [
                    "bool"
                ]
            }
        },
        "Keywords.set_log_level": {
            "name": "set_log_level",
            "location": 1323,
            "return": [],
            "arguments": {
                "self": [],
                "loglevel": []
            }
        },
        "Keywords._set_auth": {
            "name": "_set_auth",
            "location": 1339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "auth_type": [],
                "user": [
                    "None"
                ],
                "password": [
                    "None"
                ]
            }
        },
        "Keywords._request": {
            "name": "_request",
            "location": 1346,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "endpoint": [],
                "request": [],
                "validate": [
                    "bool"
                ],
                "log_level": [
                    "None"
                ]
            }
        },
        "Keywords._instantiate": {
            "name": "_instantiate",
            "location": 1398,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "response": [],
                "validate_schema": [
                    "bool"
                ],
                "log_level": [
                    "None"
                ]
            }
        },
        "Keywords._assert_spec": {
            "name": "_assert_spec",
            "location": 1452,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spec": [],
                "response": []
            }
        },
        "Keywords._validate_schema": {
            "name": "_validate_schema",
            "location": 1459,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [],
                "json_dict": []
            }
        },
        "Keywords._assert_schema": {
            "name": "_assert_schema",
            "location": 1463,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [],
                "reality": []
            }
        },
        "Keywords._new_schema": {
            "name": "_new_schema",
            "location": 1471,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Keywords._add_defaults_to_schema": {
            "name": "_add_defaults_to_schema",
            "location": 1476,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [],
                "response": []
            }
        },
        "Keywords._add_property_defaults": {
            "name": "_add_property_defaults",
            "location": 1482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": [],
                "schema": []
            }
        },
        "Keywords._find_by_field": {
            "name": "_find_by_field",
            "location": 1491,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "return_schema": [
                    "bool"
                ],
                "print_found": [
                    "bool"
                ]
            }
        },
        "Keywords._last_instance_or_error": {
            "name": "_last_instance_or_error",
            "location": 1531,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Keywords._find_by_path": {
            "name": "_find_by_path",
            "location": 1540,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "path": [],
                "value": [],
                "schema": [
                    "None"
                ],
                "print_found": [
                    "bool"
                ]
            }
        },
        "Keywords._value_by_key": {
            "name": "_value_by_key",
            "location": 1565,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "json": [],
                "key": []
            }
        },
        "Keywords._schema_by_key": {
            "name": "_schema_by_key",
            "location": 1571,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "schema": [],
                "key": [],
                "value": []
            }
        },
        "Keywords._should_add_examples": {
            "name": "_should_add_examples",
            "location": 1587,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Keywords._set_type_validations": {
            "name": "_set_type_validations",
            "location": 1592,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "json_type": [],
                "schema": [],
                "validations": []
            }
        },
        "Keywords._assert_keyword": {
            "name": "_assert_keyword",
            "location": 1612,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "input_type": [],
                "field": []
            }
        }
    },
    "RESTinstance-master/src/REST/schema_keywords.py": {},
    "RESTinstance-master/src/REST/version.py": {},
    "RESTinstance-master/src/REST/__init__.py": {
        "REST.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "None"
                ],
                "ssl_verify": [
                    "bool"
                ],
                "accept": [
                    "typing.Text"
                ],
                "content_type": [
                    "typing.Text"
                ],
                "user_agent": [
                    "typing.Text"
                ],
                "proxies": [
                    "dict[, ]"
                ],
                "schema": [
                    "dict[, ]"
                ],
                "spec": [
                    "dict[, ]"
                ],
                "instances": [
                    "list[]"
                ],
                "loglevel": [
                    "typing.Text"
                ]
            }
        },
        "REST.log_json": {
            "name": "log_json",
            "location": 184,
            "return": [
                "str"
            ],
            "arguments": {
                "json": [],
                "header": [
                    "typing.Text"
                ],
                "also_console": [
                    "bool"
                ],
                "sort_keys": [
                    "bool"
                ]
            }
        },
        "REST._input_boolean": {
            "name": "_input_boolean",
            "location": 201,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_integer": {
            "name": "_input_integer",
            "location": 213,
            "return": [
                "int"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_number": {
            "name": "_input_number",
            "location": 225,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_string": {
            "name": "_input_string",
            "location": 237,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_object": {
            "name": "_input_object",
            "location": 254,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_array": {
            "name": "_input_array",
            "location": 273,
            "return": [
                "list[]"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_json_from_file": {
            "name": "_input_json_from_file",
            "location": 292,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "REST._input_json_as_string": {
            "name": "_input_json_as_string",
            "location": 308,
            "return": [
                "Any"
            ],
            "arguments": {
                "string": []
            }
        },
        "REST._input_json_from_non_string": {
            "name": "_input_json_from_non_string",
            "location": 312,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_client_cert": {
            "name": "_input_client_cert",
            "location": 319,
            "return": [
                "None",
                "STRING_TYPES",
                "list[]"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_ssl_verify": {
            "name": "_input_ssl_verify",
            "location": 350,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_timeout": {
            "name": "_input_timeout",
            "location": 364,
            "return": [
                "list[]",
                "list[list[]]"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_data": {
            "name": "_input_data",
            "location": 394,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        },
        "REST._input_log_level": {
            "name": "_input_log_level",
            "location": 410,
            "return": [
                "str"
            ],
            "arguments": {
                "loglevel": []
            }
        }
    },
    "RESTinstance-master/test/conftest.py": {
        "library": {
            "name": "library",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "RESTinstance-master/test/test_import.py": {
        "test_import": {
            "name": "test_import",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "library": [
                    "str",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        }
    },
    "RESTinstance-master/test/test_keywords.py": {
        "TestKeywords.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_set_ssl_verify": {
            "name": "test_set_ssl_verify",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_set_log_level": {
            "name": "test_set_log_level",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_find_by_field": {
            "name": "test_find_by_field",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_find_by_field_startingwith_dollar": {
            "name": "test_find_by_field_startingwith_dollar",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_find_by_field_numerical_value": {
            "name": "test_find_by_field_numerical_value",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_find_by_field_with_dollar": {
            "name": "test_find_by_field_with_dollar",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_find_by_field_without_existing_schema": {
            "name": "test_find_by_field_without_existing_schema",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeywords.test_find_by_field_raises_runtime_error_with_invalid_query": {
            "name": "test_find_by_field_raises_runtime_error_with_invalid_query",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "RESTinstance-master/test/test_output.py": {
        "TestOutputLogJsonCalling.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_log_json_default": {
            "name": "test_output_log_json_default",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_log_json_console_true": {
            "name": "test_output_log_json_console_true",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_log_json_console_false": {
            "name": "test_output_log_json_console_false",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_log_json_sort_keys_false": {
            "name": "test_output_log_json_sort_keys_false",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_log_json_sort_keys_true": {
            "name": "test_output_log_json_sort_keys_true",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_string_values_true": {
            "name": "test_output_string_values_true",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_string_values_false": {
            "name": "test_output_string_values_false",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_log_json_default": {
            "name": "test_output_schema_log_json_default",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_log_json_console_true": {
            "name": "test_output_schema_log_json_console_true",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_log_json_console_false": {
            "name": "test_output_schema_log_json_console_false",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_log_json_sort_keys_false": {
            "name": "test_output_schema_log_json_sort_keys_false",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_log_json_sort_keys_true": {
            "name": "test_output_schema_log_json_sort_keys_true",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_string_values_true": {
            "name": "test_output_schema_string_values_true",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputLogJsonCalling.test_output_schema_string_values_false": {
            "name": "test_output_schema_string_values_false",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutputConsoleHelpers.setUp": {
            "name": "setUp",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutputConsoleHelpers.tearDown": {
            "name": "tearDown",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutputConsoleHelpers._remove_ansi": {
            "name": "_remove_ansi",
            "location": 163,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "TestOutputConsole.test_output_default": {
            "name": "test_output_default",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputConsole.test_output_default_console": {
            "name": "test_output_default_console",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputConsole.test_output_default_no_console": {
            "name": "test_output_default_no_console",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputConsole.test_output_file_and_console": {
            "name": "test_output_file_and_console",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputConsole.test_output_file_and_no_console": {
            "name": "test_output_file_and_no_console",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputSchemaConsole.test_output_schema_default": {
            "name": "test_output_schema_default",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputSchemaConsole.test_output_schema_default_console": {
            "name": "test_output_schema_default_console",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputSchemaConsole.test_output_schema_default_no_console": {
            "name": "test_output_schema_default_no_console",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputSchemaConsole.test_output_schema_file_and_console": {
            "name": "test_output_schema_file_and_console",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOutputSchemaConsole.test_output_schema_file_and_no_console": {
            "name": "test_output_schema_file_and_no_console",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "RESTinstance-master/test/__init__.py": {}
}
{
    "Reversi-master/src/main.py": {
        "run": {
            "name": "run",
            "location": 12,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "board_size": [
                    "int",
                    "float",
                    "Tuple[int, int]",
                    "bool",
                    "Tuple[int, int, int]"
                ]
            }
        }
    },
    "Reversi-master/src/setup.py": {},
    "Reversi-master/src/reversi/__init__.py": {},
    "Reversi-master/src/reversi/core/board.py": {
        "make_board": {
            "name": "make_board",
            "location": 44,
            "return": [
                "Board",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "board_size": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Board.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pieces": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Board.__post_init__": {
            "name": "__post_init__",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.__iter__": {
            "name": "__iter__",
            "location": 23,
            "return": [
                "typing.Iterable[typing.Tuple[position.Position, typing.Optional[Piece]]]",
                "typing.Generator[tuple[Position]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.size": {
            "name": "size",
            "location": 29,
            "return": [
                "int",
                "bool",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Board.get_piece_at_position": {
            "name": "get_piece_at_position",
            "location": 32,
            "return": [
                "str",
                "List[int]",
                "int",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "Dict[str, Any]",
                    "str",
                    "dict[str, typing.Any]",
                    "position.Position",
                    "list[]",
                    "Optional[list]",
                    "None"
                ]
            }
        },
        "Board.set_piece_at_position": {
            "name": "set_piece_at_position",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "str",
                    "int",
                    "position.Position",
                    "float",
                    "Union[int, float]"
                ],
                "piece": [
                    "str",
                    "int",
                    "position.Position",
                    "float",
                    "Union[int, float]"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/core/board_test.py": {
        "BoardTests.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SizeTest.test_size": {
            "name": "test_size",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetPieceAtPositionTest.test_get_piece_at_position_none": {
            "name": "test_get_piece_at_position_none",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetPieceAtPositionTest.test_get_piece_at_position_piece": {
            "name": "test_get_piece_at_position_piece",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetPieceAtPosition.test_set_piece_at_position_piece": {
            "name": "test_set_piece_at_position_piece",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeBoardTests.test_board_size_4": {
            "name": "test_board_size_4",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeBoardTests.test_board_size_5": {
            "name": "test_board_size_5",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MakeBoardTests.test_board_size_6": {
            "name": "test_board_size_6",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Reversi-master/src/reversi/core/game.py": {
        "_get_positions_with_player_piece": {
            "name": "_get_positions_with_player_piece",
            "location": 54,
            "return": [
                "Set[reversi.core.position.Position]"
            ],
            "arguments": {
                "board": [
                    "reversi.core.board.Board"
                ],
                "player": [
                    "reversi.core.player.Player"
                ]
            }
        },
        "_compute_valid_move": {
            "name": "_compute_valid_move",
            "location": 58,
            "return": [
                "Tuple[(Optional[reversi.core.position.Position], bool)]"
            ],
            "arguments": {
                "board": [
                    "reversi.core.board.Board"
                ],
                "position": [
                    "reversi.core.position.Position"
                ],
                "direction": [
                    "reversi.core.position.Direction"
                ],
                "player": [
                    "reversi.core.player.Player"
                ]
            }
        },
        "_capture_pieces": {
            "name": "_capture_pieces",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "board": [
                    "reversi.core.board.Board"
                ],
                "start": [
                    "reversi.core.position.Position"
                ],
                "end": [
                    "reversi.core.position.Position"
                ],
                "direction": [
                    "reversi.core.position.Direction"
                ],
                "player": [
                    "reversi.core.player.Player"
                ]
            }
        },
        "Game.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "board": [
                    "reversi.core.board.Board"
                ]
            }
        },
        "Game.is_over": {
            "name": "is_over",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.compute_scores": {
            "name": "compute_scores",
            "location": 24,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.play_move": {
            "name": "play_move",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "reversi.core.position.Position"
                ],
                "player": [
                    "reversi.core.player.Player"
                ]
            }
        },
        "Game.compute_valid_moves": {
            "name": "compute_valid_moves",
            "location": 37,
            "return": [
                "Dict[(reversi.core.position.Position, List[Tuple[(reversi.core.position.Position, reversi.core.position.Direction)]])]"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "reversi.core.player.Player"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/core/game_test.py": {
        "GameTests.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IsOverTest.test_no_player_one_pieces": {
            "name": "test_no_player_one_pieces",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComputeScores.test_initial_board": {
            "name": "test_initial_board",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayMoveTest.test_invalid_move": {
            "name": "test_invalid_move",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayMoveTest.test_valid_move": {
            "name": "test_valid_move",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComputeValidMoveTest.test_player_one": {
            "name": "test_player_one",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "getPositionsWithPlayPiece.test_initial_board_with_player_one": {
            "name": "test_initial_board_with_player_one",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "computeValidMove.test_invalid_position": {
            "name": "test_invalid_position",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "computeValidMove.test_invalid_position_and_player": {
            "name": "test_invalid_position_and_player",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "computeValidMove.test_valid_position_and_player": {
            "name": "test_valid_position_and_player",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "capturePieces.test_capture_player_one": {
            "name": "test_capture_player_one",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Reversi-master/src/reversi/core/player.py": {
        "next_player": {
            "name": "next_player",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "player": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/core/position.py": {
        "next_position_in_direction": {
            "name": "next_position_in_direction",
            "location": 31,
            "return": [
                "Position"
            ],
            "arguments": {
                "position": [
                    "Position"
                ],
                "direction": [
                    "Direction"
                ]
            }
        },
        "Direction.__add__": {
            "name": "__add__",
            "location": 16,
            "return": [
                "Direction"
            ],
            "arguments": {
                "self": [
                    "_TDirection"
                ],
                "other": [
                    "str",
                    "Union[str, \"Date\"]"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/core/position_test.py": {
        "AddDirection.test_direction_north_plus_west": {
            "name": "test_direction_north_plus_west",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NextPositionInDirection.test_direction_west": {
            "name": "test_direction_west",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Reversi-master/src/reversi/core/__init__.py": {},
    "Reversi-master/src/reversi/view/cli.py": {
        "CLI.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "board": [
                    "int",
                    "float",
                    "bool",
                    "game.board.Board"
                ]
            }
        },
        "CLI.get_move": {
            "name": "get_move",
            "location": 18,
            "return": [
                "Tuple[(Any, bool)]"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "CLI.display_board": {
            "name": "display_board",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CLI.display_game_over": {
            "name": "display_game_over",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scores": [
                    "str",
                    "int"
                ]
            }
        },
        "CLI.display_skip_move": {
            "name": "display_skip_move",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "str",
                    "int"
                ]
            }
        },
        "CLI.display_scores": {
            "name": "display_scores",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scores": [
                    "str",
                    "int"
                ]
            }
        },
        "CLI.display_board.print_row": {
            "name": "print_row",
            "location": 23,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "row": [
                    "Dict[str, Any]",
                    "slice",
                    "dict",
                    "List[List[str]]",
                    "Iterator[Dict[str, Any]]"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/view/constants.py": {},
    "Reversi-master/src/reversi/view/gui.py": {
        "update_display": {
            "name": "update_display",
            "location": 14,
            "return": [
                "float",
                "str",
                "recidiviz.common.constants.enum_overrides.EnumOverrides",
                "int",
                "bool"
            ],
            "arguments": {
                "func": [
                    "int",
                    "idom.core.elemenElementConstructor"
                ]
            }
        },
        "draw_circle": {
            "name": "draw_circle",
            "location": 151,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "screen": [
                    "int",
                    "Collection[int]",
                    "typing.Collection"
                ],
                "size": [
                    "int",
                    "Collection[int]"
                ],
                "position": [
                    "int",
                    "bytes",
                    "Tuple[float, float]",
                    "tuple[typing.Union[float,float]]",
                    "Set[int]",
                    "set[int]"
                ],
                "colour": [
                    "int",
                    "Collection[int]",
                    "typing.Collection"
                ]
            }
        },
        "update_display.wrapper": {
            "name": "wrapper",
            "location": 17,
            "return": [
                "List[int]",
                "Iterable[str]",
                "Iterable[T]",
                "int"
            ],
            "arguments": {}
        },
        "GUI.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "board": [
                    "int",
                    "BinaryIO",
                    "typing.BinaryIO",
                    "List[deque]",
                    "list[typing.Deque]"
                ]
            }
        },
        "GUI.display_board": {
            "name": "display_board",
            "location": 53,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUI.get_clicked_ball": {
            "name": "get_clicked_ball",
            "location": 67,
            "return": [
                "tuple[typing.Union[Position,bool]]",
                "tuple[typing.Optional[bool]]",
                "Tuple[float, float]",
                "Optional[bool]",
                "int",
                "Optional[List[Any]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "int",
                    "bytes",
                    "Iterator[T]",
                    "typing.Iterator"
                ]
            }
        },
        "GUI.display_game_over": {
            "name": "display_game_over",
            "location": 79,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "scores": [
                    "int",
                    "type",
                    "typing.Type"
                ]
            }
        },
        "GUI.display_skip_move": {
            "name": "display_skip_move",
            "location": 102,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "skipped_player": [
                    "int",
                    "list",
                    "list[]"
                ],
                "player_to_play": [
                    "int",
                    "list",
                    "list[]"
                ]
            }
        },
        "GUI.display_score_board": {
            "name": "display_score_board",
            "location": 117,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "scores": [
                    "str",
                    "float",
                    "Iterable[str]",
                    "typing.Iterable[str]"
                ],
                "player_to_play": [
                    "Union[Callable, str]",
                    "int",
                    "typing.Callable[, ]",
                    "str",
                    "Sequence[str]",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/view/ui.py": {
        "UI.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "board": [
                    "int",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "str",
                    "Union[str, int]",
                    "bool"
                ]
            }
        },
        "UI.display_board": {
            "name": "display_board",
            "location": 17,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UI.display_game_over": {
            "name": "display_game_over",
            "location": 21,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UI.display_skip_move": {
            "name": "display_skip_move",
            "location": 25,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int",
                    "str",
                    "typing.Iterable[C]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "UI.display_score_board": {
            "name": "display_score_board",
            "location": 29,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "scores": [
                    "Counter"
                ],
                "player_to_play": [
                    "str",
                    "bool",
                    "float",
                    "dict[int, str]",
                    "Dict[int, str]",
                    "typing.Counter",
                    "Iterable['cirq.Operation']",
                    "Counter"
                ]
            }
        }
    },
    "Reversi-master/src/reversi/view/__init__.py": {},
    "Reversi-master/src/tests/__init__.py": {}
}
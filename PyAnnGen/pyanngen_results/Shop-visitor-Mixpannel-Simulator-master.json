{
    "Shop-visitor-Mixpannel-Simulator-master/constants.py": {},
    "Shop-visitor-Mixpannel-Simulator-master/main.py": {
        "pick_random_requester": {
            "name": "pick_random_requester",
            "location": 193,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {}
        },
        "start_a_visit": {
            "name": "start_a_visit",
            "location": 215,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "start_script": {
            "name": "start_script",
            "location": 220,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "save_users_pool": {
            "name": "save_users_pool",
            "location": 232,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "load_users_pool": {
            "name": "load_users_pool",
            "location": 238,
            "return": [
                "set",
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "BaseShopper.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseShopper.__repr__": {
            "name": "__repr__",
            "location": 51,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseShopper.visit": {
            "name": "visit",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "end_point": [
                    "Type",
                    "str"
                ],
                "extra": [
                    "dict",
                    "bool"
                ]
            }
        },
        "BaseShopper.charge": {
            "name": "charge",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "amount": [
                    "List[str]",
                    "bool",
                    "Iterable",
                    "str",
                    "Sequence[str]",
                    "Optional[List[int]]"
                ],
                "cart": [
                    "List[str]",
                    "bool",
                    "Iterable",
                    "str",
                    "Sequence[str]",
                    "Optional[List[int]]"
                ]
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "unregistered_shopper": [
                    "str",
                    "bool",
                    "Callable"
                ]
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 92,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.register_requester": {
            "name": "register_requester",
            "location": 96,
            "return": [
                "Dict[str, Any]",
                "str",
                "Callable[[str], T]"
            ],
            "arguments": {
                "cls": [
                    "Type",
                    "float",
                    "type"
                ],
                "requester": [
                    "Type",
                    "float",
                    "type"
                ]
            }
        },
        "Visit.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "bool",
                    "str",
                    "bytes"
                ]
            }
        },
        "Visit.empty_cart": {
            "name": "empty_cart",
            "location": 113,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Visit.generate_steps": {
            "name": "generate_steps",
            "location": 116,
            "return": [
                "bool",
                "set",
                "Mapping",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Visit.commence": {
            "name": "commence",
            "location": 125,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Visit.calculate_cost": {
            "name": "calculate_cost",
            "location": 138,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Visit.execute_step": {
            "name": "execute_step",
            "location": 146,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "step": [
                    "int",
                    "str",
                    "float"
                ],
                "dependency": [
                    "type",
                    "Optional[int]",
                    "AbstractSet[str]"
                ]
            }
        }
    },
    "Shop-visitor-Mixpannel-Simulator-master/mixpanel_projects.py": {
        "init_mixpannel_clients": {
            "name": "init_mixpannel_clients",
            "location": 22,
            "return": [
                "dict",
                "bool",
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "mxp_tokens": [
                    "List[str]",
                    "Optional[str]",
                    "str",
                    "List[Dict[str, str]]",
                    "list"
                ]
            }
        },
        "add_user_to_all_projects": {
            "name": "add_user_to_all_projects",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "user": [
                    "str"
                ]
            }
        },
        "charge_user_to_all_projects": {
            "name": "charge_user_to_all_projects",
            "location": 45,
            "return": [
                ""
            ],
            "arguments": {
                "user": [
                    "str",
                    "bool"
                ],
                "charge": [
                    "str",
                    "bool"
                ],
                "cart": [
                    "str",
                    "bool"
                ]
            }
        },
        "set_people_first_purchase": {
            "name": "set_people_first_purchase",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {
                "user": [
                    "bool"
                ]
            }
        },
        "set_people_last_purchase": {
            "name": "set_people_last_purchase",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "user": [
                    "bool"
                ]
            }
        }
    },
    "Shop-visitor-Mixpannel-Simulator-master/random_user.py": {
        "age": {
            "name": "age",
            "location": 15,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "birth_date": [
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "int"
                ]
            }
        },
        "generate_random_user_properties": {
            "name": "generate_random_user_properties",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "generate_date_of_birth": {
            "name": "generate_date_of_birth",
            "location": 46,
            "return": [
                "datetime.datetime",
                "str",
                "datetime.date",
                "int"
            ],
            "arguments": {}
        },
        "generate_random_ip": {
            "name": "generate_random_ip",
            "location": 59,
            "return": [
                "List[int]",
                "Dict[str, int]",
                "List[dict]"
            ],
            "arguments": {}
        },
        "random_bool": {
            "name": "random_bool",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "generate_item_name": {
            "name": "generate_item_name",
            "location": 80,
            "return": [
                "Iterable[str]",
                "IO[str]",
                "List[List[str]]",
                "Callable"
            ],
            "arguments": {}
        },
        "generate_item_count": {
            "name": "generate_item_count",
            "location": 84,
            "return": [
                "int",
                "List[Tuple[str, str]]"
            ],
            "arguments": {}
        }
    },
    "Shop-visitor-Mixpannel-Simulator-master/tests.py": {
        "Tests.test_visit": {
            "name": "test_visit",
            "location": 12,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tests.test_a_visit": {
            "name": "test_a_visit",
            "location": 23,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tests.test_new_paths": {
            "name": "test_new_paths",
            "location": 35,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Shop-visitor-Mixpannel-Simulator-master/weighted_random.py": {
        "weighted_choice": {
            "name": "weighted_choice",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "choices": [
                    "str",
                    "int",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "weighted_random_choice": {
            "name": "weighted_random_choice",
            "location": 19,
            "return": [
                "List[Dict]",
                "List[str]",
                "str",
                "List[int]",
                "List[List[Any]]",
                "float"
            ],
            "arguments": {
                "choice_list": [
                    "list"
                ]
            }
        }
    }
}
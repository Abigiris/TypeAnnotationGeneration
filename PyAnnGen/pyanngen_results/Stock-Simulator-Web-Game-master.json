{
    "Stock-Simulator-Web-Game-master/stocksim/api.py": {
        "getApiKey": {
            "name": "getApiKey",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "intraday": {
            "name": "intraday",
            "location": 29,
            "return": [
                "bool",
                "Dict[str, Any]",
                "int",
                "bytes",
                "str"
            ],
            "arguments": {
                "ticker": [
                    "str",
                    "bool"
                ]
            }
        },
        "daily": {
            "name": "daily",
            "location": 35,
            "return": [
                "bool",
                "Dict[str, Any]",
                "int",
                "bytes",
                "str"
            ],
            "arguments": {
                "ticker": [
                    "str",
                    "bool"
                ]
            }
        },
        "latest": {
            "name": "latest",
            "location": 41,
            "return": [
                "bool",
                "Dict[str, Any]",
                "int",
                "bytes",
                "str"
            ],
            "arguments": {
                "ticker": [
                    "str",
                    "bool"
                ]
            }
        },
        "searchStocks": {
            "name": "searchStocks",
            "location": 47,
            "return": [
                "str",
                "bool",
                "Union[int, float, complex]",
                "IO"
            ],
            "arguments": {
                "keyword": [
                    "int"
                ]
            }
        },
        "buyStock": {
            "name": "buyStock",
            "location": 53,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "ticker": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "sellStock": {
            "name": "sellStock",
            "location": 64,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "ticker": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "getPortfolio": {
            "name": "getPortfolio",
            "location": 74,
            "return": [
                "str",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "getTotalPortfolioValue": {
            "name": "getTotalPortfolioValue",
            "location": 78,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "getIntradayStockData": {
            "name": "getIntradayStockData",
            "location": 89,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "stockSymbol": [
                    "str",
                    "Type"
                ],
                "dataType": [
                    "Text",
                    "str",
                    "Type"
                ]
            }
        },
        "getDailyStockData": {
            "name": "getDailyStockData",
            "location": 103,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "stockSymbol": [
                    "str",
                    "Type"
                ],
                "dataType": [
                    "Text",
                    "str",
                    "Type"
                ]
            }
        },
        "getLatestStockData": {
            "name": "getLatestStockData",
            "location": 116,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "stockSymbol": [
                    "str",
                    "Type"
                ],
                "dataType": [
                    "Text",
                    "str",
                    "Type"
                ]
            }
        },
        "searchStockData": {
            "name": "searchStockData",
            "location": 127,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "keyword": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "dataType": [
                    "Text",
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "Stock-Simulator-Web-Game-master/stocksim/app.py": {
        "create_app": {
            "name": "create_app",
            "location": 14,
            "return": [
                "flask.Flask",
                "Flask"
            ],
            "arguments": {}
        },
        "create_app.index": {
            "name": "index",
            "location": 21,
            "return": [
                "str",
                "Optional[Any]"
            ],
            "arguments": {}
        },
        "create_app.search": {
            "name": "search",
            "location": 27,
            "return": [
                "str",
                "Type[Any]"
            ],
            "arguments": {}
        },
        "create_app.about": {
            "name": "about",
            "location": 33,
            "return": [
                "Text",
                "Optional[List[str]]",
                "Optional[str]",
                "Tuple[int,int]",
                "bool"
            ],
            "arguments": {}
        }
    },
    "Stock-Simulator-Web-Game-master/stocksim/custom_types.py": {},
    "Stock-Simulator-Web-Game-master/stocksim/errors.py": {},
    "Stock-Simulator-Web-Game-master/stocksim/portfolio.py": {
        "serialize": {
            "name": "serialize",
            "location": 79,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "portfolio": [
                    "List[dict]",
                    "str",
                    "List[Dict]",
                    "custom_types.JSONDict"
                ]
            }
        },
        "deserialize": {
            "name": "deserialize",
            "location": 84,
            "return": [
                "Portfolio"
            ],
            "arguments": {
                "portfolioJSON": [
                    "List[dict]",
                    "str",
                    "custom_types.JSONDict",
                    "List[Dict]"
                ]
            }
        },
        "Portfolio.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cash": [
                    "int",
                    "float",
                    "bool"
                ],
                "stocks": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Portfolio.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Portfolio.buyStock": {
            "name": "buyStock",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ticker": [
                    "Optional[Dict]",
                    "Dict",
                    "int",
                    "None",
                    "T"
                ]
            }
        },
        "Portfolio.sellStock": {
            "name": "sellStock",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ticker": [
                    "str",
                    "int",
                    "bytes",
                    "AbstractSet",
                    "AbstractSet[str]",
                    "bool"
                ]
            }
        },
        "Portfolio.getTotalValue": {
            "name": "getTotalValue",
            "location": 49,
            "return": [
                "float",
                "int",
                "str",
                "bytes",
                "Type",
                "Set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Portfolio.parseLatestPrice": {
            "name": "parseLatestPrice",
            "location": 56,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "ticker": [
                    "Dict",
                    "str",
                    "Union[str,Dict]"
                ]
            }
        },
        "Portfolio.parsePriceHistory": {
            "name": "parsePriceHistory",
            "location": 66,
            "return": [
                "List[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "self": [],
                "ticker": [
                    "Dict",
                    "str",
                    "Union[str,Dict]"
                ]
            }
        }
    },
    "Stock-Simulator-Web-Game-master/stocksim/stock.py": {
        "serialize": {
            "name": "serialize",
            "location": 32,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "stock": [
                    "bool",
                    "List[str]",
                    "str",
                    "int"
                ]
            }
        },
        "deserialize": {
            "name": "deserialize",
            "location": 39,
            "return": [
                "Stock"
            ],
            "arguments": {
                "stockJSON": [
                    "str",
                    "int",
                    "Callable"
                ]
            }
        },
        "stockSummaryPage": {
            "name": "stockSummaryPage",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "tickerSymbol": [
                    "bool",
                    "str",
                    "Callable",
                    "Optional[str]",
                    "None",
                    "Tuple[type]",
                    "Tuple[Type]",
                    "Dict[str,dict]",
                    "int",
                    "Dict[str,Dict]",
                    "Dict[str,Any]"
                ]
            }
        },
        "Stock.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ticker": [
                    "str",
                    "int",
                    "float",
                    "Tuple",
                    "bool"
                ],
                "price": [
                    "str",
                    "int",
                    "float",
                    "Tuple",
                    "bool"
                ],
                "count": [
                    "int",
                    "str",
                    "float",
                    "Tuple",
                    "bool"
                ],
                "name": [
                    "Text",
                    "str",
                    "List[str]"
                ],
                "region": [
                    "Text",
                    "str",
                    "int",
                    "float",
                    "Tuple",
                    "bool"
                ],
                "currency": [
                    "Text",
                    "str",
                    "int",
                    "float",
                    "Tuple",
                    "bool"
                ],
                "history": [
                    "List",
                    "str",
                    "int",
                    "float",
                    "Tuple",
                    "bool"
                ]
            }
        },
        "Stock.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Stock-Simulator-Web-Game-master/stocksim/__init__.py": {},
    "Stock-Simulator-Web-Game-master/tests/test_stock.py": {
        "StockTestCase.test_serialize": {
            "name": "test_serialize",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
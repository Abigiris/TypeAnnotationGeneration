{
    "Tesseract_Glue-master/conanfile.py": {
        "Exiv2BindConan.imports": {
            "name": "imports",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Tesseract_Glue-master/setup.py": {
        "BuildTesseractExt.build_extension": {
            "name": "build_extension",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ext": [
                    "bool",
                    "str"
                ]
            }
        },
        "BuildTesseractExt.run": {
            "name": "run",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Tesseract_Glue-master/builders/conan_libs.py": {
        "update_extension": {
            "name": "update_extension",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "extension": [],
                "metadata": [
                    "float",
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "update_extension2": {
            "name": "update_extension2",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "extension": [
                    "str",
                    "Optional[List[str]]"
                ],
                "text_md": [
                    "str",
                    "dict",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "get_compiler_name": {
            "name": "get_compiler_name",
            "location": 175,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "get_visual_studio_version": {
            "name": "get_visual_studio_version",
            "location": 199,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_compiler_version": {
            "name": "get_compiler_version",
            "location": 219,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "get_compiler_info": {
            "name": "get_compiler_info",
            "location": 246,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "ConanBuildInfoParser.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "ConanBuildInfoParser.parse": {
            "name": "parse",
            "location": 20,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConanBuildInfoParser.iter_subject_chunk": {
            "name": "iter_subject_chunk",
            "location": 28,
            "return": [
                "Generator[(list, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsConanBuildInfo.parse": {
            "name": "parse",
            "location": 44,
            "return": [
                "typing.Dict[builtins.str, builtins.str]"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "bool",
                    "str"
                ]
            }
        },
        "ConanBuildInfoTXT.parse": {
            "name": "parse",
            "location": 50,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str",
                    "Union[pathlib.Path, str]"
                ]
            }
        },
        "AbsResultTester.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "compiler": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "AbsResultTester.test_shared_libs": {
            "name": "test_shared_libs",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "libs_dir": [
                    "Union[str, pathlib.Path]",
                    "str",
                    "pathlib.Path",
                    "List[pypi2nix.path.Path]",
                    "Optional[str]",
                    "Union[slice, List[slice], List[int]]"
                ]
            }
        },
        "AbsResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 82,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str",
                    "bool",
                    "Iterable[str]"
                ]
            }
        },
        "MacResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str",
                    "bool",
                    "Union[pathlib.Path, str]",
                    "pathlib.Path",
                    "bytes"
                ]
            }
        },
        "WindowsResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str",
                    "pathlib.Path",
                    "path.Path"
                ]
            }
        },
        "LinuxResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str",
                    "bool",
                    "Union[pathlib.Path, str]",
                    "pathlib.Path",
                    "bytes"
                ]
            }
        },
        "CompilerInfoAdder.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "build_ext_cmd": [
                    "Dict[str, Any]",
                    "List[str]",
                    "Dict[str, str]",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "CompilerInfoAdder.add_libs": {
            "name": "add_libs",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "libs": [
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "CompilerInfoAdder.add_lib_dirs": {
            "name": "add_lib_dirs",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lib_dirs": [
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "CompilerInfoAdder.add_include_dirs": {
            "name": "add_include_dirs",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "include_dirs": []
            }
        },
        "BuildConan.initialize_options": {
            "name": "initialize_options",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildConan.__init__": {
            "name": "__init__",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dist": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ]
            }
        },
        "BuildConan.finalize_options": {
            "name": "finalize_options",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildConan.getConanBuildInfo": {
            "name": "getConanBuildInfo",
            "location": 278,
            "return": [
                "str",
                "bool",
                "float"
            ],
            "arguments": {
                "self": [],
                "root_dir": [
                    "Tuple[int, int]",
                    "str",
                    "BinaryIO",
                    "pathlib.Path"
                ]
            }
        },
        "BuildConan._get_deps": {
            "name": "_get_deps",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "build_dir": [
                    "pathlib.Path",
                    "cerulean.path.Path"
                ],
                "conan_cache": [
                    "str",
                    "list",
                    "pathlib.Path"
                ]
            }
        },
        "BuildConan.add_deps_to_compiler": {
            "name": "add_deps_to_compiler",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "metadata": [
                    "List[str]",
                    "dict",
                    "Dict[str, Any]",
                    "Union[str, pathlib.Path]",
                    "str"
                ]
            }
        },
        "BuildConan.test_tesseract": {
            "name": "test_tesseract",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "build_file": [
                    "pathlib.Path",
                    "BinaryIO",
                    "pathlib.PosixPath"
                ]
            }
        },
        "BuildConan.run": {
            "name": "run",
            "location": 399,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConanBuildMetadata.__init__": {
            "name": "__init__",
            "location": 436,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "ConanBuildMetadata.deps": {
            "name": "deps",
            "location": 442,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConanBuildMetadata.dep": {
            "name": "dep",
            "location": 445,
            "return": [
                "List[str]",
                "str",
                "List[dict]",
                "list",
                "List[pathlib.Path]"
            ],
            "arguments": {
                "self": [],
                "dep": [
                    "float",
                    "FrozenSet[int]",
                    "int",
                    "str"
                ]
            }
        }
    },
    "Tesseract_Glue-master/builders/deps.py": {
        "parse_dumpbin_deps": {
            "name": "parse_dumpbin_deps",
            "location": 8,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "file": [
                    "str",
                    "IO[str]"
                ]
            }
        },
        "remove_system_dlls": {
            "name": "remove_system_dlls",
            "location": 23,
            "return": [
                "list"
            ],
            "arguments": {
                "dlls": [
                    "str",
                    "int",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "get_win_deps": {
            "name": "get_win_deps",
            "location": 38,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "dll_name": [
                    "str"
                ],
                "output_file": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "compiler": [
                    "str"
                ]
            }
        }
    },
    "Tesseract_Glue-master/builders/local_backend.py": {
        "build_sdist": {
            "name": "build_sdist",
            "location": 4,
            "return": [
                "str",
                "dict",
                "float",
                "int",
                "bool"
            ],
            "arguments": {
                "sdist_directory": [
                    "Dict[str,Any]",
                    "Set[str]"
                ],
                "config_settings": [
                    "Dict[str,Any]",
                    "Set[str]",
                    "None"
                ]
            }
        },
        "build_wheel": {
            "name": "build_wheel",
            "location": 8,
            "return": [
                "str",
                "dict",
                "float",
                "int",
                "bool"
            ],
            "arguments": {
                "wheel_directory": [
                    "Dict[str,Any]",
                    "Set[str]"
                ],
                "config_settings": [
                    "Dict[str,Any]",
                    "Set[str]",
                    "None"
                ],
                "metadata_directory": [
                    "Dict[str,Any]",
                    "Set[str]",
                    "None"
                ]
            }
        },
        "get_requires_for_build_sdist": {
            "name": "get_requires_for_build_sdist",
            "location": 12,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "config_settings": [
                    "Dict[str,Any]",
                    "None",
                    "bool",
                    "Dict",
                    "Dict[str,str]",
                    "Optional[Dict[str,Any]]"
                ]
            }
        },
        "prepare_metadata_for_build_wheel": {
            "name": "prepare_metadata_for_build_wheel",
            "location": 16,
            "return": [
                "int",
                "bytes",
                "str",
                "bool"
            ],
            "arguments": {
                "metadata_directory": [
                    "Optional[str]",
                    "Dict[str,Any]",
                    "str",
                    "None"
                ],
                "config_settings": [
                    "Optional[str]",
                    "Dict[str,Any]",
                    "None",
                    "str"
                ]
            }
        },
        "get_requires_for_build_wheel": {
            "name": "get_requires_for_build_wheel",
            "location": 20,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "config_settings": [
                    "Dict[str,Any]",
                    "None",
                    "bool",
                    "Dict",
                    "Dict[str,str]",
                    "Optional[Dict[str,Any]]"
                ]
            }
        }
    },
    "Tesseract_Glue-master/builders/pybind11_builder.py": {
        "BuildPybind11Extension.initialize_options": {
            "name": "initialize_options",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.finalize_options": {
            "name": "finalize_options",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.find_deps": {
            "name": "find_deps",
            "location": 20,
            "return": [
                "Optional[Union[(bytes, str)]]"
            ],
            "arguments": {
                "self": [],
                "lib": [
                    "str",
                    "List[str]",
                    "Set[str]"
                ],
                "search_paths": [
                    "str",
                    "None"
                ]
            }
        },
        "BuildPybind11Extension.find_missing_libraries": {
            "name": "find_missing_libraries",
            "location": 35,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "ext": [
                    "str",
                    "bool"
                ]
            }
        },
        "BuildPybind11Extension.build_extension": {
            "name": "build_extension",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ext": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "BuildPybind11Extension.get_pybind11_include_path": {
            "name": "get_pybind11_include_path",
            "location": 50,
            "return": [
                "str",
                "Optional[List[str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Tesseract_Glue-master/builders/__init__.py": {},
    "Tesseract_Glue-master/ci/docker/linux/tox/update_conan_compiler.py": {
        "get_arg_parser": {
            "name": "get_arg_parser",
            "location": 5,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "update_settings_file": {
            "name": "update_settings_file",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "settings_file": [
                    "str",
                    "int"
                ],
                "compiler_name": [
                    "str",
                    "Dict[str,str]",
                    "int",
                    "Optional[Dict]",
                    "Dict",
                    "None"
                ],
                "compiler_version": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Tesseract_Glue-master/docs/source/conf.py": {
        "get_project_metadata": {
            "name": "get_project_metadata",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "Tesseract_Glue-master/tests/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "dict"
                ]
            }
        },
        "pytest_collection_modifyitems": {
            "name": "pytest_collection_modifyitems",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "Dict[str, Any]"
                ],
                "items": [
                    "List",
                    "Dict",
                    "str"
                ]
            }
        },
        "download_data": {
            "name": "download_data",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "destination": [
                    "str"
                ]
            }
        },
        "tessdata_eng": {
            "name": "tessdata_eng",
            "location": 58,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmpdir_factory": [
                    "str",
                    "Dict[str, Callable]",
                    "bool",
                    "List[str]"
                ]
            }
        },
        "sample_images": {
            "name": "sample_images",
            "location": 74,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "tmpdir_factory": [
                    "str",
                    "int",
                    "bool",
                    "List[str]"
                ]
            }
        }
    },
    "Tesseract_Glue-master/tests/test_basic.py": {
        "test_import_module": {
            "name": "test_import_module",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_image_lib_versions": {
            "name": "test_get_image_lib_versions",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_image_lib_versions_dict": {
            "name": "test_get_image_lib_versions_dict",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_tesseract_version": {
            "name": "test_get_tesseract_version",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Tesseract_Glue-master/tests/test_capabilties.py": {
        "linked_image_libs": {
            "name": "linked_image_libs",
            "location": 7,
            "return": [
                "int",
                "str"
            ],
            "arguments": {}
        },
        "test_expected_decoders": {
            "name": "test_expected_decoders",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "linked_image_libs": [
                    "str",
                    "Dict",
                    "None",
                    "Iterable[Tuple[str,str]]",
                    "Optional[str]",
                    "Iterable[str]"
                ],
                "library_name": [
                    "str",
                    "Dict",
                    "None",
                    "Iterable[Tuple[str,str]]",
                    "Optional[str]",
                    "Iterable[str]"
                ]
            }
        }
    },
    "Tesseract_Glue-master/tests/test_integration.py": {
        "download_data": {
            "name": "download_data",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "destination": [
                    "str"
                ]
            }
        },
        "test_reader_with_data": {
            "name": "test_reader_with_data",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "tessdata_eng": [
                    "str"
                ],
                "sample_images": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_no_osd_file": {
            "name": "test_no_osd_file",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir_factory": [
                    "str"
                ]
            }
        }
    },
    "Tesseract_Glue-master/tests/test_languages.py": {
        "test_download_languague_downloads_file": {
            "name": "test_download_languague_downloads_file",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str"
                ],
                "tmpdir": [
                    "str"
                ]
            }
        },
        "test_download_languague_downloads_file_hash": {
            "name": "test_download_languague_downloads_file_hash",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str"
                ],
                "tmpdir": [
                    "str"
                ]
            }
        },
        "test_download_languague_downloads_file.mocked_function": {
            "name": "mocked_function",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_download_languague_downloads_file_hash.mocked_function": {
            "name": "mocked_function",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "test_download_languague_downloads_file_hash.mocked_md5": {
            "name": "mocked_md5",
            "location": 45,
            "return": [
                "str",
                "Dict[str, Sequence[str]]"
            ],
            "arguments": {}
        }
    },
    "Tesseract_Glue-master/tests/test_load_image.py": {
        "test_load_image": {
            "name": "test_load_image",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_invalid_image_throws_error": {
            "name": "test_invalid_image_throws_error",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "tessdata_eng": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "test_valid_image": {
            "name": "test_valid_image",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "tessdata_eng": [
                    "Dict[str,Sequence[str]]"
                ],
                "sample_images": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "Tesseract_Glue-master/tests/test_reader.py": {
        "test_invalid_tesseract_data_path": {
            "name": "test_invalid_tesseract_data_path",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_tesseract_language": {
            "name": "test_invalid_tesseract_language",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "tessdata_eng": []
            }
        },
        "test_read_image": {
            "name": "test_read_image",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "tessdata_eng": [
                    "str"
                ],
                "sample_images": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_read_image_invalid_raises": {
            "name": "test_read_image_invalid_raises",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "tessdata_eng": [
                    "Dict[str,Sequence[str]]"
                ]
            }
        }
    },
    "Tesseract_Glue-master/tests/feature/__init__.py": {},
    "Tesseract_Glue-master/tests/features/test_engine_feature.py": {
        "test_engine_feature": {
            "name": "test_engine_feature",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tess_path": {
            "name": "tess_path",
            "location": 14,
            "return": [
                "str",
                "int",
                "Sequence[str]",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "tessdata_eng": [
                    "str",
                    "Sequence[str]"
                ]
            }
        },
        "image_path": {
            "name": "image_path",
            "location": 22,
            "return": [
                "str",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "sample_images": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "ocr_engine": {
            "name": "ocr_engine",
            "location": 31,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "tess_path": [
                    "str"
                ]
            }
        },
        "read_ocr": {
            "name": "read_ocr",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "ocr_engine": [
                    "str",
                    "int"
                ],
                "image_path": [
                    "str"
                ]
            }
        },
        "ocr_engine_has_version": {
            "name": "ocr_engine_has_version",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "ocr_engine": [
                    "int",
                    "list",
                    "str"
                ]
            }
        },
        "step_impl": {
            "name": "step_impl",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Tesseract_Glue-master/uiucprescon/ocr/capabilities.py": {
        "image_lib_versions": {
            "name": "image_lib_versions",
            "location": 7,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "image_lib_versions.spliter": {
            "name": "spliter",
            "location": 16,
            "return": [
                "Tuple",
                "List",
                "List[T]",
                "List[float]"
            ],
            "arguments": {
                "item": [
                    "Dict[str, Any]",
                    "int"
                ]
            }
        }
    },
    "Tesseract_Glue-master/uiucprescon/ocr/engine.py": {
        "AbsEngine.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_set_path": [
                    "str",
                    "Optional[str]",
                    "Dict",
                    "None",
                    "IO[Any]",
                    "IO"
                ]
            }
        },
        "AbsEngine.get_reader": {
            "name": "get_reader",
            "location": 21,
            "return": [
                "reader.AbsReader",
                "None"
            ],
            "arguments": {
                "self": [],
                "lang": [
                    "bool",
                    "str",
                    "Dict",
                    "T"
                ]
            }
        },
        "AbsEngine.get_version": {
            "name": "get_version",
            "location": 34,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Engine.get_reader": {
            "name": "get_reader",
            "location": 47,
            "return": [
                "reader.Reader"
            ],
            "arguments": {
                "self": [],
                "lang": [
                    "str"
                ]
            }
        },
        "Engine.get_version": {
            "name": "get_version",
            "location": 62,
            "return": [
                "str",
                "dict",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Tesseract_Glue-master/uiucprescon/ocr/languages.py": {
        "_download_language": {
            "name": "_download_language",
            "location": 214,
            "return": [
                "str",
                "Iterable[int]",
                "bool",
                "IO"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool"
                ],
                "destination": [
                    "str",
                    "bool"
                ],
                "md5_hash": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "download_language_pack": {
            "name": "download_language_pack",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "tesseract_version": [
                    "str",
                    "Sequence[str]",
                    "int",
                    "List[str]"
                ],
                "destination": [
                    "str",
                    "int",
                    "List[bytes]",
                    "List",
                    "bool"
                ],
                "md5_hash": [
                    "str",
                    "None",
                    "int",
                    "List[bytes]",
                    "List",
                    "bool"
                ]
            }
        },
        "_extract_language_pack": {
            "name": "_extract_language_pack",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "language_pack": [
                    "str",
                    "int",
                    "IO[Any]",
                    "List[str]",
                    "IO",
                    "Callable"
                ],
                "destination": [
                    "str",
                    "bytes",
                    "Dict"
                ]
            }
        },
        "LanguageDownloader.is_file_valid": {
            "name": "is_file_valid",
            "location": 139,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str",
                    "int"
                ],
                "expected_md5_hash": [
                    "List[Tuple[str,...]]",
                    "List[tuple[Union[str,...]]]",
                    "Dict[str,str]",
                    "Optional[Exception]",
                    "Exception",
                    "bool",
                    "bytes",
                    "None",
                    "Optional[bytes]",
                    "Dict",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "LanguageDownloader.download": {
            "name": "download",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Dict"
                ],
                "destination": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None",
                    "Optional[Callable[[str],Any]]",
                    "Callable[str,Any]"
                ],
                "md5_hash": [
                    "str",
                    "None",
                    "Union[str,Iterable[str]]",
                    "bytes",
                    "Optional[str]",
                    "Iterable[str]"
                ]
            }
        }
    },
    "Tesseract_Glue-master/uiucprescon/ocr/reader.py": {
        "AbsReader.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "language_code": [
                    "str",
                    "int",
                    "bytes"
                ],
                "tesseract_data_path": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "AbsReader.read": {
            "name": "read",
            "location": 40,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "str",
                    "List[str]",
                    "IO[str]",
                    "BinaryIO",
                    "IO",
                    "bool",
                    "List"
                ]
            }
        },
        "Reader.read_image": {
            "name": "read_image",
            "location": 53,
            "return": [
                "Callable",
                "bool"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "str",
                    "int",
                    "List",
                    "bool"
                ]
            }
        },
        "Reader.read": {
            "name": "read",
            "location": 65,
            "return": [
                "Optional[int]",
                "str",
                "Callable",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "str",
                    "Mapping",
                    "int",
                    "bool"
                ]
            }
        },
        "AbsReader.__init__.is_lang_in_path": {
            "name": "is_lang_in_path",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "lang": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "Tesseract_Glue-master/uiucprescon/ocr/__init__.py": {},
    "Tesseract_Glue-master/utils/upload_docs.py": {
        "locate_documentation_files": {
            "name": "locate_documentation_files",
            "location": 7,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "root_path": [
                    "str"
                ]
            }
        },
        "get_arg_parser": {
            "name": "get_arg_parser",
            "location": 15,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "remove_files_from_directory": {
            "name": "remove_files_from_directory",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "bool",
                    "List[Dict[str, Any]]"
                ],
                "root": [
                    "str",
                    "bool",
                    "Mapping[str,str]",
                    "Mapping"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
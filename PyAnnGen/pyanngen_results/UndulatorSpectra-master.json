{
    "UndulatorSpectra-master/docs/conf.py": {},
    "UndulatorSpectra-master/tests/test_ebeam.py": {
        "TestSigFunction.test_maxiv_y_params": {
            "name": "test_maxiv_y_params",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigFunction.test_maxiv_x_params": {
            "name": "test_maxiv_x_params",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigFunction.test_negative_emit_valueerror": {
            "name": "test_negative_emit_valueerror",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "float"
                ]
            }
        },
        "TestSigFunction.test_negative_beta_valueerror": {
            "name": "test_negative_beta_valueerror",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "float"
                ]
            }
        },
        "TestSigpFunction.test_maxiv_y_params": {
            "name": "test_maxiv_y_params",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigpFunction.test_maxiv_x_params": {
            "name": "test_maxiv_x_params",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigpFunction.test_negative_emit_valueerror": {
            "name": "test_negative_emit_valueerror",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "float"
                ]
            }
        },
        "TestSigpFunction.test_negative_beta_valueerror": {
            "name": "test_negative_beta_valueerror",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "float"
                ]
            }
        },
        "TestBeamGammaFunction.test_maxiv_params": {
            "name": "test_maxiv_params",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBeamGammaFunction.test_restframe_gamma": {
            "name": "test_restframe_gamma",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBeamGammaFunction.test_nonphysical_energy": {
            "name": "test_nonphysical_energy",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "UndulatorSpectra-master/tests/test_undulator.py": {
        "quadrature_sum": {
            "name": "quadrature_sum",
            "location": 10,
            "return": [
                "float",
                "str",
                "Optional[dict]",
                "List[str]",
                "int",
                "Tuple[int]",
                "Counter",
                "Sequence[int]"
            ],
            "arguments": {}
        },
        "TestSigFunction.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigFunction.test_beam_attribute_references": {
            "name": "test_beam_attribute_references",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigFunction.test_nanomax_lamdan": {
            "name": "test_nanomax_lamdan",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigFunction.test_nanomax_energyn": {
            "name": "test_nanomax_energyn",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSigFunction.test_harmonic_wavelengths": {
            "name": "test_harmonic_wavelengths",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "int"
                ]
            }
        },
        "TestSigFunction.test_harmonic_energy": {
            "name": "test_harmonic_energy",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "int"
                ]
            }
        },
        "TestSigFunction.test_spectralwidth_undulator": {
            "name": "test_spectralwidth_undulator",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "Tuple[int,int]",
                    "Tuple[Union[int,int]]",
                    "Optional[int]",
                    "int",
                    "None"
                ]
            }
        },
        "TestSigFunction.test_diffspotsize": {
            "name": "test_diffspotsize",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "Optional[int]",
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "TestSigFunction.test_diffspotdiv": {
            "name": "test_diffspotdiv",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "Optional[int]",
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "TestSigFunction.test_sourcespot_plane_must_be_right": {
            "name": "test_sourcespot_plane_must_be_right",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "UndulatorSpectra-master/tests/test_utilities.py": {
        "TestWavelength2Energy.test_1nm": {
            "name": "test_1nm",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWavelength2Energy.test_back_conversion_works": {
            "name": "test_back_conversion_works",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exmpl": []
            }
        },
        "TestWavelength2Energy.test_no_negative_wavelengths": {
            "name": "test_no_negative_wavelengths",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWavelength2Energy.test_no_zero_wavelengths": {
            "name": "test_no_zero_wavelengths",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "UndulatorSpectra-master/undulator/ebeam.py": {
        "sig": {
            "name": "sig",
            "location": 3,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "emit": [
                    "int",
                    "Callable",
                    "str"
                ],
                "beta": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "sigp": {
            "name": "sigp",
            "location": 23,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "emit": [
                    "int",
                    "Callable",
                    "str"
                ],
                "beta": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "beamgamma": {
            "name": "beamgamma",
            "location": 43,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "energy": [
                    "float",
                    "int",
                    "str"
                ]
            }
        }
    },
    "UndulatorSpectra-master/undulator/undulator.py": {
        "Undulator.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "insdev": [
                    "int",
                    "float",
                    "bool"
                ],
                "beam": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Undulator.__repr__": {
            "name": "__repr__",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Undulator.lamda_n": {
            "name": "lamda_n",
            "location": 65,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ],
                "theta": [
                    "int"
                ]
            }
        },
        "Undulator.energy_n": {
            "name": "energy_n",
            "location": 76,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int",
                    "List[int]"
                ],
                "theta": [
                    "int",
                    "List[int]"
                ]
            }
        },
        "Undulator.d2l_dtheta2": {
            "name": "d2l_dtheta2",
            "location": 82,
            "return": [
                "int",
                "str",
                "Dict"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Undulator.dl_dgamma": {
            "name": "dl_dgamma",
            "location": 85,
            "return": [
                "int",
                "str",
                "List[str]",
                "bytes",
                "float"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int",
                    "str"
                ]
            }
        },
        "Undulator.spectralwidth_ebeam": {
            "name": "spectralwidth_ebeam",
            "location": 89,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "Undulator.spectralwidth_undulator": {
            "name": "spectralwidth_undulator",
            "location": 98,
            "return": [
                "float",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int",
                    "str",
                    "bool"
                ],
                "theta": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "Undulator.spectralwidth_total": {
            "name": "spectralwidth_total",
            "location": 102,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int",
                    "List",
                    "List[int]"
                ],
                "theta": [
                    "int",
                    "bool"
                ]
            }
        },
        "Undulator.difflimited_spot": {
            "name": "difflimited_spot",
            "location": 107,
            "return": [
                "float",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Undulator.difflimited_div": {
            "name": "difflimited_div",
            "location": 114,
            "return": [
                "float",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Undulator.source_spot": {
            "name": "source_spot",
            "location": 121,
            "return": [
                "float",
                "int",
                "str",
                "Tuple[str,int]"
            ],
            "arguments": {
                "self": [],
                "plane": [
                    "str",
                    "float",
                    "List",
                    "int",
                    "Optional[int]",
                    "None",
                    "bool"
                ],
                "n": [
                    "int",
                    "Dict[str,int]",
                    "float"
                ],
                "theta": [
                    "int",
                    "str",
                    "float",
                    "List",
                    "Optional[int]",
                    "bool"
                ]
            }
        },
        "Undulator.source_div": {
            "name": "source_div",
            "location": 139,
            "return": [
                "float",
                "int",
                "str",
                "Tuple[str,int]"
            ],
            "arguments": {
                "self": [],
                "plane": [
                    "str",
                    "float",
                    "List",
                    "int",
                    "Optional[int]",
                    "None",
                    "bool"
                ],
                "n": [
                    "int",
                    "Dict[str,int]",
                    "float"
                ],
                "theta": [
                    "int",
                    "str",
                    "float",
                    "List",
                    "Optional[int]",
                    "bool"
                ]
            }
        },
        "Undulator.brightness": {
            "name": "brightness",
            "location": 152,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int",
                    "str",
                    "bool"
                ],
                "theta": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "objectdict.__getattr__": {
            "name": "__getattr__",
            "location": 165,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "objectdict.__setattr__": {
            "name": "__setattr__",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "float",
                    "List[Optional[str]]",
                    "Union[int,float]",
                    "int"
                ],
                "value": [
                    "str",
                    "float",
                    "List[Optional[str]]",
                    "Union[int,float]",
                    "int"
                ]
            }
        },
        "objectdict.__delattr__": {
            "name": "__delattr__",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "UndulatorSpectra-master/undulator/utilities.py": {
        "wavelength2energy": {
            "name": "wavelength2energy",
            "location": 3,
            "return": [
                "float",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "wavelength": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "UndulatorSpectra-master/undulator/__init__.py": {}
}
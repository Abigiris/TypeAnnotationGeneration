{
    "aiodl-master/aiodl/download_img.py": {
        "run_with_typer": {
            "name": "run_with_typer",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "url_file": [
                    "bool",
                    "float",
                    "int",
                    "Union[str, pathlib.Path]"
                ],
                "out_dir": [
                    "int",
                    "float",
                    "Optional[int]"
                ],
                "delimiter": [
                    "bool",
                    "float",
                    "int",
                    "Union[str, pathlib.Path]"
                ],
                "num_requests": [
                    "int",
                    "float",
                    "Optional[int]"
                ],
                "timeout": [
                    "int",
                    "float",
                    "Optional[int]"
                ],
                "max_retry": [
                    "int",
                    "float",
                    "Optional[int]"
                ],
                "add": [
                    "bool",
                    "float",
                    "int",
                    "Union[str, pathlib.Path]"
                ],
                "skip_exists": [
                    "bool",
                    "float",
                    "int",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "Downloader.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "out_dir": [
                    "bool",
                    "int",
                    "List[Dict]",
                    "Optional[str]",
                    "Callable",
                    "MutableMapping[str, str]",
                    "str"
                ],
                "num_requests": [
                    "int",
                    "Optional[int]",
                    "List[str]"
                ],
                "timeout": [
                    "bool",
                    "str",
                    "Callable",
                    "Callable[[str], bool]"
                ],
                "total": [
                    "bool",
                    "str",
                    "Optional[str]",
                    "int",
                    "Dict[str, str]",
                    "Union[pathlib.Path, str]"
                ],
                "max_retry": [
                    "int",
                    "str"
                ]
            }
        },
        "Downloader._log_dict": {
            "name": "_log_dict",
            "location": 121,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "out_name": [
                    "str",
                    "int",
                    "Callable"
                ],
                "num_retry": [
                    "int"
                ],
                "extra": [
                    "str",
                    "int",
                    "Callable"
                ]
            }
        },
        "Downloader.write": {
            "name": "write",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "out_file": [
                    "pathlib.Path",
                    "str",
                    "BinaryIO"
                ],
                "content": [
                    "bytes",
                    "str",
                    "Union[None, bytes]"
                ]
            }
        },
        "main.exist_file": {
            "name": "exist_file",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "row": [
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        }
    },
    "aiodl-master/aiodl/log_json_formatter.py": {
        "json_translate": {
            "name": "json_translate",
            "location": 19,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "obj": [
                    "bool",
                    "dict"
                ]
            }
        },
        "CustomJsonFormatter.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomJsonFormatter.add_fields": {
            "name": "add_fields",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "log_record": [
                    "Optional[str]",
                    "bytes",
                    "bool"
                ],
                "record": [
                    "Optional[str]",
                    "bytes",
                    "bool"
                ],
                "message_dict": [
                    "str",
                    "Dict[str, str]",
                    "int"
                ]
            }
        }
    },
    "aiodl-master/aiodl/__init__.py": {}
}
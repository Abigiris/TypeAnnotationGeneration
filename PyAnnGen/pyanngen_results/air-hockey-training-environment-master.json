{
    "air-hockey-training-environment-master/connect.py": {
        "BaseConnection.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseConnection.serialize": {
            "name": "serialize",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "payload": [
                    "dict",
                    "str",
                    "dict[, ]",
                    "T",
                    "int",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "BaseConnection.deserialize": {
            "name": "deserialize",
            "location": 20,
            "return": [
                "Dict[str, Any]",
                "list[dict[, ]]",
                "Dict[str, str]",
                "list[]",
                "dict",
                "list[int]",
                "dict[str, list[typing.Any]]"
            ],
            "arguments": {
                "payload": [
                    "str",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        },
        "BaseConnection.get": {
            "name": "get",
            "location": 43,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseConnection.post": {
            "name": "post",
            "location": 47,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedisConnection.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedisConnection.get": {
            "name": "get",
            "location": 58,
            "return": [
                "Union[(str, Dict[(str, Any)])]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Union[(str, List[str])]"
                ]
            }
        },
        "RedisConnection.post": {
            "name": "post",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "Dict[(str, Union[(int, list, str)])]"
                ]
            }
        },
        "ServerConnection.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test": [
                    "bool"
                ]
            }
        },
        "ServerConnection.get": {
            "name": "get",
            "location": 120,
            "return": [
                "str",
                "typing.Text",
                "dict",
                "dict[dict[, ], ]",
                "list",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Union[(str, List[str])]"
                ]
            }
        },
        "ServerConnection.post": {
            "name": "post",
            "location": 151,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[(str, Union[(int, list, str)])]"
                ]
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Connection.make": {
            "name": "make",
            "location": 171,
            "return": [
                "Union[(RedisConnection, ServerConnection)]"
            ],
            "arguments": {
                "self": [],
                "connection": [
                    "str"
                ],
                "test": [
                    "bool"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/gui.py": {
        "AirHockeyGui.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Dict[(str, int)]"
                ]
            }
        },
        "AirHockeyGui.update_locations": {
            "name": "update_locations",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AirHockeyGui.draw_table": {
            "name": "draw_table",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AirHockeyGui.draw_screen": {
            "name": "draw_screen",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AirHockeyGui.rerender_environment": {
            "name": "rerender_environment",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AirHockeyGui.run": {
            "name": "run",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/predict.py": {
        "Predict.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Dict[(str, Union[(int, str)])]"
                ]
            }
        },
        "Predict._update_buffers": {
            "name": "_update_buffers",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Predict.robot_player": {
            "name": "robot_player",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Predict.opponent_player": {
            "name": "opponent_player",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Predict.run": {
            "name": "run",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/train.py": {
        "Train.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "Dict[(str, Union[(int, str)])]"
                ]
            }
        },
        "Train._update_buffers": {
            "name": "_update_buffers",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Train.robot_player": {
            "name": "robot_player",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Train.opponent_player": {
            "name": "opponent_player",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Train.run": {
            "name": "run",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/utils.py": {
        "get_config_strategy": {
            "name": "get_config_strategy",
            "location": 27,
            "return": [
                "Dict[(str, Union[(int, str)])]"
            ],
            "arguments": {
                "strategy": [
                    "str"
                ]
            }
        },
        "get_model_path": {
            "name": "get_model_path",
            "location": 53,
            "return": [
                "str"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "write_results": {
            "name": "write_results",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "data": [
                    "Dict[(str, List[int])]"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/environment/AirHockey.py": {
        "AirHockey.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AirHockey._move": {
            "name": "_move",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "agent": [
                    "int"
                ],
                "action": [
                    "Union[(int, str, Tuple[(int, int)])]"
                ]
            }
        },
        "AirHockey.update_state": {
            "name": "update_state",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "Union[(int, str, Tuple[(int, int)])]"
                ],
                "agent_name": [
                    "str"
                ]
            }
        },
        "AirHockey.update_score": {
            "name": "update_score",
            "location": 203,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AirHockey.reset": {
            "name": "reset",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "total": [
                    "bool"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/environment/__init__.py": {},
    "air-hockey-training-environment-master/environment/components/Goal.py": {
        "Goal.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "w": [
                    "int"
                ],
                "h": [
                    "int"
                ]
            }
        },
        "Goal.location": {
            "name": "location",
            "location": 21,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/environment/components/Mallet.py": {
        "Mallet.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "redis": [
                    "connect.RedisConnection"
                ]
            }
        },
        "Mallet.update_mallet": {
            "name": "update_mallet",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mallet.reset_mallet": {
            "name": "reset_mallet",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mallet.location": {
            "name": "location",
            "location": 91,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mallet.prev_location": {
            "name": "prev_location",
            "location": 96,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mallet.velocity": {
            "name": "velocity",
            "location": 101,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/environment/components/Puck.py": {
        "Puck.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "dx": [
                    "int"
                ],
                "dy": [
                    "int"
                ],
                "redis": [
                    "connect.RedisConnection"
                ]
            }
        },
        "Puck.update_puck": {
            "name": "update_puck",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puck.friction_on_puck": {
            "name": "friction_on_puck",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puck.limit_puck_speed": {
            "name": "limit_puck_speed",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puck.reset": {
            "name": "reset",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puck.location": {
            "name": "location",
            "location": 131,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puck.prev_location": {
            "name": "prev_location",
            "location": 136,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puck.velocity": {
            "name": "velocity",
            "location": 141,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/environment/components/__init__.py": {},
    "air-hockey-training-environment-master/rl/Agent.py": {
        "Agent.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "str",
                    "Mapping[str, str]",
                    "typing.Mapping",
                    "dict",
                    "dict[, ]",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "Agent.move": {
            "name": "move",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "Union[(int, str, Tuple[(int, int)])]"
                ]
            }
        },
        "Agent.location": {
            "name": "location",
            "location": 38,
            "return": [
                "Optional[Tuple[(int, int)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Agent.load_model": {
            "name": "load_model",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Agent.save_model": {
            "name": "save_model",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Agent.agent_name": {
            "name": "agent_name",
            "location": 76,
            "return": [
                "None",
                "dict[str, str]",
                "str",
                "list[str]",
                "dict[int, str]",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/c51.py": {
        "c51.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "dict",
                    "dict[, ]"
                ],
                "capacity": [
                    "int"
                ],
                "train": [
                    "bool"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "c51.__repr__": {
            "name": "__repr__",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "c51.__str__": {
            "name": "__str__",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "c51.build_model": {
            "name": "build_model",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "c51.update_target_model": {
            "name": "update_target_model",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "c51._epsilon": {
            "name": "_epsilon",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "c51.get_action": {
            "name": "get_action",
            "location": 130,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "utils.State"
                ]
            }
        },
        "c51.update": {
            "name": "update",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "utils.Observation"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/DDQN.py": {
        "DDQN.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "dict",
                    "dict[, ]"
                ],
                "capacity": [
                    "int"
                ],
                "train": [
                    "bool"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "DDQN.__repr__": {
            "name": "__repr__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DDQN.__str__": {
            "name": "__str__",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DDQN.build_model": {
            "name": "build_model",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DDQN.update_target_model": {
            "name": "update_target_model",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DDQN._epsilon": {
            "name": "_epsilon",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DDQN.get_action": {
            "name": "get_action",
            "location": 111,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "utils.State"
                ]
            }
        },
        "DDQN.update": {
            "name": "update",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "utils.Observation"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/DQN.py": {
        "DQN.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "dict",
                    "dict[, ]"
                ],
                "capacity": [
                    "int"
                ],
                "train": [
                    "bool"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "DQN.__repr__": {
            "name": "__repr__",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DQN.__str__": {
            "name": "__str__",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DQN.build_model": {
            "name": "build_model",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DQN.get_action": {
            "name": "get_action",
            "location": 57,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "utils.State"
                ]
            }
        },
        "DQN.update": {
            "name": "update",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "utils.Observation"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/DuelingDDQN.py": {
        "DuelingDDQN.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "dict",
                    "dict[, ]"
                ],
                "capacity": [
                    "int"
                ],
                "train": [
                    "bool"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "DuelingDDQN.__repr__": {
            "name": "__repr__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DuelingDDQN.__str__": {
            "name": "__str__",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DuelingDDQN.build_model": {
            "name": "build_model",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DuelingDDQN.update_target_model": {
            "name": "update_target_model",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DuelingDDQN._epsilon": {
            "name": "_epsilon",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DuelingDDQN.get_action": {
            "name": "get_action",
            "location": 118,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "utils.State"
                ]
            }
        },
        "DuelingDDQN.update": {
            "name": "update",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "utils.Observation"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/helpers.py": {
        "huber_loss": {
            "name": "huber_loss",
            "location": 9,
            "return": [
                "float"
            ],
            "arguments": {
                "y_true": [
                    "bool",
                    "List[str]",
                    "int",
                    "list",
                    "List[Tuple[bool, str]]",
                    "str"
                ],
                "y_pred": [
                    "bool",
                    "List[str]",
                    "int",
                    "list",
                    "List[Tuple[bool, str]]",
                    "str"
                ],
                "clip_delta": [
                    "float",
                    "Callable"
                ]
            }
        },
        "TensorBoardLogger.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "log_dir": [
                    "str"
                ]
            }
        },
        "TensorBoardLogger.log_scalar": {
            "name": "log_scalar",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "value": [
                    "float"
                ],
                "step": [
                    "int"
                ]
            }
        },
        "TensorBoardLogger.log_histogram": {
            "name": "log_histogram",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "values": [
                    "int",
                    "str",
                    "Sequence",
                    "typing.Sequence[]"
                ],
                "step": [
                    "int"
                ],
                "bins": [
                    "int"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/MemoryBuffer.py": {
        "MemoryBuffer.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "capacity": [
                    "int"
                ],
                "default": [
                    "int",
                    "None",
                    "str",
                    "bool",
                    "Sequence[T]",
                    "typing.Sequence[T]",
                    "List[Tuple[int, float]]",
                    "list[tuple[typing.Union[int,float]]]"
                ]
            }
        },
        "MemoryBuffer.append": {
            "name": "append",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "Union[(utils.Observation, utils.State)]"
                ]
            }
        },
        "MemoryBuffer.retreive": {
            "name": "retreive",
            "location": 33,
            "return": [
                "Tuple[Union[(utils.Observation, utils.State)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MemoryBuffer.sample": {
            "name": "sample",
            "location": 38,
            "return": [
                "List[Union[(utils.Observation, utils.State)]]"
            ],
            "arguments": {
                "self": [],
                "batch_size": [
                    "int"
                ]
            }
        },
        "MemoryBuffer.__len__": {
            "name": "__len__",
            "location": 43,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/rl/Networks.py": {
        "Networks.dueling_ddqn": {
            "name": "dueling_ddqn",
            "location": 17,
            "return": [
                "Model",
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "state_size": [
                    "Tuple[(int, int, int)]"
                ],
                "action_size": [
                    "int"
                ],
                "learning_rate": [
                    "float"
                ]
            }
        },
        "Networks.dqn": {
            "name": "dqn",
            "location": 59,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "state_size": [
                    "Tuple[(int, int, int)]"
                ]
            }
        },
        "Networks.ddqn": {
            "name": "ddqn",
            "location": 83,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "state_size": [
                    "Tuple[(int, int, int)]"
                ],
                "learning_rate": [
                    "float"
                ]
            }
        },
        "Networks.c51": {
            "name": "c51",
            "location": 107,
            "return": [
                "Model",
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "state_size": [
                    "Tuple[(int, int, int)]"
                ],
                "action_size": [
                    "int"
                ],
                "learning_rate": [
                    "float"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/QLearner.py": {
        "QLearner.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "dict",
                    "str",
                    "dict[, ]"
                ],
                "config": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "QLearner.__repr__": {
            "name": "__repr__",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "QLearner.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "QLearner.move": {
            "name": "move",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "Union[(int, str, Tuple[(int, int)])]"
                ]
            }
        },
        "QLearner.location": {
            "name": "location",
            "location": 44,
            "return": [
                "Optional[Tuple[(int, int)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "QLearner.get_action": {
            "name": "get_action",
            "location": 55,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "utils.State"
                ]
            }
        },
        "QLearner.update": {
            "name": "update",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "utils.Observation"
                ]
            }
        },
        "QLearner.agent_name": {
            "name": "agent_name",
            "location": 107,
            "return": [
                "None",
                "dict[str, str]",
                "str",
                "list[str]",
                "dict[int, str]",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/Strategy.py": {
        "Strategy.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Strategy.make": {
            "name": "make",
            "location": 29,
            "return": [
                "Union[(rl.Agent.Agent, rl.QLearner.QLearner)]"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "bool",
                    "purplship.core.utils.Element"
                ],
                "strategy": [
                    "str"
                ],
                "capacity": [
                    "int"
                ],
                "train": [
                    "bool"
                ]
            }
        }
    },
    "air-hockey-training-environment-master/rl/__init__.py": {},
    "air-hockey-training-environment-master/tests/test_agent.py": {
        "TestAgent.setup": {
            "name": "setup",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAgent.test_move_cartesian": {
            "name": "test_move_cartesian",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAgent.test_move_up": {
            "name": "test_move_up",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAgent.test_move_down": {
            "name": "test_move_down",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAgent.test_move_left": {
            "name": "test_move_left",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAgent.test_move_right": {
            "name": "test_move_right",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/tests/test_environment.py": {
        "TestEnvironment.setup": {
            "name": "setup",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEnvironment.test_puck_update_location": {
            "name": "test_puck_update_location",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEnvironment.test_robot_score": {
            "name": "test_robot_score",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEnvironment.test_opponent_score": {
            "name": "test_opponent_score",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/tests/test_get_config_strategies.py": {
        "TestStrategyConfig.setup": {
            "name": "setup",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategyConfig.test_rl_strategy": {
            "name": "test_rl_strategy",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategyConfig.test_undefined_strategy": {
            "name": "test_undefined_strategy",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/tests/test_memory_buffer.py": {
        "TestMemoryBuffer.setup": {
            "name": "setup",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMemoryBuffer.test_memory_buffer_default": {
            "name": "test_memory_buffer_default",
            "location": 10,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMemoryBuffer.test_memory_buffer_sample": {
            "name": "test_memory_buffer_sample",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/tests/test_strategy.py": {
        "TestStrategy.setup": {
            "name": "setup",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategy.test_human_agent": {
            "name": "test_human_agent",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategy.test_ddqn_agent": {
            "name": "test_ddqn_agent",
            "location": 27,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategy.test_dqn_agent": {
            "name": "test_dqn_agent",
            "location": 33,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategy.test_dueling_agent": {
            "name": "test_dueling_agent",
            "location": 39,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategy.test_c51_agent": {
            "name": "test_c51_agent",
            "location": 45,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategy.test_q_learner_agent": {
            "name": "test_q_learner_agent",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "air-hockey-training-environment-master/tests/test_strategy_config.py": {
        "TestStrategyConfig.setup": {
            "name": "setup",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategyConfig.test_rl_strategy": {
            "name": "test_rl_strategy",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrategyConfig.test_undefined_strategy": {
            "name": "test_undefined_strategy",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
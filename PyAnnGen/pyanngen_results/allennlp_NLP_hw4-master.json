{
    "allennlp_NLP_hw4-master/library/__init__.py": {},
    "allennlp_NLP_hw4-master/library/dataset_reader/reader.py": {
        "Reader.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token_indexers": [
                    "int",
                    "None",
                    "str",
                    "List[str]",
                    "bool",
                    "numpy.random.RandomState"
                ],
                "token_character_indexer": [
                    "List[str]",
                    "None",
                    "str",
                    "bool",
                    "Optional[Callable]",
                    "Callable"
                ]
            }
        },
        "Reader.text_to_instance": {
            "name": "text_to_instance",
            "location": 31,
            "return": [
                "Instance",
                "List[str]",
                "List[Tuple[str,str]]",
                "str",
                "Set[str]",
                "List[Tuple[str,Any]]"
            ],
            "arguments": {
                "self": [],
                "names": [
                    "str"
                ],
                "categories": [
                    "None",
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Optional[List[str]]",
                    "Union[None,List[str]]"
                ]
            }
        },
        "Reader.unicode_to_ascii": {
            "name": "unicode_to_ascii",
            "location": 42,
            "return": [
                "str",
                "List",
                "List[Dict[str,Any]]",
                "frozenset",
                "Optional[dict]"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "Reader.readLines": {
            "name": "readLines",
            "location": 48,
            "return": [
                "List",
                "Union[List[float],List[int]]",
                "sideeye.data.Trial",
                "str",
                "int",
                "Set[str]"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "Reader._read": {
            "name": "_read",
            "location": 52,
            "return": [
                "Iterator[allennlp.data.Instance]",
                "Generator"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str",
                    "List[str]",
                    "List[Tuple[int,int]]",
                    "List[tuple[Union[int,int]]]",
                    "Callable[[str],str]",
                    "Callable[str,str]"
                ]
            }
        }
    },
    "allennlp_NLP_hw4-master/library/dataset_reader/__init__.py": {},
    "allennlp_NLP_hw4-master/library/model/model.py": {
        "RnnLang.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word_embeddings": [
                    "int",
                    "float",
                    "List[allennlp.data.Instance]"
                ],
                "encoder": [
                    "str",
                    "bytearray"
                ],
                "vocab": [
                    "models.LTI1p3Provider"
                ]
            }
        },
        "RnnLang.forward": {
            "name": "forward",
            "location": 30,
            "return": [
                "Dict[Text,Union[int,list[str],float]]",
                "str",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "Dict[str,torch.LongTensor]",
                    "List[dict]",
                    "Sequence[tuple[Union[str,int]]]",
                    "int",
                    "Sequence[Tuple[str,int]]",
                    "Iterable[float]",
                    "allennlp.data.tokenizers.token.Token"
                ],
                "token_characters": [
                    "str",
                    "int",
                    "Optional[str]",
                    "ByteString",
                    "None",
                    "List[List[fonduer.candidates.models.Candidate]]",
                    "List[list[fonduer.candidates.models.Candidate]]"
                ],
                "labels": [
                    "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState",
                    "None",
                    "List[int]",
                    "List[Set[int]]",
                    "List[set[int]]",
                    "Optional[Any]",
                    "Any"
                ]
            }
        }
    },
    "allennlp_NLP_hw4-master/library/model/__init__.py": {},
    "allennlp_NLP_hw4-master/library/predictor/predictor.py": {
        "LngPredictor.predict_json": {
            "name": "predict_json",
            "location": 8,
            "return": [
                "List",
                "bool",
                "List[str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "int",
                    "str",
                    "bytes",
                    "Type",
                    "deoplete.util.UserContext",
                    "Type[numpy.number]"
                ]
            }
        }
    },
    "allennlp_NLP_hw4-master/library/predictor/__init__.py": {}
}
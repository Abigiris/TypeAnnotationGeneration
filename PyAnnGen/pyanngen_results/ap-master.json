{
    "ap-master/manage.py": {},
    "ap-master/test_settings.py": {},
    "ap-master/ap/urls.py": {},
    "ap-master/ap/__init__.py": {},
    "ap-master/ap/apps/__init__.py": {},
    "ap-master/ap/apps/contact/apps.py": {},
    "ap-master/ap/apps/contact/forms.py": {
        "ContactForm.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/contact/models.py": {},
    "ap-master/ap/apps/contact/tests.py": {},
    "ap-master/ap/apps/contact/urls.py": {},
    "ap-master/ap/apps/contact/views.py": {
        "contact": {
            "name": "contact",
            "location": 12,
            "return": [
                "HttpResponse",
                "str",
                "Optional[str]",
                "Tuple",
                "Dict[str,Any]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "success": {
            "name": "success",
            "location": 34,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "Callable",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "ap-master/ap/apps/contact/__init__.py": {},
    "ap-master/ap/apps/contact/migrations/__init__.py": {},
    "ap-master/ap/apps/core/apps.py": {},
    "ap-master/ap/apps/core/tests.py": {},
    "ap-master/ap/apps/core/views.py": {
        "home": {
            "name": "home",
            "location": 5,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "Callable",
                    "django.http.HttpRequest"
                ]
            }
        },
        "about": {
            "name": "about",
            "location": 12,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "Callable",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "ap-master/ap/apps/core/__init__.py": {},
    "ap-master/ap/apps/core/management/__init__.py": {},
    "ap-master/ap/apps/core/management/commands/fake_data.py": {
        "Command.handle": {
            "name": "handle",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/core/management/commands/__init__.py": {},
    "ap-master/ap/apps/events/admin.py": {},
    "ap-master/ap/apps/events/apps.py": {},
    "ap-master/ap/apps/events/factories.py": {
        "EventFactory.maybe_add_orgs": {
            "name": "maybe_add_orgs",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "bool",
                    "Dict[str,Any]",
                    "Dict",
                    "List[str]",
                    "List[dict]"
                ],
                "build": [
                    "Dict[str,Any]",
                    "Dict"
                ],
                "extracted": [
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "EventFactory.maybe_add_humans": {
            "name": "maybe_add_humans",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "bool",
                    "Dict[str,Any]",
                    "Dict",
                    "List[str]",
                    "List[dict]"
                ],
                "build": [
                    "Dict[str,Any]",
                    "Dict"
                ],
                "extracted": [
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "EventFactory.add_routes": {
            "name": "add_routes",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "int",
                    "Dict[str,Union[int,bool]]",
                    "Dict",
                    "purplship.providers.fedex.utils.Settings"
                ],
                "build": [
                    "Dict[str,Any]",
                    "str",
                    "Dict"
                ],
                "extracted": [
                    "Dict[str,Any]",
                    "str",
                    "Dict"
                ]
            }
        },
        "EventFactory.add_coords": {
            "name": "add_coords",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "Dict",
                    "str",
                    "List"
                ],
                "build": [
                    "Dict[str,Any]",
                    "str",
                    "Dict"
                ],
                "extracted": [
                    "Dict[str,Any]",
                    "str",
                    "Dict"
                ]
            }
        }
    },
    "ap-master/ap/apps/events/factory_data.py": {},
    "ap-master/ap/apps/events/forms.py": {},
    "ap-master/ap/apps/events/models.py": {
        "Organization.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.__str__": {
            "name": "__str__",
            "location": 223,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Route.__str__": {
            "name": "__str__",
            "location": 248,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/events/tests.py": {},
    "ap-master/ap/apps/events/urls.py": {},
    "ap-master/ap/apps/events/views.py": {
        "index": {
            "name": "index",
            "location": 15,
            "return": [
                "str",
                "Optional[Dict]",
                "Dict[str, Any]",
                "botocore.exceptions.ClientError"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ],
                "tense": [
                    "Dict[str,Any]",
                    "None",
                    "django.http.HttpRequest",
                    "MutableMapping[str,str]",
                    "MutableMapping"
                ],
                "organize": [
                    "bool",
                    "Dict[str,Any]",
                    "django.http.HttpRequest",
                    "MutableMapping[str,str]"
                ]
            }
        },
        "detail": {
            "name": "detail",
            "location": 46,
            "return": [
                "Optional[str]",
                "salon.models.Stylist",
                "werkzeug.exceptions.HTTPException",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "request": [
                    "bool",
                    "int",
                    "django.http.HttpRequest"
                ],
                "event_id": [
                    "str",
                    "zerver.models.UserProfile",
                    "None",
                    "Optional[str]",
                    "django.http.HttpRequest"
                ],
                "event_slug": [
                    "None",
                    "str",
                    "django.http.HttpRequest",
                    "Optional[str]"
                ]
            }
        },
        "organize_event": {
            "name": "organize_event",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "zerver.models.UserProfile"
                ],
                "event_id": [
                    "str",
                    "zerver.models.UserProfile",
                    "django.http.HttpRequest",
                    "tracim.models.auth.User"
                ],
                "event_slug": [
                    "None",
                    "Optional[int]",
                    "List[int]",
                    "int",
                    "django.http.HttpRequest",
                    "bool"
                ]
            }
        },
        "search": {
            "name": "search",
            "location": 83,
            "return": [
                "str",
                "Optional[Dict]",
                "models.Dashboard",
                "bool",
                "dict"
            ],
            "arguments": {
                "request": [
                    "Dict[str,Any]",
                    "django.http.HttpRequest",
                    "models.Workspace"
                ]
            }
        }
    },
    "ap-master/ap/apps/events/__init__.py": {},
    "ap-master/ap/apps/events/migrations/0001_initial.py": {},
    "ap-master/ap/apps/events/migrations/0002_auto_20181008_2300.py": {},
    "ap-master/ap/apps/events/migrations/0003_auto_20181009_2315.py": {},
    "ap-master/ap/apps/events/migrations/0004_event_event_type.py": {},
    "ap-master/ap/apps/events/migrations/0005_route.py": {},
    "ap-master/ap/apps/events/migrations/0006_delete_route.py": {},
    "ap-master/ap/apps/events/migrations/0007_route.py": {},
    "ap-master/ap/apps/events/migrations/0008_event_published.py": {},
    "ap-master/ap/apps/events/migrations/0009_auto_20181025_2328.py": {},
    "ap-master/ap/apps/events/migrations/0010_auto_20181025_2339.py": {},
    "ap-master/ap/apps/events/migrations/0011_organization.py": {},
    "ap-master/ap/apps/events/migrations/0012_event_organizations.py": {},
    "ap-master/ap/apps/events/migrations/0013_auto_20181026_2325.py": {},
    "ap-master/ap/apps/events/migrations/0014_event_about.py": {},
    "ap-master/ap/apps/events/migrations/0015_auto_20181027_0028.py": {},
    "ap-master/ap/apps/events/migrations/0016_event_official_event_site_title.py": {},
    "ap-master/ap/apps/events/migrations/0017_auto_20181028_2350.py": {},
    "ap-master/ap/apps/events/migrations/0018_remove_event_human.py": {},
    "ap-master/ap/apps/events/migrations/0019_event_humans.py": {},
    "ap-master/ap/apps/events/migrations/0020_auto_20181122_0033.py": {},
    "ap-master/ap/apps/events/migrations/0021_auto_20181122_0034.py": {},
    "ap-master/ap/apps/events/migrations/0022_auto_20181122_0141.py": {},
    "ap-master/ap/apps/events/migrations/0023_auto_20181123_1821.py": {},
    "ap-master/ap/apps/events/migrations/0024_auto_20181123_1821.py": {},
    "ap-master/ap/apps/events/migrations/0025_auto_20181123_2349.py": {},
    "ap-master/ap/apps/events/migrations/0026_auto_20181124_0020.py": {},
    "ap-master/ap/apps/events/migrations/0027_auto_20181124_2319.py": {},
    "ap-master/ap/apps/events/migrations/0028_event_photographers.py": {},
    "ap-master/ap/apps/events/migrations/0029_auto_20181124_2338.py": {},
    "ap-master/ap/apps/events/migrations/0030_auto_20181124_2355.py": {},
    "ap-master/ap/apps/events/migrations/__init__.py": {},
    "ap-master/ap/apps/faqs/admin.py": {},
    "ap-master/ap/apps/faqs/apps.py": {},
    "ap-master/ap/apps/faqs/models.py": {},
    "ap-master/ap/apps/faqs/tests.py": {},
    "ap-master/ap/apps/faqs/urls.py": {},
    "ap-master/ap/apps/faqs/views.py": {
        "index": {
            "name": "index",
            "location": 5,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "Callable",
                    "django.http.HttpRequest"
                ]
            }
        },
        "section": {
            "name": "section",
            "location": 12,
            "return": [
                "int",
                "List[str]",
                "bytes",
                "str",
                "Tuple[str, str]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ],
                "section_title": [
                    "str",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "ap-master/ap/apps/faqs/__init__.py": {},
    "ap-master/ap/apps/faqs/migrations/__init__.py": {},
    "ap-master/ap/apps/photos/admin.py": {},
    "ap-master/ap/apps/photos/apps.py": {},
    "ap-master/ap/apps/photos/models.py": {
        "event_photo_filename": {
            "name": "event_photo_filename",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [
                    "str",
                    "Dict[str,Any]",
                    "bool",
                    "models.Movie"
                ],
                "filename": [
                    "str",
                    "Dict[str,Any]",
                    "bool",
                    "models.Movie"
                ]
            }
        },
        "Photo.__str__": {
            "name": "__str__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/photos/tests.py": {},
    "ap-master/ap/apps/photos/views.py": {},
    "ap-master/ap/apps/photos/__init__.py": {},
    "ap-master/ap/apps/photos/migrations/0001_initial.py": {},
    "ap-master/ap/apps/photos/migrations/0002_photo_event.py": {},
    "ap-master/ap/apps/photos/migrations/0003_photo_file.py": {},
    "ap-master/ap/apps/photos/migrations/0004_auto_20181009_2304.py": {},
    "ap-master/ap/apps/photos/migrations/0005_remove_photo_subject.py": {},
    "ap-master/ap/apps/photos/migrations/0006_photo_subjects.py": {},
    "ap-master/ap/apps/photos/migrations/0007_auto_20181020_1140.py": {},
    "ap-master/ap/apps/photos/migrations/__init__.py": {},
    "ap-master/ap/apps/users/admin.py": {
        "UserAdmin.usergroups": {
            "name": "usergroups",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bool",
                    "int"
                ]
            }
        }
    },
    "ap-master/ap/apps/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/users/constants.py": {},
    "ap-master/ap/apps/users/factories.py": {
        "UserFactory.maybe_add_groups": {
            "name": "maybe_add_groups",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "Dict",
                    "str",
                    "bool",
                    "daylighdb.models.Photo",
                    "daylighdb.models.User",
                    "abilian.core.models.subjects.User"
                ],
                "build": [
                    "Dict[str,Any]",
                    "Dict"
                ],
                "extracted": [
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "UserFactory._create": {
            "name": "_create",
            "location": 44,
            "return": [
                "Tuple[float, float]",
                "bool",
                "zerver.models.Realm",
                "str",
                "Union[server.models.Bike, int]"
            ],
            "arguments": {
                "cls": [
                    "models.User"
                ],
                "model_class": [
                    "models.User"
                ]
            }
        }
    },
    "ap-master/ap/apps/users/forms.py": {
        "ProfileForm.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/users/models.py": {
        "get_avatar_upload_dir": {
            "name": "get_avatar_upload_dir",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [
                    "str",
                    "bool",
                    "List[str]"
                ],
                "filename": [
                    "str",
                    "bool",
                    "List[str]"
                ]
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 111,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 114,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ap-master/ap/apps/users/urls.py": {},
    "ap-master/ap/apps/users/views.py": {
        "users_list": {
            "name": "users_list",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": [
                    "Dict",
                    "Dict[str,Any]",
                    "django.http.HttpRequest"
                ]
            }
        },
        "profile": {
            "name": "profile",
            "location": 24,
            "return": [
                "bytes",
                "dict",
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ],
                "username": [
                    "int",
                    "str",
                    "django.http.HttpRequest",
                    "zam_repondeur.models.Team"
                ]
            }
        },
        "edit_profile": {
            "name": "edit_profile",
            "location": 32,
            "return": [
                "str",
                "List[Callable]",
                "Union[str, Dict]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "search": {
            "name": "search",
            "location": 55,
            "return": [
                "int",
                "bytes",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {
                "request": [
                    "Dict[str,Any]",
                    "django.http.HttpRequest",
                    "http.MITMRequest",
                    "models.Workspace"
                ]
            }
        }
    },
    "ap-master/ap/apps/users/__init__.py": {},
    "ap-master/ap/apps/users/migrations/0001_initial.py": {},
    "ap-master/ap/apps/users/migrations/0002_organization.py": {},
    "ap-master/ap/apps/users/migrations/0003_remove_user_organization.py": {},
    "ap-master/ap/apps/users/migrations/0004_user_organizations.py": {},
    "ap-master/ap/apps/users/migrations/0005_auto_20181020_2332.py": {},
    "ap-master/ap/apps/users/migrations/0006_auto_20181020_2344.py": {},
    "ap-master/ap/apps/users/migrations/0007_auto_20181021_0043.py": {},
    "ap-master/ap/apps/users/migrations/0008_user_profile_edited.py": {},
    "ap-master/ap/apps/users/migrations/0009_user_instagram.py": {},
    "ap-master/ap/apps/users/migrations/0010_auto_20181022_2249.py": {},
    "ap-master/ap/apps/users/migrations/0011_user_ap_organizations.py": {},
    "ap-master/ap/apps/users/migrations/0012_auto_20181022_2317.py": {},
    "ap-master/ap/apps/users/migrations/0013_auto_20181022_2332.py": {},
    "ap-master/ap/apps/users/migrations/0014_auto_20181025_2339.py": {},
    "ap-master/ap/apps/users/migrations/0015_user_organizations.py": {},
    "ap-master/ap/apps/users/migrations/0016_auto_20181026_2325.py": {},
    "ap-master/ap/apps/users/migrations/__init__.py": {},
    "ap-master/ap/config/wsgi.py": {},
    "ap-master/ap/config/__init__.py": {},
    "ap-master/ap/config/settings/common.py": {},
    "ap-master/ap/config/settings/local.example.py": {},
    "ap-master/ap/config/settings/test.py": {},
    "ap-master/ap/config/settings/__init__.py": {},
    "ap-master/ap/tests/conftest.py": {
        "todo_setup": {
            "name": "todo_setup",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "django_user_model": [
                    "str",
                    "zerver.models.PreregistrationUser",
                    "zerver.models.UserProfile"
                ]
            }
        }
    },
    "ap-master/ap/tests/__init__.py": {}
}
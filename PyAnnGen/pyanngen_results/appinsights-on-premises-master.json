{
    "appinsights-on-premises-master/app/api.py": {},
    "appinsights-on-premises-master/app/config.py": {
        "_Config.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env": [
                    "Dict[str,Any]",
                    "Dict",
                    "None"
                ]
            }
        },
        "_Config.DEBUG": {
            "name": "DEBUG",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.HOST": {
            "name": "HOST",
            "location": 33,
            "return": [
                "Optional[int]",
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.PORT": {
            "name": "PORT",
            "location": 37,
            "return": [
                "int",
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.WORKERS": {
            "name": "WORKERS",
            "location": 41,
            "return": [
                "int",
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.DATABASE_URL": {
            "name": "DATABASE_URL",
            "location": 45,
            "return": [
                "str",
                "DatabaseUrl"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.DATABASE": {
            "name": "DATABASE",
            "location": 58,
            "return": [
                "bool",
                "Optional[str]",
                "Callable[..., None]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.DATABASE_INIT": {
            "name": "DATABASE_INIT",
            "location": 63,
            "return": [
                "Iterable[pathlib.Path]",
                "Generator[Path]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Config.update": {
            "name": "update",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "values": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]",
                    "Dict[str,dict[int,str]]",
                    "Dict[str,Dict[int,str]]",
                    "bool"
                ]
            }
        }
    },
    "appinsights-on-premises-master/app/utils.py": {
        "wait_for_port": {
            "name": "wait_for_port",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "host": [
                    "str",
                    "int",
                    "BinaryIO"
                ],
                "port": [
                    "str",
                    "int",
                    "BinaryIO"
                ],
                "sleep": [
                    "int",
                    "float"
                ],
                "retries": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "appinsights-on-premises-master/app/__init__.py": {},
    "appinsights-on-premises-master/app/database/libcloud.py": {
        "_get_driver_kwargs": {
            "name": "_get_driver_kwargs",
            "location": 34,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "_get_driver": {
            "name": "_get_driver",
            "location": 44,
            "return": [
                "str",
                "int",
                "Type[Exception]"
            ],
            "arguments": {}
        },
        "wait_until_ready": {
            "name": "wait_until_ready",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "appinsights-on-premises-master/app/database/postgres.py": {
        "_nullsafe": {
            "name": "_nullsafe",
            "location": 56,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "converter": [
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "None",
                    "Optional[Any]",
                    "int",
                    "Dict[str,Optional[str]]",
                    "Any",
                    "Dict[str,Union[str,None]]"
                ],
                "data": [
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "None",
                    "Optional[Any]",
                    "int",
                    "Dict[str,Optional[str]]",
                    "Any",
                    "Dict[str,Union[str,None]]"
                ]
            }
        },
        "_to_interval": {
            "name": "_to_interval",
            "location": 60,
            "return": [
                "datetime.timedelta"
            ],
            "arguments": {
                "interval": [
                    "str",
                    "Iterable[int]",
                    "Connection",
                    "float"
                ]
            }
        },
        "wait_until_ready": {
            "name": "wait_until_ready",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "appinsights-on-premises-master/app/database/__init__.py": {},
    "appinsights-on-premises-master/app/domain/appinsights.py": {},
    "appinsights-on-premises-master/app/domain/exceptions.py": {},
    "appinsights-on-premises-master/app/domain/__init__.py": {},
    "appinsights-on-premises-master/app/tools/create_db.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "appinsights-on-premises-master/app/tools/generate_telemetry.py": {
        "random_string": {
            "name": "random_string",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "size": [
                    "int"
                ]
            }
        },
        "coinflip": {
            "name": "coinflip",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "generate_event_name": {
            "name": "generate_event_name",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "size": [
                    "int",
                    "str",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "generate_event_properties": {
            "name": "generate_event_properties",
            "location": 50,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "size": [
                    "int"
                ]
            }
        },
        "generate_log_message": {
            "name": "generate_log_message",
            "location": 57,
            "return": [
                "str"
            ],
            "arguments": {
                "size": [
                    "int",
                    "str",
                    "bool",
                    "List[str]",
                    "raiden.utils.List[raiden.utils.Dict]"
                ]
            }
        },
        "generate_log_severity": {
            "name": "generate_log_severity",
            "location": 61,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {}
        },
        "generate_exception": {
            "name": "generate_exception",
            "location": 65,
            "return": [
                "Exception"
            ],
            "arguments": {
                "size": [
                    "int",
                    "bool"
                ]
            }
        },
        "generate_request": {
            "name": "generate_request",
            "location": 69,
            "return": [
                "Dict[(str, Union[(float, str)])]"
            ],
            "arguments": {
                "size": [
                    "int",
                    "str",
                    "Dict"
                ]
            }
        },
        "send_events": {
            "name": "send_events",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "applicationinsights.TelemetryClient"
                ],
                "num_events": [
                    "int"
                ]
            }
        },
        "send_logs": {
            "name": "send_logs",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "applicationinsights.TelemetryClient",
                    "str",
                    "int",
                    "float"
                ],
                "num_traces": [
                    "int",
                    "List[Tuple[str,Any]]",
                    "List[tuple[Union[str,Any]]]"
                ]
            }
        },
        "send_exceptions": {
            "name": "send_exceptions",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "applicationinsights.TelemetryClient",
                    "str"
                ],
                "num_exceptions": [
                    "int",
                    "str",
                    "float",
                    "datetime.timedelta"
                ]
            }
        },
        "send_requests": {
            "name": "send_requests",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "applicationinsights.TelemetryClient"
                ],
                "num_requests": [
                    "int",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "endpoint": [
                    "int",
                    "str",
                    "furl.furl",
                    "datetime.timedelta",
                    "raiden.utils.ChainID"
                ],
                "ikey": [
                    "bool",
                    "float",
                    "str"
                ],
                "send_config": [
                    "Dict",
                    "bool",
                    "str",
                    "argparse.Namespace",
                    "int"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "NoRetrySender.send": {
            "name": "send",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_to_send": [
                    "Dict",
                    "Tuple[str,Dict[str,Any]]",
                    "str",
                    "Tuple[Union[str,dict[str,Any]]]",
                    "Dict[str,Any]",
                    "List[Dict[str,Any]]",
                    "int",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "NoRetrySender.did_send_all_telemetry": {
            "name": "did_send_all_telemetry",
            "location": 33,
            "return": [
                "bool",
                "float",
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "appinsights-on-premises-master/app/tools/quickstart.py": {},
    "appinsights-on-premises-master/app/tools/register_client.py": {
        "cli": {
            "name": "cli",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "appinsights-on-premises-master/app/tools/run_server.py": {
        "_run_sanic": {
            "name": "_run_sanic",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_run_gunicorn": {
            "name": "_run_gunicorn",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "appinsights-on-premises-master/app/tools/__init__.py": {}
}
{
    "arxiv-marxdown-master/setup.py": {},
    "arxiv-marxdown-master/arxiv/marxdown/app.py": {},
    "arxiv-marxdown-master/arxiv/marxdown/build.py": {
        "generate_template": {
            "name": "generate_template",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "source_page": [
                    "arxiv.marxdown.domain.SourcePage"
                ],
                "rendered_content": [
                    "str"
                ]
            }
        },
        "_build_site": {
            "name": "_build_site",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "with_search": [
                    "bool"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "build_path": [
                    "str",
                    "None",
                    "Optional[str]",
                    "dict[, ]",
                    "virgene.config.Config",
                    "dict"
                ],
                "instance_path": [
                    "str",
                    "None",
                    "Optional[str]",
                    "dict[, ]",
                    "virgene.config.Config",
                    "dict"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/config.py": {},
    "arxiv-marxdown-master/arxiv/marxdown/domain.py": {
        "SourcePage.path_for_reference": {
            "name": "path_for_reference",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page.path_for_reference": {
            "name": "path_for_reference",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/factory.py": {
        "format_datetime": {
            "name": "format_datetime",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "datestring": [
                    "str"
                ]
            }
        },
        "simpledate": {
            "name": "simpledate",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "datestring": [
                    "str"
                ]
            }
        },
        "pretty_path": {
            "name": "pretty_path",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "create_web_app": {
            "name": "create_web_app",
            "location": 39,
            "return": [
                "flask.Flask",
                "Flask"
            ],
            "arguments": {
                "build_path": [
                    "Optional[str]"
                ],
                "with_search": [
                    "bool"
                ],
                "extra_config": [
                    "Optional[dict]"
                ],
                "instance_path": [
                    "Optional[str]"
                ],
                "static_url_path": [
                    "Optional[str]"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/render.py": {
        "render": {
            "name": "render",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "content": [
                    "str"
                ],
                "dereferencer": [
                    "Optional[Callable]"
                ]
            }
        },
        "escape_braces": {
            "name": "escape_braces",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "content": [
                    "str"
                ]
            }
        },
        "get_linker": {
            "name": "get_linker",
            "location": 152,
            "return": [
                "Callable"
            ],
            "arguments": {
                "page": [
                    "str",
                    "bool",
                    "domain.SourcePage"
                ],
                "site_name": [
                    "str"
                ]
            }
        },
        "get_deferencer": {
            "name": "get_deferencer",
            "location": 183,
            "return": [
                "Callable"
            ],
            "arguments": {
                "page": [
                    "str",
                    "bool",
                    "domain.SourcePage"
                ],
                "site_name": [
                    "str"
                ]
            }
        },
        "escape_braces.repl": {
            "name": "repl",
            "location": 71,
            "return": [
                "typing.Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "match": [
                    "Match",
                    "float",
                    "str",
                    "Match[Any]",
                    "int"
                ]
            }
        },
        "StyleClassProcessor.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "classes": [
                    "List[str]"
                ]
            }
        },
        "StyleClassProcessor.run": {
            "name": "run",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "ET.ElementTree"
                ]
            }
        },
        "ReferenceProcessor.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "attr": [
                    "str"
                ],
                "dereferencer": [
                    "Optional[Callable]"
                ]
            }
        },
        "ReferenceProcessor.run": {
            "name": "run",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "ET.ElementTree"
                ]
            }
        },
        "ReferenceProcessor.translate_anchors": {
            "name": "translate_anchors",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "ET.Element"
                ]
            }
        },
        "ReferenceExtension.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "attr": [
                    "str"
                ],
                "dereferencer": [
                    "Optional[Callable]"
                ]
            }
        },
        "ReferenceExtension.extendMarkdown": {
            "name": "extendMarkdown",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "markdown.core.Markdown"
                ],
                "md_globals": [
                    "Mapping"
                ]
            }
        },
        "StyleClassExtension.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str"
                ],
                "classes": [
                    "List[str]"
                ]
            }
        },
        "StyleClassExtension.extendMarkdown": {
            "name": "extendMarkdown",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "markdown.core.Markdown"
                ],
                "md_globals": [
                    "Mapping"
                ]
            }
        },
        "get_linker.linker": {
            "name": "linker",
            "location": 153,
            "return": [
                "tuple[None]",
                "tuple[typing.Optional[typing.Text]]",
                "type",
                "list",
                "Union[int, None]",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "href": [
                    "str",
                    "int",
                    "List[str]",
                    "bytes"
                ]
            }
        },
        "get_deferencer.link_dereferencer": {
            "name": "link_dereferencer",
            "location": 184,
            "return": [
                "typing.Text",
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "href": [
                    "str",
                    "Union[str, bytes]",
                    "domain.Submission.ContenFormat"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/routes.py": {
        "redirect_html": {
            "name": "redirect_html",
            "location": 23,
            "return": [
                "int",
                "List[str]",
                "Optional[str]",
                "Dict[str, str]",
                "dict",
                "bool"
            ],
            "arguments": {
                "page_path": [
                    "str",
                    "typing.Text"
                ]
            }
        },
        "from_sitemap": {
            "name": "from_sitemap",
            "location": 35,
            "return": [
                "tuple[dict[typing.Text, ]]",
                "werkzeug.Response",
                "str",
                "bool",
                "flask.Response",
                "Dict[str, Any]"
            ],
            "arguments": {
                "page_path": [
                    "typing.Text",
                    "str",
                    "Optional[str]",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "search": {
            "name": "search",
            "location": 95,
            "return": [
                "tuple[dict[, ]]",
                "str",
                "int",
                "Optional[str]",
                "Optional[Mapping[str, Any]]"
            ],
            "arguments": {}
        },
        "url_for_page_builder": {
            "name": "url_for_page_builder",
            "location": 112,
            "return": [
                "str",
                "bool",
                "Optional[Callable[[Dict], bool]]",
                "Dict[str, Dict[str, str]]",
                "Optional[Dict]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "get_blueprint": {
            "name": "get_blueprint",
            "location": 126,
            "return": [
                "Blueprint",
                "str",
                "bool"
            ],
            "arguments": {
                "site_path": [
                    "str",
                    "bool",
                    "Optional[Dict[str, str]]",
                    "dict[str, str]",
                    "None"
                ],
                "with_search": [
                    "bool",
                    "str",
                    "Optional[Dict[str, str]]"
                ]
            }
        },
        "get_docs_blueprint": {
            "name": "get_docs_blueprint",
            "location": 149,
            "return": [
                "Blueprint",
                "str",
                "bool"
            ],
            "arguments": {
                "app": [
                    "str",
                    "flask.Flask"
                ]
            }
        },
        "url_for_page_builder.url_for_page": {
            "name": "url_for_page",
            "location": 114,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "page": [
                    "int",
                    "Sequence[str]",
                    "str",
                    "Union"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/upload_static_assets.py": {
        "upload_static_files": {
            "name": "upload_static_files",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/wsgi.py": {
        "application": {
            "name": "application",
            "location": 10,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "environ": [
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "dict[str, str]",
                    "Dict[str, str]",
                    "Callable",
                    "bytes"
                ],
                "start_response": [
                    "Callable",
                    "bytes",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/__init__.py": {},
    "arxiv-marxdown-master/arxiv/marxdown/services/index.py": {
        "create_index": {
            "name": "create_index",
            "location": 56,
            "return": [
                "whoosh.index.Index",
                "None"
            ],
            "arguments": {}
        },
        "add_documents": {
            "name": "add_documents",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "pages": [
                    "Iterable"
                ]
            }
        },
        "add_static_file": {
            "name": "add_static_file",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_by_path": {
            "name": "get_by_path",
            "location": 98,
            "return": [
                "SearchResult",
                "str",
                "Dict[str, str]",
                "lightbus.transports.base.RpcMessage",
                "Dict[str, Any]",
                "IO",
                "Dict[str, Dict]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "get_parents": [
                    "bool"
                ],
                "get_children": [
                    "bool"
                ]
            }
        },
        "static_exists": {
            "name": "static_exists",
            "location": 131,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "find": {
            "name": "find",
            "location": 141,
            "return": [
                "SearchResults",
                "bool",
                "str"
            ],
            "arguments": {
                "query": [
                    "str"
                ],
                "page_number": [
                    "int"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "_get_index_path": {
            "name": "_get_index_path",
            "location": 184,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_get_static_index_path": {
            "name": "_get_static_index_path",
            "location": 190,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_get_index": {
            "name": "_get_index",
            "location": 196,
            "return": [
                "str"
            ],
            "arguments": {
                "index_path": [
                    "str"
                ]
            }
        },
        "JSON.to_bytes": {
            "name": "to_bytes",
            "location": 25,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "dict"
                ]
            }
        },
        "JSON.from_bytes": {
            "name": "from_bytes",
            "location": 28,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "bs": [
                    "bytes"
                ]
            }
        },
        "JSON.index": {
            "name": "index",
            "location": 31,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "dict"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/services/site.py": {
        "create_all": {
            "name": "create_all",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "site_path": [
                    "str"
                ]
            }
        },
        "walk": {
            "name": "walk",
            "location": 28,
            "return": [
                "Iterable[Tuple[(str, str, dict)]]"
            ],
            "arguments": {}
        },
        "get_tree": {
            "name": "get_tree",
            "location": 64,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "get_static_path": {
            "name": "get_static_path",
            "location": 132,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_site_name": {
            "name": "get_site_name",
            "location": 140,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_url_prefix": {
            "name": "get_url_prefix",
            "location": 145,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_site_human_name": {
            "name": "get_site_human_name",
            "location": 150,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_site_human_short_name": {
            "name": "get_site_human_short_name",
            "location": 155,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_data_path": {
            "name": "get_data_path",
            "location": 160,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_templates_path": {
            "name": "get_templates_path",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_pages_path": {
            "name": "get_pages_path",
            "location": 172,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_page_filename": {
            "name": "get_page_filename",
            "location": 178,
            "return": [
                "str"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "get_path_for_page": {
            "name": "get_path_for_page",
            "location": 183,
            "return": [
                "str"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "get_path_for_static": {
            "name": "get_path_for_static",
            "location": 188,
            "return": [
                "str"
            ],
            "arguments": {
                "static_path": [
                    "str"
                ]
            }
        },
        "get_path_for_template": {
            "name": "get_path_for_template",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "template_path": [
                    "str"
                ]
            }
        },
        "get_path_for_data": {
            "name": "get_path_for_data",
            "location": 196,
            "return": [
                "str"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "store_metadata": {
            "name": "store_metadata",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "store_page_content": {
            "name": "store_page_content",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ],
                "content": [
                    "str"
                ]
            }
        },
        "load_page_content": {
            "name": "load_page_content",
            "location": 216,
            "return": [
                "str"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "load_metadata": {
            "name": "load_metadata",
            "location": 224,
            "return": [
                "dict"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "load_page": {
            "name": "load_page",
            "location": 231,
            "return": [
                "arxiv.marxdown.domain.Page"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "get_tree._get_subpaths": {
            "name": "_get_subpaths",
            "location": 84,
            "return": [
                "list[]",
                "str",
                "Optional[str]",
                "bytes",
                "int",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "parent": [
                    "str"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/services/source.py": {
        "get_repo_path": {
            "name": "get_repo_path",
            "location": 25,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "source_path": [
                    "str",
                    "dict",
                    "dict[, ]",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "_get_repo": {
            "name": "_get_repo",
            "location": 37,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ]
            }
        },
        "_get_repo_name": {
            "name": "_get_repo_name",
            "location": 43,
            "return": [
                "None",
                "Optional[str]",
                "str",
                "Optional[List[str]]",
                "Optional[ebl.transliteration.domain.tokens.Token]",
                "Sequence[ebl.transliteration.domain.tokens.Token]",
                "Sequence[ebl.transliteration.domain.atf.Flag]",
                "Sequence[str]",
                "Optional[int]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ]
            }
        },
        "_get_path_in_repo": {
            "name": "_get_path_in_repo",
            "location": 56,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str"
                ]
            }
        },
        "_get_last_commit": {
            "name": "_get_last_commit",
            "location": 63,
            "return": [
                "str",
                "None",
                "Union[None, List[str]]",
                "Optional[str]",
                "int",
                "bool",
                "dict[, ]",
                "list[int]",
                "list[list[int]]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str"
                ]
            }
        },
        "_get_revision_history": {
            "name": "_get_revision_history",
            "location": 74,
            "return": [
                "List[Tuple[(Optional[str], _datetime.datetime, str)]]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str"
                ]
            }
        },
        "_get_mtime": {
            "name": "_get_mtime",
            "location": 89,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str"
                ]
            }
        },
        "_get_last_version": {
            "name": "_get_last_version",
            "location": 102,
            "return": [
                "str",
                "Optional[str]",
                "List[str]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ]
            }
        },
        "_github_url": {
            "name": "_github_url",
            "location": 108,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "rev": [
                    "str"
                ],
                "page_path": [
                    "str",
                    "int"
                ]
            }
        },
        "_get_last_modified_url": {
            "name": "_get_last_modified_url",
            "location": 119,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str"
                ]
            }
        },
        "_get_last_version_url": {
            "name": "_get_last_version_url",
            "location": 130,
            "return": [
                "str",
                "typing.Text",
                "None"
            ],
            "arguments": {
                "source_path": [
                    "str",
                    "logging.Logger"
                ]
            }
        },
        "get_source_path": {
            "name": "get_source_path",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_templates_path": {
            "name": "get_templates_path",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_path_for_page": {
            "name": "get_path_for_page",
            "location": 149,
            "return": [
                "str"
            ],
            "arguments": {
                "page_path": [
                    "str"
                ]
            }
        },
        "page_exists": {
            "name": "page_exists",
            "location": 155,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "get_parents": {
            "name": "get_parents",
            "location": 160,
            "return": [
                "List[Dict[(str, str)]]"
            ],
            "arguments": {
                "source_path": [
                    "str"
                ],
                "page_path": [
                    "str"
                ]
            }
        },
        "load_page": {
            "name": "load_page",
            "location": 179,
            "return": [
                "SourcePage",
                "str",
                "domain.UserFile",
                "domain.Workspace",
                "List[str]"
            ],
            "arguments": {
                "source_path": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "page_path": [
                    "str",
                    "typing.IO",
                    "Optional[IO[str]]",
                    "None",
                    "virgene.config.Config",
                    "Optional[str]"
                ],
                "parents": [
                    "str",
                    "bool"
                ]
            }
        },
        "load_pages": {
            "name": "load_pages",
            "location": 206,
            "return": [
                "Iterable"
            ],
            "arguments": {}
        },
        "load_static_paths": {
            "name": "load_static_paths",
            "location": 217,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {}
        },
        "load_template_paths": {
            "name": "load_template_paths",
            "location": 245,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {}
        },
        "_get_title": {
            "name": "_get_title",
            "location": 271,
            "return": [
                "str"
            ],
            "arguments": {
                "page_data": [
                    "dict"
                ],
                "page_path": [
                    "str"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/services/__init__.py": {},
    "arxiv-marxdown-master/arxiv/marxdown/services/tests/test_site.py": {
        "TestSiteTree.test_get_tree": {
            "name": "test_get_tree",
            "location": 27,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/services/tests/test_source.py": {
        "TestLoadSource.setUpClass": {
            "name": "setUpClass",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "bytes",
                    "int"
                ]
            }
        },
        "TestLoadSource.tearDownClass": {
            "name": "tearDownClass",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Exception",
                    "Mapping[Any, Any]",
                    "typing.Mapping",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "TestLoadSource.mock_configure": {
            "name": "mock_configure",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "dict",
                    "dict[, ]"
                ],
                "mock_config": [
                    "bool",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "TestLoadSource.test_get_repo_path": {
            "name": "test_get_repo_path",
            "location": 71,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": [
                    "mock.MagicMock"
                ]
            }
        },
        "TestLoadSource.test_get_source_path": {
            "name": "test_get_source_path",
            "location": 78,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        },
        "TestLoadSource.test_get_path_for_page": {
            "name": "test_get_path_for_page",
            "location": 84,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": []
            }
        },
        "TestLoadSource.test_page_exists": {
            "name": "test_page_exists",
            "location": 91,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": []
            }
        },
        "TestLoadSource.test_load_page": {
            "name": "test_load_page",
            "location": 100,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": []
            }
        },
        "TestLoadSource.test_load_pages": {
            "name": "test_load_pages",
            "location": 161,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": []
            }
        },
        "TestLoadSource.test_load_static_paths": {
            "name": "test_load_static_paths",
            "location": 170,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": []
            }
        },
        "TestLoadSource.test_load_template_paths": {
            "name": "test_load_template_paths",
            "location": 182,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_config": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/services/tests/__init__.py": {},
    "arxiv-marxdown-master/arxiv/marxdown/tests/test_build.py": {
        "TestBuild.setUpClass": {
            "name": "setUpClass",
            "location": 34,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "TestBuild.tearDownClass": {
            "name": "tearDownClass",
            "location": 64,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "Type[object]",
                    "typing.Type",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "TestBuild.mock_configure": {
            "name": "mock_configure",
            "location": 70,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "cls": [],
                "mock_config": []
            }
        },
        "TestBuild.test_build_site": {
            "name": "test_build_site",
            "location": 84,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/tests/test_render.py": {
        "TestMailToLinks.test_mailto_is_untouched": {
            "name": "test_mailto_is_untouched",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEscapeBrackets.test_escape_bibtex": {
            "name": "test_escape_bibtex",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEscapeBrackets.test_dont_escape_jinja": {
            "name": "test_dont_escape_jinja",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEscapeBrackets.test_dont_escape_links": {
            "name": "test_dont_escape_links",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/tests/test_serve.py": {
        "TestServeSite.test_serve": {
            "name": "test_serve",
            "location": 39,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_search": {
            "name": "test_search",
            "location": 73,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_redirect": {
            "name": "test_redirect",
            "location": 96,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_deleted": {
            "name": "test_deleted",
            "location": 109,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_serve_with_html": {
            "name": "test_serve_with_html",
            "location": 121,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_serve_with_htm": {
            "name": "test_serve_with_htm",
            "location": 167,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_serve_static": {
            "name": "test_serve_static",
            "location": 215,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServeSite.test_serve_cdn_static": {
            "name": "test_serve_cdn_static",
            "location": 230,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/tests/test_static.py": {
        "TestRelativeStaticPaths.test_use_relative": {
            "name": "test_use_relative",
            "location": 42,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRelativeStaticPaths.test_dont_use_relative": {
            "name": "test_dont_use_relative",
            "location": 61,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUploadStaticFiles.test_upload": {
            "name": "test_upload",
            "location": 75,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/marxdown/tests/__init__.py": {},
    "arxiv-marxdown-master/arxiv/sitemap/app.py": {},
    "arxiv-marxdown-master/arxiv/sitemap/build.py": {
        "create_site_map": {
            "name": "create_site_map",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "spec_file": [
                    "str",
                    "bool"
                ],
                "out_file": [
                    "str",
                    "bool"
                ]
            }
        },
        "do_create_site_map": {
            "name": "do_create_site_map",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "spec_file": [
                    "str",
                    "Optional[str]",
                    "bool"
                ],
                "out_file": [
                    "str"
                ]
            }
        },
        "_validate_spec": {
            "name": "_validate_spec",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "spec": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "_retrieve_repository": {
            "name": "_retrieve_repository",
            "location": 174,
            "return": [
                "str",
                "typing.Final"
            ],
            "arguments": {
                "working_path": [
                    "str"
                ],
                "spec": [
                    "str"
                ]
            }
        },
        "_get_site_config": {
            "name": "_get_site_config",
            "location": 193,
            "return": [
                "dict[typing.Text, typing.Union[str,None]]",
                "Dict[str, Any]",
                "str",
                "List[str]",
                "bool",
                "Optional[str]",
                "Optional[dict]",
                "dict"
            ],
            "arguments": {
                "repo_path": [
                    "str"
                ],
                "spec": [
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "_paths_to_urls": {
            "name": "_paths_to_urls",
            "location": 210,
            "return": [
                "ue.base.UEBase",
                "dbparser.base.BaseParser"
            ],
            "arguments": {
                "server": [
                    "str",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Optional['models.LTI1p3Provider']",
                    "None"
                ],
                "tree_part": [
                    "str",
                    "dict",
                    "Dict[str, Any]",
                    "Optional['models.LTI1p3Provider']"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/config.py": {},
    "arxiv-marxdown-master/arxiv/sitemap/domain.py": {},
    "arxiv-marxdown-master/arxiv/sitemap/factory.py": {
        "create_web_app": {
            "name": "create_web_app",
            "location": 13,
            "return": [
                "flask.Flask",
                "Flask"
            ],
            "arguments": {}
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/load.py": {
        "load_urlset": {
            "name": "load_urlset",
            "location": 48,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "url_root": [
                    "str"
                ],
                "urlset_path": [
                    "str"
                ]
            }
        },
        "URLDecoder.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "URLDecoder.object_hook": {
            "name": "object_hook",
            "location": 40,
            "return": [
                "str",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/routes.py": {
        "get_xml_sitemap": {
            "name": "get_xml_sitemap",
            "location": 20,
            "return": [
                "Response",
                "str",
                "Optional[Dict[str, bytes]]",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {}
        },
        "get_html_sitemap": {
            "name": "get_html_sitemap",
            "location": 29,
            "return": [
                "str",
                "Type[Any]"
            ],
            "arguments": {}
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/serialize.py": {
        "sitemap_xml": {
            "name": "sitemap_xml",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "urlset": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "iter_urls": {
            "name": "iter_urls",
            "location": 48,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "urlset": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "lastmod": {
            "name": "lastmod",
            "location": 56,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "url": [
                    "str",
                    "domain.URL"
                ]
            }
        },
        "loc": {
            "name": "loc",
            "location": 72,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "url": [
                    "str",
                    "domain.URL"
                ]
            }
        },
        "changefreq": {
            "name": "changefreq",
            "location": 85,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "url": [
                    "domain.URL",
                    "str",
                    "Union[str, bytes]"
                ]
            }
        },
        "url_xml": {
            "name": "url_xml",
            "location": 116,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "url": [
                    "str",
                    "domain.URL",
                    "list[]",
                    "None",
                    "list",
                    "list[str]",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/upload_static_assets.py": {
        "upload_static_files": {
            "name": "upload_static_files",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/wsgi.py": {
        "application": {
            "name": "application",
            "location": 7,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "environ": [
                    "dict[, ]",
                    "dict[str, str]",
                    "dict",
                    "Dict[str, str]",
                    "Optional[str]",
                    "Callable",
                    "Dict[str, Any]",
                    "Type[T]"
                ],
                "start_response": [
                    "Callable",
                    "typing.Callable[, ]",
                    "dict",
                    "dict[, ]"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/__init__.py": {},
    "arxiv-marxdown-master/arxiv/sitemap/tests/test_build.py": {
        "TestBuildMap.setUp": {
            "name": "setUp",
            "location": 141,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBuildMap.tearDown": {
            "name": "tearDown",
            "location": 149,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBuildMap.test_build": {
            "name": "test_build",
            "location": 157,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_subprocess": [
                    "str"
                ],
                "mock_build": [
                    "typing.Generator[typing.Union[None,typing.Any,None]]",
                    "Generator[None, Any, None]",
                    "mock.Mock"
                ],
                "mock_site": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/tests/test_serialize.py": {
        "TestSitemapXML.test_regression": {
            "name": "test_regression",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSitemapXML.test_regression.elements_equal": {
            "name": "elements_equal",
            "location": 28,
            "return": [
                "bool",
                "Optional[bool]"
            ],
            "arguments": {
                "element_a": [
                    "str",
                    "int",
                    "bool",
                    "List['Token']",
                    "List[str]"
                ],
                "element_b": [
                    "str",
                    "int",
                    "bool",
                    "List['Token']",
                    "List[str]"
                ]
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/tests/test_serve.py": {
        "TestServeSite.test_serve": {
            "name": "test_serve",
            "location": 27,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/tests/test_static.py": {
        "TestUploadStaticFiles.test_upload": {
            "name": "test_upload",
            "location": 26,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-marxdown-master/arxiv/sitemap/tests/__init__.py": {}
}
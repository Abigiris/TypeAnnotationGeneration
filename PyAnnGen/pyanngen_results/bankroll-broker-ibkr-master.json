{
    "bankroll-broker-ibkr-master/setup.py": {},
    "bankroll-broker-ibkr-master/bankroll/brokers/ibkr/account.py": {
        "_parseFiniteDecimal": {
            "name": "_parseFiniteDecimal",
            "location": 88,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "input": []
            }
        },
        "_parseOption": {
            "name": "_parseOption",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "symbol": [],
                "currency": [],
                "multiplier": [],
                "exchange": [],
                "cls": []
            }
        },
        "_parseForex": {
            "name": "_parseForex",
            "location": 127,
            "return": [
                "Forex"
            ],
            "arguments": {
                "symbol": [],
                "currency": [],
                "exchange": []
            }
        },
        "_parseFutureOptionContract": {
            "name": "_parseFutureOptionContract",
            "location": 144,
            "return": [
                "FutureOption"
            ],
            "arguments": {
                "contract": [],
                "currency": [],
                "exchange": []
            }
        },
        "_extractPosition": {
            "name": "_extractPosition",
            "location": 166,
            "return": [
                "Position"
            ],
            "arguments": {
                "p": []
            }
        },
        "_downloadPositions": {
            "name": "_downloadPositions",
            "location": 227,
            "return": [
                "list"
            ],
            "arguments": {
                "ib": [],
                "lenient": []
            }
        },
        "_parseIBDate": {
            "name": "_parseIBDate",
            "location": 398,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "datestr": []
            }
        },
        "_parseFutureOption": {
            "name": "_parseFutureOption",
            "location": 405,
            "return": [
                "FutureOption"
            ],
            "arguments": {
                "entry": [],
                "exchange": []
            }
        },
        "_parseInstrument": {
            "name": "_parseInstrument",
            "location": 427,
            "return": [
                "Stock",
                "Bond",
                "Future"
            ],
            "arguments": {
                "entry": []
            }
        },
        "_parseTradeConfirm": {
            "name": "_parseTradeConfirm",
            "location": 474,
            "return": [
                "Trade"
            ],
            "arguments": {
                "trade": []
            }
        },
        "_tradesFromReport": {
            "name": "_tradesFromReport",
            "location": 549,
            "return": [
                "list"
            ],
            "arguments": {
                "report": [],
                "lenient": []
            }
        },
        "_parseTrades": {
            "name": "_parseTrades",
            "location": 562,
            "return": [
                "list"
            ],
            "arguments": {
                "path": [],
                "lenient": [
                    "bool"
                ]
            }
        },
        "_parseChangeInDividendAccrual": {
            "name": "_parseChangeInDividendAccrual",
            "location": 566,
            "return": [
                "None",
                "CashPayment"
            ],
            "arguments": {
                "entry": []
            }
        },
        "_parseCurrencyInterestAccrual": {
            "name": "_parseCurrencyInterestAccrual",
            "location": 585,
            "return": [
                "None",
                "CashPayment"
            ],
            "arguments": {
                "entry": []
            }
        },
        "_parseStockLoanFee": {
            "name": "_parseStockLoanFee",
            "location": 607,
            "return": [
                "None",
                "CashPayment"
            ],
            "arguments": {
                "entry": []
            }
        },
        "_parseActivityType": {
            "name": "_parseActivityType",
            "location": 627,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "report": [],
                "name": [],
                "t": [],
                "transform": [],
                "lenient": []
            }
        },
        "_activityFromReport": {
            "name": "_activityFromReport",
            "location": 644,
            "return": [
                "list"
            ],
            "arguments": {
                "report": [],
                "lenient": []
            }
        },
        "_parseNonTradeActivity": {
            "name": "_parseNonTradeActivity",
            "location": 674,
            "return": [
                "list"
            ],
            "arguments": {
                "path": [],
                "lenient": [
                    "bool"
                ]
            }
        },
        "_backoffFlexReport": {
            "name": "_backoffFlexReport",
            "location": 687,
            "return": [
                "None"
            ],
            "arguments": {
                "details": []
            }
        },
        "_flexErrorIsFatal": {
            "name": "_flexErrorIsFatal",
            "location": 692,
            "return": [
                "bool"
            ],
            "arguments": {
                "exception": []
            }
        },
        "_downloadFlexReport": {
            "name": "_downloadFlexReport",
            "location": 706,
            "return": [],
            "arguments": {
                "name": [],
                "token": [],
                "queryID": []
            }
        },
        "_downloadTrades": {
            "name": "_downloadTrades",
            "location": 720,
            "return": [
                "list"
            ],
            "arguments": {
                "token": [],
                "queryID": [],
                "lenient": [
                    "bool"
                ]
            }
        },
        "_downloadNonTradeActivity": {
            "name": "_downloadNonTradeActivity",
            "location": 729,
            "return": [
                "list"
            ],
            "arguments": {
                "token": [],
                "queryID": [],
                "lenient": [
                    "bool"
                ]
            }
        },
        "_extractCash": {
            "name": "_extractCash",
            "location": 738,
            "return": [
                "Cash"
            ],
            "arguments": {
                "val": []
            }
        },
        "_downloadBalance": {
            "name": "_downloadBalance",
            "location": 747,
            "return": [
                "AccountBalance"
            ],
            "arguments": {
                "ib": [],
                "lenient": []
            }
        },
        "_stockContract": {
            "name": "_stockContract",
            "location": 771,
            "return": [
                "Stock"
            ],
            "arguments": {
                "stock": []
            }
        },
        "_bondContract": {
            "name": "_bondContract",
            "location": 779,
            "return": [
                "Bond"
            ],
            "arguments": {
                "bond": []
            }
        },
        "_optionContract": {
            "name": "_optionContract",
            "location": 787,
            "return": [
                "Any"
            ],
            "arguments": {
                "option": [],
                "cls": []
            }
        },
        "_futuresContract": {
            "name": "_futuresContract",
            "location": 802,
            "return": [
                "Future"
            ],
            "arguments": {
                "future": []
            }
        },
        "_forexContract": {
            "name": "_forexContract",
            "location": 814,
            "return": [
                "Forex"
            ],
            "arguments": {
                "forex": []
            }
        },
        "contract": {
            "name": "contract",
            "location": 822,
            "return": [
                "Any"
            ],
            "arguments": {
                "instrument": []
            }
        },
        "Settings.help": {
            "name": "help",
            "location": 71,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings.sectionName": {
            "name": "sectionName",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": []
            }
        },
        "_SpinnerOnLogHandler.__init__": {
            "name": "__init__",
            "location": 679,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spinner": []
            }
        },
        "_SpinnerOnLogHandler.handle": {
            "name": "handle",
            "location": 683,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "IBDataProvider.__init__": {
            "name": "__init__",
            "location": 848,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "IBDataProvider.qualifyContracts": {
            "name": "qualifyContracts",
            "location": 852,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "instruments": []
            }
        },
        "IBDataProvider.fetchHistoricalData": {
            "name": "fetchHistoricalData",
            "location": 865,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "instrument": []
            }
        },
        "IBDataProvider.fetchQuotes": {
            "name": "fetchQuotes",
            "location": 878,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "instruments": [],
                "dataType": []
            }
        },
        "IBAccount.fromSettings": {
            "name": "fromSettings",
            "location": 935,
            "return": [
                "IBAccount"
            ],
            "arguments": {
                "cls": [
                    "Type[_TIBAccount]"
                ],
                "settings": [],
                "lenient": []
            }
        },
        "IBAccount.__init__": {
            "name": "__init__",
            "location": 966,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "twsPort": [
                    "None"
                ],
                "flexToken": [
                    "None"
                ],
                "trades": [
                    "None"
                ],
                "activity": [
                    "None"
                ],
                "lenient": [
                    "bool"
                ]
            }
        },
        "IBAccount.client": {
            "name": "client",
            "location": 982,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IBAccount.positions": {
            "name": "positions",
            "location": 998,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "IBAccount.activity": {
            "name": "activity",
            "location": 1004,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IBAccount.balance": {
            "name": "balance",
            "location": 1038,
            "return": [
                "AccountBalance"
            ],
            "arguments": {
                "self": []
            }
        },
        "IBAccount.marketDataProvider": {
            "name": "marketDataProvider",
            "location": 1045,
            "return": [
                "IBDataProvider"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bankroll-broker-ibkr-master/bankroll/brokers/ibkr/__init__.py": {},
    "bankroll-broker-ibkr-master/tests/helpers.py": {
        "cashAmounts": {
            "name": "cashAmounts",
            "location": 53,
            "return": [
                "int",
                "bool",
                "Optional[bool]",
                "float"
            ],
            "arguments": {
                "min_value": [
                    "decimal.Decimal",
                    "Decimal"
                ],
                "max_value": [
                    "decimal.Decimal",
                    "Decimal"
                ]
            }
        },
        "positionQuantities": {
            "name": "positionQuantities",
            "location": 62,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "min_value": [
                    "Decimal",
                    "decimal.Decimal",
                    "Optional[Tuple[int,...]]",
                    "Optional[Sequence[Any]]",
                    "Optional[int]"
                ],
                "max_value": [
                    "Decimal",
                    "decimal.Decimal",
                    "Optional[Tuple[int,...]]",
                    "Optional[Sequence[Any]]",
                    "Optional[int]"
                ],
                "allow_zero": [
                    "bool",
                    "float",
                    "Set"
                ]
            }
        },
        "multipliers": {
            "name": "multipliers",
            "location": 77,
            "return": [
                "bool",
                "int",
                "Optional[bool]",
                "float",
                "str"
            ],
            "arguments": {
                "min_value": [
                    "decimal.Decimal",
                    "Decimal"
                ],
                "max_value": [
                    "decimal.Decimal",
                    "Decimal"
                ]
            }
        },
        "strikes": {
            "name": "strikes",
            "location": 85,
            "return": [
                "bool",
                "int",
                "Optional[bool]",
                "float"
            ],
            "arguments": {
                "min_value": [
                    "Decimal",
                    "decimal.Decimal",
                    "List",
                    "str",
                    "Callable"
                ],
                "max_value": [
                    "Decimal",
                    "decimal.Decimal",
                    "List",
                    "str",
                    "Callable"
                ]
            }
        },
        "exchanges": {
            "name": "exchanges",
            "location": 93,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {}
        },
        "cashUSD": {
            "name": "cashUSD",
            "location": 97,
            "return": [
                "Cash",
                "str",
                "Tuple[Any,Any,Any]"
            ],
            "arguments": {
                "amount": [
                    "int",
                    "str",
                    "decimal.Decimal"
                ]
            }
        }
    },
    "bankroll-broker-ibkr-master/tests/test_ibkr.py": {
        "TestIBKRTrades.setUp": {
            "name": "setUp",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_tradeValidity": {
            "name": "test_tradeValidity",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyGBPStock": {
            "name": "test_buyGBPStock",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyUSDStock": {
            "name": "test_buyUSDStock",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyBond": {
            "name": "test_buyBond",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyOption": {
            "name": "test_buyOption",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_sellOption": {
            "name": "test_sellOption",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyForex": {
            "name": "test_buyForex",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyForexCross": {
            "name": "test_buyForexCross",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyFuture": {
            "name": "test_buyFuture",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRTrades.test_buyFutureOption": {
            "name": "test_buyFutureOption",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.setUp": {
            "name": "setUp",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.test_activityValidity": {
            "name": "test_activityValidity",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.test_postedAndPaid": {
            "name": "test_postedAndPaid",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.test_postedUnpaid": {
            "name": "test_postedUnpaid",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.test_bondInterest": {
            "name": "test_bondInterest",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.test_currencyInterest": {
            "name": "test_currencyInterest",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRActivity.test_stockLoanInterest": {
            "name": "test_stockLoanInterest",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIBKRParsing.validateTradeContract": {
            "name": "validateTradeContract",
            "location": 478,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tradeConfirm": [
                    "bool",
                    "Dict",
                    "str"
                ],
                "instrument": [
                    "str",
                    "bankroll.model.Instrument"
                ]
            }
        },
        "TestIBKRParsing.test_fuzzTradeConfirm": {
            "name": "test_fuzzTradeConfirm",
            "location": 503,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "tradeConfirm": []
            }
        },
        "TestIBKRParsing.validatePositionContract": {
            "name": "validatePositionContract",
            "location": 511,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "str",
                    "bool",
                    "Dict",
                    "IO[str]",
                    "IO"
                ],
                "instrument": [
                    "str",
                    "bankroll.model.Instrument"
                ]
            }
        },
        "TestIBKRParsing.test_fuzzPosition": {
            "name": "test_fuzzPosition",
            "location": 539,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "position": []
            }
        }
    },
    "bankroll-broker-ibkr-master/tests/__init__.py": {}
}
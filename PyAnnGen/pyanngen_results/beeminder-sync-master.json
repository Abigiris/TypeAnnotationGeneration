{
    "beeminder-sync-master/setup.py": {},
    "beeminder-sync-master/beeminder_sync/beeminder_sync.py": {
        "BeeSync.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_dir": [
                    "str",
                    "pathlib.Path",
                    "Union[str,pathlib.Path]"
                ],
                "config_path": [
                    "str",
                    "pathlib.Path"
                ],
                "spinner": [
                    "bool",
                    "str",
                    "int",
                    "Dict[str,Any]"
                ]
            }
        },
        "BeeSync._create_config": {
            "name": "_create_config",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_path": [
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "BeeSync._verify_config": {
            "name": "_verify_config",
            "location": 93,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "config_path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "BeeSync._read_replace_config": {
            "name": "_read_replace_config",
            "location": 115,
            "return": [
                "configparser.ConfigParser"
            ],
            "arguments": {
                "self": []
            }
        },
        "BeeSync.update": {
            "name": "update",
            "location": 140,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "section": [
                    "Dict",
                    "Dict[str,Any]",
                    "int"
                ],
                "option": [
                    "Dict",
                    "Dict[str,Any]",
                    "int"
                ],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "List[str]",
                    "Union[Literal,Literal]"
                ],
                "silent": [
                    "bool",
                    "Optional[int]",
                    "int",
                    "Optional[bool]",
                    "Optional[str]"
                ]
            }
        },
        "BeeSync.get": {
            "name": "get",
            "location": 173,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "section": [
                    "str",
                    "Dict",
                    "cerise.config.Config",
                    "Iterable[str]"
                ],
                "option": [
                    "str",
                    "Dict",
                    "cerise.config.Config",
                    "Iterable[str]"
                ],
                "silent": [
                    "bool",
                    "str",
                    "pathlib.Path",
                    "Iterable[str]",
                    "Dict"
                ]
            }
        },
        "BeeSync.set_spinner": {
            "name": "set_spinner",
            "location": 206,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "bytes",
                    "Dict",
                    "Dict[str,str]",
                    "str",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,float]"
                ]
            }
        },
        "BeeSync.fail": {
            "name": "fail",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        }
    },
    "beeminder-sync-master/beeminder_sync/cli.py": {
        "cli": {
            "name": "cli",
            "location": 30,
            "return": [
                "None",
                "Optional[str]",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "Union[click.core.Option,click.core.Parameter]",
                    "click.core.Context",
                    "click.Context"
                ],
                "basedir": [
                    "bool",
                    "Union[click.core.Option,click.core.Parameter]",
                    "click.core.Context",
                    "click.Context"
                ],
                "config": [
                    "bool",
                    "Union[click.core.Option,click.core.Parameter]",
                    "click.core.Context",
                    "click.Context"
                ]
            }
        },
        "config": {
            "name": "config",
            "location": 41,
            "return": [
                "Dict",
                "str",
                "int",
                "bytes",
                "bool",
                "Dict[str,Any]"
            ],
            "arguments": {
                "ctx": [
                    "Dict[str,Any]",
                    "click.Context"
                ],
                "section": [
                    "str",
                    "click.Context",
                    "Type",
                    "Type[Model]"
                ],
                "option": [
                    "str",
                    "click.Context",
                    "Type",
                    "Type[Model]"
                ],
                "value": [
                    "Dict[str,str]",
                    "str",
                    "Dict[str,List[str]]",
                    "Dict[str,list[str]]",
                    "Dict[str,List[Any]]",
                    "Dict[str,list[Any]]"
                ]
            }
        },
        "beeminder": {
            "name": "beeminder",
            "location": 60,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str",
                    "click.Context"
                ],
                "method": [
                    "bool",
                    "str",
                    "IO",
                    "IO[str]",
                    "int"
                ],
                "goal": [
                    "int",
                    "str",
                    "List[Mapping[str,str]]",
                    "List[Mapping]"
                ],
                "value": [
                    "str",
                    "int"
                ],
                "comment": [
                    "str",
                    "int"
                ],
                "timestamp": [
                    "int",
                    "str"
                ],
                "query": [
                    "str",
                    "bool"
                ],
                "output": [
                    "str",
                    "bool",
                    "Dict",
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "beeminder-sync-master/beeminder_sync/logger.py": {},
    "beeminder-sync-master/beeminder_sync/__init__.py": {},
    "beeminder-sync-master/beeminder_sync/beeminder/beeminder.py": {
        "Beeminder.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None",
                "Optional[str]",
                "bool",
                "Optional[int]",
                "str"
            ],
            "arguments": {
                "self": [],
                "base_url": [
                    "str",
                    "List[str]"
                ],
                "user_name": [
                    "str"
                ],
                "auth_token": [
                    "str",
                    "Optional[str]",
                    "Iterable[str]",
                    "None"
                ],
                "spinner": [
                    "bool",
                    "str",
                    "Union[int,str]",
                    "int"
                ]
            }
        },
        "Beeminder._url_maker": {
            "name": "_url_maker",
            "location": 57,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str",
                    "Dict[str,Any]",
                    "Sequence[str]",
                    "List[str]",
                    "Dict"
                ]
            }
        },
        "Beeminder.user_details": {
            "name": "user_details",
            "location": 82,
            "return": [
                "Dict[Text,dict[Text,]]",
                "bool",
                "str",
                "Dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Beeminder._get_goals": {
            "name": "_get_goals",
            "location": 94,
            "return": [
                "int",
                "bytes",
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Beeminder.__getitem__": {
            "name": "__getitem__",
            "location": 115,
            "return": [
                "Dict[Text,]",
                "List[str]",
                "Dict[str,Any]",
                "Dict[str,dict]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "goal": [
                    "str",
                    "bool"
                ]
            }
        },
        "Beeminder.get_datapoints": {
            "name": "get_datapoints",
            "location": 139,
            "return": [
                "Dict[Text,]",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "goal": [
                    "str",
                    "int"
                ]
            }
        },
        "Beeminder.create_datapoint": {
            "name": "create_datapoint",
            "location": 167,
            "return": [
                "Dict[Text,]",
                "bool",
                "Dict[str,Any]",
                "Dict",
                "str"
            ],
            "arguments": {
                "self": [],
                "goal": [
                    "str"
                ],
                "value": [
                    "str",
                    "int",
                    "Dict",
                    "Type",
                    "bool",
                    "T"
                ],
                "comment": [
                    "Text",
                    "str",
                    "int",
                    "Dict",
                    "bool",
                    "Type",
                    "T"
                ],
                "timestamp": [
                    "Union[int, float]",
                    "Type[Any]",
                    "str",
                    "int",
                    "memoryview"
                ]
            }
        },
        "Beeminder.from_config": {
            "name": "from_config",
            "location": 211,
            "return": [
                "str",
                "Dict[str, str]",
                "Optional[str]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Mapping[str,Any]",
                    "Mapping"
                ],
                "beesync": [
                    "Dict[str,Any]",
                    "Mapping[str,Any]",
                    "str"
                ]
            }
        },
        "Beeminder.set_spinner": {
            "name": "set_spinner",
            "location": 229,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "bytes",
                    "Dict",
                    "Dict[str,str]",
                    "str",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,float]"
                ]
            }
        },
        "Beeminder.fail": {
            "name": "fail",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "Beeminder.query": {
            "name": "query",
            "location": 265,
            "return": [
                "bytes",
                "int",
                "dict",
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "response": [
                    "str",
                    "Dict",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "None"
                ],
                "query_string": [
                    "str",
                    "Dict",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "Beeminder.output": {
            "name": "output",
            "location": 283,
            "return": [
                "str"
            ],
            "arguments": {
                "response": [
                    "str",
                    "Dict",
                    "bytes",
                    "Optional[str]",
                    "None"
                ],
                "format": [
                    "str",
                    "Dict",
                    "bytes",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "beeminder-sync-master/beeminder_sync/beeminder/__init__.py": {},
    "beeminder-sync-master/beeminder_sync/config/manage.py": {
        "read_config": {
            "name": "read_config",
            "location": 16,
            "return": [
                "configparser.ConfigParser"
            ],
            "arguments": {
                "config_path": [
                    "str",
                    "pathlib.Path",
                    "Callable[[str],None]",
                    "Sequence[str]"
                ]
            }
        },
        "verify_config": {
            "name": "verify_config",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "config_path": [
                    "str",
                    "pathlib.Path",
                    "Callable[[str],None]",
                    "Sequence[str]"
                ]
            }
        },
        "write_config": {
            "name": "write_config",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "config_path": [
                    "str",
                    "pathlib.Path",
                    "configparser.ConfigParser",
                    "Optional[str]",
                    "Union[pathlib.Path,str]"
                ],
                "config": [
                    "configparser.ConfigParser",
                    "str",
                    "pathlib.Path"
                ]
            }
        }
    },
    "beeminder-sync-master/beeminder_sync/config/__init__.py": {},
    "beeminder-sync-master/beeminder_sync/output/output.py": {
        "json_output": {
            "name": "json_output",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "response": [
                    "Dict"
                ]
            }
        },
        "table_output": {
            "name": "table_output",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "response": [
                    "Dict[bytes, List[bytes]]",
                    "Mapping[str, Any]",
                    "str"
                ]
            }
        },
        "output": {
            "name": "output",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "response": [
                    "Dict",
                    "str",
                    "Optional[str]",
                    "None",
                    "Union[int,List[int]]",
                    "int",
                    "List[int]"
                ],
                "format": [
                    "Text",
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "beeminder-sync-master/beeminder_sync/output/__init__.py": {},
    "beeminder-sync-master/beeminder_sync/query/query.py": {
        "query": {
            "name": "query",
            "location": 8,
            "return": [
                "dict"
            ],
            "arguments": {
                "response": [
                    "str"
                ],
                "query_string": [
                    "str"
                ]
            }
        }
    },
    "beeminder-sync-master/beeminder_sync/query/__init__.py": {},
    "beeminder-sync-master/beeminder_sync/sources/toggl.py": {},
    "beeminder-sync-master/beeminder_sync/sources/__init__.py": {},
    "beeminder-sync-master/docs/conf.py": {},
    "beeminder-sync-master/tests/conftest.py": {
        "config_paths": {
            "name": "config_paths",
            "location": 21,
            "return": [
                "Tuple",
                "pathlib.Path",
                "str",
                "Union[pathlib.Path,str]",
                "Iterable[str]"
            ],
            "arguments": {
                "tmpdir_factory": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "config": {
            "name": "config",
            "location": 31,
            "return": [
                "ConfigParser",
                "str",
                "Optional[dict]",
                "Dict",
                "bool"
            ],
            "arguments": {}
        },
        "beeminder_config": {
            "name": "beeminder_config",
            "location": 41,
            "return": [
                "dict",
                "str",
                "pathlib.Path",
                "Callable",
                "Dict[str, Any]",
                "IO"
            ],
            "arguments": {
                "config": [
                    "Dict[str, Any]",
                    "Mapping",
                    "dict",
                    "bool"
                ]
            }
        },
        "beeminder_interface": {
            "name": "beeminder_interface",
            "location": 50,
            "return": [
                "Beeminder",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "beeminder_config": [
                    "Optional[Dict[str, int]]"
                ]
            }
        },
        "github_json": {
            "name": "github_json",
            "location": 60,
            "return": [
                "bytes",
                "dict"
            ],
            "arguments": {}
        }
    },
    "beeminder-sync-master/tests/test_beeminder_sync.py": {
        "TestBeeminderSync.test_init": {
            "name": "test_init",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_paths": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "TestBeeminderSync.test_update_get": {
            "name": "test_update_get",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_paths": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Callable[[str],None]",
                    "Callable[str,None]"
                ]
            }
        }
    },
    "beeminder-sync-master/tests/test_cli.py": {
        "test_cli_config": {
            "name": "test_cli_config",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [
                    "int"
                ]
            }
        },
        "test_main_cli": {
            "name": "test_main_cli",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "beeminder-sync-master/tests/__init__.py": {},
    "beeminder-sync-master/tests/beeminder/test_beeminder_api.py": {
        "TestBeeminderApi.test_config": {
            "name": "test_config",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_config": [
                    "str"
                ]
            }
        },
        "TestBeeminderApi.test_credentials": {
            "name": "test_credentials",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_config": [
                    "str"
                ]
            }
        },
        "TestBeeminderApi.test_interface": {
            "name": "test_interface",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_config": [
                    "str"
                ]
            }
        },
        "TestBeeminderApi.test_getitem": {
            "name": "test_getitem",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_config": [
                    "str"
                ]
            }
        },
        "TestBeeminderApi.test_get_datapoints": {
            "name": "test_get_datapoints",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_interface": [
                    "int"
                ]
            }
        },
        "TestBeeminderApi.test_create_datapoint": {
            "name": "test_create_datapoint",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_interface": []
            }
        }
    },
    "beeminder-sync-master/tests/beeminder/__init__.py": {},
    "beeminder-sync-master/tests/output/test_output.py": {
        "TestOutput.test_json_output": {
            "name": "test_json_output",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "github_json": []
            }
        },
        "TestOutput.test_table_output": {
            "name": "test_table_output",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beeminder_interface": [
                    "str"
                ]
            }
        }
    },
    "beeminder-sync-master/tests/output/__init__.py": {},
    "beeminder-sync-master/tests/query/test_query.py": {
        "TestQuery.test_query": {
            "name": "test_query",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "github_json": [
                    "str"
                ]
            }
        }
    },
    "beeminder-sync-master/tests/query/__init__.py": {}
}
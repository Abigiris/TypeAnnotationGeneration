{
    "cafeteria_back-master/manage.py": {},
    "cafeteria_back-master/cafeteria/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory",
                "int",
                "List[Dict[str, Any]]",
                "bool",
                "list"
            ],
            "arguments": {}
        }
    },
    "cafeteria_back-master/cafeteria/views.py": {
        "ReactAppView.get": {
            "name": "get",
            "location": 9,
            "return": [
                "HttpResponse",
                "int",
                "Dict[str, str]",
                "str",
                "dict",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "django.http.HttpRequest",
                    "dict[, ]",
                    "django.http.requesHttpRequest",
                    "Dict[str, str]",
                    "dict"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/__init__.py": {},
    "cafeteria_back-master/cafeteria/contrib/__init__.py": {},
    "cafeteria_back-master/cafeteria/contrib/sites/__init__.py": {},
    "cafeteria_back-master/cafeteria/contrib/sites/migrations/0001_initial.py": {},
    "cafeteria_back-master/cafeteria/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "cafeteria_back-master/cafeteria/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/contrib/sites/migrations/__init__.py": {},
    "cafeteria_back-master/cafeteria/crawler/admin.py": {},
    "cafeteria_back-master/cafeteria/crawler/apps.py": {},
    "cafeteria_back-master/cafeteria/crawler/dormitory_apply.py": {
        "dormitory": {
            "name": "dormitory",
            "location": 11,
            "return": [],
            "arguments": {
                "uid": [],
                "upasswd": [],
                "first": [],
                "second": [],
                "apply_text": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/crawler/Haksik.py": {
        "dor_restaurant": {
            "name": "dor_restaurant",
            "location": 8,
            "return": [
                "Tuple[(List[str], List[str])]"
            ],
            "arguments": {}
        },
        "restaurant": {
            "name": "restaurant",
            "location": 34,
            "return": [
                "Tuple[(List[str], List[str], List[str], List[str], List[str], List[str])]"
            ],
            "arguments": {}
        }
    },
    "cafeteria_back-master/cafeteria/crawler/models.py": {},
    "cafeteria_back-master/cafeteria/crawler/serializers.py": {},
    "cafeteria_back-master/cafeteria/crawler/tests.py": {},
    "cafeteria_back-master/cafeteria/crawler/urls.py": {},
    "cafeteria_back-master/cafeteria/crawler/views.py": {
        "OutApply.post": {
            "name": "post",
            "location": 14,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RestaurantView.get": {
            "name": "get",
            "location": 50,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/crawler/__init__.py": {},
    "cafeteria_back-master/cafeteria/crawler/migrations/0001_initial.py": {},
    "cafeteria_back-master/cafeteria/crawler/migrations/__init__.py": {},
    "cafeteria_back-master/cafeteria/images/admin.py": {},
    "cafeteria_back-master/cafeteria/images/apps.py": {},
    "cafeteria_back-master/cafeteria/images/models.py": {
        "Image.like_count": {
            "name": "like_count",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.comment_count": {
            "name": "comment_count",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.report_count": {
            "name": "report_count",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.natural_time": {
            "name": "natural_time",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.natural_time": {
            "name": "natural_time",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Comment.__str__": {
            "name": "__str__",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Like.__str__": {
            "name": "__str__",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrimeRepoter.__str__": {
            "name": "__str__",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/images/serializers.py": {
        "ImageSerializer.get_is_liked": {
            "name": "get_is_liked",
            "location": 89,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/images/tests.py": {},
    "cafeteria_back-master/cafeteria/images/urls.py": {},
    "cafeteria_back-master/cafeteria/images/views.py": {
        "Images.get": {
            "name": "get",
            "location": 16,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "Images.post": {
            "name": "post",
            "location": 26,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "LikeImage.get": {
            "name": "get",
            "location": 45,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "LikeImage.post": {
            "name": "post",
            "location": 55,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UnLikeImage.delete": {
            "name": "delete",
            "location": 97,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "CommentOnImage.post": {
            "name": "post",
            "location": 118,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "CommentOnComment.post": {
            "name": "post",
            "location": 151,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "comment_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "Comment.delete": {
            "name": "delete",
            "location": 185,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "comment_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "ModerateComment.delete": {
            "name": "delete",
            "location": 198,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "comment_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "TitleSearch.get": {
            "name": "get",
            "location": 210,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "ContentSearch.get": {
            "name": "get",
            "location": 230,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "ContentTitleSearch.get": {
            "name": "get",
            "location": 246,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "ImageDetail.findOwnImage": {
            "name": "findOwnImage",
            "location": 263,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "post_id": [],
                "user": []
            }
        },
        "ImageDetail.get": {
            "name": "get",
            "location": 271,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "ImageDetail.put": {
            "name": "put",
            "location": 284,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "ImageDetail.delete": {
            "name": "delete",
            "location": 297,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "CrimeReport.post": {
            "name": "post",
            "location": 311,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "post_id": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/images/__init__.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0001_initial.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0002_auto_20190607_2048.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0003_auto_20190607_2303.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0004_auto_20190607_2340.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0005_auto_20190608_2217.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0006_auto_20190608_2305.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0007_auto_20190609_0223.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0008_image_title.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0009_auto_20190823_1850.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0010_auto_20190908_1350.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0011_remove_comment_refer.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0012_comment_refer.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0013_auto_20190909_0249.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0014_auto_20190909_0251.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0015_auto_20190909_0253.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0016_auto_20190909_0258.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0017_auto_20190909_0300.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0018_auto_20190909_0301.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0019_remove_comment_refercomment.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0020_comment_refercomment.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0021_auto_20190910_0037.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/0022_image_anonymous.py": {},
    "cafeteria_back-master/cafeteria/images/migrations/__init__.py": {},
    "cafeteria_back-master/cafeteria/notifications/admin.py": {},
    "cafeteria_back-master/cafeteria/notifications/apps.py": {},
    "cafeteria_back-master/cafeteria/notifications/models.py": {
        "Notification.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Notification.natural_time": {
            "name": "natural_time",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/notifications/serializers.py": {},
    "cafeteria_back-master/cafeteria/notifications/tests.py": {},
    "cafeteria_back-master/cafeteria/notifications/urls.py": {},
    "cafeteria_back-master/cafeteria/notifications/views.py": {
        "createNotification": {
            "name": "createNotification",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "creator": [],
                "to": [],
                "notification_type": [],
                "image": [
                    "None"
                ],
                "comment": [
                    "None"
                ]
            }
        },
        "Notifications.get": {
            "name": "get",
            "location": 10,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/notifications/__init__.py": {},
    "cafeteria_back-master/cafeteria/notifications/migrations/0001_initial.py": {},
    "cafeteria_back-master/cafeteria/notifications/migrations/0002_auto_20190630_1657.py": {},
    "cafeteria_back-master/cafeteria/notifications/migrations/0003_auto_20190630_1700.py": {},
    "cafeteria_back-master/cafeteria/notifications/migrations/0004_notification_comment.py": {},
    "cafeteria_back-master/cafeteria/notifications/migrations/0005_auto_20190805_0233.py": {},
    "cafeteria_back-master/cafeteria/notifications/migrations/__init__.py": {},
    "cafeteria_back-master/cafeteria/users/adapters.py": {
        "CustomUserAccountAdapter.save_user": {
            "name": "save_user",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ],
                "user": [
                    "django.http.HttpRequest"
                ],
                "form": [
                    "dict[str, typing.Any]",
                    "str",
                    "django.http.HttpRequest",
                    "Dict[str, Any]",
                    "django.contrib.auth.models.User"
                ],
                "commit": [
                    "django.http.HttpRequest",
                    "bool"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/admin.py": {},
    "cafeteria_back-master/cafeteria/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.postCount": {
            "name": "postCount",
            "location": 30,
            "return": [
                "str",
                "int",
                "Set[Optional[str]]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.followersCount": {
            "name": "followersCount",
            "location": 34,
            "return": [
                "Dict[int, Tuple[int, int]]",
                "List[str]",
                "Dict[str, Any]",
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.followingCount": {
            "name": "followingCount",
            "location": 38,
            "return": [
                "Dict[int, Tuple[int, int]]",
                "List[str]",
                "Dict[str, Any]",
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/serializers.py": {
        "RegisterSerializer.validate_username": {
            "name": "validate_username",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "RegisterSerializer.validate_password1": {
            "name": "validate_password1",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "password": []
            }
        },
        "RegisterSerializer.validate": {
            "name": "validate",
            "location": 33,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "RegisterSerializer.custom_signup": {
            "name": "custom_signup",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user": []
            }
        },
        "RegisterSerializer.get_cleaned_data": {
            "name": "get_cleaned_data",
            "location": 41,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegisterSerializer.save": {
            "name": "save",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/urls.py": {},
    "cafeteria_back-master/cafeteria/users/views.py": {
        "ExploreUser.get": {
            "name": "get",
            "location": 14,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "FollowUser.post": {
            "name": "post",
            "location": 23,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UnFollowUser.post": {
            "name": "post",
            "location": 44,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UserProfile.getUser": {
            "name": "getUser",
            "location": 63,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "UserProfile.get": {
            "name": "get",
            "location": 71,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "UserProfile.put": {
            "name": "put",
            "location": 79,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "ChangePassword.put": {
            "name": "put",
            "location": 105,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "PushToken.getUser": {
            "name": "getUser",
            "location": 129,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "PushToken.post": {
            "name": "post",
            "location": 136,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "IsAlreadyId.get": {
            "name": "get",
            "location": 154,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "IsAlreadyName.get": {
            "name": "get",
            "location": 164,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "name": [],
                "format": [
                    "None"
                ]
            }
        },
        "IsAlreadyEmail.get": {
            "name": "get",
            "location": 174,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "email": [],
                "format": [
                    "None"
                ]
            }
        },
        "StudentAuthentication.getUser": {
            "name": "getUser",
            "location": 184,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "StudentAuthentication.put": {
            "name": "put",
            "location": 191,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/__init__.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0001_initial.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0002_auto_20190607_1848.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0003_auto_20190607_1851.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0004_auto_20190608_0202.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0005_auto_20190608_0208.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0006_auto_20190609_0223.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0007_auto_20190609_1547.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0008_auto_20190609_1628.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0009_auto_20190609_1720.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0010_auto_20190609_1721.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0011_auto_20190805_0247.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0012_auto_20190805_0248.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/0013_auto_20191003_1931.py": {},
    "cafeteria_back-master/cafeteria/users/migrations/__init__.py": {},
    "cafeteria_back-master/cafeteria/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_update": {
            "name": "test_update",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cafeteria_back-master/cafeteria/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "django.conf.settings.AUTH_USER_MODEL",
                    "bool"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        }
    },
    "cafeteria_back-master/cafeteria/users/tests/__init__.py": {},
    "cafeteria_back-master/config/asset_storage.py": {},
    "cafeteria_back-master/config/urls.py": {},
    "cafeteria_back-master/config/wsgi.py": {},
    "cafeteria_back-master/config/__init__.py": {},
    "cafeteria_back-master/config/settings/base.py": {},
    "cafeteria_back-master/config/settings/local.py": {},
    "cafeteria_back-master/config/settings/production.py": {},
    "cafeteria_back-master/config/settings/test.py": {},
    "cafeteria_back-master/config/settings/__init__.py": {}
}
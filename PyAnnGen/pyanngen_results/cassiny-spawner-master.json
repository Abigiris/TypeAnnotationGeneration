{
    "cassiny-spawner-master/app.py": {
        "add_route": {
            "name": "add_route",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "cassiny-spawner-master/config.py": {
        "Config.make_dsn": {
            "name": "make_dsn",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "cassiny-spawner-master/create_db.py": {
        "create_tables": {
            "name": "create_tables",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/factory.py": {},
    "cassiny-spawner-master/migrate.py": {
        "make_migration": {
            "name": "make_migration",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/alembic/versions/d762917e726b_first_migration.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/apis/events.py": {},
    "cassiny-spawner-master/apis/models.py": {},
    "cassiny-spawner-master/apis/routes.py": {},
    "cassiny-spawner-master/apis/serializers.py": {
        "APIs.translate_status": {
            "name": "translate_status",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "APIs.url": {
            "name": "url",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "cassiny-spawner-master/apis/views.py": {},
    "cassiny-spawner-master/apis/__init__.py": {},
    "cassiny-spawner-master/blueprints/build_from_file.py": {
        "CreateFromFile.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ],
                "base_image": [
                    "str"
                ]
            }
        },
        "CreateFromFile.__enter__": {
            "name": "__enter__",
            "location": 22,
            "return": [
                "IO[bytes]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CreateFromFile.__exit__": {
            "name": "__exit__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc": [
                    "Optional[BaseException]"
                ],
                "tb": [
                    "Optional[Type[BaseException]]",
                    "typing.Type",
                    "str",
                    "BaseException",
                    "None",
                    "Exception",
                    "Optional[BaseException]"
                ]
            }
        }
    },
    "cassiny-spawner-master/blueprints/build_from_s3.py": {
        "CreateFromS3.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cargo": [
                    "str"
                ],
                "s3_key": [
                    "str"
                ],
                "s3_skey": [
                    "str"
                ],
                "base_image": [
                    "str"
                ],
                "bucket": [
                    "str"
                ]
            }
        }
    },
    "cassiny-spawner-master/blueprints/dockerfile.py": {},
    "cassiny-spawner-master/blueprints/events.py": {},
    "cassiny-spawner-master/blueprints/models.py": {},
    "cassiny-spawner-master/blueprints/routes.py": {},
    "cassiny-spawner-master/blueprints/serializers.py": {},
    "cassiny-spawner-master/blueprints/views.py": {},
    "cassiny-spawner-master/blueprints/__init__.py": {},
    "cassiny-spawner-master/cargos/events.py": {},
    "cassiny-spawner-master/cargos/models.py": {},
    "cassiny-spawner-master/cargos/routes.py": {},
    "cassiny-spawner-master/cargos/serializers.py": {
        "CargoSchema.owner": {
            "name": "owner",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CargoSchema.url": {
            "name": "url",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CargoSchema.convert_status": {
            "name": "convert_status",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "cassiny-spawner-master/cargos/views.py": {},
    "cassiny-spawner-master/cargos/__init__.py": {},
    "cassiny-spawner-master/jobs/events.py": {},
    "cassiny-spawner-master/jobs/helpers.py": {},
    "cassiny-spawner-master/jobs/models.py": {},
    "cassiny-spawner-master/jobs/routes.py": {},
    "cassiny-spawner-master/jobs/serializers.py": {
        "JobSchema.translate_status": {
            "name": "translate_status",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "JobSchema.owner": {
            "name": "owner",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "JobSchema.create_blueprint_name": {
            "name": "create_blueprint_name",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "cassiny-spawner-master/jobs/views.py": {},
    "cassiny-spawner-master/jobs/__init__.py": {},
    "cassiny-spawner-master/monitoring/events.py": {},
    "cassiny-spawner-master/monitoring/models.py": {},
    "cassiny-spawner-master/monitoring/routes.py": {},
    "cassiny-spawner-master/monitoring/serializers.py": {},
    "cassiny-spawner-master/monitoring/views.py": {},
    "cassiny-spawner-master/monitoring/__init__.py": {},
    "cassiny-spawner-master/probes/events.py": {},
    "cassiny-spawner-master/probes/models.py": {},
    "cassiny-spawner-master/probes/routes.py": {},
    "cassiny-spawner-master/probes/serializers.py": {
        "ProbeSchema.owner": {
            "name": "owner",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ProbeSchema.translate_status": {
            "name": "translate_status",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ProbeSchema.create_blueprint_name": {
            "name": "create_blueprint_name",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ProbeSchema.url": {
            "name": "url",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "cassiny-spawner-master/probes/views.py": {},
    "cassiny-spawner-master/probes/__init__.py": {},
    "cassiny-spawner-master/spawner/api.py": {
        "Api.get_env": {
            "name": "get_env",
            "location": 49,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/base_service.py": {
        "BaseService.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spawner": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/blueprint.py": {
        "Blueprint.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spawner": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/cargo.py": {
        "Cargo.get_env": {
            "name": "get_env",
            "location": 73,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "access_key": [
                    "str"
                ],
                "secret_key": [
                    "str"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/job.py": {
        "Job.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spawner": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Job.get_env": {
            "name": "get_env",
            "location": 44,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/manager.py": {
        "ServiceManager.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceManager.docker": {
            "name": "docker",
            "location": 37,
            "return": [
                "Docker"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceManager.get_image": {
            "name": "get_image",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {
                "specs": [
                    "Mapping"
                ]
            }
        },
        "ServiceManager._add_resources": {
            "name": "_add_resources",
            "location": 111,
            "return": [
                "Mapping[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "specs": [
                    "Mapping[(str, Any)]"
                ]
            }
        },
        "ServiceManager._add_placement": {
            "name": "_add_placement",
            "location": 126,
            "return": [
                "Mapping[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "specs": [
                    "Mapping[(str, Any)]"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "ServiceManager.create_template": {
            "name": "create_template",
            "location": 144,
            "return": [
                "Tuple[(list, Mapping)]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "user_id": [
                    "int"
                ],
                "specs": [
                    "Mapping"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/probe.py": {
        "Probe.get_env": {
            "name": "get_env",
            "location": 65,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "token": [
                    "str"
                ]
            }
        }
    },
    "cassiny-spawner-master/spawner/__init__.py": {},
    "cassiny-spawner-master/tests/conftest.py": {
        "create_tables": {
            "name": "create_tables",
            "location": 45,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "loop": {
            "name": "loop",
            "location": 64,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "test_client": {
            "name": "test_client",
            "location": 80,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "loop": [
                    "tests.e2e.Helper"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "loop": [
                    "tests.test_util.aiohttp.AiohttpClientMocker"
                ],
                "test_client": [
                    "typing.Callable[, ]",
                    "Callable",
                    "aiohttp.web.Application",
                    "aiohttp.ClientSession"
                ],
                "create_tables": [
                    "str",
                    "bool",
                    "list[app.schemas.farm.Farm]",
                    "List[app.schemas.farm.Farm]",
                    "asyncio.Semaphore"
                ]
            }
        },
        "valid_token": {
            "name": "valid_token",
            "location": 145,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "monkeypatch": [
                    "int",
                    "schema.GraphQLSchema",
                    "str"
                ]
            }
        }
    },
    "cassiny-spawner-master/tests/events.py": {},
    "cassiny-spawner-master/tests/fixtures.py": {
        "_validate_token": {
            "name": "_validate_token",
            "location": 6,
            "return": [
                "types.MappingProxyType[(nothing, nothing)]"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/tests/test_spawner.py": {},
    "cassiny-spawner-master/tests/test_utils.py": {
        "test_general_functionality": {
            "name": "test_general_functionality",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wont_return_same_name": {
            "name": "test_wont_return_same_name",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/tests/__init__.py": {},
    "cassiny-spawner-master/tests/apis/test_apis_api.py": {},
    "cassiny-spawner-master/tests/blueprints/test_blueprints_api.py": {},
    "cassiny-spawner-master/tests/blueprints/test_create_blueprint.py": {
        "test_build_from_file": {
            "name": "test_build_from_file",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/tests/cargo/test_cargo_api.py": {},
    "cassiny-spawner-master/tests/jobs/test_jobs_api.py": {},
    "cassiny-spawner-master/tests/probe/test_probe_api.py": {},
    "cassiny-spawner-master/utils/auth.py": {
        "_validate_token": {
            "name": "_validate_token",
            "location": 26,
            "return": [
                "Optional[Mapping[(str, Any)]]"
            ],
            "arguments": {
                "headers": [
                    "Mapping"
                ],
                "key": [
                    "bytes"
                ]
            }
        },
        "verify_token": {
            "name": "verify_token",
            "location": 43,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        }
    },
    "cassiny-spawner-master/utils/random_generator.py": {
        "naminator": {
            "name": "naminator",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "name_type": [
                    "str"
                ]
            }
        },
        "_random_element": {
            "name": "_random_element",
            "location": 77,
            "return": [
                "str"
            ],
            "arguments": {
                "strings": [
                    "Sequence[str]"
                ]
            }
        },
        "get_uuid": {
            "name": "get_uuid",
            "location": 89,
            "return": [
                "uuid.UUID"
            ],
            "arguments": {}
        }
    },
    "cassiny-spawner-master/utils/server.py": {
        "WebView.config": {
            "name": "config",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebView.db": {
            "name": "db",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "cassiny-spawner-master/utils/__init__.py": {}
}
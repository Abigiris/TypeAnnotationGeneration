{
    "catalog-master/catalogclient/client.py": {
        "_main": {
            "name": "_main",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ClientTransport.get_json": {
            "name": "get_json",
            "location": 17,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Optional[Mapping[str,str]]",
                    "Mapping",
                    "None"
                ]
            }
        },
        "RequestsTransport.get_json": {
            "name": "get_json",
            "location": 24,
            "return": [
                "Dict[Text,]",
                "str",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Dict[str,Union[str,int]]"
                ]
            }
        },
        "CatalogClient.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_url": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[Callable[[str],Any]]",
                    "Callable[str,Any]"
                ],
                "transport": [
                    "List[Tuple[int,int]]",
                    "str",
                    "List[tuple[Union[int,int]]]",
                    "int",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "CatalogClient.base_url": {
            "name": "base_url",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CatalogClient.get_items": {
            "name": "get_items",
            "location": 51,
            "return": [
                "Dict[str,str]",
                "str",
                "Dict[int,str]",
                "Pattern",
                "Exception",
                "Dict",
                "Dict[str,Any]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CatalogClient.get_item": {
            "name": "get_item",
            "location": 59,
            "return": [
                "None",
                "List",
                "Optional[Dict]",
                "bool",
                "Optional[Literal[only_clustered,include_clustered]]",
                "Optional[int]",
                "Optional[Dict[str,Any]]",
                "List[InlineContent]"
            ],
            "arguments": {
                "self": [],
                "sku": [
                    "str",
                    "Dict[str,Any]",
                    "Optional[int]",
                    "int",
                    "None"
                ]
            }
        },
        "CatalogClient.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "catalog-master/catalogclient/tests/client_test.py": {
        "ClientTestCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTestCase.test_get_items": {
            "name": "test_get_items",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTestCase.test_get_item": {
            "name": "test_get_item",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTestCase.test_get_no_item": {
            "name": "test_get_no_item",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockTransport.get_json": {
            "name": "get_json",
            "location": 33,
            "return": [
                "Union[(Dict[(str, Union[(int, str)])], List[Dict[(str, Union[(int, str)])]])]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "catalog-master/catalogserver/filedb.py": {
        "FileDB.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "FileDB.get_item": {
            "name": "get_item",
            "location": 22,
            "return": [
                "None",
                "Optional[str]",
                "str",
                "Optional[float]"
            ],
            "arguments": {
                "self": [],
                "sku": [
                    "int",
                    "Tuple[bytes]",
                    "Dict[str,Any]",
                    "str"
                ]
            }
        },
        "FileDB.get_items": {
            "name": "get_items",
            "location": 29,
            "return": [
                "str",
                "list",
                "Iterable[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDB.filename": {
            "name": "filename",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDB.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "catalog-master/catalogserver/server.py": {
        "get_items": {
            "name": "get_items",
            "location": 16,
            "return": [
                "HTTPResponse",
                "Sequence[str]",
                "Callable[[Dict],None]",
                "Dict[str,Any]",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "sku": [
                    "int",
                    "str"
                ]
            }
        },
        "initdb": {
            "name": "initdb",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "catalog_file": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "catalog-master/catalogserver/tests/filedb_test.py": {
        "FileDBTestCase.test_file_not_exists": {
            "name": "test_file_not_exists",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDBTestCase.test_empty": {
            "name": "test_empty",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDBTestCase.test_schema_version_items": {
            "name": "test_schema_version_items",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileDBTestCase.test_schema_version_item": {
            "name": "test_schema_version_item",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "catalog-master/catalogserver/tests/server_test.py": {
        "_parsed_json": {
            "name": "_parsed_json",
            "location": 28,
            "return": [
                "bool",
                "str",
                "Dict[Any,str]",
                "Dict",
                "OrderedDict",
                "Type",
                "Dict[int,str]"
            ],
            "arguments": {
                "resp": [
                    "Dict",
                    "Callable[,None]",
                    "Dict[str,Any]"
                ]
            }
        },
        "ServerTestCase.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerTestCase.test_get_items": {
            "name": "test_get_items",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerTestCase.test_get_item": {
            "name": "test_get_item",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerTestCase.test_get_none": {
            "name": "test_get_none",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
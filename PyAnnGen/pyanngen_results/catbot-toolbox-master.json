{
    "catbot-toolbox-master/tasks.py": {
        "list_intents": {
            "name": "list_intents",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "project": [
                    "typing.Text"
                ],
                "display_name_regex": [
                    "typing.Text"
                ]
            }
        },
        "get_intent": {
            "name": "get_intent",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "intent_id": [],
                "project": [
                    "typing.Text"
                ],
                "intent_view": []
            }
        },
        "delete_intents": {
            "name": "delete_intents",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "intent_id": [
                    "typing.Text"
                ],
                "display_name_regex": [
                    "typing.Text"
                ],
                "project": [
                    "typing.Text"
                ]
            }
        },
        "detect_intent": {
            "name": "detect_intent",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "text": [],
                "project": [
                    "typing.Text"
                ]
            }
        },
        "load_intents": {
            "name": "load_intents",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "file": [],
                "project": [
                    "typing.Text"
                ]
            }
        },
        "yaml2json": {
            "name": "yaml2json",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "file": []
            }
        },
        "json2yaml": {
            "name": "json2yaml",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "file": []
            }
        },
        "coverage_report": {
            "name": "coverage_report",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "coverage_html": {
            "name": "coverage_html",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "unittest": {
            "name": "unittest",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "test": {
            "name": "test",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "isort": {
            "name": "isort",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "flake8": {
            "name": "flake8",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "mypy": {
            "name": "mypy",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "lint": {
            "name": "lint",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "radon_cc": {
            "name": "radon_cc",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "radon_mi": {
            "name": "radon_mi",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "xenon": {
            "name": "xenon",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "metrics": {
            "name": "metrics",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "ci": {
            "name": "ci",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "c": []
            }
        },
        "card_game_generate_trouble_yaml": {
            "name": "card_game_generate_trouble_yaml",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [],
                "suffix": [],
                "cat": [],
                "trouble": []
            }
        }
    },
    "catbot-toolbox-master/tests.py": {
        "IntentRepositoryTest.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntentRepositoryTest.assert_intent": {
            "name": "assert_intent",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_display_name": {
            "name": "assert_display_name",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_training_phrases": {
            "name": "assert_training_phrases",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_input_context_names": {
            "name": "assert_input_context_names",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_output_contexts": {
            "name": "assert_output_contexts",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_parameters": {
            "name": "assert_parameters",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_messages": {
            "name": "assert_messages",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_events": {
            "name": "assert_events",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_webhook_state": {
            "name": "assert_webhook_state",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.assert_more_question": {
            "name": "assert_more_question",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intent": [],
                "params": []
            }
        },
        "IntentRepositoryTest.test_create_and_update_intent": {
            "name": "test_create_and_update_intent",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntentRepositoryTest.test_upsert_intent": {
            "name": "test_upsert_intent",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntentRepositoryTest.test_create_which_has_more_question": {
            "name": "test_create_which_has_more_question",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntentRepositoryTest.test_load": {
            "name": "test_load",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntentRepositoryTest.test_resolve_all": {
            "name": "test_resolve_all",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "catbot-toolbox-master/catbot_toolbox/repositories.py": {
        "IntentRepository.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "project": [
                    "str"
                ],
                "platform": [
                    "int"
                ]
            }
        },
        "IntentRepository.parse_intent_name": {
            "name": "parse_intent_name",
            "location": 74,
            "return": [
                "Tuple[(Optional[str], Optional[str])]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "IntentRepository.build_training_phrases": {
            "name": "build_training_phrases",
            "location": 81,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "training_phrases": [
                    "builtins.list[str]"
                ]
            }
        },
        "IntentRepository.build_input_context_names": {
            "name": "build_input_context_names",
            "location": 111,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "context_names": [
                    "builtins.list[str]"
                ]
            }
        },
        "IntentRepository.build_output_contexts": {
            "name": "build_output_contexts",
            "location": 123,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "contexts": [
                    "builtins.list[dict]"
                ]
            }
        },
        "IntentRepository.build_parameters": {
            "name": "build_parameters",
            "location": 138,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "parameters": [
                    "builtins.list[dict]"
                ]
            }
        },
        "IntentRepository.build_messages": {
            "name": "build_messages",
            "location": 152,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "payloads": [
                    "builtins.list[Union[(dict, str)]]"
                ]
            }
        },
        "IntentRepository.build_choice_buttons": {
            "name": "build_choice_buttons",
            "location": 186,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "dict"
                ]
            }
        },
        "IntentRepository.build_intent": {
            "name": "build_intent",
            "location": 200,
            "return": [
                "Intent"
            ],
            "arguments": {
                "self": [],
                "display_name": [
                    "str"
                ],
                "training_phrases": [
                    "Optional[builtins.list[str]]"
                ],
                "input_context_names": [
                    "Optional[builtins.list[str]]"
                ],
                "output_contexts": [
                    "Optional[builtins.list[dict]]"
                ],
                "parameters": [
                    "Optional[builtins.list[dict]]"
                ],
                "messages": [
                    "Optional[builtins.list[Union[(dict, str)]]]"
                ],
                "events": [
                    "Optional[builtins.list[str]]"
                ],
                "webhook_state": [
                    "Optional[str]"
                ],
                "is_fallback": [
                    "bool"
                ],
                "more_question": [
                    "bool"
                ]
            }
        },
        "IntentRepository.list": {
            "name": "list",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "intent_view": [
                    "int"
                ]
            }
        },
        "IntentRepository.list_all": {
            "name": "list_all",
            "location": 244,
            "return": [
                "builtins.list[dict]"
            ],
            "arguments": {
                "self": [],
                "intent_view": [
                    "int"
                ]
            }
        },
        "IntentRepository.find_by_display_name": {
            "name": "find_by_display_name",
            "location": 248,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": [],
                "display_name": [
                    "str"
                ],
                "intent_list": [
                    "Optional[builtins.list[dict]]"
                ]
            }
        },
        "IntentRepository.get": {
            "name": "get",
            "location": 265,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ],
                "intent_view": [
                    "int"
                ]
            }
        },
        "IntentRepository.create": {
            "name": "create",
            "location": 270,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "display_name": [
                    "str"
                ],
                "training_phrases": [
                    "Optional[builtins.list[str]]"
                ],
                "input_context_names": [
                    "Optional[builtins.list[str]]"
                ],
                "output_contexts": [
                    "Optional[builtins.list[dict]]"
                ],
                "parameters": [
                    "Optional[builtins.list[dict]]"
                ],
                "messages": [
                    "Optional[builtins.list[Union[(dict, str)]]]"
                ],
                "events": [
                    "Optional[builtins.list[str]]"
                ],
                "webhook_state": [
                    "Optional[str]"
                ],
                "is_fallback": [
                    "bool"
                ],
                "more_question": [
                    "bool"
                ],
                "intent_view": [
                    "int"
                ]
            }
        },
        "IntentRepository.update": {
            "name": "update",
            "location": 300,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ],
                "display_name": [
                    "str"
                ],
                "training_phrases": [
                    "Optional[builtins.list[str]]"
                ],
                "input_context_names": [
                    "Optional[builtins.list[str]]"
                ],
                "output_contexts": [
                    "Optional[builtins.list[dict]]"
                ],
                "parameters": [
                    "Optional[builtins.list[dict]]"
                ],
                "messages": [
                    "Optional[builtins.list[Union[(dict, str)]]]"
                ],
                "events": [
                    "Optional[builtins.list[str]]"
                ],
                "webhook_state": [
                    "Optional[str]"
                ],
                "is_fallback": [
                    "bool"
                ],
                "more_question": [
                    "bool"
                ],
                "intent_view": [
                    "int"
                ]
            }
        },
        "IntentRepository.upsert": {
            "name": "upsert",
            "location": 331,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "display_name": [
                    "str"
                ],
                "training_phrases": [
                    "Optional[builtins.list[str]]"
                ],
                "input_context_names": [
                    "Optional[builtins.list[str]]"
                ],
                "output_contexts": [
                    "Optional[builtins.list[dict]]"
                ],
                "parameters": [
                    "Optional[builtins.list[dict]]"
                ],
                "messages": [
                    "Optional[builtins.list[Union[(dict, str)]]]"
                ],
                "events": [
                    "Optional[builtins.list[str]]"
                ],
                "webhook_state": [
                    "Optional[str]"
                ],
                "is_fallback": [
                    "bool"
                ],
                "more_question": [
                    "bool"
                ],
                "intent_view": [
                    "int"
                ],
                "intent_list": [
                    "Optional[builtins.list[dict]]"
                ]
            }
        },
        "IntentRepository.load": {
            "name": "load",
            "location": 375,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "str"
                ]
            }
        },
        "IntentRepository.delete": {
            "name": "delete",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "IntentRepository.resolve_all": {
            "name": "resolve_all",
            "location": 397,
            "return": [
                "builtins.list"
            ],
            "arguments": {
                "self": [],
                "intents": [
                    "builtins.list[dict]"
                ],
                "intent_list": [
                    "Optional[builtins.list[dict]]"
                ]
            }
        },
        "IntentRepository.resolve": {
            "name": "resolve",
            "location": 403,
            "return": [
                "Union[(dict, builtins.list, str)]"
            ],
            "arguments": {
                "self": [],
                "branch": [
                    "Union[(dict, builtins.list, str)]"
                ],
                "intent_list": [
                    "builtins.list[dict]"
                ]
            }
        },
        "IntentRepository.resolve_path": {
            "name": "resolve_path",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ],
                "intent_list": [
                    "builtins.list[dict]"
                ]
            }
        },
        "IntentRepository.resolve_path.traverse": {
            "name": "traverse",
            "location": 419,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [],
                "_keys": []
            }
        }
    },
    "catbot-toolbox-master/catbot_toolbox/__init__.py": {}
}
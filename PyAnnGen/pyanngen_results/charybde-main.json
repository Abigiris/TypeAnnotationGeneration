{
    "charybde-main/analyze.py": {
        "touches": {
            "name": "touches",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "input_dataset": []
            }
        },
        "b": {
            "name": "b",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "input_dataset": []
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "charybde-main/charybde/dataset.py": {
        "_language_code": {
            "name": "_language_code",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathlib.Path"
                ]
            }
        },
        "parse_dumps": {
            "name": "parse_dumps",
            "location": 25,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "dump_paths": [
                    "str",
                    "Tuple[Union[str,...]]",
                    "Optional[Tuple[str,...]]",
                    "path.Path",
                    "Iterable[pathlib.Path]",
                    "pathlib.Path",
                    "Optional[Directory]",
                    "Optional[str]"
                ],
                "langs": [
                    "Tuple",
                    "Optional[Tuple[str,...]]",
                    "str",
                    "Union[str,pathlib.Path]",
                    "Dict",
                    "pathlib.Path",
                    "int",
                    "IO[Any]"
                ]
            }
        },
        "create_csv_dataset_from_dump": {
            "name": "create_csv_dataset_from_dump",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "dumps_folder_path": [
                    "str",
                    "pathlib.Path",
                    "Union[str,pathlib.Path]",
                    "pathlib.PurePath"
                ],
                "output_path": [
                    "str",
                    "pathlib.Path"
                ],
                "langs": [
                    "Optional[Tuple[str,...]]",
                    "Tuple[Union[str,g]]",
                    "str",
                    "bool",
                    "None",
                    "Optional[bool]"
                ],
                "dumps": [
                    "str",
                    "pathlib.Path",
                    "Union[str,pathlib.Path]",
                    "pathlib.PurePath"
                ]
            }
        }
    },
    "charybde-main/charybde/download.py": {
        "Downloader.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "output_dir": [
                    "str",
                    "bytes",
                    "pathlib.Path",
                    "Union[str,pathlib.Path]"
                ],
                "mirror": [
                    "Text",
                    "str",
                    "bool",
                    "Sequence[pathlib.Path]",
                    "pathlib.Path",
                    "TextIO",
                    "int",
                    "Dict[int,bool]"
                ]
            }
        },
        "Downloader.download_from_wiktionary_dump_folder": {
            "name": "download_from_wiktionary_dump_folder",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "Downloader.find_wiktionaries_folders": {
            "name": "find_wiktionaries_folders",
            "location": 65,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Downloader.download_all_wiktionaries": {
            "name": "download_all_wiktionaries",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Downloader._sha1sum": {
            "name": "_sha1sum",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Union[str,pathlib.Path]",
                    "List[str]",
                    "List[Tuple[int,int]]"
                ]
            }
        },
        "Downloader._create_pbar": {
            "name": "_create_pbar",
            "location": 107,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "name": [
                    "str",
                    "int"
                ],
                "size": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "charybde-main/charybde/utils.py": {
        "import_submodules": {
            "name": "import_submodules",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "package_name": [
                    "str",
                    "Set[str]"
                ]
            }
        }
    },
    "charybde-main/charybde/__init__.py": {},
    "charybde-main/charybde/__main__.py": {
        "create_parser": {
            "name": "create_parser",
            "location": 8,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "charybde-main/charybde/parsers/dump_parser.py": {
        "parse": {
            "name": "parse",
            "location": 10,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "dump": [
                    "str",
                    "Tuple",
                    "List[Tuple[float,str]]",
                    "List[tuple[Union[float,str]]]"
                ]
            }
        },
        "_parse_dump": {
            "name": "_parse_dump",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "dump": [
                    "str",
                    "float",
                    "int",
                    "pathlib.Path"
                ],
                "output_queue": [
                    "Dict[str, Any]",
                    "bytes",
                    "int"
                ],
                "filter_callable": [
                    "str",
                    "torch.multiprocessing.Queue"
                ]
            }
        },
        "parse.filter": {
            "name": "filter",
            "location": 21,
            "return": [
                "bool",
                "str",
                "bytes",
                "pathlib.Path"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path",
                    "Union[pathlib.Path, str]",
                    "path.Path",
                    "pathlib.PurePath"
                ],
                "item": [
                    "pathlib.Path",
                    "Union[pathlib.Path, str]",
                    "path.Path",
                    "pathlib.PurePath"
                ]
            }
        },
        "_parse_dump.handler": {
            "name": "handler",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathpy.core.path.Path.Collection",
                    "Optional[str]",
                    "Tuple[str]"
                ],
                "item": [
                    "str",
                    "Optional[str]",
                    "pathlib.Path",
                    "bool",
                    "norfs.fs.base.Path"
                ]
            }
        }
    },
    "charybde-main/charybde/parsers/en_parser.py": {
        "EnParser.parse": {
            "name": "parse",
            "location": 11,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "dump_path": [
                    "str",
                    "bool",
                    "pathlib.Path"
                ],
                "langs": [
                    "str",
                    "Tuple[Union[str,...]]",
                    "None",
                    "Optional[Tuple[str,...]]",
                    "path.Path",
                    "Iterable[pathlib.Path]",
                    "pathlib.Path",
                    "Optional[Directory]",
                    "Optional[str]"
                ]
            }
        }
    },
    "charybde-main/charybde/parsers/fr_parser.py": {
        "FrParser.parse": {
            "name": "parse",
            "location": 11,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "self": [],
                "dump_path": [],
                "langs": []
            }
        }
    },
    "charybde-main/charybde/parsers/parser.py": {
        "register_parser": {
            "name": "register_parser",
            "location": 56,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "language_code": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_parser": {
            "name": "get_parser",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "language_code": [
                    "str",
                    "Tuple[str]"
                ]
            }
        },
        "Parser.parse": {
            "name": "parse",
            "location": 11,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "dump_path": [
                    "str",
                    "Tuple[Union[str,...]]",
                    "None",
                    "Optional[Tuple[str,...]]",
                    "path.Path",
                    "Iterable[pathlib.Path]",
                    "pathlib.Path",
                    "Optional[Directory]",
                    "Optional[str]"
                ],
                "langs": [
                    "str",
                    "Tuple[Union[str,...]]",
                    "None",
                    "Optional[Tuple[str,...]]",
                    "path.Path",
                    "Iterable[pathlib.Path]",
                    "pathlib.Path",
                    "Optional[Directory]",
                    "Optional[str]"
                ]
            }
        },
        "Parser._compute_counts": {
            "name": "_compute_counts",
            "location": 27,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "pronounciation": [
                    "str",
                    "int",
                    "List[int]",
                    "List[float]"
                ]
            }
        },
        "Parser._create_progress_bar": {
            "name": "_create_progress_bar",
            "location": 39,
            "return": [
                "Callable",
                "dict",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "iterable": [
                    "str",
                    "Iterable",
                    "Callable",
                    "int"
                ],
                "language": [
                    "str",
                    "Iterable",
                    "Callable",
                    "int"
                ],
                "unit": [
                    "Text",
                    "str",
                    "Iterable",
                    "Callable",
                    "int"
                ]
            }
        },
        "register_parser.decorator": {
            "name": "decorator",
            "location": 67,
            "return": [],
            "arguments": {
                "parser": [
                    "str"
                ]
            }
        }
    },
    "charybde-main/charybde/parsers/__init__.py": {},
    "charybde-main/charybde/tests/test_dataset.py": {
        "small_fr_dataset_path": {
            "name": "small_fr_dataset_path",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_fr_parser_dump": {
            "name": "test_fr_parser_dump",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "small_fr_dataset_path": []
            }
        }
    },
    "charybde-main/charybde/tests/test_download.py": {
        "downloader": {
            "name": "downloader",
            "location": 10,
            "return": [
                "Iterator[charybde.download.Downloader]",
                "Generator[Downloader]"
            ],
            "arguments": {}
        },
        "test_find_wiktionaries_folders": {
            "name": "test_find_wiktionaries_folders",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "downloader": [
                    "str",
                    "int"
                ]
            }
        },
        "test_download_from_wiktionary_dump_folder": {
            "name": "test_download_from_wiktionary_dump_folder",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "downloader": [
                    "charybde.download.Downloader"
                ]
            }
        }
    },
    "charybde-main/charybde/tests/__init__.py": {},
    "charybde-main/doc/conf.py": {}
}
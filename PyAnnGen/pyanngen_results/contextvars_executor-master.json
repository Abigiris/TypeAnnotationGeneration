{
    "contextvars_executor-master/contextvars_executor.py": {
        "ContextVarExecutor.submit": {
            "name": "submit",
            "location": 11,
            "return": [
                "concurrent.futures._base.Future[nothing]"
            ],
            "arguments": {
                "self": [],
                "fn": [
                    "str",
                    "BaseException",
                    "Dict",
                    "Optional[cirq.SingleQubitGate]",
                    "None"
                ]
            }
        }
    },
    "contextvars_executor-master/example.py": {
        "thread": {
            "name": "thread",
            "location": 9,
            "return": [
                "bool",
                "List[str]",
                "Set[str]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        }
    },
    "contextvars_executor-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "read": {
            "name": "read",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "contextvars_executor-master/tests/conftest.py": {
        "event_loop": {
            "name": "event_loop",
            "location": 13,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "request": [
                    "str"
                ]
            }
        },
        "loop": {
            "name": "loop",
            "location": 30,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "event_loop": [
                    "dict",
                    "Optional[dict]",
                    "Optional[Dict[str, Any]]"
                ],
                "request": [
                    "dict"
                ]
            }
        },
        "executor": {
            "name": "executor",
            "location": 40,
            "return": [
                "typing.Generator[ContextVarExecutor]"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        }
    },
    "contextvars_executor-master/tests/test_asyncio.py": {
        "test_basic.sync": {
            "name": "sync",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_default_executor.sync": {
            "name": "sync",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_future.sync": {
            "name": "sync",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "test_args.sync": {
            "name": "sync",
            "location": 53,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "foo": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "contextvars_executor-master/tests/test_threads.py": {
        "test_basic": {
            "name": "test_basic",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "executor": [
                    "str",
                    "float"
                ]
            }
        },
        "test_kwargs": {
            "name": "test_kwargs",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "executor": [
                    "str",
                    "int",
                    "Type"
                ]
            }
        },
        "test_basic.sync": {
            "name": "sync",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_kwargs.sync": {
            "name": "sync",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    }
}
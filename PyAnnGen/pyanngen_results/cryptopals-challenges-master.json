{
    "cryptopals-challenges-master/challenge01.py": {
        "hex_to_base64": {
            "name": "hex_to_base64",
            "location": 4,
            "return": [
                "bytes"
            ],
            "arguments": {
                "hex_string": [
                    "str",
                    "bytes",
                    "int",
                    "Union[str,bytes]"
                ]
            }
        },
        "test_1": {
            "name": "test_1",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge02.py": {
        "test_2": {
            "name": "test_2",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge03.py": {
        "unscramble": {
            "name": "unscramble",
            "location": 81,
            "return": [
                "Tuple[(float, int, bytes)]"
            ],
            "arguments": {
                "encrypted_bytes": [
                    "bytes",
                    "bytearray",
                    "str",
                    "int",
                    "bool",
                    "Union[str,int,float]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge04.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge05.py": {
        "encrypt": {
            "name": "encrypt",
            "location": 4,
            "return": [
                "bytes"
            ],
            "arguments": {
                "plaintext": [
                    "int",
                    "bytes",
                    "str"
                ],
                "key": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge06.py": {
        "hamming_distance": {
            "name": "hamming_distance",
            "location": 9,
            "return": [
                "bool",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "first": [
                    "List[int]",
                    "List",
                    "bool",
                    "List[float]",
                    "str",
                    "int"
                ],
                "second": [
                    "List[int]",
                    "List",
                    "bool",
                    "List[float]",
                    "str",
                    "int"
                ]
            }
        },
        "test_hamming_distance": {
            "name": "test_hamming_distance",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_scored_keysizes": {
            "name": "get_scored_keysizes",
            "location": 39,
            "return": [
                "List[Tuple[(Any, int)]]"
            ],
            "arguments": {
                "cyphertext": [
                    "bytes",
                    "int",
                    "List[int]",
                    "List[List[int]]",
                    "List[list[int]]"
                ],
                "num_blocks": [
                    "int",
                    "Optional[int]"
                ]
            }
        },
        "transpose_blocks": {
            "name": "transpose_blocks",
            "location": 61,
            "return": [
                "List[bytes]"
            ],
            "arguments": {
                "cyphertext": [
                    "str"
                ],
                "keysize": [
                    "str",
                    "Optional[complex]",
                    "complex",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge07.py": {
        "encrypt_aes_ecb": {
            "name": "encrypt_aes_ecb",
            "location": 7,
            "return": [
                "bytes"
            ],
            "arguments": {
                "plaintext": [
                    "Dict",
                    "Dict[str,Any]",
                    "bytes",
                    "str"
                ],
                "key": [
                    "Optional[Any]",
                    "str",
                    "Any",
                    "float",
                    "None"
                ]
            }
        },
        "decrypt_aes_ecb": {
            "name": "decrypt_aes_ecb",
            "location": 15,
            "return": [
                "bytes"
            ],
            "arguments": {
                "ciphertext": [
                    "Dict",
                    "Dict[str,Any]",
                    "bytes",
                    "str"
                ],
                "key": [
                    "Optional[Any]",
                    "str",
                    "Any",
                    "float",
                    "None"
                ]
            }
        },
        "solve_openssl": {
            "name": "solve_openssl",
            "location": 23,
            "return": [
                "bytes"
            ],
            "arguments": {
                "ciphertext": [
                    "bytes",
                    "str",
                    "int",
                    "Iterator",
                    "T",
                    "Iterator[str]"
                ],
                "key": [
                    "bytes",
                    "str",
                    "int",
                    "Iterator",
                    "T",
                    "Iterator[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge08.py": {
        "count_identical_chunks": {
            "name": "count_identical_chunks",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {
                "ciphertext": [
                    "list",
                    "List[List[str]]",
                    "List[int]",
                    "int",
                    "List[str]"
                ],
                "aligned": [
                    "bool",
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge09.py": {
        "pkcs7_pad": {
            "name": "pkcs7_pad",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "plaintext": [
                    "int",
                    "Sequence[T]",
                    "Sized",
                    "List[str]",
                    "float",
                    "List[float]"
                ],
                "block_size": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge10.py": {
        "xor_bytes": {
            "name": "xor_bytes",
            "location": 7,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bytes1": [
                    "bytes",
                    "int",
                    "str"
                ],
                "bytes2": [
                    "bytes",
                    "int",
                    "str"
                ]
            }
        },
        "encrypt_aes_cbc": {
            "name": "encrypt_aes_cbc",
            "location": 12,
            "return": [
                "bytes"
            ],
            "arguments": {
                "plaintext": [
                    "Tuple[bool]",
                    "int",
                    "tuple",
                    "bytes",
                    "List[Tuple[int, int]]",
                    "list",
                    "Optional[int]"
                ],
                "key": [
                    "str",
                    "bytes",
                    "bool",
                    "Callable[[bytes],bytes]",
                    "Callable[bytes,bytes]"
                ],
                "iv": [
                    "bytes",
                    "bool",
                    "Tuple[Union[int,int]]",
                    "int",
                    "Tuple[int,int]"
                ]
            }
        },
        "decrypt_aes_cbc": {
            "name": "decrypt_aes_cbc",
            "location": 36,
            "return": [
                "bytes"
            ],
            "arguments": {
                "ciphertext": [
                    "Tuple[bool]",
                    "int",
                    "tuple",
                    "bytes",
                    "List[Tuple[int, int]]",
                    "list",
                    "Optional[int]"
                ],
                "key": [
                    "str",
                    "bytes",
                    "bool",
                    "Callable[[bytes],bytes]",
                    "Callable[bytes,bytes]"
                ],
                "iv": [
                    "bytes",
                    "str",
                    "int",
                    "Dict",
                    "List[Dict]",
                    "List[dict]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge11.py": {
        "generate_16_random_bytes": {
            "name": "generate_16_random_bytes",
            "location": 10,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "encryption_oracle": {
            "name": "encryption_oracle",
            "location": 14,
            "return": [
                "Tuple[(str, bytes)]"
            ],
            "arguments": {
                "plaintext": [
                    "str",
                    "Type",
                    "List[str]"
                ]
            }
        },
        "detect_mode": {
            "name": "detect_mode",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "ciphertext": [
                    "bool",
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge12.py": {
        "encryption_oracle": {
            "name": "encryption_oracle",
            "location": 11,
            "return": [
                "bytes"
            ],
            "arguments": {
                "plaintext": [
                    "str",
                    "Type",
                    "List[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge13.py": {
        "parse_querystring": {
            "name": "parse_querystring",
            "location": 8,
            "return": [
                "dict"
            ],
            "arguments": {
                "qs": [
                    "str"
                ]
            }
        },
        "profile_for": {
            "name": "profile_for",
            "location": 17,
            "return": [
                "Dict[(bytes, Any)]"
            ],
            "arguments": {
                "email": [
                    "str",
                    "Dict",
                    "List"
                ]
            }
        },
        "create_querystring": {
            "name": "create_querystring",
            "location": 29,
            "return": [
                "bytes"
            ],
            "arguments": {
                "json": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,Dict[str,str]]",
                    "Dict[str,dict[str,str]]"
                ]
            }
        },
        "profile_oracle": {
            "name": "profile_oracle",
            "location": 33,
            "return": [
                "bytes"
            ],
            "arguments": {
                "email": [
                    "bytes",
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "decrypt_oracle": {
            "name": "decrypt_oracle",
            "location": 37,
            "return": [
                "bytes"
            ],
            "arguments": {
                "ciphertext": [
                    "bytes",
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge14.py": {
        "encryption_oracle": {
            "name": "encryption_oracle",
            "location": 18,
            "return": [
                "bytes"
            ],
            "arguments": {
                "plaintext": [
                    "str",
                    "Type",
                    "List[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cryptopals-challenges-master/challenge15.py": {
        "main": {
            "name": "main",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "strip_pkcs7_padding": {
            "name": "strip_pkcs7_padding",
            "location": 39,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "plaintext": [
                    "int",
                    "bool",
                    "Tuple[int, int, int, int]"
                ]
            }
        }
    },
    "cryptopals-challenges-master/challenge16.py": {
        "cbc_oracle": {
            "name": "cbc_oracle",
            "location": 16,
            "return": [
                "bytes"
            ],
            "arguments": {
                "plaintext": [
                    "str",
                    "float"
                ]
            }
        },
        "decrypt_oracle": {
            "name": "decrypt_oracle",
            "location": 23,
            "return": [
                "bytes"
            ],
            "arguments": {
                "ciphertext": [
                    "str",
                    "bytes",
                    "bytearray"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
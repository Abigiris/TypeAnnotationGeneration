{
    "cryptopals-master/s1c1.py": {
        "hex_to_64": {
            "name": "hex_to_64",
            "location": 4,
            "return": [
                "bytes"
            ],
            "arguments": {
                "value": [
                    "int",
                    "float",
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "cryptopals-master/s1c2.py": {
        "xor": {
            "name": "xor",
            "location": 4,
            "return": [
                "bytes"
            ],
            "arguments": {
                "b1": [
                    "int",
                    "float",
                    "str"
                ],
                "b2": [
                    "int",
                    "float",
                    "str"
                ]
            }
        }
    },
    "cryptopals-master/s1c3.py": {
        "single_character_xor": {
            "name": "single_character_xor",
            "location": 36,
            "return": [
                "bytes"
            ],
            "arguments": {
                "b": [
                    "int",
                    "float",
                    "bool"
                ],
                "i": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "like_english_score": {
            "name": "like_english_score",
            "location": 41,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "b": [
                    "bytes",
                    "Optional[bool]",
                    "int",
                    "bool"
                ]
            }
        },
        "find_single_character_decryption_key": {
            "name": "find_single_character_decryption_key",
            "location": 75,
            "return": [
                "Tuple[(bytes, bytes, Any)]"
            ],
            "arguments": {
                "b": [
                    "bool"
                ]
            }
        }
    },
    "cryptopals-master/s1c4.py": {
        "set_1_challenge_4": {
            "name": "set_1_challenge_4",
            "location": 6,
            "return": [
                "str",
                "List[Tuple[str, str]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        }
    },
    "cryptopals-master/s1c5.py": {
        "repeating_key_xor": {
            "name": "repeating_key_xor",
            "location": 1,
            "return": [
                "bytes"
            ],
            "arguments": {
                "value": [
                    "str",
                    "bytes",
                    "int",
                    "Union[int,float,str]",
                    "Sequence"
                ],
                "key": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "cryptopals-master/s1c6.py": {
        "hamming_distance": {
            "name": "hamming_distance",
            "location": 12,
            "return": [
                "int"
            ],
            "arguments": {
                "b1": [
                    "int",
                    "str",
                    "bytes"
                ],
                "b2": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "bytes_to_blocks": {
            "name": "bytes_to_blocks",
            "location": 26,
            "return": [
                "list"
            ],
            "arguments": {
                "n": [
                    "int",
                    "bytes",
                    "str",
                    "Dict",
                    "bytearray"
                ],
                "body": [
                    "bytes",
                    "int",
                    "str",
                    "Dict",
                    "bytearray"
                ]
            }
        },
        "likely_keysizes": {
            "name": "likely_keysizes",
            "location": 40,
            "return": [
                "List[Tuple[(int, float)]]"
            ],
            "arguments": {
                "body": [
                    "int",
                    "str",
                    "bool"
                ],
                "min_key_size": [
                    "int",
                    "Optional[Callable]",
                    "bytes",
                    "str",
                    "AnyStr",
                    "Optional[str]"
                ],
                "max_key_size": [
                    "int",
                    "Optional[Callable]",
                    "bytes",
                    "str",
                    "AnyStr",
                    "Optional[str]"
                ]
            }
        },
        "decrypt_by_repeating_key_with_size": {
            "name": "decrypt_by_repeating_key_with_size",
            "location": 83,
            "return": [
                "Tuple[(bytes, bytes)]"
            ],
            "arguments": {
                "body": [
                    "int",
                    "str",
                    "List[int]",
                    "bytes"
                ],
                "size": [
                    "int",
                    "str",
                    "List[int]",
                    "bytes"
                ]
            }
        },
        "decrypt_by_repeating_key": {
            "name": "decrypt_by_repeating_key",
            "location": 116,
            "return": [
                "Tuple[(bytes, bytes)]"
            ],
            "arguments": {
                "body": [
                    "bytes",
                    "memoryview"
                ]
            }
        }
    },
    "cryptopals-master/s1c7.py": {
        "decrypt_aes_ecb": {
            "name": "decrypt_aes_ecb",
            "location": 4,
            "return": [
                "str",
                "Union[str, List[str]]",
                "Iterable[int]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Iterator[str]",
                    "Iterator",
                    "Optional[int]",
                    "int",
                    "None"
                ],
                "body": [
                    "bytes",
                    "int",
                    "str",
                    "List[tuple[Union[int,int]]]",
                    "List[Tuple[int,int]]",
                    "bool"
                ]
            }
        }
    },
    "cryptopals-master/s1c8.py": {
        "same_blocks": {
            "name": "same_blocks",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "text": [
                    "str",
                    "bytes",
                    "Dict",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "set_1_challenge_8": {
            "name": "set_1_challenge_8",
            "location": 18,
            "return": [
                "List[Tuple[(int, str)]]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        }
    },
    "cryptopals-master/s1_tests.py": {
        "CryptoPalsTestCase.test_hex_to_64": {
            "name": "test_hex_to_64",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_xor": {
            "name": "test_xor",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_english_like": {
            "name": "test_english_like",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_single_character_decryption": {
            "name": "test_single_character_decryption",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_set_1_challenge_4": {
            "name": "test_set_1_challenge_4",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_repeating_key_xor": {
            "name": "test_repeating_key_xor",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_hamming_distance": {
            "name": "test_hamming_distance",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_likely_key_sizes": {
            "name": "test_likely_key_sizes",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_s1c6": {
            "name": "test_s1c6",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_s1c7": {
            "name": "test_s1c7",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CryptoPalsTestCase.test_s1c8": {
            "name": "test_s1c8",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cryptopals-master/s2c9.py": {
        "pkcs_pad": {
            "name": "pkcs_pad",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "target_length": [
                    "int",
                    "str",
                    "Optional[str]",
                    "List[str]"
                ],
                "text": [
                    "bytes",
                    "str",
                    "int",
                    "List[Tuple[str, Any]]",
                    "Tuple[str, str, int]"
                ]
            }
        }
    },
    "cryptopals-master/s2_tests.py": {
        "CryptoPalsTestCase.test_s2c9": {
            "name": "test_s2c9",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cryptopals-master/__init__.py": {}
}
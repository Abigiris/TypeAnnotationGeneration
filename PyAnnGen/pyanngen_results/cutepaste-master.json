{
    "cutepaste-master/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        }
    },
    "cutepaste-master/manage.py": {},
    "cutepaste-master/cutepaste/middleware.py": {
        "ExceptionMapperMiddleware.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": [
                    "dict",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "ExceptionMapperMiddleware.__call__": {
            "name": "__call__",
            "location": 10,
            "return": [
                "str",
                "float",
                "bool",
                "List[float]",
                "Sequence",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ExceptionMapperMiddleware.process_exception": {
            "name": "process_exception",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ],
                "exception": [
                    "Exception"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/urls.py": {},
    "cutepaste-master/cutepaste/util.py": {
        "render_response": {
            "name": "render_response",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "response": [
                    "str",
                    "django.http.HttpResponse",
                    "scrapy.http.TextResponse",
                    "purplship.providers.dhl.utils.Settings",
                    "purplship.core.utils.Element"
                ]
            }
        },
        "ajax_redirect": {
            "name": "ajax_redirect",
            "location": 9,
            "return": [
                "JsonResponse",
                "str",
                "List[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/wsgi.py": {},
    "cutepaste-master/cutepaste/__init__.py": {},
    "cutepaste-master/cutepaste/files/components.py": {
        "confirm_trash": {
            "name": "confirm_trash",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "browser": {
            "name": "browser",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "files": [
                    "List[cutepaste.files.models.File]"
                ],
                "directory": [
                    "str"
                ],
                "clipboard_files": [
                    "List[str]"
                ],
                "selection_status": [
                    "str"
                ]
            }
        },
        "_get_all_parent_paths": {
            "name": "_get_all_parent_paths",
            "location": 29,
            "return": [
                "Iterator[Tuple[(str, str)]]"
            ],
            "arguments": {
                "start_path": [
                    "str"
                ]
            }
        },
        "filelist": {
            "name": "filelist",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "files": [
                    "List[cutepaste.files.models.File]"
                ],
                "directory": [
                    "str"
                ],
                "clipboard_files": [
                    "List[str]"
                ]
            }
        },
        "buttons": {
            "name": "buttons",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "directory": [
                    "str"
                ],
                "clipboard_files": [
                    "List[str]"
                ],
                "selection_status": [
                    "str"
                ]
            }
        },
        "edit_form": {
            "name": "edit_form",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "form": [
                    "cutepaste.files.forms.FilesEditForm"
                ],
                "directory": [
                    "str"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/files/forms.py": {
        "FilesEditForm.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cutepaste-master/cutepaste/files/models.py": {
        "File.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "absolute_path": [
                    "str"
                ],
                "relative_path": [
                    "str"
                ]
            }
        },
        "File.is_file": {
            "name": "is_file",
            "location": 10,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "File.is_dir": {
            "name": "is_dir",
            "location": 14,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "File.name": {
            "name": "name",
            "location": 18,
            "return": [
                "str",
                "cerulean.path.AbstractPath"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cutepaste-master/cutepaste/files/service.py": {
        "_relative_path": {
            "name": "_relative_path",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "_absolute_path": {
            "name": "_absolute_path",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "_sort_files": {
            "name": "_sort_files",
            "location": 26,
            "return": [
                "List[cutepaste.files.models.File]"
            ],
            "arguments": {
                "files": [
                    "List[cutepaste.files.models.File]"
                ]
            }
        },
        "ls": {
            "name": "ls",
            "location": 30,
            "return": [
                "List[cutepaste.files.models.File]"
            ],
            "arguments": {
                "files_path": [
                    "str"
                ]
            }
        },
        "stat": {
            "name": "stat",
            "location": 43,
            "return": [
                "cutepaste.files.models.File"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "_perfom_fs_operation": {
            "name": "_perfom_fs_operation",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "operation": [
                    "Callable[([str, str], Any)]"
                ],
                "source_files": [
                    "List[str]"
                ],
                "destination_path": [
                    "str"
                ]
            }
        },
        "move": {
            "name": "move",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "source_files": [
                    "List[str]"
                ],
                "destination_path": [
                    "str"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "source_file": [
                    "str"
                ],
                "destination_file": [
                    "str"
                ]
            }
        },
        "copy": {
            "name": "copy",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "source_files": [
                    "List[str]"
                ],
                "destination_path": [
                    "str"
                ]
            }
        },
        "remove": {
            "name": "remove",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "source_files": [
                    "List[str]"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/files/urls.py": {},
    "cutepaste-master/cutepaste/files/views.py": {
        "ls": {
            "name": "ls",
            "location": 23,
            "return": [
                "HttpResponse",
                "bytes",
                "Tuple[Any, int]",
                "List[str]",
                "str",
                "werkzeug.Response"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ],
                "directory": [
                    "str"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 43,
            "return": [
                "bool",
                "str",
                "IO[bytes]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "rest_framework.requesRequest",
                    "apistar.http.RequestData"
                ],
                "directory": [
                    "str"
                ]
            }
        },
        "rename": {
            "name": "rename",
            "location": 57,
            "return": [
                "JsonResponse",
                "int",
                "dict"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "copy": {
            "name": "copy",
            "location": 81,
            "return": [
                "Response",
                "bytes",
                "dict",
                "flask.Response"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "cut": {
            "name": "cut",
            "location": 101,
            "return": [
                "Response",
                "bytes",
                "dict",
                "flask.Response"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "select": {
            "name": "select",
            "location": 122,
            "return": [
                "Response",
                "bytes",
                "dict",
                "flask.Response"
            ],
            "arguments": {
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "rest_framework.requesRequest",
                    "django.http.requesHttpRequest",
                    "dict"
                ]
            }
        },
        "confirm_trash": {
            "name": "confirm_trash",
            "location": 139,
            "return": [
                "Response",
                "bytes",
                "dict",
                "flask.Response"
            ],
            "arguments": {
                "request": [
                    "bool",
                    "rest_framework.requesRequest"
                ]
            }
        },
        "paste": {
            "name": "paste",
            "location": 148,
            "return": [
                "HttpResponseBadRequest",
                "str",
                "Optional[str]",
                "Dict[str, Any]",
                "guillotina.response.Response",
                "Iterable[Tuple[str, int]]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "trash": {
            "name": "trash",
            "location": 166,
            "return": [
                "HttpResponseBadRequest",
                "str",
                "Optional[str]",
                "guillotina.response.Response",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/files/__init__.py": {},
    "cutepaste-master/cutepaste/files/tests/forms_test.py": {
        "fixture_valid_form": {
            "name": "fixture_valid_form",
            "location": 9,
            "return": [
                "FilesEditForm",
                "str",
                "dict",
                "Dict[str, List[Any]]",
                "Optional[Exception]"
            ],
            "arguments": {}
        },
        "test_valid_form": {
            "name": "test_valid_form",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "valid_form": [
                    "str",
                    "list[int]",
                    "List[int]",
                    "list[str]",
                    "Iterable[str]",
                    "List[str]"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/files/tests/models_test.py": {
        "fixture_file": {
            "name": "fixture_file",
            "location": 9,
            "return": [
                "File",
                "Dict[str, Any]",
                "str",
                "tests.models.Customer"
            ],
            "arguments": {}
        },
        "test_file_paths": {
            "name": "test_file_paths",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "TextIO",
                    "typing.TextIO"
                ]
            }
        },
        "test_file": {
            "name": "test_file",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "List[str]",
                    "list[str]"
                ],
                "mocker": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/files/tests/service_test.py": {
        "test_stat": {
            "name": "test_stat",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ls": {
            "name": "test_ls",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [
                    "core_lib.core.models.Venue"
                ],
                "settings": [
                    "str"
                ]
            }
        },
        "test_ls_with_absolute_dir": {
            "name": "test_ls_with_absolute_dir",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_move": {
            "name": "test_move",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str"
                ]
            }
        },
        "test_move_absolute_dir": {
            "name": "test_move_absolute_dir",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_rename": {
            "name": "test_rename",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str"
                ]
            }
        },
        "test_rename_absolute": {
            "name": "test_rename_absolute",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_copy": {
            "name": "test_copy",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str"
                ]
            }
        },
        "test_copy_absolute": {
            "name": "test_copy_absolute",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_remove_files": {
            "name": "test_remove_files",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [
                    "mock.MagicMock"
                ],
                "settings": [
                    "str"
                ]
            }
        },
        "test_remove_absolute": {
            "name": "test_remove_absolute",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_ls.list_of_files": {
            "name": "list_of_files",
            "location": 14,
            "return": [
                "list[typing.Text]",
                "str",
                "Tuple[str]",
                "BinaryIO"
            ],
            "arguments": {
                "path": [
                    "List[str]",
                    "Set[str]",
                    "Sequence",
                    "bool"
                ]
            }
        },
        "test_ls.is_file": {
            "name": "is_file",
            "location": 18,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "_": [
                    "str",
                    "int",
                    "Iterable[str]"
                ],
                "name": [
                    "str",
                    "Optional[int]",
                    "int",
                    "Optional[str]",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "test_ls_with_absolute_dir.ensure_listdir_inside_data_dir": {
            "name": "ensure_listdir_inside_data_dir",
            "location": 41,
            "return": [
                "list[]",
                "str",
                "bytes",
                "Dict[str, Any]",
                "IO",
                "Type[Any]"
            ],
            "arguments": {
                "path": [
                    "List[str]",
                    "bool",
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "test_remove_files.is_file_results": {
            "name": "is_file_results",
            "location": 109,
            "return": [
                "bool",
                "List[str]",
                "str",
                "Tuple[str]",
                "Set[str]"
            ],
            "arguments": {
                "path": [
                    "bool",
                    "str",
                    "Sequence[str]"
                ]
            }
        },
        "test_remove_files.is_dir_results": {
            "name": "is_dir_results",
            "location": 112,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[Tuple[object, object]]",
                    "bool"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/files/tests/views_test.py": {
        "test_ls_directory": {
            "name": "test_ls_directory",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "test_ls_file": {
            "name": "test_ls_file",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "test_ls_unicode_file": {
            "name": "test_ls_unicode_file",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "test_cut": {
            "name": "test_cut",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": []
            }
        },
        "test_copy": {
            "name": "test_copy",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": []
            }
        },
        "test_paste": {
            "name": "test_paste",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "test_trash": {
            "name": "test_trash",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "test_trash_get": {
            "name": "test_trash_get",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": []
            }
        },
        "test_edit": {
            "name": "test_edit",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "test_rename": {
            "name": "test_rename",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "rf": [],
                "mocker": []
            }
        },
        "FSEntryMock.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "is_file": [
                    "bool"
                ]
            }
        },
        "test_ls_file.stat_results": {
            "name": "stat_results",
            "location": 34,
            "return": [
                "FSEntryMock"
            ],
            "arguments": {
                "path": []
            }
        },
        "test_ls_unicode_file.stat_results": {
            "name": "stat_results",
            "location": 51,
            "return": [
                "FSEntryMock"
            ],
            "arguments": {
                "path": []
            }
        }
    },
    "cutepaste-master/cutepaste/files/tests/__init__.py": {},
    "cutepaste-master/cutepaste/settings/default.py": {},
    "cutepaste-master/cutepaste/settings/prod.py": {},
    "cutepaste-master/cutepaste/settings/test.py": {},
    "cutepaste-master/cutepaste/settings/__init__.py": {},
    "cutepaste-master/cutepaste/tests/browser_test.py": {
        "test_index": {
            "name": "test_index",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes"
                ],
                "webdriver": [
                    "str",
                    "tests.basilisp.helpers.CompileFn"
                ]
            }
        },
        "test_navigate_to_directory": {
            "name": "test_navigate_to_directory",
            "location": 22,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "selenium.webdriver.Chrome",
                    "str",
                    "bool"
                ]
            }
        },
        "test_breadcrumbs": {
            "name": "test_breadcrumbs",
            "location": 38,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes"
                ],
                "webdriver": [
                    "str",
                    "tests.basilisp.helpers.CompileFn"
                ]
            }
        },
        "test_breadcrumbs_in_subdirs": {
            "name": "test_breadcrumbs_in_subdirs",
            "location": 47,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "tests.basilisp.helpers.CompileFn",
                    "selenium.webdriver.Chrome"
                ]
            }
        },
        "test_remove_file": {
            "name": "test_remove_file",
            "location": 58,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "dict",
                    "str"
                ]
            }
        },
        "test_copy_paste_file": {
            "name": "test_copy_paste_file",
            "location": 85,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "dict",
                    "str"
                ]
            }
        },
        "test_cut_paste_file": {
            "name": "test_cut_paste_file",
            "location": 133,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "dict",
                    "str"
                ]
            }
        },
        "test_select_all_then_none": {
            "name": "test_select_all_then_none",
            "location": 181,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "tests.basilisp.helpers.CompileFn"
                ]
            }
        },
        "test_buttons_visibility_no_selection_no_clipboard": {
            "name": "test_buttons_visibility_no_selection_no_clipboard",
            "location": 202,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "str",
                    "tests.basilisp.helpers.CompileFn",
                    "selenium.webdriver.Chrome"
                ]
            }
        },
        "test_buttons_visibility_no_selection_with_clipboard": {
            "name": "test_buttons_visibility_no_selection_with_clipboard",
            "location": 214,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "selenium.webdriver.Chrome",
                    "bool"
                ]
            }
        },
        "test_buttons_visibility_with_selection_no_clipboard": {
            "name": "test_buttons_visibility_with_selection_no_clipboard",
            "location": 246,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes",
                    "tests.basilisp.helpers.CompileFn"
                ],
                "webdriver": [
                    "selenium.webdriver.Chrome",
                    "bool"
                ]
            }
        },
        "test_buttons_visibility_with_selection_with_clipboard": {
            "name": "test_buttons_visibility_with_selection_with_clipboard",
            "location": 269,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "live_server": [
                    "str",
                    "bytes"
                ],
                "webdriver": [
                    "bool",
                    "selenium.webdriver.Chrome",
                    "dict"
                ]
            }
        }
    },
    "cutepaste-master/cutepaste/tests/conftest.py": {
        "webdriver": {
            "name": "webdriver",
            "location": 14,
            "return": [
                "",
                "typing.Generator[Chrome]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "data_files": {
            "name": "data_files",
            "location": 41,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        }
    },
    "cutepaste-master/cutepaste/tests/linter_test.py": {
        "test_flake8_compliance": {
            "name": "test_flake8_compliance",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mypy_compliance": {
            "name": "test_mypy_compliance",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cutepaste-master/cutepaste/tests/marks.py": {},
    "cutepaste-master/cutepaste/tests/__init__.py": {}
}
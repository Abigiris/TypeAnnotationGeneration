{
    "dataset-utils-master/setup.py": {},
    "dataset-utils-master/simple.py": {},
    "dataset-utils-master/datasetutils/datasets.py": {
        "Box.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "minx": [
                    "int",
                    "Dict[str,Any]",
                    "float",
                    "str",
                    "bool"
                ],
                "miny": [
                    "int",
                    "Dict[str,Any]",
                    "float",
                    "str",
                    "bool"
                ],
                "width": [
                    "int",
                    "Dict[str,Any]",
                    "float",
                    "str",
                    "bool"
                ],
                "height": [
                    "int",
                    "Dict[str,Any]",
                    "float",
                    "str",
                    "bool"
                ]
            }
        },
        "Box.__iter__": {
            "name": "__iter__",
            "location": 22,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Box.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MixedObject.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "str",
                    "Callable",
                    "float",
                    "bool",
                    "docker_push_latest_if_changed.Image",
                    "int"
                ],
                "box": [
                    "str",
                    "Callable",
                    "float",
                    "bool",
                    "docker_push_latest_if_changed.Image",
                    "int"
                ]
            }
        },
        "MixedObject.image": {
            "name": "image",
            "location": 39,
            "return": [
                "str",
                "int",
                "bool",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MixedObject.box": {
            "name": "box",
            "location": 43,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MixedObject.__iter__": {
            "name": "__iter__",
            "location": 46,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MixInDataset.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "str"
                ],
                "mixing": [
                    "str",
                    "bool",
                    "None",
                    "bytes",
                    "Optional[str]",
                    "int"
                ],
                "to_mix_with": [
                    "str",
                    "bool",
                    "None",
                    "bytes",
                    "Optional[str]",
                    "int"
                ],
                "logger": [
                    "str",
                    "None",
                    "bool",
                    "logging.Logger",
                    "Optional[str]",
                    "T"
                ]
            }
        },
        "MixInDataset.mix": {
            "name": "mix",
            "location": 85,
            "return": [
                "Generator[(MixedObject, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "mixing_samples": [
                    "int"
                ],
                "to_mix_with_samples": [
                    "int"
                ]
            }
        },
        "MixInDataset.paste_as": {
            "name": "paste_as",
            "location": 119,
            "return": [
                "MixInDataset"
            ],
            "arguments": {
                "self": [
                    "_TMixInDataset@@MixInDataset@@"
                ],
                "pasting_rule": [
                    "Tuple",
                    "float",
                    "Tuple[str,str,str]",
                    "Tuple[Union[str,str,str]]"
                ]
            }
        },
        "MixInDataset.add_mutation_mixing": {
            "name": "add_mutation_mixing",
            "location": 123,
            "return": [
                "MixInDataset"
            ],
            "arguments": {
                "self": [
                    "_TMixInDataset@@MixInDataset@@"
                ],
                "mutation_processor": [
                    "Callable[,None]",
                    "str",
                    "List",
                    "Tuple"
                ]
            }
        },
        "MixInDataset.add_mutation_to_mix_with": {
            "name": "add_mutation_to_mix_with",
            "location": 127,
            "return": [
                "MixInDataset"
            ],
            "arguments": {
                "self": [
                    "_TMixInDataset@@MixInDataset@@"
                ],
                "mutation_processor": [
                    "str",
                    "List",
                    "Callable[,None]"
                ]
            }
        }
    },
    "dataset-utils-master/datasetutils/mutations.py": {
        "MutationProcessor.mutate": {
            "name": "mutate",
            "location": 9,
            "return": [
                "PIL.Image.Image",
                "None"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "str",
                    "int",
                    "PIL.Image.Image",
                    "Tuple[Union[int,int,int]]",
                    "PIL.Image",
                    "Tuple[int,int,int]"
                ]
            }
        },
        "ResizeMutation.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "Tuple[int,int]",
                    "int",
                    "Tuple[Union[int,int]]",
                    "str",
                    "Tuple[int]",
                    "Any",
                    "Optional[Union[int,Any]]",
                    "None"
                ]
            }
        },
        "ResizeMutation.mutate": {
            "name": "mutate",
            "location": 16,
            "return": [
                "[[]]",
                "int",
                "PIL.Image.Image"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "PIL.Image.Image"
                ]
            }
        }
    },
    "dataset-utils-master/datasetutils/pasting.py": {
        "PastingRule.rule": {
            "name": "rule",
            "location": 10,
            "return": [
                "Tuple[int,int]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DefaultPastingRule.rule": {
            "name": "rule",
            "location": 14,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeftCornerPastingRule.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "left_corner": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "LeftCornerPastingRule.rule": {
            "name": "rule",
            "location": 21,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomPastingRule.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "limit": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "RandomPastingRule.rule": {
            "name": "rule",
            "location": 28,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dataset-utils-master/datasetutils/__init__.py": {}
}
{
    "dayone2md-master/dayone2md.py": {
        "_prepare_destination": {
            "name": "_prepare_destination",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "src": [
                    "pathlib.Path",
                    "IO[str]"
                ],
                "dest": [
                    "pathlib.Path",
                    "str",
                    "pathlib2.Path"
                ]
            }
        },
        "dayone2md": {
            "name": "dayone2md",
            "location": 112,
            "return": [],
            "arguments": {
                "jsonpath": [
                    "str",
                    "int",
                    "pathlib.Path",
                    "Optional[pathlib.Path]",
                    "Dict[str, Any]"
                ],
                "destination": [
                    "str",
                    "Sequence[str]",
                    "Union[str, pathlib.Path]"
                ],
                "overwrite": [
                    "List[str]",
                    "Mapping[str, Any]",
                    "str",
                    "Mapping[str, List[str]]",
                    "int",
                    "list"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "DayOneJsonReader.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "jsonpath": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "DayOneJsonReader.read": {
            "name": "read",
            "location": 19,
            "return": [
                "DayOneJsonReader"
            ],
            "arguments": {
                "self": [
                    "_TDayOneJsonReader@@DayOneJsonReader@@"
                ]
            }
        },
        "DayOneJsonReader.__call__": {
            "name": "__call__",
            "location": 28,
            "return": [
                "Callable",
                "pathlib.Path",
                "int",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "DayOneJsonReader.entries": {
            "name": "entries",
            "location": 35,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntryConverter.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entry": [
                    "Optional[int]",
                    "Optional[float]",
                    "Optional[str]",
                    "Optional[Callable]",
                    "Optional[Hashable]"
                ]
            }
        },
        "EntryConverter._creation_date": {
            "name": "_creation_date",
            "location": 48,
            "return": [
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntryConverter._format_metadata": {
            "name": "_format_metadata",
            "location": 52,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntryConverter._replace_image_urls": {
            "name": "_replace_image_urls",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntryConverter.to_markdown": {
            "name": "to_markdown",
            "location": 71,
            "return": [
                "Tuple[(Any, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MdWriter.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dest_dir": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "dict"
                ]
            }
        },
        "MdWriter.write": {
            "name": "write",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timestamp": [
                    "str",
                    "Callable[[pathlib.Path], str]"
                ],
                "content": [
                    "str",
                    "bytes"
                ],
                "force": [
                    "str",
                    "Tuple[str, str, str]",
                    "Mapping[str, str]"
                ]
            }
        }
    }
}
{
    "deluge-master/deluge/application.py": {
        "main": {
            "name": "main",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Vote.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "page": [
                    "int",
                    "bool",
                    "List[float]",
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "useful": [
                    "int",
                    "bool",
                    "List[float]",
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "fields": [
                    "int",
                    "str",
                    "List[str]"
                ],
                "ip": [
                    "Optional[str]",
                    "str",
                    "bytes",
                    "Optional[int]",
                    "None",
                    "int"
                ],
                "vote_id": [
                    "int",
                    "Optional[int]",
                    "None",
                    "str",
                    "Dict[cirq.Qid,str]",
                    "Optional[str]",
                    "Dict[str,str]",
                    "Optional[bool]"
                ]
            }
        },
        "Vote.parse": {
            "name": "parse",
            "location": 54,
            "return": [
                "Vote"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVote]"
                ],
                "request": [
                    "aiohttp.web.Request"
                ]
            }
        },
        "Vote.parse_qs": {
            "name": "parse_qs",
            "location": 83,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Dict[str,str]"
                ],
                "query_string": [
                    "str"
                ]
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection_uri": [
                    "str",
                    "bool",
                    "float",
                    "raiden.utils.Iterator[raiden.utils.Port]"
                ],
                "votesSizeBytes": [
                    "int",
                    "str",
                    "None",
                    "Optional[int]",
                    "bool"
                ]
            }
        },
        "Connection.vote": {
            "name": "vote",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vote": [
                    "str",
                    "Optional[str]",
                    "None",
                    "datetime.datetime"
                ]
            }
        },
        "Connection.vote_initial": {
            "name": "vote_initial",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vote": [
                    "Optional[str]",
                    "str",
                    "datetime.datetime",
                    "None"
                ]
            }
        },
        "Deluge.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int",
                    "pymongo.database.Database"
                ]
            }
        },
        "Deluge.application": {
            "name": "application",
            "location": 150,
            "return": [
                "MethodNotAllowed",
                "str",
                "Response",
                "Optional[str]",
                "BadRequest",
                "Dict",
                "Type"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "werkzeug.wrappers.Request"
                ]
            }
        },
        "Deluge.run": {
            "name": "run",
            "location": 176,
            "return": [
                "type",
                "Exception",
                "Awaitable"
            ],
            "arguments": {
                "cls": [
                    "TextIO",
                    "int",
                    "float"
                ]
            }
        }
    },
    "deluge-master/deluge/test_anonymize.py": {
        "test_ipv4": {
            "name": "test_ipv4",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ipv6": {
            "name": "test_ipv6",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "deluge-master/deluge/utils.py": {
        "anonymize_ip": {
            "name": "anonymize_ip",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {
                "ip": [
                    "str"
                ]
            }
        }
    },
    "deluge-master/deluge/__init__.py": {},
    "deluge-master/deluge/__main__.py": {}
}
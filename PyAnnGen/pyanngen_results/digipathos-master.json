{
    "digipathos-master/setup.py": {
        "read_file": {
            "name": "read_file",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "digipathos-master/digipathos/constants.py": {},
    "digipathos-master/digipathos/__init__.py": {},
    "digipathos-master/digipathos/__main__.py": {
        "run": {
            "name": "run",
            "location": 4,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "digipathos-master/digipathos/cli/browser.py": {
        "print_header": {
            "name": "print_header",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "init_interactive_mode": {
            "name": "init_interactive_mode",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "run_command_with_argument": {
            "name": "run_command_with_argument",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "command": [
                    "str",
                    "int",
                    "bool",
                    "list"
                ],
                "arg": [
                    "str",
                    "int",
                    "List",
                    "bool"
                ]
            }
        },
        "read_command": {
            "name": "read_command",
            "location": 48,
            "return": [
                "Union[(digipathos.cli.command.DownloadAllDatasets, digipathos.cli.command.DownloadAllDatasetsFromCrop, digipathos.cli.command.DownloadDataset, digipathos.cli.command.Exit, digipathos.cli.command.ListCrops, digipathos.cli.command.ListDatasets, digipathos.cli.command.ListDatasetsFromCrop)]"
            ],
            "arguments": {}
        }
    },
    "digipathos-master/digipathos/cli/command.py": {
        "cls": {
            "name": "cls",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "transpose_and_print": {
            "name": "transpose_and_print",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "List",
                    "List[Tuple[str,...]]",
                    "str",
                    "List[tuple[Union[str,...]]]",
                    "List[str]",
                    "List[Dict]",
                    "bytes",
                    "List[dict]"
                ]
            }
        },
        "get_commands": {
            "name": "get_commands",
            "location": 112,
            "return": [
                "Dict[(int, Union[(DownloadAllDatasets, DownloadAllDatasetsFromCrop, DownloadDataset, Exit, ListCrops, ListDatasets, ListDatasetsFromCrop)])]"
            ],
            "arguments": {
                "data_loader": [
                    "Dict",
                    "List",
                    "Dict[str,Any]",
                    "str"
                ]
            }
        },
        "Command.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "desc": [
                    "int",
                    "str",
                    "Callable",
                    "None",
                    "Optional[str]",
                    "Callable[...,None]",
                    "Optional[bool]"
                ],
                "command": [
                    "int",
                    "str",
                    "Callable",
                    "None",
                    "Optional[str]",
                    "Callable[...,None]",
                    "Optional[bool]"
                ],
                "lang": [
                    "int",
                    "str",
                    "Callable",
                    "None",
                    "Optional[str]",
                    "Callable[...,None]",
                    "Optional[bool]"
                ],
                "require_args": [
                    "bool",
                    "str",
                    "Sequence[Optional[Type]]"
                ],
                "args_description": [
                    "int",
                    "None",
                    "str",
                    "Callable",
                    "Optional[str]",
                    "Callable[...,None]",
                    "Optional[bool]"
                ],
                "arg_type": [
                    "str",
                    "int",
                    "bool",
                    "AsyncContextManager[None]",
                    "List[str]"
                ]
            }
        },
        "Command.execute": {
            "name": "execute",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.print_pretty": {
            "name": "print_pretty",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "List[digipathos.data.dataseDataset]",
                    "List[str]",
                    "float"
                ]
            }
        },
        "ListDatasets.print_pretty": {
            "name": "print_pretty",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "Dict[str,digipathos.data.dataseDataset]",
                    "Dict[str,float]",
                    "Dict",
                    "bytes",
                    "int"
                ]
            }
        },
        "ListCrops.print_pretty": {
            "name": "print_pretty",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "Dict[str,list[int]]",
                    "Dict[str,List[int]]",
                    "str",
                    "Dict[str,Any]",
                    "int",
                    "List[Dict]"
                ]
            }
        },
        "ListDatasetsFromCrop.print_pretty": {
            "name": "print_pretty",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "List[digipathos.data.dataseDataset]",
                    "List[str]",
                    "float"
                ]
            }
        },
        "DownloadDataset.print_pretty": {
            "name": "print_pretty",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "List[digipathos.data.dataseDataset]",
                    "List[str]",
                    "float"
                ]
            }
        },
        "DownloadAllDatasets.print_pretty": {
            "name": "print_pretty",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "List[digipathos.data.dataseDataset]",
                    "List[str]",
                    "float"
                ]
            }
        },
        "DownloadAllDatasetsFromCrop.print_pretty": {
            "name": "print_pretty",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "List[digipathos.data.dataseDataset]",
                    "List[str]",
                    "float"
                ]
            }
        },
        "Exit.print_pretty": {
            "name": "print_pretty",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command_response": [
                    "List[digipathos.data.dataseDataset]",
                    "List[str]",
                    "float"
                ]
            }
        }
    },
    "digipathos-master/digipathos/cli/__init__.py": {},
    "digipathos-master/digipathos/data/dataset.py": {
        "Dataset.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_name": [
                    "bool",
                    "str",
                    "List[str]",
                    "Optional[str]",
                    "None"
                ],
                "url": [
                    "str"
                ],
                "extension": [
                    "str",
                    "int",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "None",
                    "Mapping[str,Any]",
                    "Mapping"
                ],
                "size": [
                    "str",
                    "int",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "None",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        },
        "Dataset.make_from_json_dict": {
            "name": "make_from_json_dict",
            "location": 28,
            "return": [
                "Dataset"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDataset]"
                ],
                "item": [
                    "List",
                    "str",
                    "Dict",
                    "Tuple",
                    "Dict[str,object]"
                ]
            }
        },
        "Dataset.validate_language": {
            "name": "validate_language",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lang": [
                    "str",
                    "List[int]"
                ]
            }
        },
        "Dataset.get_crop_name": {
            "name": "get_crop_name",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "lang": [
                    "Text",
                    "int",
                    "Dict[str,Any]",
                    "str"
                ]
            }
        },
        "Dataset.get_disorder_name": {
            "name": "get_disorder_name",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "lang": [
                    "Text",
                    "int",
                    "Dict[str,Any]",
                    "str"
                ]
            }
        },
        "Dataset.find": {
            "name": "find",
            "location": 79,
            "return": [
                "None",
                "bool",
                "Optional[Sequence[str]]",
                "Optional[Callable]",
                "int",
                "Tuple"
            ],
            "arguments": {
                "self": [],
                "pattern": [
                    "str",
                    "int",
                    "bytes",
                    "Optional[dict]",
                    "Dict",
                    "List[Dict[str,str]]",
                    "None",
                    "List[dict[str,str]]"
                ],
                "contents": [
                    "str",
                    "int",
                    "bytes",
                    "Optional[dict]",
                    "Dict",
                    "List[Dict[str,str]]",
                    "None",
                    "List[dict[str,str]]"
                ],
                "index": [
                    "str",
                    "int",
                    "bytes",
                    "Optional[dict]",
                    "Dict",
                    "List[Dict[str,str]]",
                    "None",
                    "List[dict[str,str]]"
                ]
            }
        },
        "Dataset.get_id": {
            "name": "get_id",
            "location": 92,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "digipathos-master/digipathos/data/data_loader.py": {
        "DataLoader.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "artifacts_path": [
                    "Text",
                    "str",
                    "Iterable[str]"
                ],
                "lang": [
                    "Text",
                    "Dict",
                    "bool"
                ],
                "auto_fetch": [
                    "bool",
                    "str"
                ]
            }
        },
        "DataLoader.get_datasets": {
            "name": "get_datasets",
            "location": 34,
            "return": [
                "Dict[(int, digipathos.data.dataset.Dataset)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataLoader.get_crops": {
            "name": "get_crops",
            "location": 42,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataLoader.get_datasets_from_crop": {
            "name": "get_datasets_from_crop",
            "location": 49,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "crop_name": [
                    "str"
                ]
            }
        },
        "DataLoader.get_dataset": {
            "name": "get_dataset",
            "location": 58,
            "return": [
                "str",
                "Union[str, int]",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "dataset_id": [
                    "int",
                    "str"
                ]
            }
        },
        "DataLoader.download_dataset": {
            "name": "download_dataset",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataset_id": [
                    "str",
                    "int"
                ]
            }
        },
        "DataLoader.download_all_datasets": {
            "name": "download_all_datasets",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataLoader.download_datasets_from_crop": {
            "name": "download_datasets_from_crop",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "crop_name": [
                    "str",
                    "bool",
                    "Any",
                    "Optional[Union[Any,Any]]",
                    "None",
                    "int",
                    "Optional[int]"
                ]
            }
        }
    },
    "digipathos-master/digipathos/data/repository.py": {
        "DigipathosRepository.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lang": [
                    "Text",
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "DigipathosRepository.load_datasets": {
            "name": "load_datasets",
            "location": 19,
            "return": [
                "List[digipathos.data.dataset.Dataset]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DigipathosRepository.load_crops": {
            "name": "load_crops",
            "location": 22,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DigipathosRepository.load_items_from_crop": {
            "name": "load_items_from_crop",
            "location": 39,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "crop_name": [
                    "str",
                    "Set[str]"
                ]
            }
        },
        "DigipathosRepository.load_item": {
            "name": "load_item",
            "location": 51,
            "return": [
                "str",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "item_id": [
                    "int",
                    "str"
                ]
            }
        },
        "DigipathosRemoteApi.load_datasets": {
            "name": "load_datasets",
            "location": 61,
            "return": [
                "Dict[(int, digipathos.data.dataset.Dataset)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DigipathosRemoteApi.fetch_data_from_remote": {
            "name": "fetch_data_from_remote",
            "location": 75,
            "return": [
                "Dict[(int, digipathos.data.dataset.Dataset)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DigipathosMockedApi.load_datasets": {
            "name": "load_datasets",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "digipathos-master/digipathos/data/__init__.py": {},
    "digipathos-master/digipathos/utils/download_utils.py": {
        "download_dataset": {
            "name": "download_dataset",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "dataset": [
                    "str",
                    "bool",
                    "Union[os.PathLike,str]"
                ],
                "output_dir": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "verbose": [
                    "bool",
                    "str",
                    "Optional[bool]"
                ]
            }
        }
    },
    "digipathos-master/digipathos/utils/__init__.py": {},
    "digipathos-master/docs/conf.py": {},
    "digipathos-master/example/example.py": {},
    "digipathos-master/example/__init__.py": {},
    "digipathos-master/tests/test_cli.py": {
        "CliTests.test_invalid_command_throws_exception": {
            "name": "test_invalid_command_throws_exception",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_input": [
                    "mock.Mock"
                ]
            }
        }
    },
    "digipathos-master/tests/test_dataset.py": {
        "TestDataset.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_name_english": {
            "name": "test_name_english",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_name_portuguese": {
            "name": "test_name_portuguese",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_name_invalid_lang": {
            "name": "test_name_invalid_lang",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_disorder_invalid_lang": {
            "name": "test_disorder_invalid_lang",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_disorder_english": {
            "name": "test_disorder_english",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_disorder_portuguese": {
            "name": "test_disorder_portuguese",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_id": {
            "name": "test_id",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataset.test_init_from_json": {
            "name": "test_init_from_json",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "digipathos-master/tests/test_data_loader.py": {
        "TestDataLoader.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_load_items": {
            "name": "test_load_items",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_load_crops": {
            "name": "test_load_crops",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_load_datasets_from_crop": {
            "name": "test_load_datasets_from_crop",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_load_datasets_from_crop_invalid": {
            "name": "test_load_datasets_from_crop_invalid",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_get_dataset": {
            "name": "test_get_dataset",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_download_dataset": {
            "name": "test_download_dataset",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataLoader.test_download_datasets_from_crop": {
            "name": "test_download_datasets_from_crop",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "digipathos-master/tests/__init__.py": {}
}
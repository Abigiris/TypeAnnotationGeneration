{
    "dino-master/python/setup.py": {},
    "dino-master/python/dino/cli.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "graph": {
            "name": "graph",
            "location": 17,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "worker": {
            "name": "worker",
            "location": 27,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "num_workers": [
                    "int",
                    "Optional[int]",
                    "float",
                    "None",
                    "List[float]",
                    "list[float]"
                ]
            }
        },
        "worker.test": {
            "name": "test",
            "location": 36,
            "return": [
                "int",
                "str",
                "float"
            ],
            "arguments": {}
        }
    },
    "dino-master/python/dino/graph.py": {
        "topological": {
            "name": "topological",
            "location": 9,
            "return": [
                "collections.deque"
            ],
            "arguments": {
                "graph": [
                    "str",
                    "int",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "topological.dfs": {
            "name": "dfs",
            "location": 12,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "node": [
                    "bytes",
                    "str"
                ]
            }
        },
        "Graph.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graph.addVertex": {
            "name": "addVertex",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "function": [
                    "Callable"
                ]
            }
        },
        "Graph.removeVertex": {
            "name": "removeVertex",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Graph.removeVertices": {
            "name": "removeVertices",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graph.addEdge": {
            "name": "addEdge",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str"
                ],
                "dst": [
                    "str"
                ],
                "arg": [
                    "str"
                ]
            }
        },
        "Graph.removeEdge": {
            "name": "removeEdge",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str"
                ],
                "dst": [
                    "str"
                ]
            }
        },
        "Graph.checkVertex": {
            "name": "checkVertex",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Graph.getSources": {
            "name": "getSources",
            "location": 74,
            "return": [
                "Dict[(str, dino.vertex.Vertex)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graph.getSinks": {
            "name": "getSinks",
            "location": 87,
            "return": [
                "Dict[(str, dino.vertex.Vertex)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graph.getDependencies": {
            "name": "getDependencies",
            "location": 99,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "dst": [
                    "str"
                ]
            }
        },
        "Graph.getFulfilledArgs": {
            "name": "getFulfilledArgs",
            "location": 108,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "dst": [
                    "str"
                ]
            }
        },
        "Graph.getTopological": {
            "name": "getTopological",
            "location": 117,
            "return": [
                "List[dino.vertex.Vertex]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graph.run": {
            "name": "run",
            "location": 120,
            "return": [
                "dict[, ]",
                "str",
                "int",
                "Set[str]",
                "Mapping[str, int]",
                "bool",
                "\"Parameter\""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Graph.__str__": {
            "name": "__str__",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dino-master/python/dino/result.py": {
        "Result.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tid": [
                    "int"
                ],
                "data": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "bytes",
                    "dict",
                    "dict[, ]",
                    "Mapping",
                    "typing.Mapping",
                    "list",
                    "list[]"
                ]
            }
        }
    },
    "dino-master/python/dino/scheduler.py": {
        "Scheduler.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_workers": [
                    "int"
                ]
            }
        },
        "Scheduler.schedule": {
            "name": "schedule",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.start": {
            "name": "start",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.stop": {
            "name": "stop",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.handle_results": {
            "name": "handle_results",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dino-master/python/dino/task.py": {
        "Task.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "list[list[T]]"
                ]
            }
        }
    },
    "dino-master/python/dino/types.py": {},
    "dino-master/python/dino/vertex.py": {
        "Vertex.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "function": [
                    "Callable"
                ]
            }
        },
        "Vertex.run": {
            "name": "run",
            "location": 19,
            "return": [
                "str",
                "int",
                "Set[str]",
                "Mapping[str, int]",
                "bool",
                "\"Parameter\""
            ],
            "arguments": {
                "self": []
            }
        },
        "Vertex.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dino-master/python/dino/worker.py": {
        "Worker.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result_queue": [
                    "int",
                    "None",
                    "Optional[\"ShippingInfo\"]",
                    "str",
                    "Union[str, Iterable[str]]",
                    "typing.Iterable[str]",
                    "Optional[List[str]]",
                    "dict"
                ]
            }
        },
        "Worker.run": {
            "name": "run",
            "location": 20,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Worker.start": {
            "name": "start",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Worker.stop": {
            "name": "stop",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Worker.suspend": {
            "name": "suspend",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Worker.resume": {
            "name": "resume",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dino-master/python/dino/__init__.py": {},
    "dino-master/python/dino/examples/graph_simple.py": {
        "forwardMatrix": {
            "name": "forwardMatrix",
            "location": 4,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "mat": [
                    "np.ndarray"
                ]
            }
        },
        "createMatrix": {
            "name": "createMatrix",
            "location": 7,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "transposeMatrix": {
            "name": "transposeMatrix",
            "location": 10,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "mat": [
                    "np.ndarray"
                ]
            }
        },
        "multiplyMatrix": {
            "name": "multiplyMatrix",
            "location": 13,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "mat1": [
                    "np.ndarray"
                ],
                "mat2": [
                    "np.ndarray"
                ]
            }
        },
        "graph_simple": {
            "name": "graph_simple",
            "location": 16,
            "return": [
                "dino.graph.Graph"
            ],
            "arguments": {}
        }
    },
    "dino-master/python/dino/examples/__init__.py": {}
}
{
    "django-linters-talk-demo-master/ast_qs.py": {
        "QuerySetExprVisitor.visit_Expr": {
            "name": "visit_Expr",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "QuerySetClassDefVisitor.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "django-linters-talk-demo-master/ast_qs_inferred.py": {
        "QuerySetExprHandler.visit_expr": {
            "name": "visit_expr",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "astroid.nodes"
                ]
            }
        }
    },
    "django-linters-talk-demo-master/disobeying_guido_on_mypy.py": {
        "MyVisitor.visit_expression_stmt": {
            "name": "visit_expression_stmt",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "mypy.nodes.TypeApplication",
                    "mypy.nodes.UnaryExpr",
                    "mypy.nodes.BackquoteExpr",
                    "mypy.types.TupleType",
                    "mypy.nodes.RevealTypeExpr"
                ]
            }
        }
    },
    "django-linters-talk-demo-master/pylint_example.py": {
        "find_item": {
            "name": "find_item",
            "location": 3,
            "return": [
                "int"
            ],
            "arguments": {
                "item": [
                    "Callable",
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]"
                ],
                "item_list": [
                    "str",
                    "Dict[str,Optional[str]]",
                    "Dict[str,Union[str,None]]"
                ]
            }
        }
    },
    "django-linters-talk-demo-master/transform_qs.py": {
        "infer_queryset_return": {
            "name": "infer_queryset_return",
            "location": 7,
            "return": [
                "listiterator"
            ],
            "arguments": {
                "node": [
                    "Dict"
                ],
                "context": [
                    "Dict",
                    "None"
                ]
            }
        },
        "looks_like_queryset_method_call": {
            "name": "looks_like_queryset_method_call",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": [
                    "astroid.node_classes.NodeNG"
                ]
            }
        },
        "add_transforms": {
            "name": "add_transforms",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "manager": [
                    "Dict",
                    "float",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "django-linters-talk-demo-master/typed_qs.py": {
        "PersonQuerySet.authors": {
            "name": "authors",
            "location": 5,
            "return": [
                "bool",
                "Optional[str]",
                "dep_check.models.Rules",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PersonQuerySet.admin_authors": {
            "name": "admin_authors",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-linters-talk-demo-master/system-checks-example/manage.py": {},
    "django-linters-talk-demo-master/system-checks-example/app1/apps.py": {},
    "django-linters-talk-demo-master/system-checks-example/app1/models.py": {},
    "django-linters-talk-demo-master/system-checks-example/app1/urls.py": {},
    "django-linters-talk-demo-master/system-checks-example/app1/__init__.py": {},
    "django-linters-talk-demo-master/system-checks-example/app1/migrations/__init__.py": {},
    "django-linters-talk-demo-master/system-checks-example/app2/apps.py": {},
    "django-linters-talk-demo-master/system-checks-example/app2/urls.py": {},
    "django-linters-talk-demo-master/system-checks-example/app2/__init__.py": {},
    "django-linters-talk-demo-master/system-checks-example/example_project/settings.py": {},
    "django-linters-talk-demo-master/system-checks-example/example_project/urls.py": {},
    "django-linters-talk-demo-master/system-checks-example/example_project/wsgi.py": {},
    "django-linters-talk-demo-master/system-checks-example/example_project/__init__.py": {},
    "django-linters-talk-demo-master/system-checks-example/system_checks/apps.py": {
        "SystemChecksConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-linters-talk-demo-master/system-checks-example/system_checks/checks.py": {
        "example_check": {
            "name": "example_check",
            "location": 7,
            "return": [
                "List[Error]",
                "str",
                "int",
                "Set[str]"
            ],
            "arguments": {
                "app_configs": []
            }
        }
    },
    "django-linters-talk-demo-master/system-checks-example/system_checks/__init__.py": {}
}
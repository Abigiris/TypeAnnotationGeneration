{
    "django-read-only-admin-master/setup.py": {},
    "django-read-only-admin-master/read_only_admin/admin.py": {
        "ReadonlyChangeList.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "model": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_display": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_display_links": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_filter": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "date_hierarchy": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "search_fields": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_select_related": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_per_page": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_max_show_all": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "list_editable": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "model_admin": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "sortable_by": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ]
            }
        },
        "ReadonlyAdmin.get_changelist": {
            "name": "get_changelist",
            "location": 146,
            "return": [
                "Type[ReadonlyChangeList]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "ReadonlyAdmin.get_changelist_formset": {
            "name": "get_changelist_formset",
            "location": 161,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReadonlyAdmin.get_readonly_fields": {
            "name": "get_readonly_fields",
            "location": 204,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "ReadonlyAdmin.get_actions": {
            "name": "get_actions",
            "location": 248,
            "return": [
                "OrderedDict",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ReadonlyInline.has_add_permission": {
            "name": "has_add_permission",
            "location": 281,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None",
                    "str"
                ]
            }
        },
        "ReadonlyInline.has_delete_permission": {
            "name": "has_delete_permission",
            "location": 319,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "ReadonlyInline.get_readonly_fields": {
            "name": "get_readonly_fields",
            "location": 355,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None",
                    "dict[str, str]"
                ]
            }
        }
    },
    "django-read-only-admin-master/read_only_admin/apps.py": {},
    "django-read-only-admin-master/read_only_admin/conf.py": {},
    "django-read-only-admin-master/read_only_admin/models.py": {},
    "django-read-only-admin-master/read_only_admin/signals.py": {
        "add_readonly_permissions": {
            "name": "add_readonly_permissions",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "Dict[str,Any]",
                    "str",
                    "Dict",
                    "int",
                    "cmk.utils.type_defs.HostName",
                    "bool"
                ],
                "app_config": [
                    "Dict[str,Any]",
                    "str",
                    "Dict",
                    "int",
                    "cmk.utils.type_defs.HostName",
                    "bool"
                ],
                "verbosity": [
                    "int",
                    "Dict[str,Any]",
                    "str",
                    "Dict",
                    "cmk.utils.type_defs.HostName",
                    "bool"
                ],
                "interactive": [
                    "bool",
                    "Dict[str,Any]",
                    "str",
                    "Dict",
                    "cmk.utils.type_defs.HostName",
                    "int"
                ],
                "using": [
                    "Dict[str, Any]",
                    "str",
                    "dict",
                    "cmk.utils.type_defs.HostName",
                    "int",
                    "bool"
                ],
                "plan": [
                    "Dict[str,Any]",
                    "None",
                    "str",
                    "Dict",
                    "int",
                    "cmk.utils.type_defs.HostName",
                    "bool"
                ],
                "apps": [
                    "Dict[str,Any]",
                    "None",
                    "str",
                    "Dict",
                    "int",
                    "cmk.utils.type_defs.HostName",
                    "bool"
                ]
            }
        }
    },
    "django-read-only-admin-master/read_only_admin/utils.py": {
        "get_read_only_permission_codename": {
            "name": "get_read_only_permission_codename",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "model": [
                    "str",
                    "bool",
                    "IO[str]",
                    "IO"
                ]
            }
        },
        "get_read_only_permission_name": {
            "name": "get_read_only_permission_name",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "model": [
                    "str",
                    "Sequence[str]",
                    "Callable[[str],str]",
                    "Callable[str,str]",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        }
    },
    "django-read-only-admin-master/read_only_admin/__init__.py": {},
    "django-read-only-admin-master/read_only_admin/templatetags/read_only_admin_tags.py": {
        "unescape": {
            "name": "unescape",
            "location": 30,
            "return": [
                "str",
                "int",
                "Dict[str,Any]"
            ],
            "arguments": {
                "value": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "readonly_submit_row": {
            "name": "readonly_submit_row",
            "location": 48,
            "return": [
                "Dict[Text,bool]",
                "int",
                "str"
            ],
            "arguments": {
                "context": [
                    "cmk.utils.type_defs.HostName",
                    "Exception",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "django-read-only-admin-master/read_only_admin/templatetags/__init__.py": {},
    "django-read-only-admin-master/tests/settings.py": {},
    "django-read-only-admin-master/tests/test_admin.py": {
        "ReadonlyChangeListTest.setUpTestData": {
            "name": "setUpTestData",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "List[str]",
                    "Exception",
                    "bool",
                    "str"
                ]
            }
        },
        "ReadonlyChangeListTest.test__init__": {
            "name": "test__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.setUpTestData": {
            "name": "setUpTestData",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "List[str]",
                    "Exception",
                    "bool",
                    "str"
                ]
            }
        },
        "ReadonlyAdminTest.test_get_changelist": {
            "name": "test_get_changelist",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_changelist_formset": {
            "name": "test_get_changelist_formset",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_readonly_fields": {
            "name": "test_get_readonly_fields",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_actions": {
            "name": "test_get_actions",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_actions__without_empty_actions": {
            "name": "test_get_actions__without_empty_actions",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_readonly_fields__for_superuser": {
            "name": "test_get_readonly_fields__for_superuser",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_actions__for_superuser": {
            "name": "test_get_actions__for_superuser",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlyAdminTest.test_get_actions__without_empty_actions__for_superuser": {
            "name": "test_get_actions__without_empty_actions__for_superuser",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-read-only-admin-master/tests/test_signals.py": {
        "AddReadOnlyPermissionsSignalTest.test_add_readonly_permissions": {
            "name": "test_add_readonly_permissions",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AddReadOnlyPermissionsSignalTest.test_add_readonly_permissions__count": {
            "name": "test_add_readonly_permissions__count",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-read-only-admin-master/tests/test_utils.py": {
        "GetReadOnlyPermissionCodenameUtilTest.test_get_read_only_permission_codename": {
            "name": "test_get_read_only_permission_codename",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetReadOnlyPermissionCodenameUtilTest.test_get_read_only_permission_codename__without_prefix": {
            "name": "test_get_read_only_permission_codename__without_prefix",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetReadOnlyPermissionNameUtilTest.test_get_read_only_permission_name": {
            "name": "test_get_read_only_permission_name",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetReadOnlyPermissionNameUtilTest.test_get_read_only_permission_name__without_prefix": {
            "name": "test_get_read_only_permission_name__without_prefix",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-read-only-admin-master/tests/__init__.py": {},
    "django-read-only-admin-master/tests/templatetags/test_read_only_admin_tags.py": {
        "UnescapeTemplatetagTest.test_unescape": {
            "name": "test_unescape",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnescapeTemplatetagTest.test_unescape__single_quote": {
            "name": "test_unescape__single_quote",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnescapeTemplatetagTest.test_unescape__double_quote": {
            "name": "test_unescape__double_quote",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnescapeTemplatetagTest.test_unescape__less_than": {
            "name": "test_unescape__less_than",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnescapeTemplatetagTest.test_unescape__great_than": {
            "name": "test_unescape__great_than",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnescapeTemplatetagTest.test_unescape__ampersand": {
            "name": "test_unescape__ampersand",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlySubmitRowTemplatetagTest.setUpTestData": {
            "name": "setUpTestData",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "List[str]",
                    "Exception",
                    "bool",
                    "str"
                ]
            }
        },
        "ReadonlySubmitRowTemplatetagTest.test_readonly_submit_row__return_context": {
            "name": "test_readonly_submit_row__return_context",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlySubmitRowTemplatetagTest.test_readonly_submit_row": {
            "name": "test_readonly_submit_row",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlySubmitRowTemplatetagTest.test_readonly_submit_row__for_superuser": {
            "name": "test_readonly_submit_row__for_superuser",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlySubmitRowTemplatetagTest.test_readonly_submit_row__without__read_only_permissions": {
            "name": "test_readonly_submit_row__without__read_only_permissions",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReadonlySubmitRowTemplatetagTest.test_readonly_submit_row__without__read_only_permissions__for_superuser": {
            "name": "test_readonly_submit_row__without__read_only_permissions__for_superuser",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-read-only-admin-master/tests/templatetags/__init__.py": {}
}
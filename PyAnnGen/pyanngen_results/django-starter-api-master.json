{
    "django-starter-api-master/manage.py": {},
    "django-starter-api-master/config/urls.py": {},
    "django-starter-api-master/config/wsgi.py": {},
    "django-starter-api-master/config/__init__.py": {},
    "django-starter-api-master/config/settings/base.py": {},
    "django-starter-api-master/config/settings/local.py": {},
    "django-starter-api-master/config/settings/production.py": {},
    "django-starter-api-master/config/settings/test.py": {},
    "django-starter-api-master/config/settings/__init__.py": {},
    "django-starter-api-master/project/exceptions.py": {
        "custom_exception_handler": {
            "name": "custom_exception_handler",
            "location": 4,
            "return": [
                "bytes",
                "Dict[str, Any]",
                "dict",
                "str",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "exc": [
                    "Exception",
                    "Dict"
                ],
                "context": [
                    "Exception",
                    "Dict"
                ]
            }
        }
    },
    "django-starter-api-master/project/functions.py": {
        "is_valid_token": {
            "name": "is_valid_token",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str",
                    "List[str]",
                    "bytes"
                ]
            }
        }
    },
    "django-starter-api-master/project/models.py": {},
    "django-starter-api-master/project/__init__.py": {},
    "django-starter-api-master/project/users/admin.py": {},
    "django-starter-api-master/project/users/apps.py": {},
    "django-starter-api-master/project/users/auth.py": {
        "jwt_get_secret_key": {
            "name": "jwt_get_secret_key",
            "location": 14,
            "return": [
                "str",
                "Dict[str,Dict[str,Any]]"
            ],
            "arguments": {
                "payload": [
                    "Dict[str,Any]",
                    "str",
                    "bool",
                    "Optional[str]",
                    "django.template.RequestContext",
                    "Optional[uuid.UUID]"
                ]
            }
        },
        "jwt_payload_handler": {
            "name": "jwt_payload_handler",
            "location": 31,
            "return": [
                "dict"
            ],
            "arguments": {
                "user": [
                    "str",
                    "datetime.datetime"
                ]
            }
        },
        "jwt_get_user_id_from_payload_handler": {
            "name": "jwt_get_user_id_from_payload_handler",
            "location": 61,
            "return": [
                "str",
                "int",
                "Set",
                "Dict[str,Any]"
            ],
            "arguments": {
                "payload": [
                    "Dict[str,Union[str,set]]",
                    "Mapping[str,Any]",
                    "Dict",
                    "Dict[str,Union[str,Set]]",
                    "Dict[str,dict[str,Any]]",
                    "Dict[str,Dict[str,Any]]"
                ]
            }
        },
        "jwt_encode_handler": {
            "name": "jwt_encode_handler",
            "location": 68,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "payload": [
                    "bytes",
                    "str"
                ]
            }
        },
        "jwt_decode_handler": {
            "name": "jwt_decode_handler",
            "location": 73,
            "return": [
                "int",
                "str",
                "List[str]",
                "dict"
            ],
            "arguments": {
                "token": [
                    "Optional[Dict]",
                    "Dict",
                    "Iterable[str]",
                    "None"
                ]
            }
        },
        "jwt_response_payload_handler": {
            "name": "jwt_response_payload_handler",
            "location": 90,
            "return": [
                "Dict[(str, _T0)]"
            ],
            "arguments": {
                "token": [
                    "bool",
                    "List[str]",
                    "Optional[str]",
                    "str",
                    "None"
                ],
                "user": [
                    "bool",
                    "List[str]",
                    "None",
                    "Optional[str]",
                    "str"
                ],
                "request": [
                    "bool",
                    "List[str]",
                    "None",
                    "Optional[str]",
                    "str"
                ]
            }
        }
    },
    "django-starter-api-master/project/users/permissions.py": {
        "ActionBasedPermission.has_permission": {
            "name": "has_permission",
            "location": 10,
            "return": [
                "bool",
                "int",
                "str",
                "Type",
                "Iterator[Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "rest_framework.requesRequest"
                ],
                "view": [
                    "rest_framework.requesRequest"
                ]
            }
        },
        "IsAccountOwner.has_object_permission": {
            "name": "has_object_permission",
            "location": 20,
            "return": [
                "bool",
                "Dict",
                "Dict[str,bool]",
                "Dict[str,Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "rest_framework.requesRequest"
                ],
                "view": [
                    "Dict"
                ],
                "obj": [
                    "str",
                    "rest_framework.requesRequest"
                ]
            }
        }
    },
    "django-starter-api-master/project/users/urls.py": {},
    "django-starter-api-master/project/users/__init__.py": {},
    "django-starter-api-master/project/users/migrations/0001_initial.py": {},
    "django-starter-api-master/project/users/migrations/__init__.py": {},
    "django-starter-api-master/project/users/models/profiles.py": {
        "Profile.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-starter-api-master/project/users/models/users.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_short_name": {
            "name": "get_short_name",
            "location": 53,
            "return": [
                "int",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-starter-api-master/project/users/models/__init__.py": {},
    "django-starter-api-master/project/users/serializers/profiles.py": {},
    "django-starter-api-master/project/users/serializers/users.py": {
        "UserSignUpSerializer.validate": {
            "name": "validate",
            "location": 56,
            "return": [
                "List[float]",
                "str",
                "bytes",
                "List",
                "Optional[float]",
                "int",
                "List[Dict[str,Any]]",
                "Dict[str,str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "List[float]",
                    "int",
                    "bytes",
                    "List"
                ]
            }
        },
        "UserSignUpSerializer.create": {
            "name": "create",
            "location": 65,
            "return": [
                "Dict[str,str]",
                "core.models.User",
                "user_models.User",
                "lms.lmsdb.models.User",
                "lms.lmsdb.models.Solution",
                "zam_repondeur.models.Lecture",
                "aiolambda.Maybe[auth.user.User]",
                "database.User",
                "asgard.backends.users.UsersBackend"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "src.models.generic_task.TaskState",
                    "str",
                    "bool"
                ]
            }
        },
        "UserLoginSerializer.validate": {
            "name": "validate",
            "location": 84,
            "return": [
                "bytes",
                "str",
                "Optional[float]",
                "int",
                "List[Dict[str,Any]]",
                "Dict[str,str]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "bool"
                ]
            }
        },
        "UserLoginSerializer.create": {
            "name": "create",
            "location": 100,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "str",
                    "bytes",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "TokenSerialiser.validate_token": {
            "name": "validate_token",
            "location": 110,
            "return": [
                "str",
                "List[str]",
                "Optional[float]",
                "Mapping",
                "Dict",
                "MutableMapping",
                "int",
                "bytes",
                "Dict[str,Any]",
                "django.http.HttpRequest"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "List[str]",
                    "MutableMapping",
                    "bytes",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        },
        "TokenSerialiser.save": {
            "name": "save",
            "location": 123,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-starter-api-master/project/users/serializers/__init__.py": {},
    "django-starter-api-master/project/users/views/users.py": {
        "UserViewSet.login": {
            "name": "login",
            "location": 42,
            "return": [
                "Response",
                "List[str]",
                "int",
                "Dict[str,str]",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "rest_framework.requesRequest"
                ]
            }
        },
        "UserViewSet.signup": {
            "name": "signup",
            "location": 50,
            "return": [
                "Response",
                "flask.Response",
                "asgard.models.user.User",
                "Dict",
                "int",
                "models.Dashboard"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.token_refresh": {
            "name": "token_refresh",
            "location": 58,
            "return": [
                "Response",
                "Dict",
                "Dict[str,str]",
                "str",
                "bool",
                "Dict[str,Any]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.token_verify": {
            "name": "token_verify",
            "location": 65,
            "return": [
                "Response",
                "Dict",
                "Dict[str,str]",
                "str",
                "bool",
                "Dict[str,Any]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.profile": {
            "name": "profile",
            "location": 74,
            "return": [
                "Response",
                "bytes",
                "Dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "rest_framework.requesRequest"
                ]
            }
        },
        "UserViewSet.update": {
            "name": "update",
            "location": 87,
            "return": [
                "Response",
                "int",
                "Dict[str,Any]",
                "List[str]",
                "Optional[str]",
                "Dict[str,str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "rest_framework.requesRequest"
                ]
            }
        },
        "UserViewSet.retrieve": {
            "name": "retrieve",
            "location": 92,
            "return": [
                "Response",
                "int",
                "Dict[str,str]",
                "Dict[str,float]",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": []
            }
        }
    },
    "django-starter-api-master/project/users/views/__init__.py": {},
    "django-starter-api-master/tests/conftest.py": {
        "create_user": {
            "name": "create_user",
            "location": 22,
            "return": [
                "int",
                "List[str]",
                "Optional[str]",
                "bool",
                "Dict[str, str]",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "login_user": {
            "name": "login_user",
            "location": 44,
            "return": [
                "int",
                "str",
                "Optional[Dict]",
                "dict"
            ],
            "arguments": {
                "create_user": [
                    "bool",
                    "Dict[str,Any]",
                    "Optional[List[str]]",
                    "List[str]",
                    "None"
                ]
            }
        },
        "create_secondary_user": {
            "name": "create_secondary_user",
            "location": 59,
            "return": [
                "Dict[str, Any]",
                "Optional[Dict[str, Any]]",
                "str",
                "bytes"
            ],
            "arguments": {}
        },
        "login_secondary_user": {
            "name": "login_secondary_user",
            "location": 81,
            "return": [
                "int",
                "str",
                "Optional[Dict]",
                "dict"
            ],
            "arguments": {
                "create_secondary_user": [
                    "bool",
                    "List",
                    "Iterable[T]"
                ]
            }
        }
    },
    "django-starter-api-master/tests/constants.py": {},
    "django-starter-api-master/tests/test_users.py": {
        "test_user_login": {
            "name": "test_user_login",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "core.models.Recipe",
                    "None",
                    "bool",
                    "server.models.User",
                    "arxiv.submission.User",
                    "Optional[arxiv.submission.Client]"
                ]
            }
        },
        "test_user_login__invalid_credentials": {
            "name": "test_user_login__invalid_credentials",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "core.models.Recipe",
                    "None",
                    "bool",
                    "server.models.User",
                    "arxiv.submission.User",
                    "Optional[arxiv.submission.Client]"
                ]
            }
        },
        "test_user_login__check_token": {
            "name": "test_user_login__check_token",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "login_user": [
                    "zerver.models.UserProfile",
                    "core.models.MyUser",
                    "core.models.Recipe",
                    "authark.application.domain.common.User"
                ]
            }
        },
        "test_user_retrieve": {
            "name": "test_user_retrieve",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "int"
                ],
                "login_user": [
                    "str",
                    "server.models.PickupPoint"
                ]
            }
        },
        "test_user_retrieve__unauthorised": {
            "name": "test_user_retrieve__unauthorised",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "int"
                ]
            }
        },
        "test_user_update": {
            "name": "test_user_update",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "models.User",
                    "Optional[Dict[str,Any]]",
                    "discord.User"
                ],
                "login_user": [
                    "str",
                    "List[int]"
                ]
            }
        },
        "test_user_update__unauthorised": {
            "name": "test_user_update__unauthorised",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "core.models.Recipe",
                    "users.models.JustfixUser"
                ]
            }
        },
        "test_profile_user_update": {
            "name": "test_profile_user_update",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "Optional[str]",
                    "Optional[Dict[str,Any]]",
                    "discord.User"
                ],
                "login_user": [
                    "str",
                    "List[int]",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "test_profile_user_update__unauthorised": {
            "name": "test_profile_user_update__unauthorised",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "str",
                    "core.models.Recipe",
                    "Dict[str,Any]"
                ]
            }
        },
        "test_user_token__check": {
            "name": "test_user_token__check",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "app.db_models.user.User",
                    "ultron8.api.db_models.user.User",
                    "core.models.Recipe",
                    "User",
                    "rest_framework.tesAPIRequestFactory"
                ]
            }
        },
        "test_user_token__check__invalid": {
            "name": "test_user_token__check__invalid",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "app.db_models.user.User",
                    "ultron8.api.db_models.user.User",
                    "core.models.Recipe",
                    "User",
                    "rest_framework.tesAPIRequestFactory"
                ]
            }
        },
        "test_user_token__refresh": {
            "name": "test_user_token__refresh",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "app.db_models.user.User",
                    "ultron8.api.db_models.user.User",
                    "core.models.Recipe",
                    "User",
                    "rest_framework.tesAPIRequestFactory"
                ]
            }
        }
    },
    "django-starter-api-master/tests/test_utils.py": {
        "test_is_valid_token": {
            "name": "test_is_valid_token",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "app.db_models.user.User",
                    "ultron8.api.db_models.user.User",
                    "User",
                    "asgard.models.user.User",
                    "core.models.Recipe"
                ]
            }
        },
        "test_is_valid_token__invalid": {
            "name": "test_is_valid_token__invalid",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "create_user": [
                    "app.db_models.user.User",
                    "ultron8.api.db_models.user.User",
                    "User",
                    "asgard.models.user.User",
                    "core.models.Recipe"
                ]
            }
        }
    }
}
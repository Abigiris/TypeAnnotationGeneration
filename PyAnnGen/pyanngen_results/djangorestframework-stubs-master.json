{
    "djangorestframework-stubs-master/setup.py": {
        "find_stub_files": {
            "name": "find_stub_files",
            "location": 6,
            "return": [
                "list"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "djangorestframework-stubs-master/mypy_drf_plugin/main.py": {
        "transform_serializer_class": {
            "name": "transform_serializer_class",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "plugin": {
            "name": "plugin",
            "location": 43,
            "return": [
                "Type[NewSemanalDRFPlugin]"
            ],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "NewSemanalDRFPlugin.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "str",
                    "dict[str, typing.Any]",
                    "mypy.options.Options",
                    "Dict[str, Any]"
                ]
            }
        },
        "NewSemanalDRFPlugin._get_currently_defined_serializers": {
            "name": "_get_currently_defined_serializers",
            "location": 28,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewSemanalDRFPlugin.get_base_class_hook": {
            "name": "get_base_class_hook",
            "location": 37,
            "return": [
                "Optional[Callable[([Any], None)]]"
            ],
            "arguments": {
                "self": [],
                "fullname": [
                    "str"
                ]
            }
        }
    },
    "djangorestframework-stubs-master/mypy_drf_plugin/__init__.py": {},
    "djangorestframework-stubs-master/mypy_drf_plugin/lib/fullnames.py": {},
    "djangorestframework-stubs-master/mypy_drf_plugin/lib/helpers.py": {
        "get_drf_metadata": {
            "name": "get_drf_metadata",
            "location": 6,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "info": [
                    "bool",
                    "mypy.nodes.TypeInfo",
                    "dict[str, str]",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "djangorestframework-stubs-master/mypy_drf_plugin/lib/__init__.py": {},
    "djangorestframework-stubs-master/mypy_drf_plugin/transformers/serializers.py": {
        "make_meta_nested_class_inherit_from_any": {
            "name": "make_meta_nested_class_inherit_from_any",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "mypy.plugin.ClassDefContext",
                    "mypy_django_plugin.django.contexDjangoContext"
                ]
            }
        }
    },
    "djangorestframework-stubs-master/mypy_drf_plugin/transformers/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/apps.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authentication.py": {
        "get_authorization_header": {
            "name": "get_authorization_header",
            "location": 8,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "BaseAuthentication.authenticate": {
            "name": "authenticate",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseAuthentication.authenticate_header": {
            "name": "authenticate_header",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BasicAuthentication.authenticate_credentials": {
            "name": "authenticate_credentials",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "userid": [],
                "password": [],
                "request": []
            }
        },
        "SessionAuthentication.enforce_csrf": {
            "name": "enforce_csrf",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "TokenAuthentication.get_model": {
            "name": "get_model",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TokenAuthentication.authenticate_credentials": {
            "name": "authenticate_credentials",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/checks.py": {
        "pagination_system_check": {
            "name": "pagination_system_check",
            "location": 3,
            "return": [],
            "arguments": {
                "app_configs": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/compat.py": {
        "pygments_css": {
            "name": "pygments_css",
            "location": 47,
            "return": [],
            "arguments": {
                "style": []
            }
        },
        "pygments_highlight": {
            "name": "pygments_highlight",
            "location": 48,
            "return": [],
            "arguments": {
                "text": [],
                "lang": [],
                "style": []
            }
        },
        "md_filter_add_syntax_highlight": {
            "name": "md_filter_add_syntax_highlight",
            "location": 49,
            "return": [],
            "arguments": {
                "md": []
            }
        },
        "unicode_http_header": {
            "name": "unicode_http_header",
            "location": 50,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "distinct": {
            "name": "distinct",
            "location": 51,
            "return": [],
            "arguments": {
                "queryset": [],
                "base": []
            }
        },
        "apply_markdown": {
            "name": "apply_markdown",
            "location": 33,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "CodeBlockPreprocessor.run": {
            "name": "run",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "lines": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/decorators.py": {
        "api_view": {
            "name": "api_view",
            "location": 71,
            "return": [],
            "arguments": {
                "http_method_names": []
            }
        },
        "renderer_classes": {
            "name": "renderer_classes",
            "location": 74,
            "return": [],
            "arguments": {
                "renderer_classes": []
            }
        },
        "parser_classes": {
            "name": "parser_classes",
            "location": 77,
            "return": [],
            "arguments": {
                "parser_classes": []
            }
        },
        "authentication_classes": {
            "name": "authentication_classes",
            "location": 78,
            "return": [],
            "arguments": {
                "authentication_classes": []
            }
        },
        "throttle_classes": {
            "name": "throttle_classes",
            "location": 81,
            "return": [],
            "arguments": {
                "throttle_classes": []
            }
        },
        "permission_classes": {
            "name": "permission_classes",
            "location": 84,
            "return": [],
            "arguments": {
                "permission_classes": []
            }
        },
        "schema": {
            "name": "schema",
            "location": 85,
            "return": [],
            "arguments": {
                "view_inspector": []
            }
        },
        "action": {
            "name": "action",
            "location": 86,
            "return": [],
            "arguments": {
                "methods": [],
                "detail": [],
                "url_path": [],
                "url_name": [],
                "suffix": [],
                "name": []
            }
        },
        "MethodMapper.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "methods": []
            }
        },
        "MethodMapper._map": {
            "name": "_map",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "func": []
            }
        },
        "MethodMapper.get": {
            "name": "get",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.post": {
            "name": "post",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.put": {
            "name": "put",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.patch": {
            "name": "patch",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.delete": {
            "name": "delete",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.head": {
            "name": "head",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.options": {
            "name": "options",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "MethodMapper.trace": {
            "name": "trace",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/documentation.py": {
        "get_docs_view": {
            "name": "get_docs_view",
            "location": 7,
            "return": [],
            "arguments": {
                "title": [],
                "url": [],
                "description": [],
                "urlconf": [],
                "renderer_classes": [],
                "public": [],
                "patterns": [],
                "generator_class": [],
                "authentication_classes": [],
                "permission_classes": []
            }
        },
        "get_schemajs_view": {
            "name": "get_schemajs_view",
            "location": 19,
            "return": [],
            "arguments": {
                "title": [],
                "url": [],
                "description": [],
                "urlconf": [],
                "renderer_classes": [],
                "public": [],
                "patterns": [],
                "generator_class": [],
                "authentication_classes": [],
                "permission_classes": []
            }
        },
        "include_docs_urls": {
            "name": "include_docs_urls",
            "location": 31,
            "return": [],
            "arguments": {
                "title": [],
                "url": [],
                "description": [],
                "urlconf": [],
                "renderer_classes": [],
                "public": [],
                "patterns": [],
                "generator_class": [],
                "authentication_classes": [],
                "permission_classes": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/exceptions.py": {
        "_get_error_details": {
            "name": "_get_error_details",
            "location": 7,
            "return": [],
            "arguments": {
                "data": [],
                "default_code": []
            }
        },
        "_get_codes": {
            "name": "_get_codes",
            "location": 8,
            "return": [],
            "arguments": {
                "detail": []
            }
        },
        "_get_full_details": {
            "name": "_get_full_details",
            "location": 9,
            "return": [],
            "arguments": {
                "detail": []
            }
        },
        "server_error": {
            "name": "server_error",
            "location": 54,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "bad_request": {
            "name": "bad_request",
            "location": 55,
            "return": [],
            "arguments": {
                "request": [],
                "exception": []
            }
        },
        "ErrorDetail.__new__": {
            "name": "__new__",
            "location": 13,
            "return": [],
            "arguments": {
                "cls": [],
                "string": [],
                "code": []
            }
        },
        "APIException.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "detail": [],
                "code": []
            }
        },
        "APIException.get_codes": {
            "name": "get_codes",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIException.get_full_details": {
            "name": "get_full_details",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MethodNotAllowed.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "detail": [],
                "code": []
            }
        },
        "NotAcceptable.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "detail": [],
                "code": [],
                "available_renderers": []
            }
        },
        "UnsupportedMediaType.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "media_type": [],
                "detail": [],
                "code": []
            }
        },
        "Throttled.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "wait": [],
                "detail": [],
                "code": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/fields.py": {
        "is_simple_callable": {
            "name": "is_simple_callable",
            "location": 63,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "get_attribute": {
            "name": "get_attribute",
            "location": 64,
            "return": [],
            "arguments": {
                "instance": [],
                "attrs": []
            }
        },
        "set_value": {
            "name": "set_value",
            "location": 65,
            "return": [],
            "arguments": {
                "dictionary": [],
                "keys": [],
                "value": []
            }
        },
        "to_choices_dict": {
            "name": "to_choices_dict",
            "location": 66,
            "return": [],
            "arguments": {
                "choices": []
            }
        },
        "flatten_choices_dict": {
            "name": "flatten_choices_dict",
            "location": 67,
            "return": [],
            "arguments": {
                "choices": []
            }
        },
        "iter_options": {
            "name": "iter_options",
            "location": 68,
            "return": [],
            "arguments": {
                "grouped_choices": [],
                "cutoff": [],
                "cutoff_text": []
            }
        },
        "get_error_detail": {
            "name": "get_error_detail",
            "location": 71,
            "return": [],
            "arguments": {
                "exc_info": []
            }
        },
        "CreateOnlyDefault.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "CreateOnlyDefault.__call__": {
            "name": "__call__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "serializer_field": []
            }
        },
        "CurrentUserDefault.__call__": {
            "name": "__call__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "serializer_field": []
            }
        },
        "SupportsToPython.to_python": {
            "name": "to_python",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Field.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "Field.bind": {
            "name": "bind",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "parent": []
            }
        },
        "Field.validators": {
            "name": "validators",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "validators": []
            }
        },
        "Field.get_validators": {
            "name": "get_validators",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.get_initial": {
            "name": "get_initial",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.get_value": {
            "name": "get_value",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "dictionary": []
            }
        },
        "Field.get_attribute": {
            "name": "get_attribute",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "Field.get_default": {
            "name": "get_default",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.validate_empty_values": {
            "name": "validate_empty_values",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Field.run_validation": {
            "name": "run_validation",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Field.run_validators": {
            "name": "run_validators",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Field.to_internal_value": {
            "name": "to_internal_value",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Field.to_representation": {
            "name": "to_representation",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Field.fail": {
            "name": "fail",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Field.root": {
            "name": "root",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.context": {
            "name": "context",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.__new__": {
            "name": "__new__",
            "location": 143,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Field.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "memo": []
            }
        },
        "CharField.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RegexField.__init__": {
            "name": "__init__",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "regex": []
            }
        },
        "SlugField.__init__": {
            "name": "__init__",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "allow_unicode": []
            }
        },
        "UUIDField.__init__": {
            "name": "__init__",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IPAddressField.__init__": {
            "name": "__init__",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "protocol": []
            }
        },
        "IntegerField.__init__": {
            "name": "__init__",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FloatField.__init__": {
            "name": "__init__",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DecimalField.__init__": {
            "name": "__init__",
            "location": 351,
            "return": [],
            "arguments": {
                "self": [],
                "max_digits": [],
                "decimal_places": [],
                "coerce_to_string": [],
                "max_value": [],
                "min_value": [],
                "localize": [],
                "rounding": []
            }
        },
        "DecimalField.validate_precision": {
            "name": "validate_precision",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DecimalField.quantize": {
            "name": "quantize",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DateTimeField.__init__": {
            "name": "__init__",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "format": [],
                "input_formats": [],
                "default_timezone": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "DateTimeField.enforce_timezone": {
            "name": "enforce_timezone",
            "location": 400,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DateTimeField.default_timezone": {
            "name": "default_timezone",
            "location": 401,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DateField.__init__": {
            "name": "__init__",
            "location": 407,
            "return": [],
            "arguments": {
                "self": [],
                "format": [],
                "input_formats": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "TimeField.__init__": {
            "name": "__init__",
            "location": 429,
            "return": [],
            "arguments": {
                "self": [],
                "format": [],
                "input_formats": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "DurationField.__init__": {
            "name": "__init__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChoiceField.__init__": {
            "name": "__init__",
            "location": 476,
            "return": [],
            "arguments": {
                "self": [],
                "choices": []
            }
        },
        "ChoiceField.iter_options": {
            "name": "iter_options",
            "location": 496,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChoiceField._get_choices": {
            "name": "_get_choices",
            "location": 497,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChoiceField._set_choices": {
            "name": "_set_choices",
            "location": 498,
            "return": [],
            "arguments": {
                "self": [],
                "choices": []
            }
        },
        "MultipleChoiceField.__init__": {
            "name": "__init__",
            "location": 511,
            "return": [],
            "arguments": {
                "self": [],
                "choices": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": [],
                "html_cutoff": [],
                "html_cutoff_text": [],
                "allow_blank": [],
                "allow_empty": []
            }
        },
        "FilePathField.__init__": {
            "name": "__init__",
            "location": 533,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "match": [],
                "recursive": [],
                "allow_files": [],
                "allow_folders": [],
                "required": [],
                "read_only": [],
                "write_only": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": [],
                "html_cutoff": [],
                "html_cutoff_text": [],
                "allow_blank": []
            }
        },
        "FileField.__init__": {
            "name": "__init__",
            "location": 561,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImageField.__init__": {
            "name": "__init__",
            "location": 583,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListField.__init__": {
            "name": "__init__",
            "location": 611,
            "return": [],
            "arguments": {
                "self": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "ListField.run_child_validation": {
            "name": "run_child_validation",
            "location": 631,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DictField.__init__": {
            "name": "__init__",
            "location": 636,
            "return": [],
            "arguments": {
                "self": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "DictField.run_child_validation": {
            "name": "run_child_validation",
            "location": 654,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "JSONField.__init__": {
            "name": "__init__",
            "location": 665,
            "return": [],
            "arguments": {
                "self": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "SerializerMethodField.__init__": {
            "name": "__init__",
            "location": 690,
            "return": [],
            "arguments": {
                "self": [],
                "method_name": []
            }
        },
        "ModelField.__init__": {
            "name": "__init__",
            "location": 711,
            "return": [],
            "arguments": {
                "self": [],
                "model_field": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/filters.py": {
        "BaseFilterBackend.filter_queryset": {
            "name": "filter_queryset",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "BaseFilterBackend.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BaseFilterBackend.get_schema_operation_parameters": {
            "name": "get_schema_operation_parameters",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "SearchFilter.get_search_fields": {
            "name": "get_search_fields",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "view": [],
                "request": []
            }
        },
        "SearchFilter.get_search_terms": {
            "name": "get_search_terms",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SearchFilter.construct_search": {
            "name": "construct_search",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "SearchFilter.must_call_distinct": {
            "name": "must_call_distinct",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "search_fields": []
            }
        },
        "SearchFilter.to_html": {
            "name": "to_html",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "OrderingFilter.get_ordering": {
            "name": "get_ordering",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "OrderingFilter.get_default_ordering": {
            "name": "get_default_ordering",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "OrderingFilter.get_default_valid_fields": {
            "name": "get_default_valid_fields",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "view": [],
                "context": []
            }
        },
        "OrderingFilter.get_valid_fields": {
            "name": "get_valid_fields",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "view": [],
                "context": []
            }
        },
        "OrderingFilter.remove_invalid_fields": {
            "name": "remove_invalid_fields",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "fields": [],
                "view": [],
                "request": []
            }
        },
        "OrderingFilter.get_template_context": {
            "name": "get_template_context",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "OrderingFilter.to_html": {
            "name": "to_html",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/generics.py": {
        "get_object_or_404": {
            "name": "get_object_or_404",
            "location": 16,
            "return": [],
            "arguments": {
                "queryset": []
            }
        },
        "UsesQuerySet.get_queryset": {
            "name": "get_queryset",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseFilterProtocol.filter_queryset": {
            "name": "filter_queryset",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "BaseFilterProtocol.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BaseFilterProtocol.get_schema_operation_parameters": {
            "name": "get_schema_operation_parameters",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "GenericAPIView.get_object": {
            "name": "get_object",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericAPIView.get_serializer": {
            "name": "get_serializer",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericAPIView.get_serializer_class": {
            "name": "get_serializer_class",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericAPIView.get_serializer_context": {
            "name": "get_serializer_context",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericAPIView.filter_queryset": {
            "name": "filter_queryset",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "GenericAPIView.paginator": {
            "name": "paginator",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenericAPIView.paginate_queryset": {
            "name": "paginate_queryset",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "GenericAPIView.get_paginated_response": {
            "name": "get_paginated_response",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CreateAPIView.post": {
            "name": "post",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ListAPIView.get": {
            "name": "get",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveAPIView.get": {
            "name": "get",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DestroyAPIView.delete": {
            "name": "delete",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateAPIView.put": {
            "name": "put",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateAPIView.patch": {
            "name": "patch",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ListCreateAPIView.get": {
            "name": "get",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ListCreateAPIView.post": {
            "name": "post",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateAPIView.get": {
            "name": "get",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateAPIView.put": {
            "name": "put",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateAPIView.patch": {
            "name": "patch",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveDestroyAPIView.get": {
            "name": "get",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveDestroyAPIView.delete": {
            "name": "delete",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateDestroyAPIView.get": {
            "name": "get",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateDestroyAPIView.put": {
            "name": "put",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateDestroyAPIView.patch": {
            "name": "patch",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveUpdateDestroyAPIView.delete": {
            "name": "delete",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/metadata.py": {
        "BaseMetadata.determine_metadata": {
            "name": "determine_metadata",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "SimpleMetadata.determine_actions": {
            "name": "determine_actions",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "SimpleMetadata.get_serializer_info": {
            "name": "get_serializer_info",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "SimpleMetadata.get_field_info": {
            "name": "get_field_info",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/mixins.py": {
        "CreateModelMixin.create": {
            "name": "create",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CreateModelMixin.perform_create": {
            "name": "perform_create",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "CreateModelMixin.get_success_headers": {
            "name": "get_success_headers",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ListModelMixin.list": {
            "name": "list",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RetrieveModelMixin.retrieve": {
            "name": "retrieve",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateModelMixin.update": {
            "name": "update",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UpdateModelMixin.perform_update": {
            "name": "perform_update",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "UpdateModelMixin.partial_update": {
            "name": "partial_update",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DestroyModelMixin.destroy": {
            "name": "destroy",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DestroyModelMixin.perform_destroy": {
            "name": "perform_destroy",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/negotiation.py": {
        "BaseContentNegotiation.select_parser": {
            "name": "select_parser",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "parsers": []
            }
        },
        "BaseContentNegotiation.select_renderer": {
            "name": "select_renderer",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "renderers": [],
                "format_suffix": []
            }
        },
        "DefaultContentNegotiation.filter_renderers": {
            "name": "filter_renderers",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "renderers": [],
                "format": []
            }
        },
        "DefaultContentNegotiation.get_accept_list": {
            "name": "get_accept_list",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/pagination.py": {
        "_positive_int": {
            "name": "_positive_int",
            "location": 11,
            "return": [],
            "arguments": {
                "integer_string": [],
                "strict": [],
                "cutoff": []
            }
        },
        "_divide_with_ceil": {
            "name": "_divide_with_ceil",
            "location": 12,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "_get_displayed_page_numbers": {
            "name": "_get_displayed_page_numbers",
            "location": 13,
            "return": [],
            "arguments": {
                "current": [],
                "final": []
            }
        },
        "_get_page_links": {
            "name": "_get_page_links",
            "location": 14,
            "return": [],
            "arguments": {
                "page_numbers": [],
                "current": [],
                "url_func": []
            }
        },
        "_reverse_ordering": {
            "name": "_reverse_ordering",
            "location": 17,
            "return": [],
            "arguments": {
                "ordering_tuple": []
            }
        },
        "BasePagination.get_paginated_response_schema": {
            "name": "get_paginated_response_schema",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "schema": []
            }
        },
        "BasePagination.get_paginated_response": {
            "name": "get_paginated_response",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BasePagination.get_results": {
            "name": "get_results",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BasePagination.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BasePagination.get_schema_operation_parameters": {
            "name": "get_schema_operation_parameters",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BasePagination.paginate_queryset": {
            "name": "paginate_queryset",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "request": [],
                "view": []
            }
        },
        "BasePagination.to_html": {
            "name": "to_html",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PageNumberPagination.paginate_queryset": {
            "name": "paginate_queryset",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "request": [],
                "view": []
            }
        },
        "PageNumberPagination.get_paginated_response_schema": {
            "name": "get_paginated_response_schema",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "schema": []
            }
        },
        "PageNumberPagination.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "PageNumberPagination.get_schema_operation_parameters": {
            "name": "get_schema_operation_parameters",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "PageNumberPagination.get_page_size": {
            "name": "get_page_size",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PageNumberPagination.get_next_link": {
            "name": "get_next_link",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PageNumberPagination.get_previous_link": {
            "name": "get_previous_link",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PageNumberPagination.get_html_context": {
            "name": "get_html_context",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LimitOffsetPagination.paginate_queryset": {
            "name": "paginate_queryset",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "request": [],
                "view": []
            }
        },
        "LimitOffsetPagination.get_limit": {
            "name": "get_limit",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LimitOffsetPagination.get_offset": {
            "name": "get_offset",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LimitOffsetPagination.get_next_link": {
            "name": "get_next_link",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LimitOffsetPagination.get_previous_link": {
            "name": "get_previous_link",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LimitOffsetPagination.get_html_context": {
            "name": "get_html_context",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LimitOffsetPagination.get_count": {
            "name": "get_count",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": []
            }
        },
        "CursorPagination.paginate_queryset": {
            "name": "paginate_queryset",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "request": [],
                "view": []
            }
        },
        "CursorPagination.get_page_size": {
            "name": "get_page_size",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CursorPagination.get_next_link": {
            "name": "get_next_link",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CursorPagination.get_previous_link": {
            "name": "get_previous_link",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CursorPagination.get_html_context": {
            "name": "get_html_context",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CursorPagination.get_ordering": {
            "name": "get_ordering",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "CursorPagination.decode_cursor": {
            "name": "decode_cursor",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CursorPagination.encode_cursor": {
            "name": "encode_cursor",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": []
            }
        },
        "CursorPagination._get_position_from_instance": {
            "name": "_get_position_from_instance",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "ordering": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/parsers.py": {
        "DataAndFiles.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "files": []
            }
        },
        "BaseParser.parse": {
            "name": "parse",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "media_type": [],
                "parser_context": []
            }
        },
        "JSONParser.parse": {
            "name": "parse",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "media_type": [],
                "parser_context": []
            }
        },
        "FormParser.parse": {
            "name": "parse",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "media_type": [],
                "parser_context": []
            }
        },
        "MultiPartParser.parse": {
            "name": "parse",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "media_type": [],
                "parser_context": []
            }
        },
        "FileUploadParser.parse": {
            "name": "parse",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "media_type": [],
                "parser_context": []
            }
        },
        "FileUploadParser.get_filename": {
            "name": "get_filename",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [],
                "media_type": [],
                "parser_context": []
            }
        },
        "FileUploadParser.get_encoded_filename": {
            "name": "get_encoded_filename",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "filename_parm": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/permissions.py": {
        "_SupportsHasPermission.has_permission": {
            "name": "has_permission",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "_SupportsHasPermission.has_object_permission": {
            "name": "has_object_permission",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": [],
                "obj": []
            }
        },
        "OperationHolderMixin.__and__": {
            "name": "__and__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OperationHolderMixin.__or__": {
            "name": "__or__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OperationHolderMixin.__rand__": {
            "name": "__rand__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OperationHolderMixin.__ror__": {
            "name": "__ror__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OperationHolderMixin.__invert__": {
            "name": "__invert__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SingleOperandHolder.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "operator_class": [],
                "op1_class": []
            }
        },
        "SingleOperandHolder.__call__": {
            "name": "__call__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OperandHolder.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "operator_class": [],
                "op1_class": [],
                "op2_class": []
            }
        },
        "OperandHolder.__call__": {
            "name": "__call__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AND.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "op1": [],
                "op2": []
            }
        },
        "OR.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "op1": [],
                "op2": []
            }
        },
        "NOT.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "op1": []
            }
        },
        "DjangoModelPermissions.get_required_permissions": {
            "name": "get_required_permissions",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "model_cls": []
            }
        },
        "DjangoModelPermissions._queryset": {
            "name": "_queryset",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "DjangoObjectPermissions.get_required_object_permissions": {
            "name": "get_required_object_permissions",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "model_cls": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/relations.py": {
        "method_overridden": {
            "name": "method_overridden",
            "location": 9,
            "return": [],
            "arguments": {
                "method_name": [],
                "klass": [],
                "instance": []
            }
        },
        "Hyperlink.__new__": {
            "name": "__new__",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": [],
                "url": [],
                "obj": []
            }
        },
        "Hyperlink.__getnewargs__": {
            "name": "__getnewargs__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Hyperlink.name": {
            "name": "name",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PKOnlyObject.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "RelatedField.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "many": [],
                "allow_empty": [],
                "queryset": [],
                "html_cutoff": [],
                "html_cutoff_text": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "allow_null": [],
                "validators": [],
                "error_messages": [],
                "style": []
            }
        },
        "RelatedField.__new__": {
            "name": "__new__",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RelatedField.many_init": {
            "name": "many_init",
            "location": 59,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "RelatedField.get_queryset": {
            "name": "get_queryset",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RelatedField.use_pk_only_optimization": {
            "name": "use_pk_only_optimization",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RelatedField.get_choices": {
            "name": "get_choices",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "cutoff": []
            }
        },
        "RelatedField.choices": {
            "name": "choices",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RelatedField.grouped_choices": {
            "name": "grouped_choices",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RelatedField.iter_options": {
            "name": "iter_options",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RelatedField.get_attribute": {
            "name": "get_attribute",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "RelatedField.display_value": {
            "name": "display_value",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "PrimaryKeyRelatedField.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "many": [],
                "allow_empty": [],
                "queryset": [],
                "html_cutoff": [],
                "html_cutoff_text": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "allow_null": [],
                "validators": [],
                "error_messages": [],
                "style": [],
                "pk_field": []
            }
        },
        "HyperlinkedRelatedField.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "many": [],
                "allow_empty": [],
                "queryset": [],
                "html_cutoff": [],
                "html_cutoff_text": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "allow_null": [],
                "validators": [],
                "error_messages": [],
                "style": [],
                "view_name": [],
                "lookup_field": [],
                "lookup_url_kwarg": [],
                "format": []
            }
        },
        "HyperlinkedRelatedField.get_object": {
            "name": "get_object",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "view_name": []
            }
        },
        "HyperlinkedRelatedField.get_url": {
            "name": "get_url",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "view_name": [],
                "request": [],
                "format": []
            }
        },
        "SlugRelatedField.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "many": [],
                "allow_empty": [],
                "queryset": [],
                "html_cutoff": [],
                "html_cutoff_text": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "allow_null": [],
                "validators": [],
                "error_messages": [],
                "style": [],
                "slug_field": []
            }
        },
        "SlugRelatedField.to_internal_value": {
            "name": "to_internal_value",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SlugRelatedField.to_representation": {
            "name": "to_representation",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ManyRelatedField.__init__": {
            "name": "__init__",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": [],
                "child_relation": []
            }
        },
        "ManyRelatedField.get_value": {
            "name": "get_value",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "dictionary": []
            }
        },
        "ManyRelatedField.get_choices": {
            "name": "get_choices",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "cutoff": []
            }
        },
        "ManyRelatedField.choices": {
            "name": "choices",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ManyRelatedField.grouped_choices": {
            "name": "grouped_choices",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ManyRelatedField.iter_options": {
            "name": "iter_options",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/renderers.py": {
        "zero_as_none": {
            "name": "zero_as_none",
            "location": 11,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "BaseRenderer.render": {
            "name": "render",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "accepted_media_type": [],
                "renderer_context": []
            }
        },
        "JSONRenderer.get_indent": {
            "name": "get_indent",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "accepted_media_type": [],
                "renderer_context": []
            }
        },
        "TemplateHTMLRenderer.resolve_template": {
            "name": "resolve_template",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "template_names": []
            }
        },
        "TemplateHTMLRenderer.get_template_context": {
            "name": "get_template_context",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "renderer_context": []
            }
        },
        "TemplateHTMLRenderer.get_template_names": {
            "name": "get_template_names",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "view": []
            }
        },
        "TemplateHTMLRenderer.get_exception_template": {
            "name": "get_exception_template",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "HTMLFormRenderer.render_field": {
            "name": "render_field",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "parent_style": []
            }
        },
        "BrowsableAPIRenderer.get_default_renderer": {
            "name": "get_default_renderer",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BrowsableAPIRenderer.get_content": {
            "name": "get_content",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": [],
                "data": [],
                "accepted_media_type": [],
                "renderer_context": []
            }
        },
        "BrowsableAPIRenderer.show_form_for_method": {
            "name": "show_form_for_method",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "view": [],
                "method": [],
                "request": [],
                "obj": []
            }
        },
        "BrowsableAPIRenderer._get_serializer": {
            "name": "_get_serializer",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "serializer_class": [],
                "view_instance": [],
                "request": []
            }
        },
        "BrowsableAPIRenderer.get_rendered_html_form": {
            "name": "get_rendered_html_form",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "view": [],
                "method": [],
                "request": []
            }
        },
        "BrowsableAPIRenderer.render_form_for_serializer": {
            "name": "render_form_for_serializer",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "BrowsableAPIRenderer.get_raw_data_form": {
            "name": "get_raw_data_form",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "view": [],
                "method": [],
                "request": []
            }
        },
        "BrowsableAPIRenderer.get_name": {
            "name": "get_name",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BrowsableAPIRenderer.get_description": {
            "name": "get_description",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "view": [],
                "status_code": []
            }
        },
        "BrowsableAPIRenderer.get_breadcrumbs": {
            "name": "get_breadcrumbs",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BrowsableAPIRenderer.get_extra_actions": {
            "name": "get_extra_actions",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "BrowsableAPIRenderer.get_filter_form": {
            "name": "get_filter_form",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "view": [],
                "request": []
            }
        },
        "BrowsableAPIRenderer.get_context": {
            "name": "get_context",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "accepted_media_type": [],
                "renderer_context": []
            }
        },
        "AdminRenderer.get_result_url": {
            "name": "get_result_url",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "view": []
            }
        },
        "DocumentationRenderer.get_context": {
            "name": "get_context",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "request": []
            }
        },
        "_BaseOpenAPIRenderer.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_BaseOpenAPIRenderer.render": {
            "name": "render",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "media_type": [],
                "renderer_context": []
            }
        },
        "_BaseOpenAPIRenderer.get_schema": {
            "name": "get_schema",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "_BaseOpenAPIRenderer.get_parameters": {
            "name": "get_parameters",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "_BaseOpenAPIRenderer.get_operation": {
            "name": "get_operation",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "link": [],
                "name": [],
                "tag": []
            }
        },
        "_BaseOpenAPIRenderer.get_paths": {
            "name": "get_paths",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "document": []
            }
        },
        "_BaseOpenAPIRenderer.get_structure": {
            "name": "get_structure",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/request.py": {
        "is_form_media_type": {
            "name": "is_form_media_type",
            "location": 16,
            "return": [],
            "arguments": {
                "media_type": []
            }
        },
        "wrap_attributeerrors": {
            "name": "wrap_attributeerrors",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "clone_request": {
            "name": "clone_request",
            "location": 35,
            "return": [],
            "arguments": {
                "request": [],
                "method": []
            }
        },
        "override_method.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "view": [],
                "request": [],
                "method": []
            }
        },
        "override_method.__enter__": {
            "name": "__enter__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "override_method.__exit__": {
            "name": "__exit__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "ForcedAuthentication.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "force_user": [],
                "force_token": []
            }
        },
        "ForcedAuthentication.authenticate": {
            "name": "authenticate",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Request.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "parsers": [],
                "authenticators": [],
                "negotiator": [],
                "parser_context": []
            }
        },
        "Request.content_type": {
            "name": "content_type",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.stream": {
            "name": "stream",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.query_params": {
            "name": "query_params",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.data": {
            "name": "data",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.user": {
            "name": "user",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Request.auth": {
            "name": "auth",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Request.successful_authenticator": {
            "name": "successful_authenticator",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.__getattr__": {
            "name": "__getattr__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Request.DATA": {
            "name": "DATA",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.POST": {
            "name": "POST",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.FILES": {
            "name": "FILES",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.QUERY_PARAMS": {
            "name": "QUERY_PARAMS",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.force_plaintext_errors": {
            "name": "force_plaintext_errors",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/response.py": {
        "Response.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "status": [],
                "template_name": [],
                "headers": [],
                "exception": [],
                "content_type": []
            }
        },
        "Response.rendered_content": {
            "name": "rendered_content",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.render": {
            "name": "render",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.status_text": {
            "name": "status_text",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/reverse.py": {
        "preserve_builtin_query_params": {
            "name": "preserve_builtin_query_params",
            "location": 5,
            "return": [],
            "arguments": {
                "url": [],
                "request": []
            }
        },
        "reverse": {
            "name": "reverse",
            "location": 6,
            "return": [],
            "arguments": {
                "viewname": [],
                "args": [],
                "kwargs": [],
                "request": [],
                "format": []
            }
        },
        "_reverse": {
            "name": "_reverse",
            "location": 14,
            "return": [],
            "arguments": {
                "viewname": [],
                "args": [],
                "kwargs": [],
                "request": [],
                "format": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/routers.py": {
        "escape_curly_brackets": {
            "name": "escape_curly_brackets",
            "location": 26,
            "return": [],
            "arguments": {
                "url_path": []
            }
        },
        "flatten": {
            "name": "flatten",
            "location": 27,
            "return": [],
            "arguments": {
                "list_of_lists": []
            }
        },
        "BaseRouter.register": {
            "name": "register",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "viewset": [],
                "basename": [],
                "base_name": []
            }
        },
        "BaseRouter.get_default_basename": {
            "name": "get_default_basename",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "viewset": []
            }
        },
        "BaseRouter.get_urls": {
            "name": "get_urls",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRouter.urls": {
            "name": "urls",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleRouter.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "trailing_slash": []
            }
        },
        "SimpleRouter.get_routes": {
            "name": "get_routes",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "viewset": []
            }
        },
        "SimpleRouter._get_dynamic_route": {
            "name": "_get_dynamic_route",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "route": [],
                "action": []
            }
        },
        "SimpleRouter.get_method_map": {
            "name": "get_method_map",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "viewset": [],
                "method_map": []
            }
        },
        "SimpleRouter.get_lookup_regex": {
            "name": "get_lookup_regex",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "viewset": [],
                "lookup_prefix": []
            }
        },
        "APIRootView.get": {
            "name": "get",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DefaultRouter.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DefaultRouter.get_api_root_view": {
            "name": "get_api_root_view",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "api_urls": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/serializers.py": {
        "as_serializer_error": {
            "name": "as_serializer_error",
            "location": 141,
            "return": [],
            "arguments": {
                "exc": []
            }
        },
        "raise_errors_on_nested_writes": {
            "name": "raise_errors_on_nested_writes",
            "location": 213,
            "return": [],
            "arguments": {
                "method_name": [],
                "serializer": [],
                "validated_data": []
            }
        },
        "BaseSerializer.__new__": {
            "name": "__new__",
            "location": 99,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseSerializer.__class_getitem__": {
            "name": "__class_getitem__",
            "location": 100,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseSerializer.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "data": [],
                "partial": [],
                "many": [],
                "allow_empty": [],
                "context": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "BaseSerializer.many_init": {
            "name": "many_init",
            "location": 123,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseSerializer.is_valid": {
            "name": "is_valid",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "raise_exception": []
            }
        },
        "BaseSerializer.data": {
            "name": "data",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSerializer.errors": {
            "name": "errors",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSerializer.validated_data": {
            "name": "validated_data",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSerializer.update": {
            "name": "update",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "validated_data": []
            }
        },
        "BaseSerializer.create": {
            "name": "create",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "BaseSerializer.save": {
            "name": "save",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSerializer.to_representation": {
            "name": "to_representation",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "SerializerMetaclass.__new__": {
            "name": "__new__",
            "location": 137,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "attrs": []
            }
        },
        "SerializerMetaclass._get_declared_fields": {
            "name": "_get_declared_fields",
            "location": 139,
            "return": [],
            "arguments": {
                "cls": [],
                "bases": [],
                "attrs": []
            }
        },
        "Serializer.get_initial": {
            "name": "get_initial",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer.fields": {
            "name": "fields",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer.get_fields": {
            "name": "get_fields",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer.validate": {
            "name": "validate",
            "location": 155,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "Serializer.__iter__": {
            "name": "__iter__",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer.__getitem__": {
            "name": "__getitem__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Serializer._read_only_defaults": {
            "name": "_read_only_defaults",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer._writable_fields": {
            "name": "_writable_fields",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer._readable_fields": {
            "name": "_readable_fields",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer.data": {
            "name": "data",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Serializer.errors": {
            "name": "errors",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListSerializer.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "data": [],
                "partial": [],
                "context": [],
                "allow_empty": [],
                "child": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": []
            }
        },
        "ListSerializer.get_initial": {
            "name": "get_initial",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListSerializer.validate": {
            "name": "validate",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "ListSerializer.data": {
            "name": "data",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListSerializer.errors": {
            "name": "errors",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelSerializer.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "data": [],
                "partial": [],
                "many": [],
                "context": [],
                "read_only": [],
                "write_only": [],
                "required": [],
                "default": [],
                "initial": [],
                "source": [],
                "label": [],
                "help_text": [],
                "style": [],
                "error_messages": [],
                "validators": [],
                "allow_null": [],
                "allow_empty": []
            }
        },
        "ModelSerializer.update": {
            "name": "update",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "validated_data": []
            }
        },
        "ModelSerializer.create": {
            "name": "create",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "ModelSerializer.save": {
            "name": "save",
            "location": 254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelSerializer.to_representation": {
            "name": "to_representation",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "ModelSerializer.get_field_names": {
            "name": "get_field_names",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "declared_fields": [],
                "info": []
            }
        },
        "ModelSerializer.get_default_field_names": {
            "name": "get_default_field_names",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "declared_fields": [],
                "model_info": []
            }
        },
        "ModelSerializer.build_field": {
            "name": "build_field",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "info": [],
                "model_class": [],
                "nested_depth": []
            }
        },
        "ModelSerializer.build_standard_field": {
            "name": "build_standard_field",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "model_field": []
            }
        },
        "ModelSerializer.build_relational_field": {
            "name": "build_relational_field",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "relation_info": []
            }
        },
        "ModelSerializer.build_nested_field": {
            "name": "build_nested_field",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "relation_info": [],
                "nested_depth": []
            }
        },
        "ModelSerializer.build_property_field": {
            "name": "build_property_field",
            "location": 270,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "model_class": []
            }
        },
        "ModelSerializer.build_url_field": {
            "name": "build_url_field",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "model_class": []
            }
        },
        "ModelSerializer.build_unknown_field": {
            "name": "build_unknown_field",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": [],
                "model_class": []
            }
        },
        "ModelSerializer.include_extra_kwargs": {
            "name": "include_extra_kwargs",
            "location": 273,
            "return": [],
            "arguments": {
                "self": [],
                "kwargs": [],
                "extra_kwargs": []
            }
        },
        "ModelSerializer.get_extra_kwargs": {
            "name": "get_extra_kwargs",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelSerializer.get_uniqueness_extra_kwargs": {
            "name": "get_uniqueness_extra_kwargs",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "field_names": [],
                "declared_fields": [],
                "extra_kwargs": []
            }
        },
        "ModelSerializer._get_model_fields": {
            "name": "_get_model_fields",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "field_names": [],
                "declared_fields": [],
                "extra_kwargs": []
            }
        },
        "ModelSerializer.get_unique_together_validators": {
            "name": "get_unique_together_validators",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelSerializer.get_unique_for_date_validators": {
            "name": "get_unique_for_date_validators",
            "location": 284,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/settings.py": {
        "perform_import": {
            "name": "perform_import",
            "location": 56,
            "return": [],
            "arguments": {
                "val": [],
                "setting_name": []
            }
        },
        "import_from_string": {
            "name": "import_from_string",
            "location": 57,
            "return": [],
            "arguments": {
                "val": [],
                "setting_name": []
            }
        },
        "reload_api_settings": {
            "name": "reload_api_settings",
            "location": 123,
            "return": [],
            "arguments": {}
        },
        "APISettings.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "user_settings": [],
                "defaults": [],
                "import_strings": []
            }
        },
        "APISettings.user_settings": {
            "name": "user_settings",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APISettings.__getattr__": {
            "name": "__getattr__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "APISettings.__check_user_settings": {
            "name": "__check_user_settings",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "user_settings": []
            }
        },
        "APISettings.reload": {
            "name": "reload",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/status.py": {
        "is_informational": {
            "name": "is_informational",
            "location": 3,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "is_success": {
            "name": "is_success",
            "location": 4,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "is_redirect": {
            "name": "is_redirect",
            "location": 5,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "is_client_error": {
            "name": "is_client_error",
            "location": 6,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "is_server_error": {
            "name": "is_server_error",
            "location": 7,
            "return": [],
            "arguments": {
                "code": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/test.py": {
        "force_authenticate": {
            "name": "force_authenticate",
            "location": 17,
            "return": [],
            "arguments": {
                "request": [],
                "user": [],
                "token": []
            }
        },
        "HeaderDict.get_all": {
            "name": "get_all",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "MockOriginalResponse.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "MockOriginalResponse.isclosed": {
            "name": "isclosed",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockOriginalResponse.close": {
            "name": "close",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DjangoTestAdapter.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DjangoTestAdapter.get_environ": {
            "name": "get_environ",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DjangoTestAdapter.send": {
            "name": "send",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DjangoTestAdapter.close": {
            "name": "close",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoreAPIClient.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoreAPIClient.session": {
            "name": "session",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIRequestFactory.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "enforce_csrf_checks": []
            }
        },
        "APIRequestFactory.request": {
            "name": "request",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIRequestFactory.get": {
            "name": "get",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "follow": []
            }
        },
        "APIRequestFactory.post": {
            "name": "post",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIRequestFactory.put": {
            "name": "put",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIRequestFactory.patch": {
            "name": "patch",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIRequestFactory.delete": {
            "name": "delete",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIRequestFactory.options": {
            "name": "options",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIRequestFactory.generic": {
            "name": "generic",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "path": [],
                "data": [],
                "content_type": [],
                "secure": []
            }
        },
        "ForceAuthClientHandler.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ForceAuthClientHandler.get_response": {
            "name": "get_response",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIClient.credentials": {
            "name": "credentials",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIClient.force_authenticate": {
            "name": "force_authenticate",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "token": []
            }
        },
        "APIClient.request": {
            "name": "request",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIClient.get": {
            "name": "get",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "follow": []
            }
        },
        "APIClient.post": {
            "name": "post",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIClient.put": {
            "name": "put",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIClient.patch": {
            "name": "patch",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIClient.delete": {
            "name": "delete",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIClient.options": {
            "name": "options",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "data": [],
                "format": [],
                "content_type": [],
                "follow": []
            }
        },
        "APIClient.logout": {
            "name": "logout",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/throttling.py": {
        "BaseThrottle.allow_request": {
            "name": "allow_request",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "BaseThrottle.get_ident": {
            "name": "get_ident",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseThrottle.wait": {
            "name": "wait",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleRateThrottle.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleRateThrottle.get_cache_key": {
            "name": "get_cache_key",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "SimpleRateThrottle.get_rate": {
            "name": "get_rate",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleRateThrottle.parse_rate": {
            "name": "parse_rate",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "rate": []
            }
        },
        "SimpleRateThrottle.throttle_failure": {
            "name": "throttle_failure",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleRateThrottle.throttle_success": {
            "name": "throttle_success",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/urlpatterns.py": {
        "apply_suffix_patterns": {
            "name": "apply_suffix_patterns",
            "location": 7,
            "return": [],
            "arguments": {
                "urlpatterns": [],
                "suffix_pattern": [],
                "suffix_required": [],
                "suffix_route": []
            }
        },
        "format_suffix_patterns": {
            "name": "format_suffix_patterns",
            "location": 13,
            "return": [],
            "arguments": {
                "urlpatterns": [],
                "suffix_required": [],
                "allowed": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/urls.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/validators.py": {
        "qs_exists": {
            "name": "qs_exists",
            "location": 16,
            "return": [],
            "arguments": {
                "queryset": []
            }
        },
        "qs_filter": {
            "name": "qs_filter",
            "location": 17,
            "return": [],
            "arguments": {
                "queryset": []
            }
        },
        "ContextValidator.__call__": {
            "name": "__call__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "__value": [],
                "__context": []
            }
        },
        "UniqueValidator.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "message": [],
                "lookup": []
            }
        },
        "UniqueValidator.filter_queryset": {
            "name": "filter_queryset",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "queryset": [],
                "field_name": []
            }
        },
        "UniqueValidator.exclude_current_instance": {
            "name": "exclude_current_instance",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "instance": []
            }
        },
        "UniqueValidator.__call__": {
            "name": "__call__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "serializer_field": []
            }
        },
        "UniqueTogetherValidator.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "fields": [],
                "message": []
            }
        },
        "UniqueTogetherValidator.enforce_required_fields": {
            "name": "enforce_required_fields",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "serializer": []
            }
        },
        "UniqueTogetherValidator.filter_queryset": {
            "name": "filter_queryset",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "queryset": [],
                "serializer": []
            }
        },
        "UniqueTogetherValidator.exclude_current_instance": {
            "name": "exclude_current_instance",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "queryset": [],
                "instance": []
            }
        },
        "UniqueTogetherValidator.__call__": {
            "name": "__call__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "serializer": []
            }
        },
        "ProhibitSurrogateCharactersValidator.__call__": {
            "name": "__call__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "BaseUniqueForValidator.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "queryset": [],
                "field": [],
                "date_field": [],
                "message": []
            }
        },
        "BaseUniqueForValidator.enforce_required_fields": {
            "name": "enforce_required_fields",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": []
            }
        },
        "BaseUniqueForValidator.filter_queryset": {
            "name": "filter_queryset",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "queryset": [],
                "field_name": [],
                "date_field_name": []
            }
        },
        "BaseUniqueForValidator.exclude_current_instance": {
            "name": "exclude_current_instance",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "queryset": [],
                "instance": []
            }
        },
        "BaseUniqueForValidator.__call__": {
            "name": "__call__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "attrs": [],
                "serializer": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/versioning.py": {
        "BaseVersioning.determine_version": {
            "name": "determine_version",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseVersioning.reverse": {
            "name": "reverse",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "viewname": [],
                "args": [],
                "kwargs": [],
                "request": [],
                "format": []
            }
        },
        "BaseVersioning.is_allowed_version": {
            "name": "is_allowed_version",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "NamespaceVersioning.get_versioned_viewname": {
            "name": "get_versioned_viewname",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "viewname": [],
                "request": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/views.py": {
        "get_view_name": {
            "name": "get_view_name",
            "location": 33,
            "return": [],
            "arguments": {
                "view": []
            }
        },
        "get_view_description": {
            "name": "get_view_description",
            "location": 34,
            "return": [],
            "arguments": {
                "view": [],
                "html": []
            }
        },
        "set_rollback": {
            "name": "set_rollback",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "exception_handler": {
            "name": "exception_handler",
            "location": 36,
            "return": [],
            "arguments": {
                "exc": [],
                "context": []
            }
        },
        "GenericView.__call__": {
            "name": "__call__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.allowed_methods": {
            "name": "allowed_methods",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.default_response_headers": {
            "name": "default_response_headers",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.as_view": {
            "name": "as_view",
            "location": 73,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "APIView.http_method_not_allowed": {
            "name": "http_method_not_allowed",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.permission_denied": {
            "name": "permission_denied",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "message": [],
                "code": []
            }
        },
        "APIView.throttled": {
            "name": "throttled",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "wait": []
            }
        },
        "APIView.get_authenticate_header": {
            "name": "get_authenticate_header",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.get_parser_context": {
            "name": "get_parser_context",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "http_request": []
            }
        },
        "APIView.get_renderer_context": {
            "name": "get_renderer_context",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_exception_handler_context": {
            "name": "get_exception_handler_context",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_view_name": {
            "name": "get_view_name",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_view_description": {
            "name": "get_view_description",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "APIView.get_format_suffix": {
            "name": "get_format_suffix",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_renderers": {
            "name": "get_renderers",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_parsers": {
            "name": "get_parsers",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_authenticators": {
            "name": "get_authenticators",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_permissions": {
            "name": "get_permissions",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_throttles": {
            "name": "get_throttles",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_content_negotiator": {
            "name": "get_content_negotiator",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.get_exception_handler": {
            "name": "get_exception_handler",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.perform_content_negotiation": {
            "name": "perform_content_negotiation",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "force": []
            }
        },
        "APIView.perform_authentication": {
            "name": "perform_authentication",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.check_permissions": {
            "name": "check_permissions",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.check_object_permissions": {
            "name": "check_object_permissions",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "APIView.check_throttles": {
            "name": "check_throttles",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.determine_version": {
            "name": "determine_version",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.initialize_request": {
            "name": "initialize_request",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.initial": {
            "name": "initial",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.finalize_response": {
            "name": "finalize_response",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": []
            }
        },
        "APIView.handle_exception": {
            "name": "handle_exception",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "exc": []
            }
        },
        "APIView.raise_uncaught_exception": {
            "name": "raise_uncaught_exception",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "exc": []
            }
        },
        "APIView.dispatch": {
            "name": "dispatch",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "APIView.options": {
            "name": "options",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/viewsets.py": {
        "_is_extra_action": {
            "name": "_is_extra_action",
            "location": 11,
            "return": [],
            "arguments": {
                "attr": []
            }
        },
        "ViewSetMixin.as_view": {
            "name": "as_view",
            "location": 29,
            "return": [],
            "arguments": {
                "cls": [],
                "actions": []
            }
        },
        "ViewSetMixin.initialize_request": {
            "name": "initialize_request",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ViewSetMixin.reverse_action": {
            "name": "reverse_action",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "url_name": []
            }
        },
        "ViewSetMixin.get_extra_actions": {
            "name": "get_extra_actions",
            "location": 35,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ViewSetMixin.get_extra_action_url_map": {
            "name": "get_extra_action_url_map",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/admin.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/apps.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/models.py": {
        "Token.generate_key": {
            "name": "generate_key",
            "location": 10,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TokenProxy.pk": {
            "name": "pk",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/serializers.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/views.py": {
        "ObtainAuthToken.post": {
            "name": "post",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/management/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/management/commands/drf_create_token.py": {
        "Command.create_user_token": {
            "name": "create_user_token",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "reset_token": []
            }
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/authtoken/management/commands/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/management/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/management/commands/generateschema.py": {
        "Command.get_mode": {
            "name": "get_mode",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Command.get_renderer": {
            "name": "get_renderer",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "Command.get_generator_class": {
            "name": "get_generator_class",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/management/commands/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/coreapi.py": {
        "common_path": {
            "name": "common_path",
            "location": 13,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "is_custom_action": {
            "name": "is_custom_action",
            "location": 14,
            "return": [],
            "arguments": {
                "action": []
            }
        },
        "distribute_links": {
            "name": "distribute_links",
            "location": 15,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "insert_into": {
            "name": "insert_into",
            "location": 25,
            "return": [],
            "arguments": {
                "target": [],
                "keys": [],
                "value": []
            }
        },
        "field_to_schema": {
            "name": "field_to_schema",
            "location": 45,
            "return": [],
            "arguments": {
                "field": []
            }
        },
        "is_enabled": {
            "name": "is_enabled",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "LinkNode.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkNode.get_available_key": {
            "name": "get_available_key",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "preferred_key": []
            }
        },
        "SchemaGenerator.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "urlconf": [],
                "title": [],
                "description": [],
                "version": [],
                "patterns": [],
                "url": [],
                "endpoints": []
            }
        },
        "SchemaGenerator.get_links": {
            "name": "get_links",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SchemaGenerator.get_schema": {
            "name": "get_schema",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "public": []
            }
        },
        "SchemaGenerator.get_keys": {
            "name": "get_keys",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "subpath": [],
                "method": [],
                "view": []
            }
        },
        "SchemaGenerator.determine_path_prefix": {
            "name": "determine_path_prefix",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "paths": []
            }
        },
        "AutoSchema.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "manual_fields": []
            }
        },
        "AutoSchema.get_link": {
            "name": "get_link",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": [],
                "base_url": []
            }
        },
        "AutoSchema.get_path_fields": {
            "name": "get_path_fields",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_serializer_fields": {
            "name": "get_serializer_fields",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_pagination_fields": {
            "name": "get_pagination_fields",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_filter_fields": {
            "name": "get_filter_fields",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_manual_fields": {
            "name": "get_manual_fields",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.update_fields": {
            "name": "update_fields",
            "location": 56,
            "return": [],
            "arguments": {
                "fields": [],
                "update_with": []
            }
        },
        "AutoSchema.get_encoding": {
            "name": "get_encoding",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "ManualSchema.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "fields": [],
                "description": [],
                "encoding": []
            }
        },
        "ManualSchema.get_link": {
            "name": "get_link",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": [],
                "base_url": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/generators.py": {
        "common_path": {
            "name": "common_path",
            "location": 10,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "get_pk_name": {
            "name": "get_pk_name",
            "location": 11,
            "return": [],
            "arguments": {
                "model": []
            }
        },
        "is_api_view": {
            "name": "is_api_view",
            "location": 12,
            "return": [],
            "arguments": {
                "callback": []
            }
        },
        "EndpointEnumerator.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "patterns": [],
                "urlconf": []
            }
        },
        "EndpointEnumerator.get_api_endpoints": {
            "name": "get_api_endpoints",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "patterns": [],
                "prefix": []
            }
        },
        "EndpointEnumerator.get_path_from_regex": {
            "name": "get_path_from_regex",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "path_regex": []
            }
        },
        "EndpointEnumerator.should_include_endpoint": {
            "name": "should_include_endpoint",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "callback": []
            }
        },
        "EndpointEnumerator.get_allowed_methods": {
            "name": "get_allowed_methods",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "BaseSchemaGenerator.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "title": [],
                "url": [],
                "description": [],
                "patterns": [],
                "urlconf": [],
                "version": []
            }
        },
        "BaseSchemaGenerator.create_view": {
            "name": "create_view",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [],
                "method": [],
                "request": []
            }
        },
        "BaseSchemaGenerator.coerce_path": {
            "name": "coerce_path",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": [],
                "view": []
            }
        },
        "BaseSchemaGenerator.get_schema": {
            "name": "get_schema",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "public": []
            }
        },
        "BaseSchemaGenerator.has_view_permissions": {
            "name": "has_view_permissions",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": [],
                "view": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/inspectors.py": {
        "ViewInspector.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewInspector.__get__": {
            "name": "__get__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "owner": []
            }
        },
        "ViewInspector.__set__": {
            "name": "__set__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "other": []
            }
        },
        "ViewInspector.view": {
            "name": "view",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ViewInspector.get_description": {
            "name": "get_description",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/openapi.py": {
        "SchemaGenerator.get_info": {
            "name": "get_info",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SchemaGenerator.check_duplicate_operation_id": {
            "name": "check_duplicate_operation_id",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "paths": []
            }
        },
        "SchemaGenerator.get_schema": {
            "name": "get_schema",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "public": []
            }
        },
        "AutoSchema.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "tags": [],
                "operation_id_base": [],
                "component_name": []
            }
        },
        "AutoSchema.get_operation": {
            "name": "get_operation",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_component_name": {
            "name": "get_component_name",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "AutoSchema.get_components": {
            "name": "get_components",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_operation_id_base": {
            "name": "get_operation_id_base",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": [],
                "action": []
            }
        },
        "AutoSchema.get_operation_id": {
            "name": "get_operation_id",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_path_parameters": {
            "name": "get_path_parameters",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_filter_parameters": {
            "name": "get_filter_parameters",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.allows_filters": {
            "name": "allows_filters",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_pagination_parameters": {
            "name": "get_pagination_parameters",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.map_choicefield": {
            "name": "map_choicefield",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "AutoSchema.map_field": {
            "name": "map_field",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "AutoSchema.map_serializer": {
            "name": "map_serializer",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "AutoSchema.map_field_validators": {
            "name": "map_field_validators",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "schema": []
            }
        },
        "AutoSchema.get_paginator": {
            "name": "get_paginator",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AutoSchema.map_parsers": {
            "name": "map_parsers",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.map_renderers": {
            "name": "map_renderers",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_serializer": {
            "name": "get_serializer",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_request_body": {
            "name": "get_request_body",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_responses": {
            "name": "get_responses",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        },
        "AutoSchema.get_tags": {
            "name": "get_tags",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "method": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/utils.py": {
        "is_list_view": {
            "name": "is_list_view",
            "location": 7,
            "return": [],
            "arguments": {
                "path": [],
                "method": [],
                "view": []
            }
        },
        "get_pk_description": {
            "name": "get_pk_description",
            "location": 8,
            "return": [],
            "arguments": {
                "model": [],
                "model_field": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/views.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/schemas/__init__.py": {
        "get_schema_view": {
            "name": "get_schema_view",
            "location": 14,
            "return": [],
            "arguments": {
                "title": [],
                "url": [],
                "description": [],
                "urlconf": [],
                "renderer_classes": [],
                "public": [],
                "patterns": [],
                "generator_class": [],
                "authentication_classes": [],
                "permission_classes": [],
                "version": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/templatetags/rest_framework.py": {
        "highlight_code": {
            "name": "highlight_code",
            "location": 11,
            "return": [],
            "arguments": {
                "parser": [],
                "token": []
            }
        },
        "with_location": {
            "name": "with_location",
            "location": 20,
            "return": [],
            "arguments": {
                "fields": [],
                "location": []
            }
        },
        "form_for_link": {
            "name": "form_for_link",
            "location": 21,
            "return": [],
            "arguments": {
                "link": []
            }
        },
        "render_markdown": {
            "name": "render_markdown",
            "location": 22,
            "return": [],
            "arguments": {
                "markdown_text": []
            }
        },
        "get_pagination_html": {
            "name": "get_pagination_html",
            "location": 23,
            "return": [],
            "arguments": {
                "pager": []
            }
        },
        "render_form": {
            "name": "render_form",
            "location": 24,
            "return": [],
            "arguments": {
                "serializer": [],
                "template_pack": []
            }
        },
        "render_field": {
            "name": "render_field",
            "location": 25,
            "return": [],
            "arguments": {
                "field": [],
                "style": []
            }
        },
        "optional_login": {
            "name": "optional_login",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "optional_docs_login": {
            "name": "optional_docs_login",
            "location": 27,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "optional_logout": {
            "name": "optional_logout",
            "location": 28,
            "return": [],
            "arguments": {
                "request": [],
                "user": []
            }
        },
        "add_query_param": {
            "name": "add_query_param",
            "location": 29,
            "return": [],
            "arguments": {
                "request": [],
                "key": [],
                "val": []
            }
        },
        "as_string": {
            "name": "as_string",
            "location": 30,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "as_list_of_strings": {
            "name": "as_list_of_strings",
            "location": 31,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "add_class": {
            "name": "add_class",
            "location": 32,
            "return": [],
            "arguments": {
                "value": [],
                "css_class": []
            }
        },
        "format_value": {
            "name": "format_value",
            "location": 33,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "items": {
            "name": "items",
            "location": 34,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "data": {
            "name": "data",
            "location": 35,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "schema_links": {
            "name": "schema_links",
            "location": 36,
            "return": [],
            "arguments": {
                "section": [],
                "sec_key": []
            }
        },
        "add_nested_class": {
            "name": "add_nested_class",
            "location": 37,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "smart_urlquote_wrapper": {
            "name": "smart_urlquote_wrapper",
            "location": 46,
            "return": [],
            "arguments": {
                "matched_url": []
            }
        },
        "urlize_quoted_links": {
            "name": "urlize_quoted_links",
            "location": 47,
            "return": [],
            "arguments": {
                "text": [],
                "trim_url_limit": [],
                "nofollow": [],
                "autoescape": []
            }
        },
        "break_long_headers": {
            "name": "break_long_headers",
            "location": 50,
            "return": [],
            "arguments": {
                "header": []
            }
        },
        "CodeNode.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "lang": [],
                "code": []
            }
        },
        "CodeNode.render": {
            "name": "render",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/templatetags/__init__.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/utils/breadcrumbs.py": {
        "get_breadcrumbs": {
            "name": "get_breadcrumbs",
            "location": 3,
            "return": [],
            "arguments": {
                "url": [],
                "request": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/encoders.py": {},
    "djangorestframework-stubs-master/rest_framework-stubs/utils/field_mapping.py": {
        "needs_label": {
            "name": "needs_label",
            "location": 16,
            "return": [],
            "arguments": {
                "model_field": [],
                "field_name": []
            }
        },
        "get_detail_view_name": {
            "name": "get_detail_view_name",
            "location": 17,
            "return": [],
            "arguments": {
                "model": []
            }
        },
        "get_field_kwargs": {
            "name": "get_field_kwargs",
            "location": 18,
            "return": [],
            "arguments": {
                "field_name": [],
                "model_field": []
            }
        },
        "get_relation_kwargs": {
            "name": "get_relation_kwargs",
            "location": 19,
            "return": [],
            "arguments": {
                "field_name": [],
                "relation_info": []
            }
        },
        "get_nested_relation_kwargs": {
            "name": "get_nested_relation_kwargs",
            "location": 20,
            "return": [],
            "arguments": {
                "relation_info": []
            }
        },
        "get_url_kwargs": {
            "name": "get_url_kwargs",
            "location": 21,
            "return": [],
            "arguments": {
                "model_field": []
            }
        },
        "ClassLookupDict.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "ClassLookupDict.__getitem__": {
            "name": "__getitem__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ClassLookupDict.__setitem__": {
            "name": "__setitem__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/formatting.py": {
        "remove_trailing_string": {
            "name": "remove_trailing_string",
            "location": 3,
            "return": [],
            "arguments": {
                "content": [],
                "trailing": []
            }
        },
        "dedent": {
            "name": "dedent",
            "location": 4,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "camelcase_to_spaces": {
            "name": "camelcase_to_spaces",
            "location": 5,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "markup_description": {
            "name": "markup_description",
            "location": 6,
            "return": [],
            "arguments": {
                "description": []
            }
        },
        "lazy_format.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "format_string": []
            }
        },
        "lazy_format.__str__": {
            "name": "__str__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/html.py": {
        "is_html_input": {
            "name": "is_html_input",
            "location": 3,
            "return": [],
            "arguments": {
                "dictionary": []
            }
        },
        "parse_html_list": {
            "name": "parse_html_list",
            "location": 4,
            "return": [],
            "arguments": {
                "dictionary": [],
                "prefix": [],
                "default": []
            }
        },
        "parse_html_dict": {
            "name": "parse_html_dict",
            "location": 5,
            "return": [],
            "arguments": {
                "dictionary": [],
                "prefix": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/humanize_datetime.py": {
        "datetime_formats": {
            "name": "datetime_formats",
            "location": 3,
            "return": [],
            "arguments": {
                "formats": []
            }
        },
        "date_formats": {
            "name": "date_formats",
            "location": 4,
            "return": [],
            "arguments": {
                "formats": []
            }
        },
        "time_formats": {
            "name": "time_formats",
            "location": 5,
            "return": [],
            "arguments": {
                "formats": []
            }
        },
        "humanize_strptime": {
            "name": "humanize_strptime",
            "location": 6,
            "return": [],
            "arguments": {
                "format_string": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/json.py": {
        "strict_constant": {
            "name": "strict_constant",
            "location": 3,
            "return": [],
            "arguments": {
                "o": []
            }
        },
        "dump": {
            "name": "dump",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "dumps": {
            "name": "dumps",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "load": {
            "name": "load",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "loads": {
            "name": "loads",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/mediatypes.py": {
        "media_type_matches": {
            "name": "media_type_matches",
            "location": 3,
            "return": [],
            "arguments": {
                "lhs": [],
                "rhs": []
            }
        },
        "order_by_precedence": {
            "name": "order_by_precedence",
            "location": 4,
            "return": [],
            "arguments": {
                "media_type_lst": []
            }
        },
        "_MediaType.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "media_type_str": []
            }
        },
        "_MediaType.match": {
            "name": "match",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "_MediaType.precedence": {
            "name": "precedence",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/model_meta.py": {
        "get_field_info": {
            "name": "get_field_info",
            "location": 23,
            "return": [],
            "arguments": {
                "model": []
            }
        },
        "is_abstract_model": {
            "name": "is_abstract_model",
            "location": 24,
            "return": [],
            "arguments": {
                "model": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/representation.py": {
        "manager_repr": {
            "name": "manager_repr",
            "location": 3,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "smart_repr": {
            "name": "smart_repr",
            "location": 4,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "field_repr": {
            "name": "field_repr",
            "location": 5,
            "return": [],
            "arguments": {
                "field": [],
                "force_many": []
            }
        },
        "serializer_repr": {
            "name": "serializer_repr",
            "location": 6,
            "return": [],
            "arguments": {
                "serializer": [],
                "indent": [],
                "force_many": []
            }
        },
        "list_repr": {
            "name": "list_repr",
            "location": 7,
            "return": [],
            "arguments": {
                "serializer": [],
                "indent": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/serializer_helpers.py": {
        "ReturnDict.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "ReturnDict.copy": {
            "name": "copy",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReturnDict.__reduce__": {
            "name": "__reduce__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReturnList.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "ReturnList.__reduce__": {
            "name": "__reduce__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BoundField.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "value": [],
                "errors": [],
                "prefix": []
            }
        },
        "BoundField.__getattr__": {
            "name": "__getattr__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "attr_name": []
            }
        },
        "BoundField.as_form_field": {
            "name": "as_form_field",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedBoundField.__iter__": {
            "name": "__iter__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedBoundField.__getitem__": {
            "name": "__getitem__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "BindingDict.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "BindingDict.__setitem__": {
            "name": "__setitem__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "field": []
            }
        },
        "BindingDict.__getitem__": {
            "name": "__getitem__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "BindingDict.__delitem__": {
            "name": "__delitem__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "BindingDict.__iter__": {
            "name": "__iter__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BindingDict.__len__": {
            "name": "__len__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/urls.py": {
        "replace_query_param": {
            "name": "replace_query_param",
            "location": 3,
            "return": [],
            "arguments": {
                "url": [],
                "key": [],
                "val": []
            }
        },
        "remove_query_param": {
            "name": "remove_query_param",
            "location": 4,
            "return": [],
            "arguments": {
                "url": [],
                "key": []
            }
        }
    },
    "djangorestframework-stubs-master/rest_framework-stubs/utils/__init__.py": {},
    "djangorestframework-stubs-master/scripts/drf_tests_settings.py": {},
    "djangorestframework-stubs-master/scripts/git_helpers.py": {
        "checkout_target_tag": {
            "name": "checkout_target_tag",
            "location": 17,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "drf_version": [
                    "Optional[str]"
                ]
            }
        },
        "ProgressPrinter.line_dropped": {
            "name": "line_dropped",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str"
                ]
            }
        },
        "ProgressPrinter.update": {
            "name": "update",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "op_code": [
                    "int",
                    "bool",
                    "float",
                    "Optional[Union[float, int]]",
                    "None"
                ],
                "cur_count": [
                    "int",
                    "bool",
                    "float",
                    "Optional[Union[float, int]]",
                    "None"
                ],
                "max_count": [
                    "int",
                    "None",
                    "bool",
                    "Optional[Union[float, int]]",
                    "float"
                ],
                "message": [
                    "typing.Text",
                    "int",
                    "bool",
                    "Optional[Union[float, int]]"
                ]
            }
        }
    },
    "djangorestframework-stubs-master/scripts/paths.py": {},
    "djangorestframework-stubs-master/scripts/stubgen-drf.py": {},
    "djangorestframework-stubs-master/scripts/tests_extension_hook.py": {
        "django_plugin_hook": {
            "name": "django_plugin_hook",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "test_item": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "djangorestframework-stubs-master/scripts/typecheck_tests.py": {
        "get_unused_ignores": {
            "name": "get_unused_ignores",
            "location": 260,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "ignored_message_freq": [
                    "Dict[(str, Dict[(Union[(str, Pattern)], int)])]"
                ]
            }
        },
        "is_pattern_fits": {
            "name": "is_pattern_fits",
            "location": 271,
            "return": [
                "bool"
            ],
            "arguments": {
                "pattern": [
                    "Union[(str, Pattern)]"
                ],
                "line": [
                    "str"
                ]
            }
        },
        "is_ignored": {
            "name": "is_ignored",
            "location": 281,
            "return": [
                "bool"
            ],
            "arguments": {
                "line": [
                    "str"
                ],
                "filename": [
                    "str"
                ],
                "ignored_message_dict": [
                    "Dict[(str, Dict[(str, int)])]"
                ]
            }
        },
        "is_ignored.update": {
            "name": "update",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "op_code": [],
                "cur_count": [],
                "max_count": [],
                "message": []
            }
        }
    },
    "djangorestframework-stubs-master/scripts/__init__.py": {}
}
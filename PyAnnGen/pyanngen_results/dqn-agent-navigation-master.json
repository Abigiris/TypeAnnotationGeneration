{
    "dqn-agent-navigation-master/setup.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/agent_action_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/agent_info_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/brain_parameters_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/brain_type_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/command_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/engine_configuration_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/environment_parameters_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/header_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/resolution_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/space_type_proto_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_input_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_message_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_output_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_rl_initialization_input_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_rl_initialization_output_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_rl_input_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_rl_output_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_to_external_pb2.py": {},
    "dqn-agent-navigation-master/src/communicator_objects/unity_to_external_pb2_grpc.py": {
        "add_UnityToExternalServicer_to_server": {
            "name": "add_UnityToExternalServicer_to_server",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "servicer": [
                    "Optional[models.LTI1p3Provider]",
                    "str",
                    "None",
                    "Dict"
                ],
                "server": [
                    "Optional[str]",
                    "str",
                    "int"
                ]
            }
        },
        "UnityToExternalStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "int",
                    "str",
                    "List",
                    "List[Tuple[int,Any]]",
                    "List[tuple[Union[int,Any]]]"
                ]
            }
        },
        "UnityToExternalServicer.Exchange": {
            "name": "Exchange",
            "location": 28,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool",
                    "grpc.ServicerContext"
                ],
                "context": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "dqn-agent-navigation-master/src/communicator_objects/__init__.py": {},
    "dqn-agent-navigation-master/src/navigation/agent.py": {
        "Agent.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state_size": [],
                "action_size": [],
                "seed": [
                    "None"
                ]
            }
        },
        "Agent.step": {
            "name": "step",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [],
                "action": [],
                "reward": [],
                "next_state": [],
                "done": []
            }
        },
        "Agent.act": {
            "name": "act",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "state": [],
                "epsilon": [
                    "float"
                ]
            }
        },
        "Agent._learn": {
            "name": "_learn",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "experiences": [],
                "gamma": []
            }
        },
        "Agent._soft_update": {
            "name": "_soft_update",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dqn_policy": [],
                "dqn_target": [],
                "tau": []
            }
        },
        "ReplayBuffer.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action_size": [],
                "buffer_size": [],
                "batch_size": [],
                "seed": []
            }
        },
        "ReplayBuffer.add": {
            "name": "add",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [],
                "action": [],
                "reward": [],
                "next_state": [],
                "done": []
            }
        },
        "ReplayBuffer.sample": {
            "name": "sample",
            "location": 147,
            "return": [
                "Tuple[(Any, Any, Any, Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReplayBuffer.__len__": {
            "name": "__len__",
            "location": 159,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dqn-agent-navigation-master/src/navigation/model.py": {
        "DQN.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state_size": [
                    "int"
                ],
                "action_size": [
                    "str",
                    "int",
                    "List[int]"
                ],
                "seed": [
                    "str",
                    "int",
                    "List[int]"
                ]
            }
        },
        "DQN.forward": {
            "name": "forward",
            "location": 23,
            "return": [
                "str",
                "int",
                "List[list[int]]",
                "float",
                "List[list[str]]",
                "List[Type]"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "int",
                    "List[int]",
                    "Dict[str,str]",
                    "Callable[...,None]",
                    "torch.Tensor"
                ]
            }
        }
    },
    "dqn-agent-navigation-master/src/navigation/train.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "plot_scores": {
            "name": "plot_scores",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "scores": [
                    "int",
                    "bool"
                ]
            }
        }
    },
    "dqn-agent-navigation-master/src/navigation/verify.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dqn-agent-navigation-master/src/navigation/watch.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dqn-agent-navigation-master/src/navigation/__init__.py": {},
    "dqn-agent-navigation-master/src/unityagents/brain.py": {
        "BrainInfo.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visual_observation": [
                    "bool",
                    "str",
                    "Dict[tuple[Union[str,str]],int]",
                    "Dict[Tuple[str,str],int]",
                    "List[list[str]]",
                    "int",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "vector_observation": [
                    "bool",
                    "str",
                    "Dict[tuple[Union[str,str]],int]",
                    "Dict[Tuple[str,str],int]",
                    "List[list[str]]",
                    "int",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "text_observations": [
                    "str",
                    "bool",
                    "bytes"
                ],
                "memory": [
                    "bool",
                    "None",
                    "str",
                    "Dict[Tuple[str,str],int]",
                    "Dict[tuple[Union[str,str]],int]",
                    "int",
                    "List[list[str]]",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "reward": [
                    "bool",
                    "None",
                    "str",
                    "Dict[Tuple[str,str],int]",
                    "Dict[tuple[Union[str,str]],int]",
                    "int",
                    "List[list[str]]",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "agents": [
                    "bool",
                    "None",
                    "str",
                    "Dict[Tuple[str,str],int]",
                    "Dict[tuple[Union[str,str]],int]",
                    "int",
                    "List[list[str]]",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "local_done": [
                    "bool",
                    "None",
                    "str",
                    "Dict[Tuple[str,str],int]",
                    "Dict[tuple[Union[str,str]],int]",
                    "int",
                    "List[list[str]]",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "vector_action": [
                    "bool",
                    "None",
                    "str",
                    "Dict[Tuple[str,str],int]",
                    "Dict[tuple[Union[str,str]],int]",
                    "int",
                    "List[list[str]]",
                    "Iterable[str]",
                    "List[List[str]]"
                ],
                "text_action": [
                    "str",
                    "None",
                    "bytes",
                    "Union[str,bool]",
                    "int",
                    "bool"
                ],
                "max_reached": [
                    "int",
                    "None",
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "BrainParameters.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "brain_name": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ],
                "brain_param": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "BrainParameters.__str__": {
            "name": "__str__",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/communicator.py": {
        "Communicator.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "worker_id": [
                    "int",
                    "str",
                    "Optional[Iterable[str]]",
                    "List",
                    "Optional[List[str]]"
                ],
                "base_port": [
                    "int",
                    "str",
                    "Optional[Iterable[str]]",
                    "List",
                    "Optional[List[str]]"
                ]
            }
        },
        "Communicator.initialize": {
            "name": "initialize",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "Communicator.exchange": {
            "name": "exchange",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "Communicator.close": {
            "name": "close",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/curriculum.py": {
        "Curriculum.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "location": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[List[str]]",
                    "List[str]",
                    "Optional[float]",
                    "float"
                ],
                "default_reset_parameters": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "Dict",
                    "None",
                    "Optional[List[Any]]",
                    "List[Any]",
                    "List"
                ]
            }
        },
        "Curriculum.measure": {
            "name": "measure",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Curriculum.get_lesson_number": {
            "name": "get_lesson_number",
            "location": 58,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Curriculum.set_lesson_number": {
            "name": "set_lesson_number",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "Iterator[int]",
                    "Iterator"
                ]
            }
        },
        "Curriculum.increment_lesson": {
            "name": "increment_lesson",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "progress": [
                    "int",
                    "Type[Frame]",
                    "Optional[int]",
                    "str"
                ]
            }
        },
        "Curriculum.get_config": {
            "name": "get_config",
            "location": 89,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "lesson": [
                    "str",
                    "None",
                    "Optional[str]",
                    "Dict",
                    "Optional[int]",
                    "int"
                ]
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/environment.py": {
        "UnityEnvironment.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_name": [
                    "Optional[str]",
                    "str",
                    "None",
                    "bool",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]"
                ],
                "worker_id": [
                    "int",
                    "bool",
                    "List[str]",
                    "bytes",
                    "Optional[str]"
                ],
                "base_port": [
                    "int",
                    "bool",
                    "List[str]",
                    "bytes",
                    "Optional[str]"
                ],
                "curriculum": [
                    "Optional[str]",
                    "None",
                    "float",
                    "Optional[List[Any]]",
                    "str",
                    "List[Any]",
                    "int",
                    "Container[str]",
                    "Optional[Dict[str,Any]]",
                    "Container",
                    "Dict[str,Any]",
                    "bool"
                ],
                "seed": [
                    "int",
                    "bool",
                    "Optional[str]",
                    "Optional[List[Any]]",
                    "str"
                ],
                "docker_training": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "no_graphics": [
                    "bool",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "UnityEnvironment.curriculum": {
            "name": "curriculum",
            "location": 111,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.logfile_path": {
            "name": "logfile_path",
            "location": 115,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.brains": {
            "name": "brains",
            "location": 119,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.global_done": {
            "name": "global_done",
            "location": 123,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.academy_name": {
            "name": "academy_name",
            "location": 127,
            "return": [
                "str",
                "List[Tuple[str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.number_brains": {
            "name": "number_brains",
            "location": 131,
            "return": [
                "str",
                "List[int]",
                "Optional[str]",
                "List[str]",
                "Tuple[int, int]",
                "List[Tuple[int, int]]",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.number_external_brains": {
            "name": "number_external_brains",
            "location": 135,
            "return": [
                "str",
                "List[int]",
                "Optional[str]",
                "List[str]",
                "Tuple[int, int]",
                "List[Tuple[int, int]]",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.brain_names": {
            "name": "brain_names",
            "location": 139,
            "return": [
                "str",
                "List[Tuple[str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.external_brain_names": {
            "name": "external_brain_names",
            "location": 143,
            "return": [
                "Dict[str, str]",
                "list",
                "str",
                "type"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.executable_launcher": {
            "name": "executable_launcher",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_name": [
                    "str",
                    "Optional[int]",
                    "int",
                    "None"
                ],
                "docker_training": [
                    "bool",
                    "str"
                ],
                "no_graphics": [
                    "bool",
                    "str"
                ]
            }
        },
        "UnityEnvironment.get_communicator": {
            "name": "get_communicator",
            "location": 222,
            "return": [
                "unityagents.rpc_communicator.RpcCommunicator"
            ],
            "arguments": {
                "self": [],
                "worker_id": [
                    "str",
                    "int"
                ],
                "base_port": [
                    "str",
                    "int"
                ]
            }
        },
        "UnityEnvironment.__str__": {
            "name": "__str__",
            "location": 226,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment.reset": {
            "name": "reset",
            "location": 240,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "train_mode": [
                    "Dict",
                    "bool"
                ],
                "config": [
                    "Dict[str,Any]",
                    "None",
                    "MutableMapping[str,Any]",
                    "MutableMapping"
                ],
                "lesson": [
                    "Dict",
                    "str",
                    "None"
                ]
            }
        },
        "UnityEnvironment.step": {
            "name": "step",
            "location": 274,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "vector_action": [
                    "int",
                    "str",
                    "None"
                ],
                "memory": [
                    "int",
                    "None",
                    "Optional[str]",
                    "FrozenSet[str]",
                    "str",
                    "Optional[int]",
                    "frozenset"
                ],
                "text_action": [
                    "Optional[str]",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "UnityEnvironment.close": {
            "name": "close",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment._close": {
            "name": "_close",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnityEnvironment._flatten": {
            "name": "_flatten",
            "location": 403,
            "return": [
                "List[float]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "arr": [
                    "int",
                    "List",
                    "List[int]"
                ]
            }
        },
        "UnityEnvironment._process_pixels": {
            "name": "_process_pixels",
            "location": 423,
            "return": [
                "float",
                "str"
            ],
            "arguments": {
                "image_bytes": [
                    "int",
                    "List[int]",
                    "str"
                ],
                "gray_scale": [
                    "bool",
                    "List[T]",
                    "List[str]",
                    "float",
                    "Dict",
                    "Union[int,float]"
                ]
            }
        },
        "UnityEnvironment._get_state": {
            "name": "_get_state",
            "location": 437,
            "return": [
                "Tuple[(Dict[(Any, unityagents.brain.BrainInfo)], Any)]"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "Dict",
                    "Tuple[Union[str,int]]",
                    "Tuple[str,int]",
                    "DGEList"
                ]
            }
        },
        "UnityEnvironment._generate_step_input": {
            "name": "_generate_step_input",
            "location": 475,
            "return": [
                "int",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "vector_action": [
                    "int",
                    "str",
                    "Sequence[T]"
                ],
                "memory": [
                    "str",
                    "int"
                ],
                "text_action": [
                    "List[str]",
                    "Tuple[Union[float,float]]",
                    "Tuple[float,float]",
                    "str",
                    "Optional[str]",
                    "float"
                ]
            }
        },
        "UnityEnvironment._generate_reset_input": {
            "name": "_generate_reset_input",
            "location": 493,
            "return": [
                "int",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "training": [
                    "Dict",
                    "str"
                ],
                "config": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "UnityEnvironment.send_academy_parameters": {
            "name": "send_academy_parameters",
            "location": 502,
            "return": [
                "str",
                "int",
                "List[dict]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "init_parameters": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "UnityEnvironment.wrap_unity_input": {
            "name": "wrap_unity_input",
            "location": 507,
            "return": [
                "bool",
                "Optional[Union[str,Any]]",
                "List[dict[str,str]]",
                "List[str]",
                "Dict[str,set]",
                "List[tuple[Union[int,float]]]"
            ],
            "arguments": {
                "self": [],
                "rl_input": [
                    "Set[str]",
                    "communicator_objects.UnityRLInput"
                ]
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/exception.py": {
        "UnityTimeOutException.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "str",
                    "Union[int,List]",
                    "List"
                ],
                "log_file_path": [
                    "str",
                    "None",
                    "IO[Any]"
                ]
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/rpc_communicator.py": {
        "UnityToExternalServicerImplementation.Initialize": {
            "name": "Initialize",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        },
        "UnityToExternalServicerImplementation.Exchange": {
            "name": "Exchange",
            "location": 24,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        },
        "RpcCommunicator.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "worker_id": [
                    "int",
                    "Optional[str]",
                    "Optional[int]",
                    "Optional[bool]",
                    "List[dict]",
                    "List[Dict[str,Any]]",
                    "str",
                    "Dict[str,Any]",
                    "bytes"
                ],
                "base_port": [
                    "int",
                    "str",
                    "Union[str,None]",
                    "Optional[List[str]]"
                ]
            }
        },
        "RpcCommunicator.initialize": {
            "name": "initialize",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "RpcCommunicator.exchange": {
            "name": "exchange",
            "location": 73,
            "return": [
                "None",
                "bool",
                "Optional[int]",
                "Optional[str]",
                "Optional[Tuple[Any,Any]]"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "RpcCommunicator.close": {
            "name": "close",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/socket_communicator.py": {
        "SocketCommunicator.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "worker_id": [
                    "int",
                    "Optional[str]",
                    "Optional[int]",
                    "Optional[bool]",
                    "List[dict]",
                    "List[Dict[str,Any]]",
                    "str",
                    "Dict[str,Any]",
                    "bytes"
                ],
                "base_port": [
                    "int",
                    "str",
                    "Union[str,None]",
                    "Optional[List[str]]"
                ]
            }
        },
        "SocketCommunicator.initialize": {
            "name": "initialize",
            "location": 30,
            "return": [
                "str",
                "Sequence[str]"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "SocketCommunicator._communicator_receive": {
            "name": "_communicator_receive",
            "location": 59,
            "return": [
                "str",
                "float",
                "int",
                "Set[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketCommunicator._communicator_send": {
            "name": "_communicator_send",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "float",
                    "list",
                    "tuple"
                ]
            }
        },
        "SocketCommunicator.exchange": {
            "name": "exchange",
            "location": 73,
            "return": [
                "None",
                "bool",
                "Optional[int]",
                "Optional[str]",
                "Optional[Tuple[Any,Any]]"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "SocketCommunicator.close": {
            "name": "close",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dqn-agent-navigation-master/src/unityagents/__init__.py": {},
    "dqn-agent-navigation-master/tst/__init__.py": {},
    "dqn-agent-navigation-master/tst/navigation/__init__.py": {}
}
{
    "dramatiq_sqs-master/setup.py": {
        "rel": {
            "name": "rel",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "dramatiq_sqs-master/dramatiq_sqs/broker.py": {
        "chunk": {
            "name": "chunk",
            "location": 235,
            "return": [
                "Generator[(list, Any, None)]"
            ],
            "arguments": {
                "xs": [
                    "str",
                    "bytes",
                    "bool",
                    "float",
                    "Iterable[Iterable[float]]",
                    "List",
                    "T"
                ]
            }
        },
        "SQSBroker.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQSBroker.consume": {
            "name": "consume",
            "location": 87,
            "return": [
                "_SQSConsumer"
            ],
            "arguments": {
                "self": [],
                "queue_name": [
                    "str",
                    "int"
                ],
                "prefetch": [
                    "str",
                    "int"
                ],
                "timeout": [
                    "str",
                    "int"
                ]
            }
        },
        "SQSBroker.declare_queue": {
            "name": "declare_queue",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue_name": [
                    "str"
                ]
            }
        },
        "SQSBroker.enqueue": {
            "name": "enqueue",
            "location": 134,
            "return": [
                "str",
                "int",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "bytes",
                    "Union[str,dict]"
                ]
            }
        },
        "SQSBroker.get_declared_queues": {
            "name": "get_declared_queues",
            "location": 158,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQSBroker.get_declared_delay_queues": {
            "name": "get_declared_delay_queues",
            "location": 161,
            "return": [
                "Set[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SQSConsumer.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue": [
                    "int",
                    "Dict[str,Any]",
                    "List[int]",
                    "Optional[List[Any]]",
                    "None"
                ],
                "prefetch": [
                    "int",
                    "str",
                    "None",
                    "Optional[int]",
                    "bool"
                ],
                "timeout": [
                    "int",
                    "Dict[str,Any]",
                    "List[int]",
                    "Optional[List[Any]]",
                    "None"
                ]
            }
        },
        "_SQSConsumer.ack": {
            "name": "ack",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "_SQSConsumer.requeue": {
            "name": "requeue",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "messages": [
                    "str",
                    "bool",
                    "Callable",
                    "logging.Logger",
                    "int"
                ]
            }
        },
        "_SQSConsumer.__next__": {
            "name": "__next__",
            "location": 201,
            "return": [
                "None",
                "str",
                "Exception",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SQSMessage.__init__": {
            "name": "__init__",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sqs_message": [
                    "int",
                    "float",
                    "bool"
                ],
                "message": [
                    "bool",
                    "Dict[str,Any]",
                    "Callable[[Any,Any],bool]",
                    "Callable[A,bool]"
                ]
            }
        }
    },
    "dramatiq_sqs-master/dramatiq_sqs/__init__.py": {},
    "dramatiq_sqs-master/tests/conftest.py": {
        "broker": {
            "name": "broker",
            "location": 19,
            "return": [
                "typing.Generator[SQSBroker]"
            ],
            "arguments": {}
        },
        "queue_name": {
            "name": "queue_name",
            "location": 40,
            "return": [
                "Text",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "broker": [
                    "Iterable[Tuple[int,Any]]",
                    "str",
                    "Iterable[tuple[Union[int,Any]]]",
                    "bool"
                ]
            }
        },
        "worker": {
            "name": "worker",
            "location": 45,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "broker": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "dramatiq_sqs-master/tests/test_broker.py": {
        "test_can_enqueue_and_process_messages": {
            "name": "test_can_enqueue_and_process_messages",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str",
                    "int"
                ],
                "worker": [
                    "str",
                    "int"
                ],
                "queue_name": [
                    "str",
                    "int"
                ]
            }
        },
        "test_limits_prefetch_while_if_queue_is_full": {
            "name": "test_limits_prefetch_while_if_queue_is_full",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str",
                    "int"
                ],
                "worker": [
                    "str",
                    "int"
                ],
                "queue_name": [
                    "str",
                    "int"
                ]
            }
        },
        "test_can_enqueue_delayed_messages": {
            "name": "test_can_enqueue_delayed_messages",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str",
                    "int"
                ],
                "worker": [
                    "str",
                    "int"
                ],
                "queue_name": [
                    "str",
                    "int"
                ]
            }
        },
        "test_cant_delay_messages_for_longer_than_15_seconds": {
            "name": "test_cant_delay_messages_for_longer_than_15_seconds",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str",
                    "int"
                ],
                "queue_name": [
                    "str",
                    "int"
                ]
            }
        },
        "test_cant_enqueue_messages_that_are_too_large": {
            "name": "test_cant_enqueue_messages_that_are_too_large",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str",
                    "int"
                ],
                "queue_name": [
                    "str",
                    "int"
                ]
            }
        },
        "test_retention_period_is_validated": {
            "name": "test_retention_period_is_validated",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_can_requeue_consumed_messages": {
            "name": "test_can_requeue_consumed_messages",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "broker": [
                    "str",
                    "Mapping[str, Any]"
                ],
                "queue_name": [
                    "str",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        },
        "test_creates_dead_letter_queue": {
            "name": "test_creates_dead_letter_queue",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tags_queues_on_create": {
            "name": "test_tags_queues_on_create",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_can_enqueue_and_process_messages.do_work": {
            "name": "do_work",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "x": []
            }
        },
        "test_limits_prefetch_while_if_queue_is_full.do_work": {
            "name": "do_work",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "x": []
            }
        },
        "test_can_enqueue_delayed_messages.do_work": {
            "name": "do_work",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "x": []
            }
        },
        "test_cant_delay_messages_for_longer_than_15_seconds.do_work": {
            "name": "do_work",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cant_enqueue_messages_that_are_too_large.do_work": {
            "name": "do_work",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "s": []
            }
        },
        "test_can_requeue_consumed_messages.do_work": {
            "name": "do_work",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dramatiq_sqs-master/tests/test_utils.py": {
        "test_chunk_can_split_iterators_into_chunks": {
            "name": "test_chunk_can_split_iterators_into_chunks",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dramatiq_sqs-master/tests/__init__.py": {}
}
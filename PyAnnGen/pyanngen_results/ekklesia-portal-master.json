{
    "ekklesia-portal-master/consoleenv.py": {},
    "ekklesia-portal-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/0b17ab7f0a04_add_proposition_submitter_invitation_key.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/24e8f6789a15_rename_auid_to_sub.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/2ef4af95efe9_varchar_to_text_date_to_datetime.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/334e65ad89c0_add_propositions_visibility.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/45e46ee4911f_add_proposition_external_fields.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/58d61f975f05_add_customizable_text.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/6d782ad96592_empty_default_for_proposition_external_fields.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/88f61bc7227e_add_datetime_suffix__at_to_proposition_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/911c994268aa_add_propositionnotes.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/9f82f82119dd_constraint_naming_convention.py": {
        "rename_constraint": {
            "name": "rename_constraint",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "table": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "None"
                ],
                "current_name": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "None"
                ],
                "new_name": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "None"
                ]
            }
        },
        "upgrade": {
            "name": "upgrade",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/a4817cb50cc4_add_department_exporter_settings.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/a6b28eb78241_votingphase_voting_module_data.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/d3e7679ab5e3_vvvote_voting.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/e2ce064655e8_votingphase_voting_module_data.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/e9da2a1d0a47_add_document_and_changeset_tables.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/alembic/versions/fce689b4e91f_add_proposition_author.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/scripts/create_admin_user.py": {
        "find_user": {
            "name": "find_user",
            "location": 11,
            "return": [
                "Optional[ekklesia_portal.datamodel.User]"
            ],
            "arguments": {
                "session": [
                    "str",
                    "sqlalchemy.orm.session.Session",
                    "sqlalchemy.orm.Session",
                    "List[str]"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "create_user": {
            "name": "create_user",
            "location": 16,
            "return": [
                "ekklesia_portal.datamodel.User"
            ],
            "arguments": {
                "session": [
                    "str",
                    "set",
                    "List[int]",
                    "apistar.backends.sqlalchemy_backend.Session",
                    "grouper.models.base.session.Session"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "reset_password": [
                    "bool"
                ],
                "config": [
                    "Optional[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/scripts/create_vvvote_voting.py": {
        "main": {
            "name": "main",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "voting_phase_name": [
                    "str"
                ],
                "voting_module_name": [
                    "str"
                ],
                "update_existing": [
                    "bool"
                ],
                "out": [
                    "Optional[str]"
                ],
                "config": [
                    "Optional[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/scripts/drop_all.py": {},
    "ekklesia-portal-master/scripts/export_proposition_csv.py": {
        "load_ballots": {
            "name": "load_ballots",
            "location": 10,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "log_level": [
                    "typing.Text",
                    "Optional[dict]",
                    "Dict[str, str]",
                    "list"
                ]
            }
        },
        "convert_ballots_to_proposition_rows": {
            "name": "convert_ballots_to_proposition_rows",
            "location": 25,
            "return": [
                "int",
                "list[list[typing.Union[typing.Text,list[],int,float,None]]]"
            ],
            "arguments": {
                "instance_name": [
                    "list",
                    "list[]",
                    "Union[int, float]",
                    "Optional[str]",
                    "int",
                    "float",
                    "str",
                    "None"
                ],
                "ballots": [
                    "list[str]",
                    "List[str]",
                    "Literal",
                    "Optional[List[str]]",
                    "Optional[bool]"
                ],
                "log_level": [
                    "typing.Text",
                    "List[str]",
                    "Literal",
                    "Optional[List[str]]",
                    "Optional[bool]"
                ]
            }
        },
        "write_csv_file": {
            "name": "write_csv_file",
            "location": 37,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "int",
                    "bool"
                ],
                "proposition_rows": [
                    "bool",
                    "list[list[int]]",
                    "int",
                    "dict[str, str]",
                    "List[List[int]]",
                    "list[str]",
                    "Dict[str, str]",
                    "List[str]"
                ],
                "log_level": [
                    "typing.Text",
                    "bool",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/scripts/import_document.py": {
        "load_document_content": {
            "name": "load_document_content",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "int"
                ]
            }
        },
        "find_document": {
            "name": "find_document",
            "location": 19,
            "return": [
                "ekklesia_portal.datamodel.Document"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "department": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/scripts/import_proposition_json.py": {
        "get_proposition_type": {
            "name": "get_proposition_type",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "Set[str]"
                ]
            }
        },
        "load_proposition_json_file": {
            "name": "load_proposition_json_file",
            "location": 26,
            "return": [
                "dict[typing.Text, list[]]",
                "bool",
                "str"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "Dict[str, Any]"
                ],
                "log_level": [
                    "typing.Text",
                    "List[str]",
                    "bool",
                    "List[Tuple[str, str]]",
                    "int"
                ]
            }
        },
        "insert_proposition": {
            "name": "insert_proposition",
            "location": 75,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "department_name": [
                    "str",
                    "Optional[str]",
                    "sqlalchemy.orm.Session"
                ],
                "voting_phase_name": [
                    "str",
                    "Optional[str]",
                    "labm8.py.sqlutil.Session"
                ],
                "title": [
                    "str",
                    "alerta.database.base.Query",
                    "Optional[str]"
                ],
                "abstract": [
                    "str",
                    "alerta.database.base.Query",
                    "Optional[str]"
                ],
                "content": [
                    "str",
                    "alerta.database.base.Query",
                    "Optional[str]"
                ],
                "motivation": [
                    "str",
                    "alerta.database.base.Query",
                    "Optional[str]"
                ],
                "author": [
                    "str",
                    "zerver.models.Message",
                    "Optional[str]"
                ],
                "tags": [
                    "List[str]",
                    "Set[str]",
                    "str",
                    "list"
                ],
                "voting_identifier": [
                    "str",
                    "alerta.database.base.Query",
                    "Optional[str]"
                ],
                "external_discussion_url": [
                    "str",
                    "alerta.database.base.Query",
                    "Optional[str]"
                ],
                "type": [
                    "Optional[str]",
                    "Optional[Tuple[str]]",
                    "List[str]",
                    "List[Tuple]",
                    "str"
                ],
                "log_level": [
                    "typing.Text",
                    "str",
                    "bool",
                    "Iterable[Tuple[str, str, str]]",
                    "List[str]",
                    "Callable[[], float]"
                ]
            }
        }
    },
    "ekklesia-portal-master/scripts/import_voting_result.py": {
        "load_and_add_voting_result": {
            "name": "load_and_add_voting_result",
            "location": 10,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "float",
                    "Sequence[int]"
                ],
                "voting_phase_name": [
                    "str",
                    "labm8.py.sqlutil.Session",
                    "Optional[str]"
                ],
                "log_level": [
                    "typing.Text",
                    "str",
                    "list",
                    "Optional[List[str]]",
                    "bool",
                    "List[str]",
                    "bytes"
                ]
            }
        }
    },
    "ekklesia-portal-master/scripts/organize_ballots.py": {
        "load_and_organize": {
            "name": "load_and_organize",
            "location": 11,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "int",
                    "bool",
                    "dict"
                ],
                "voting_phase": [
                    "str",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "list[str]",
                    "List[str]",
                    "labm8.py.sqlutil.Session"
                ],
                "log_level": [
                    "typing.Text",
                    "dict",
                    "bool",
                    "Dict[str, Any]",
                    "Optional[List[str]]",
                    "Callable"
                ]
            }
        },
        "fixup_ballots": {
            "name": "fixup_ballots",
            "location": 44,
            "return": [
                "dict",
                "str",
                "Dict[str, Any]",
                "int",
                "Dict[str, Dict[str, str]]"
            ],
            "arguments": {
                "voting_phase": [
                    "int",
                    "Sequence[str]",
                    "str",
                    "typing.Sequence[str]",
                    "Optional[int]",
                    "None",
                    "Optional[Callable[[Type, Dict], Any]]",
                    "typing.Callable[Type,Dict, typing.Any]"
                ],
                "log_level": [
                    "typing.Text",
                    "str",
                    "bool",
                    "Optional[float]",
                    "Mapping",
                    "List[\"ElementHandle\"]"
                ]
            }
        },
        "longest_common_prefix_len": {
            "name": "longest_common_prefix_len",
            "location": 64,
            "return": [
                "int"
            ],
            "arguments": {
                "strings": [
                    "str",
                    "List[str]",
                    "list[str]",
                    "Set[str]",
                    "set[str]",
                    "Sequence[Any]",
                    "typing.Sequence[typing.Any]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "ballot_name": {
            "name": "ballot_name",
            "location": 69,
            "return": [
                "str",
                "int",
                "Dict[str, Any]",
                "Container[str]",
                "bool",
                "Union[List, Dict]"
            ],
            "arguments": {
                "head_proposition": [
                    "int",
                    "bytes",
                    "Tuple[List[Any], List[str]]",
                    "tuple[typing.Union[list[typing.Any],list[str]]]",
                    "str",
                    "Optional[Any]",
                    "typing.Any",
                    "Callable",
                    "None",
                    "typing.Callable[, ]",
                    "bool"
                ],
                "tail_propositions": [
                    "tuple[typing.Union[int,int]]",
                    "Tuple[int, int]",
                    "bool",
                    "Optional[float]",
                    "int"
                ],
                "log_level": [
                    "typing.Text",
                    "bool",
                    "List[int]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/app.py": {
        "app_setting_section": {
            "name": "app_setting_section",
            "location": 31,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,bool,None,list[typing.Text],dict[typing.Text, typing.Text]]]",
                "float",
                "str"
            ],
            "arguments": {}
        },
        "database_setting_section": {
            "name": "database_setting_section",
            "location": 53,
            "return": [
                "dict[typing.Text, typing.Text]",
                "str",
                "bool",
                "Iterable[str]",
                "float"
            ],
            "arguments": {}
        },
        "share_setting_section": {
            "name": "share_setting_section",
            "location": 58,
            "return": [
                "bool",
                "dict[typing.Text, typing.Union[bool,typing.Text,dict[typing.Text, typing.Text]]]"
            ],
            "arguments": {}
        },
        "_convert_lid_or_legacy_id": {
            "name": "_convert_lid_or_legacy_id",
            "location": 78,
            "return": [
                "LID",
                "int",
                "Dict[str, int]"
            ],
            "arguments": {
                "value": [
                    "str",
                    "list",
                    "tracim.models.auth.User",
                    "bool",
                    "bytes"
                ]
            }
        },
        "convert_lid": {
            "name": "convert_lid",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_identity_policy": {
            "name": "get_identity_policy",
            "location": 91,
            "return": [
                "EkklesiaPortalIdentityPolicy",
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "verify_identity": {
            "name": "verify_identity",
            "location": 96,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "create_or_update_user": {
            "name": "create_or_update_user",
            "location": 101,
            "return": [
                "None",
                "Dict[str, Tuple[int, int]]",
                "str",
                "bytes"
            ],
            "arguments": {
                "request": [
                    "Optional[int]",
                    "bool",
                    "str"
                ],
                "ekklesia_auth": [
                    "Optional[int]",
                    "bool",
                    "str"
                ]
            }
        },
        "get_oauth_token_from_user": {
            "name": "get_oauth_token_from_user",
            "location": 158,
            "return": [
                "None",
                "Optional[str]",
                "Optional[Dict]",
                "server.models.User",
                "Optional[List[str]]",
                "bool"
            ],
            "arguments": {
                "app": [
                    "morepath.Request"
                ],
                "request": []
            }
        },
        "set_oauth_token_from_user": {
            "name": "set_oauth_token_from_user",
            "location": 167,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "app": [
                    "dict",
                    "str",
                    "int",
                    "Optional[bytes]"
                ],
                "request": [
                    "str",
                    "dict"
                ],
                "token": [
                    "str",
                    "dict"
                ]
            }
        },
        "mount_ekklesia_auth_path": {
            "name": "mount_ekklesia_auth_path",
            "location": 172,
            "return": [
                "\"App\"",
                "EkklesiaAuthPathApp"
            ],
            "arguments": {}
        },
        "get_app_settings": {
            "name": "get_app_settings",
            "location": 178,
            "return": [
                "dict[, ]",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "settings_filepath": [
                    "None",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "get_locale": {
            "name": "get_locale",
            "location": 197,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "request": [
                    "dict"
                ]
            }
        },
        "make_wsgi_app": {
            "name": "make_wsgi_app",
            "location": 209,
            "return": [
                "\"App\"",
                "App"
            ],
            "arguments": {
                "settings_filepath": [
                    "None",
                    "Dict[str, Any]",
                    "str"
                ],
                "testing": [
                    "bool",
                    "str",
                    "Mapping[str, Any]"
                ]
            }
        },
        "create_or_update_user.remember": {
            "name": "remember",
            "location": 152,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "response": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/datamodel.py": {
        "User.managed_departments": {
            "name": "managed_departments",
            "location": 86,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GroupMember.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member": [
                    "None"
                ],
                "group": [
                    "None"
                ]
            }
        },
        "DepartmentMember.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "department": [
                    "None"
                ],
                "member": [
                    "None"
                ],
                "is_admin": [
                    "bool"
                ]
            }
        },
        "AreaMember.__init__": {
            "name": "__init__",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "area": [
                    "None"
                ],
                "member": [
                    "None"
                ]
            }
        },
        "VotingPhase.ballots_can_be_added": {
            "name": "ballots_can_be_added",
            "location": 361,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proposition.secret_voters_count": {
            "name": "secret_voters_count",
            "location": 466,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proposition.secret_voters_user_count": {
            "name": "secret_voters_user_count",
            "location": 470,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proposition.secret_voting_quorum": {
            "name": "secret_voting_quorum",
            "location": 474,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proposition.support_by_user": {
            "name": "support_by_user",
            "location": 482,
            "return": [
                "Supporter"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Proposition.user_is_submitter": {
            "name": "user_is_submitter",
            "location": 487,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Proposition.active_supporter_count": {
            "name": "active_supporter_count",
            "location": 499,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Proposition.submitter_count": {
            "name": "submitter_count",
            "location": 504,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proposition.ready_to_submit": {
            "name": "ready_to_submit",
            "location": 508,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionTag.__init__": {
            "name": "__init__",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "None"
                ],
                "proposition": [
                    "None"
                ]
            }
        },
        "PropositionNote.__init__": {
            "name": "__init__",
            "location": 549,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "id": [],
                "notes": [
                    "None"
                ],
                "vote": []
            }
        },
        "ArgumentRelation.user_vote": {
            "name": "user_vote",
            "location": 579,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "ArgumentRelation.score": {
            "name": "score",
            "location": 583,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/enums.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/identity_policy.py": {
        "UserIdentity.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "Optional[Any]",
                    "typing.Any",
                    "str",
                    "Optional[str]",
                    "None",
                    "bool",
                    "dict",
                    "dict[, ]"
                ],
                "refresh_user_object": [
                    "str",
                    "Optional[str]",
                    "None",
                    "bool",
                    "Dict[str, Optional[str]]",
                    "dict[str, typing.Union[str,None]]",
                    "Optional[bool]",
                    "Iterable[str]",
                    "core.models.User"
                ],
                "has_global_admin_permissions": [
                    "bool",
                    "int",
                    "Dict[str, str]"
                ]
            }
        },
        "UserIdentity.user": {
            "name": "user",
            "location": 21,
            "return": [
                "int",
                "bool",
                "str",
                "Mapping[str, Any]",
                "List[cmk.gui.plugins.visuals.utils.Filter]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EkklesiaPortalIdentityPolicy.remember": {
            "name": "remember",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "float"
                ],
                "request": [
                    "str",
                    "Optional[Dict]",
                    "dict[, ]",
                    "Optional[str]",
                    "None",
                    "Optional",
                    "typing.Optional[]",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "identity": [
                    "str",
                    "Optional[Dict]",
                    "dict[, ]",
                    "Optional[str]",
                    "None",
                    "Optional",
                    "typing.Optional[]",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        },
        "EkklesiaPortalIdentityPolicy.identify": {
            "name": "identify",
            "location": 32,
            "return": [
                "NoIdentity",
                "str",
                "MutableMapping[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool"
                ]
            }
        },
        "EkklesiaPortalIdentityPolicy.forget": {
            "name": "forget",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "float"
                ],
                "request": [
                    "float",
                    "purplship.core.utils.Element"
                ]
            }
        },
        "EkklesiaPortalIdentityPolicy.identify.refresh_user_object": {
            "name": "refresh_user_object",
            "location": 44,
            "return": [
                "bool",
                "Dict[str, Any]",
                "Exception",
                "Dict[str, str]",
                "dict"
            ],
            "arguments": {
                "user": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/pathtool.py": {
        "paths": {
            "name": "paths",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/permission.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/runserver.py": {
        "stackdump_setup": {
            "name": "stackdump_setup",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "stackdump_setup.dumpstacks": {
            "name": "dumpstacks",
            "location": 41,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "signal": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ],
                "frame": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/runserver_production_deps.py": {
        "run": {
            "name": "run",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/whytool.py": {
        "why_tool": {
            "name": "why_tool",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/__init__.py": {
        "MyEncoder.default": {
            "name": "default",
            "location": 11,
            "return": [
                "str",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bytes",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument/argument_cells.py": {
        "ArgumentCell.details_link": {
            "name": "details_link",
            "location": 14,
            "return": [
                "str",
                "bool",
                "IO[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument/argument_contracts.py": {
        "ArgumentForm.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Optional[str]",
                    "Optional[bool]",
                    "dict",
                    "List[int]"
                ],
                "action": [
                    "Optional[str]",
                    "Optional[bool]",
                    "dict",
                    "List[int]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument/argument_views.py": {
        "argument": {
            "name": "argument",
            "location": 12,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "request": [
                    "str",
                    "int"
                ],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 18,
            "return": [
                "bool",
                "list",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument/__init__.py": {
        "argument_concept": {
            "name": "argument_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument_relation/argument_relations.py": {
        "ArgumentRelations.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "proposition_id": [
                    "str",
                    "int",
                    "None",
                    "bytes"
                ],
                "relation_type": [
                    "str",
                    "None",
                    "bool",
                    "Optional[Sequence[str]]",
                    "typing.Sequence[str]",
                    "Union[None, str, int]",
                    "dict[str, str]",
                    "Optional[str]",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument_relation/argument_relation_cells.py": {
        "ArgumentRelationCell.show_voting": {
            "name": "show_voting",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.show_ca_button": {
            "name": "show_ca_button",
            "location": 20,
            "return": [
                "None",
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.vote": {
            "name": "vote",
            "location": 23,
            "return": [
                "bool",
                "Optional[Any]",
                "str",
                "Union[int, float, complex]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.proposition_url": {
            "name": "proposition_url",
            "location": 26,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.argument_url": {
            "name": "argument_url",
            "location": 29,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.proposition_title": {
            "name": "proposition_title",
            "location": 32,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.argument_title": {
            "name": "argument_title",
            "location": 39,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.upvote_button_disabled_class": {
            "name": "upvote_button_disabled_class",
            "location": 42,
            "return": [
                "typing.Text",
                "bool",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.downvote_button_disabled_class": {
            "name": "downvote_button_disabled_class",
            "location": 45,
            "return": [
                "typing.Text",
                "bool",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.revoke_vote_button_disabled_class": {
            "name": "revoke_vote_button_disabled_class",
            "location": 48,
            "return": [
                "typing.Text",
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArgumentRelationCell.vote_action_url": {
            "name": "vote_action_url",
            "location": 51,
            "return": [
                "str",
                "bool",
                "int",
                "List[str]",
                "List[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewArgumentForPropositionCell.proposition": {
            "name": "proposition",
            "location": 57,
            "return": [
                "Dict[str, Any]",
                "int",
                "List[str]",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewArgumentForPropositionCell.relation_type": {
            "name": "relation_type",
            "location": 60,
            "return": [
                "str",
                "Type"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument_relation/argument_relation_contracts.py": {
        "ArgumentForPropositionForm.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "str"
                ],
                "action": [
                    "Dict[str, Any]",
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument_relation/argument_relation_views.py": {
        "argument_relation_create_permission": {
            "name": "argument_relation_create_permission",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "argument_relation_vote_permission": {
            "name": "argument_relation_vote_permission",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "argument_relation": {
            "name": "argument_relation",
            "location": 34,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "request": [
                    "int",
                    "str"
                ],
                "proposition_id": [
                    "int",
                    "str"
                ],
                "argument_id": [
                    "int",
                    "str"
                ]
            }
        },
        "argument_relations": {
            "name": "argument_relations",
            "location": 42,
            "return": [
                "int",
                "dict"
            ],
            "arguments": {
                "request": [
                    "int",
                    "Iterable[int]",
                    "Optional[str]"
                ],
                "proposition_id": [
                    "str"
                ],
                "relation_type": [
                    "str"
                ]
            }
        },
        "show_argument_relation": {
            "name": "show_argument_relation",
            "location": 47,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "post_vote": {
            "name": "post_vote",
            "location": 52,
            "return": [
                "int",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "new": {
            "name": "new",
            "location": 69,
            "return": [
                "bool",
                "Dict[str, Tuple[str, str]]",
                "Dict[str, Union[str, int]]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "Exception"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 84,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "str",
                    "routemaster.app.App"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/argument_relation/__init__.py": {
        "argument_relation_concept": {
            "name": "argument_relation_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ballot/ballots.py": {
        "Ballots.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "department": [
                    "None",
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Ballots.ballots": {
            "name": "ballots",
            "location": 11,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Dict[str, str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "Ballots.form": {
            "name": "form",
            "location": 19,
            "return": [
                "ekklesia_portal.concepts.ballot.ballot_contracts.BallotForm"
            ],
            "arguments": {
                "self": [],
                "action": [],
                "request": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ballot/ballot_cells.py": {
        "BallotsCell.ballots": {
            "name": "ballots",
            "location": 15,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Optional[List[str]]",
                "List[\"Node\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BallotCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 26,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BallotCell.voting_phase_title": {
            "name": "voting_phase_title",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditBallotCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 38,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ballot/ballot_contracts.py": {
        "BallotForm.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int"
                ]
            }
        },
        "BallotForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ballot/ballot_helper.py": {
        "items_for_ballot_select_widgets": {
            "name": "items_for_ballot_select_widgets",
            "location": 8,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {
                "ballot": [
                    "str",
                    "Literal",
                    "dict",
                    "Optional[int]",
                    "Container[\"Taxon\"]"
                ],
                "departments": [
                    "str",
                    "Callable",
                    "List[int]",
                    "Optional[float]",
                    "int"
                ],
                "proposition_types": [
                    "str",
                    "Type[T]",
                    "int",
                    "List[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ballot/ballot_views.py": {
        "ballot_edit_permission": {
            "name": "ballot_edit_permission",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str"
                ],
                "model": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "ballots": {
            "name": "ballots",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "ballot": {
            "name": "ballot",
            "location": 27,
            "return": [
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ],
                "id": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 32,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "Dict[str, str]",
                    "Dict[str, float]"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bytes"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 44,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 50,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "Optional[Dict[str, Any]]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ballot/__init__.py": {
        "ballot_concept": {
            "name": "ballot_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/customizable_text/customizable_texts.py": {
        "CustomizableTexts.customizable_texts": {
            "name": "customizable_texts",
            "location": 6,
            "return": [
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/customizable_text/customizable_text_cells.py": {
        "CustomizableTextsCell.customizable_texts": {
            "name": "customizable_texts",
            "location": 13,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "dict",
                "Set[str]",
                "list",
                "Union[int, None]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomizableTextsCell.show_new_button": {
            "name": "show_new_button",
            "location": 16,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomizableTextCell.can_edit": {
            "name": "can_edit",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomizableTextCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 29,
            "return": [
                "int",
                "bool",
                "Optional[BaseException]",
                "Union[str, Tuple[str, ...]]",
                "str",
                "Type[BaseException]",
                "T"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/customizable_text/customizable_text_contracts.py": {
        "CustomizableTextForm.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "Optional[float]",
                    "float",
                    "None"
                ],
                "action": [
                    "str",
                    "Optional[float]",
                    "float",
                    "None"
                ]
            }
        },
        "CustomizableTextForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/customizable_text/customizable_text_helper.py": {
        "customizable_text": {
            "name": "customizable_text",
            "location": 4,
            "return": [
                "str",
                "type",
                "None",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {
                "request": [
                    "str"
                ],
                "name": [
                    "str",
                    "None",
                    "Optional[str]",
                    "int",
                    "Optional[int]",
                    "bool"
                ],
                "lang": [
                    "Optional[str]",
                    "None",
                    "List[int]",
                    "int",
                    "str",
                    "Dict[str, str]",
                    "list[int]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/customizable_text/customizable_text_views.py": {
        "customizable_texts_create_permission": {
            "name": "customizable_texts_create_permission",
            "location": 14,
            "return": [],
            "arguments": {
                "identity": [
                    "Dict[str, Optional[str]]",
                    "List[str]",
                    "dict"
                ],
                "model": [
                    "set",
                    "List[str]",
                    "Type",
                    "bool"
                ],
                "permission": [
                    "set",
                    "List[str]",
                    "Type",
                    "bool"
                ]
            }
        },
        "customizable_text_edit_permission": {
            "name": "customizable_text_edit_permission",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "identity": [
                    "bool",
                    "dict"
                ],
                "model": [
                    "bool",
                    "Callable",
                    "int"
                ],
                "permission": [
                    "bool",
                    "Callable",
                    "int"
                ]
            }
        },
        "customizable_texts": {
            "name": "customizable_texts",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "customizable_text": {
            "name": "customizable_text",
            "location": 38,
            "return": [
                "Dict[str, str]",
                "int",
                "str",
                "Dict[str, Type]",
                "Dict[str, float]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "bool",
                    "Optional[str]"
                ],
                "name": [
                    "str",
                    "bool",
                    "Optional[str]"
                ],
                "lang": [
                    "str",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 44,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "new": {
            "name": "new",
            "location": 51,
            "return": [
                "Optional[Union[str, Any]]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "create": {
            "name": "create",
            "location": 60,
            "return": [
                "int",
                "Exception"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Tuple[int]",
                    "Dict[str, Any]"
                ],
                "appstruct": [
                    "Dict[str, Optional[str]]",
                    "dict",
                    "bool"
                ]
            }
        },
        "customizable_text_redirect": {
            "name": "customizable_text_redirect",
            "location": 69,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 77,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "edit": {
            "name": "edit",
            "location": 84,
            "return": [
                "DefaultDict[int, List[Any]]",
                "OrderedDict",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 93,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        },
        "CustomizableTextRedirect.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/customizable_text/__init__.py": {
        "customizable_text_concept": {
            "name": "customizable_text_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "str",
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/department/departments.py": {
        "Departments.departments": {
            "name": "departments",
            "location": 6,
            "return": [
                "Mapping",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/department/department_cells.py": {
        "DepartmentsCell.departments": {
            "name": "departments",
            "location": 13,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Optional[List[str]]",
                "List[\"Node\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DepartmentsCell.show_new_button": {
            "name": "show_new_button",
            "location": 16,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DepartmentCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 26,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/department/department_contracts.py": {
        "DepartmentForm.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int"
                ]
            }
        },
        "DepartmentForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/department/department_helper.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/department/department_views.py": {
        "departments_create_permission": {
            "name": "departments_create_permission",
            "location": 15,
            "return": [
                "bool",
                "Tuple[float, float, float]",
                "int",
                "str"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "List[str]",
                    "Dict[str, Optional[str]]"
                ],
                "model": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ],
                "permission": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ]
            }
        },
        "department_edit_permission": {
            "name": "department_edit_permission",
            "location": 20,
            "return": [
                "str",
                "Tuple[float, float, float]",
                "int",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "departments": {
            "name": "departments",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "department": {
            "name": "department",
            "location": 30,
            "return": [
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ],
                "id": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 35,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "new": {
            "name": "new",
            "location": 41,
            "return": [
                "str",
                "Sequence[str]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 49,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ],
                "appstruct": [
                    "Callable",
                    "Set[str]",
                    "str"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 57,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "routemaster.app.App"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 63,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 71,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/department/__init__.py": {
        "department_concept": {
            "name": "department_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/document/documents.py": {
        "Documents.documents": {
            "name": "documents",
            "location": 6,
            "return": [
                "Mapping",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/document/document_cells.py": {
        "DocumentsCell.documents": {
            "name": "documents",
            "location": 18,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Optional[List[str]]",
                "List[\"Node\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentsCell.show_new_button": {
            "name": "show_new_button",
            "location": 21,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 31,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentCell.propose_change_url": {
            "name": "propose_change_url",
            "location": 35,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentCell.department_name": {
            "name": "department_name",
            "location": 38,
            "return": [
                "Type",
                "Optional[BaseException]",
                "type",
                "Optional[str]",
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentCell.subject_area_name": {
            "name": "subject_area_name",
            "location": 41,
            "return": [
                "str",
                "List[str]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentCell.proposition_type_name": {
            "name": "proposition_type_name",
            "location": 44,
            "return": [
                "BaseException",
                "Exception",
                "Type[BaseException]",
                "type",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentProposeChangeCell.text_with_propose_change": {
            "name": "text_with_propose_change",
            "location": 53,
            "return": [
                "Markup",
                "int",
                "List[str]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentProposeChangeCell.area_name": {
            "name": "area_name",
            "location": 60,
            "return": [
                "str",
                "List[str]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentProposeChangeCell.department_name": {
            "name": "department_name",
            "location": 63,
            "return": [
                "Type",
                "Optional[BaseException]",
                "type",
                "Optional[str]",
                "str",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentProposeChangeCell.explanation": {
            "name": "explanation",
            "location": 66,
            "return": [
                "str",
                "Iterable[str]",
                "Match",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewDocumentCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 73,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditDocumentCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 88,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/document/document_contracts.py": {
        "DocumentForm.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int"
                ]
            }
        },
        "DocumentForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "Tuple[str, Any]",
                    "Match[str]",
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/document/document_helper.py": {
        "items_for_document_select_widgets": {
            "name": "items_for_document_select_widgets",
            "location": 13,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {
                "model": [
                    "str",
                    "Tuple[str]",
                    "bool",
                    "tuple[str]",
                    "list",
                    "list[]"
                ],
                "departments": [
                    "str",
                    "typing.Callable[, ]",
                    "Callable",
                    "typing.Iterable[typing.Hashable]",
                    "Iterable[Hashable]",
                    "T"
                ],
                "proposition_types": [
                    "str",
                    "int",
                    "list[str]",
                    "Type[T]",
                    "List[str]"
                ]
            }
        },
        "_handle_double_quote": {
            "name": "_handle_double_quote",
            "location": 24,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "s": [
                    "bool",
                    "Optional[Dict[str, Any]]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "t": [
                    "str",
                    "Set[str]",
                    "set"
                ]
            }
        },
        "_handle_single_quote": {
            "name": "_handle_single_quote",
            "location": 29,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "s": [
                    "bool",
                    "Optional[Dict[str, Any]]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "t": [
                    "str",
                    "Set[str]",
                    "set"
                ]
            }
        },
        "_handle_key_value": {
            "name": "_handle_key_value",
            "location": 34,
            "return": [
                "list[str]",
                "str",
                "int",
                "Tuple[str, str]"
            ],
            "arguments": {
                "s": [
                    "List[Type]",
                    "list[typing.Type]",
                    "List[str]",
                    "list[str]"
                ],
                "t": [
                    "str",
                    "float",
                    "type"
                ]
            }
        },
        "_handle_word": {
            "name": "_handle_word",
            "location": 38,
            "return": [
                "Tuple[(Union[(str, _T1)], Any)]"
            ],
            "arguments": {
                "s": [
                    "bool",
                    "Optional[Dict[str, Any]]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "t": [
                    "_T1"
                ]
            }
        },
        "_get_attrs": {
            "name": "_get_attrs",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "str": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "markdown_with_propose_change": {
            "name": "markdown_with_propose_change",
            "location": 123,
            "return": [
                "str"
            ],
            "arguments": {
                "url_template": [
                    "str",
                    "int"
                ],
                "text": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_section_from_document": {
            "name": "get_section_from_document",
            "location": 128,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "document": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "section_identifier": [
                    "str"
                ]
            }
        },
        "ProposeChangeTreeprocessor.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "str",
                    "bytes"
                ],
                "url_template": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "ProposeChangeTreeprocessor.run": {
            "name": "run",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "doc": [
                    "str",
                    "int",
                    "bool",
                    "list"
                ]
            }
        },
        "ProposeChangeTreeprocessor.make_link": {
            "name": "make_link",
            "location": 95,
            "return": [
                "etree.Element"
            ],
            "arguments": {
                "self": [],
                "header_text": [
                    "typing.Iterable[str]",
                    "str",
                    "Iterable[str]",
                    "None",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "List[Dict[str, str]]",
                    "List[str]"
                ],
                "attrs": [
                    "str",
                    "None",
                    "Optional[str]",
                    "Optional[int]",
                    "int",
                    "Optional[List[str]]",
                    "list[str]"
                ]
            }
        },
        "ProposeChangeExtension.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url_template": [
                    "str",
                    "float",
                    "Type['GenericList']",
                    "typing.Type"
                ]
            }
        },
        "ProposeChangeExtension.extendMarkdown": {
            "name": "extendMarkdown",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "md": [
                    "int",
                    "Callable",
                    "str"
                ],
                "md_globals": [
                    "int",
                    "str",
                    "typing.Iterable[_]",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "ProposeChangeTreeprocessor.make_link.link": {
            "name": "link",
            "location": 97,
            "return": [
                "str",
                "list",
                "bool",
                "Iterable[str]",
                "int"
            ],
            "arguments": {
                "section": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/document/document_views.py": {
        "documents_create_permission": {
            "name": "documents_create_permission",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "List[str]",
                    "Dict[str, Optional[str]]"
                ],
                "model": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ],
                "permission": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ]
            }
        },
        "document_edit_permission": {
            "name": "document_edit_permission",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "documents": {
            "name": "documents",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "document": {
            "name": "document",
            "location": 35,
            "return": [
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ],
                "id": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 40,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "new": {
            "name": "new",
            "location": 46,
            "return": [
                "str",
                "Sequence[str]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 52,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ],
                "appstruct": [
                    "Callable",
                    "Set[str]",
                    "str"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 60,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "routemaster.app.App"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 66,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 72,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "ocfweb.docs.doc.Document"
                ],
                "appstruct": [
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        },
        "propose_change": {
            "name": "propose_change",
            "location": 78,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "Dict[Hashable, Iterable[Hashable]]",
                    "bytes",
                    "Dict[str, float]",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/document/__init__.py": {
        "document_concept": {
            "name": "document_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/index.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/login.py": {
        "Login.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "bool",
                    "None"
                ],
                "username": [
                    "str",
                    "bool",
                    "None"
                ],
                "password": [
                    "str",
                    "bool",
                    "None"
                ],
                "back_url": [
                    "str",
                    "None",
                    "Optional[str]"
                ],
                "from_redirect": [
                    "str",
                    "bool",
                    "None"
                ],
                "internal_login": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "Login.find_user": {
            "name": "find_user",
            "location": 20,
            "return": [
                "bool",
                "Optional[bool]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Login.verify_password": {
            "name": "verify_password",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "insecure_empty_password_ok": [
                    "str",
                    "Optional[List[str]]",
                    "list[str]",
                    "None"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/__init__.py": {
        "ekklesia_portal_concept": {
            "name": "ekklesia_portal_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/form.py": {
        "FormCell.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool",
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "form": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]",
                    "int",
                    "None",
                    "Optional[Dict[str, Any]]",
                    "Optional[int]"
                ],
                "form_data": [
                    "None",
                    "str",
                    "Optional[str]",
                    "dict[str, str]",
                    "Optional[Dict[str, str]]",
                    "typing.IO",
                    "Dict[str, Any]",
                    "Optional[IO[bytes]]"
                ],
                "model": [
                    "bool",
                    "str",
                    "None",
                    "dict",
                    "dict[, ]"
                ],
                "layout": [
                    "bool",
                    "str",
                    "None",
                    "dict",
                    "dict[, ]"
                ],
                "parent": [
                    "bool",
                    "str",
                    "None",
                    "dict",
                    "dict[, ]"
                ],
                "template_path": [
                    "bool",
                    "str",
                    "None",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "FormCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormCell.set_form_data": {
            "name": "set_form_data",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "form_data": [
                    "dict[, ]",
                    "dict",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "str",
                    "Mapping"
                ]
            }
        },
        "FormCell.form_html": {
            "name": "form_html",
            "location": 22,
            "return": [
                "Type",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewFormCell.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "Optional[str]",
                    "Dict[str, str]",
                    "None",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ],
                "form": [
                    "str",
                    "Optional[str]",
                    "Dict[str, str]",
                    "None",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ],
                "form_data": [
                    "Optional[str]",
                    "None",
                    "str",
                    "Dict[str, str]",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ],
                "model": [
                    "Optional[str]",
                    "None",
                    "str",
                    "Dict[str, str]",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ],
                "layout": [
                    "Optional[str]",
                    "None",
                    "str",
                    "Dict[str, str]",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ],
                "parent": [
                    "Optional[str]",
                    "None",
                    "str",
                    "Dict[str, str]",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ],
                "template_path": [
                    "Optional[str]",
                    "None",
                    "str",
                    "Dict[str, str]",
                    "List[str]",
                    "dict[str, str]",
                    "list[str]"
                ]
            }
        },
        "NewFormCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditFormCell.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "request": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "form": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "form_data": [
                    "str",
                    "None",
                    "Optional[str]",
                    "bool",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "layout": [
                    "str",
                    "None",
                    "Optional[str]",
                    "bool",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "parent": [
                    "str",
                    "None",
                    "Optional[str]",
                    "bool",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "template_path": [
                    "str",
                    "None",
                    "Optional[str]",
                    "bool",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        },
        "EditFormCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/index.py": {
        "IndexCell.scheduled_voting_phases": {
            "name": "scheduled_voting_phases",
            "location": 16,
            "return": [
                "int",
                "Dict[str, Any]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.insecure_development_mode_enabled": {
            "name": "insecure_development_mode_enabled",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.new_proposition_url": {
            "name": "new_proposition_url",
            "location": 24,
            "return": [
                "str",
                "bool",
                "Dict[str, Any]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.new_voting_phase_url": {
            "name": "new_voting_phase_url",
            "location": 27,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.ballots_url": {
            "name": "ballots_url",
            "location": 30,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.policies_url": {
            "name": "policies_url",
            "location": 33,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.proposition_types_url": {
            "name": "proposition_types_url",
            "location": 36,
            "return": [
                "int",
                "str",
                "List[type]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.departments_url": {
            "name": "departments_url",
            "location": 39,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.documents_url": {
            "name": "documents_url",
            "location": 42,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.customizable_texts_url": {
            "name": "customizable_texts_url",
            "location": 45,
            "return": [
                "int",
                "float",
                "bool",
                "Optional[float]",
                "Union[str, int, float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndexCell.welcome_text": {
            "name": "welcome_text",
            "location": 48,
            "return": [
                "typing.Text",
                "Dict[str, str]",
                "int",
                "str",
                "Dict[str, Type]",
                "Dict[str, float]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/layout.py": {
        "LayoutCell.language": {
            "name": "language",
            "location": 10,
            "return": [
                "str",
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.change_language_action": {
            "name": "change_language_action",
            "location": 13,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.flashed_messages": {
            "name": "flashed_messages",
            "location": 17,
            "return": [
                "str",
                "int",
                "Tuple[str, int]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.settings_languages": {
            "name": "settings_languages",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.page_url": {
            "name": "page_url",
            "location": 26,
            "return": [
                "str",
                "int",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.search_query": {
            "name": "search_query",
            "location": 29,
            "return": [
                "Dict[str, Any]",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.brand_title": {
            "name": "brand_title",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.plain_propositions_url": {
            "name": "plain_propositions_url",
            "location": 35,
            "return": [
                "str",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.voting_phases_url": {
            "name": "voting_phases_url",
            "location": 38,
            "return": [
                "str",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.pages_url": {
            "name": "pages_url",
            "location": 41,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.propositions_url": {
            "name": "propositions_url",
            "location": 44,
            "return": [
                "Mapping[str, Any]",
                "int",
                "Callable[..., None]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.show_login_button": {
            "name": "show_login_button",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.login_url": {
            "name": "login_url",
            "location": 54,
            "return": [
                "str",
                "Dict[str, Any]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.profile_url": {
            "name": "profile_url",
            "location": 63,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.logout_action": {
            "name": "logout_action",
            "location": 66,
            "return": [
                "str",
                "bool",
                "Iterable[str]",
                "tuple"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.custom_footer_url": {
            "name": "custom_footer_url",
            "location": 70,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.tos_url": {
            "name": "tos_url",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.data_protection_url": {
            "name": "data_protection_url",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.faq_url": {
            "name": "faq_url",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.imprint_url": {
            "name": "imprint_url",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutCell.source_code_url": {
            "name": "source_code_url",
            "location": 85,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/login.py": {
        "LoginCell.ekklesia_login_url": {
            "name": "ekklesia_login_url",
            "location": 15,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginCell.ekklesia_login_name": {
            "name": "ekklesia_login_name",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginCell.ekklesia_login_explanation": {
            "name": "ekklesia_login_explanation",
            "location": 22,
            "return": [
                "str",
                "Iterable[str]",
                "Match",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginCell.insecure_development_mode_enabled": {
            "name": "insecure_development_mode_enabled",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginCell.show_internal_login": {
            "name": "show_internal_login",
            "location": 28,
            "return": [
                "str",
                "Optional[int]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginCell.show_ekklesia_login": {
            "name": "show_ekklesia_login",
            "location": 31,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginCell.back_url_quoted": {
            "name": "back_url_quoted",
            "location": 34,
            "return": [
                "None",
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/page_test.py": {
        "PageTestCell.now": {
            "name": "now",
            "location": 15,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/token.py": {
        "TokenCell.content_token_login": {
            "name": "content_token_login",
            "location": 7,
            "return": [
                "str",
                "int",
                "Dict[str, Any]",
                "Tuple[str, int]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/cell/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/contracts/token.py": {
        "TokenForm.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/contracts/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/templates/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/view/index.py": {
        "ekklesia_portal": {
            "name": "ekklesia_portal",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 15,
            "return": [
                "bool",
                "List[Dict[str, Any]]",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "change_language": {
            "name": "change_language",
            "location": 21,
            "return": [
                "int",
                "List[str]",
                "Optional[str]",
                "Dict[str, Any]",
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/view/login.py": {
        "unquote_or_none": {
            "name": "unquote_or_none",
            "location": 13,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "url": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "Optional[List[str]]",
                    "Optional[int]",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "login": {
            "name": "login",
            "location": 21,
            "return": [
                "int",
                "Dict[str, Any]",
                "Optional[int]",
                "str",
                "bool"
            ],
            "arguments": {
                "request": [
                    "Union[bool, str]",
                    "bool",
                    "Dict[str, str]",
                    "bytes",
                    "aiohttp.web.Request",
                    "str",
                    "dict",
                    "int"
                ],
                "internal_login": [
                    "List[Dict[str, Any]]",
                    "str",
                    "int",
                    "Dict[str, Dict[str, Any]]",
                    "Dict[int, Set[int]]"
                ],
                "back_url": [
                    "List[Dict[str, Any]]",
                    "str",
                    "int",
                    "Dict[str, Dict[str, Any]]",
                    "Dict[int, Set[int]]"
                ],
                "from_redirect": [
                    "List[Dict[str, Any]]",
                    "str",
                    "int",
                    "Dict[str, Dict[str, Any]]",
                    "Dict[int, Set[int]]"
                ]
            }
        },
        "show_login": {
            "name": "show_login",
            "location": 31,
            "return": [
                "bool",
                "List[Dict[str, Any]]",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "Request",
                    "dict",
                    "aiohttp.web.Request"
                ]
            }
        },
        "submit_login": {
            "name": "submit_login",
            "location": 36,
            "return": [
                "str",
                "Optional[bool]",
                "bool",
                "Dict[int, dict]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request"
                ]
            }
        },
        "redirect_to_login": {
            "name": "redirect_to_login",
            "location": 60,
            "return": [
                "dict",
                "flask.Response",
                "Dict[str, Any]",
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "morepath.Request",
                    "scrapy.http.Request",
                    "Iterator"
                ]
            }
        },
        "submit_login.remember": {
            "name": "remember",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "response": [
                    "rest_framework.response.Response",
                    "httpx.Response"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/view/logout.py": {
        "logout": {
            "name": "logout",
            "location": 13,
            "return": [
                "str",
                "bool",
                "dict",
                "Union[str, Dict]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Tuple[int]",
                    "tuple[int]"
                ]
            }
        },
        "logout.forget": {
            "name": "forget",
            "location": 16,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "response": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/view/pagetest.py": {
        "test_page": {
            "name": "test_page",
            "location": 16,
            "return": [
                "int",
                "str"
            ],
            "arguments": {}
        },
        "show_test_page": {
            "name": "show_test_page",
            "location": 21,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/view/token.py": {
        "login": {
            "name": "login",
            "location": 17,
            "return": [
                "Dict[str, Any]",
                "int",
                "Dict[str, Dict[str, Any]]",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ],
                "token": [
                    "str",
                    "Dict[str, str]",
                    "Optional[dict]",
                    "dict"
                ]
            }
        },
        "token_login": {
            "name": "token_login",
            "location": 23,
            "return": [
                "int",
                "str",
                "list"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "submit_token_login": {
            "name": "submit_token_login",
            "location": 30,
            "return": [
                "str",
                "bytes",
                "Dict[str, Any]",
                "Mapping[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "morepath.Request"
                ],
                "appstruct": [
                    "morepath.Request"
                ]
            }
        },
        "submit_token_login.remember": {
            "name": "remember",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {
                "response": [
                    "rest_framework.response.Response",
                    "httpx.Response"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/ekklesia_portal/view/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/page/pages.py": {
        "Pages.pages": {
            "name": "pages",
            "location": 6,
            "return": [
                "Mapping",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/page/page_cells.py": {
        "PagesCell.pages": {
            "name": "pages",
            "location": 13,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Optional[List[str]]",
                "List[\"Node\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PagesCell.show_new_button": {
            "name": "show_new_button",
            "location": 19,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PageCell.can_edit": {
            "name": "can_edit",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PageCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 34,
            "return": [
                "int",
                "bool",
                "Optional[BaseException]",
                "Union[str, Tuple[str, ...]]",
                "str",
                "Type[BaseException]",
                "T"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/page/page_contracts.py": {
        "PageForm.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PageForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/page/page_views.py": {
        "pages_create_permission": {
            "name": "pages_create_permission",
            "location": 14,
            "return": [
                "bool",
                "Tuple[float, float, float]",
                "int",
                "str"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "List[str]",
                    "Dict[str, Optional[str]]"
                ],
                "model": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ],
                "permission": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ]
            }
        },
        "page_edit_permission": {
            "name": "page_edit_permission",
            "location": 19,
            "return": [
                "str",
                "Tuple[float, float, float]",
                "int",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "pages": {
            "name": "pages",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "page": {
            "name": "page",
            "location": 38,
            "return": [
                "str",
                "Tuple[int, int]",
                "bool"
            ],
            "arguments": {
                "request": [
                    "morepath.Request",
                    "str"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "Optional[int]"
                ],
                "lang": [
                    "str",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 48,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "new": {
            "name": "new",
            "location": 55,
            "return": [
                "str",
                "Sequence[str]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 64,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ],
                "appstruct": [
                    "Callable",
                    "Set[str]",
                    "str"
                ]
            }
        },
        "page_redirect": {
            "name": "page_redirect",
            "location": 73,
            "return": [
                "str",
                "Optional[Dict]",
                "Optional[str]",
                "Optional"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "show": {
            "name": "show",
            "location": 81,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "routemaster.app.App"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 88,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 97,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        },
        "PageRedirect.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/page/__init__.py": {
        "page_concept": {
            "name": "page_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/policy/policies.py": {
        "Policies.policies": {
            "name": "policies",
            "location": 6,
            "return": [
                "Mapping",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/policy/policy_cells.py": {
        "PoliciesCell.policies": {
            "name": "policies",
            "location": 14,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Optional[List[str]]",
                "List[\"Node\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PoliciesCell.show_new_button": {
            "name": "show_new_button",
            "location": 17,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PolicyCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 30,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewPolicyCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 38,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPolicyCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 46,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/policy/policy_contracts.py": {
        "PolicyForm.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int"
                ]
            }
        },
        "PolicyForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "int",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/policy/policy_helper.py": {
        "items_for_policy_select_widgets": {
            "name": "items_for_policy_select_widgets",
            "location": 6,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/policy/policy_views.py": {
        "policies_create_permission": {
            "name": "policies_create_permission",
            "location": 15,
            "return": [
                "bool",
                "Tuple[float, float, float]",
                "int",
                "str"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "List[str]",
                    "Dict[str, Optional[str]]"
                ],
                "model": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ],
                "permission": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ]
            }
        },
        "policy_edit_permission": {
            "name": "policy_edit_permission",
            "location": 20,
            "return": [
                "str",
                "Tuple[float, float, float]",
                "int",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "policies": {
            "name": "policies",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "policy": {
            "name": "policy",
            "location": 30,
            "return": [
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ],
                "id": [
                    "Dict[str, Any]",
                    "int",
                    "Dict[str, int]",
                    "bool"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 35,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "new": {
            "name": "new",
            "location": 41,
            "return": [
                "str",
                "Sequence[str]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 47,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ],
                "appstruct": [
                    "Callable",
                    "Set[str]",
                    "str"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 55,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "routemaster.app.App"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 61,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 67,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/policy/__init__.py": {
        "policy_concept": {
            "name": "policy_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/propositions.py": {
        "Propositions.__post_init__": {
            "name": "__post_init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Propositions.parse_search_filters": {
            "name": "parse_search_filters",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Propositions.parse_search_filter": {
            "name": "parse_search_filter",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "value": [
                    "Optional[int]",
                    "int",
                    "None"
                ]
            }
        },
        "Propositions.build_search_query": {
            "name": "build_search_query",
            "location": 143,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Propositions.maybe_add_quotes": {
            "name": "maybe_add_quotes",
            "location": 171,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "value": [
                    "_T0"
                ]
            }
        },
        "Propositions.propositions": {
            "name": "propositions",
            "location": 181,
            "return": [
                "typing.Generator[]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Optional[float]",
                    "float",
                    "None"
                ],
                "is_admin": [
                    "bool",
                    "str"
                ]
            }
        },
        "Propositions.to_dict": {
            "name": "to_dict",
            "location": 261,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Propositions.replace": {
            "name": "replace",
            "location": 264,
            "return": [
                "Propositions"
            ],
            "arguments": {
                "self": [
                    "_TPropositions"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/proposition_cells.py": {
        "PropositionCell.status": {
            "name": "status",
            "location": 60,
            "return": [
                "str",
                "Type[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.history": {
            "name": "history",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.detail_top": {
            "name": "detail_top",
            "location": 92,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.associated_url": {
            "name": "associated_url",
            "location": 100,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.report_url": {
            "name": "report_url",
            "location": 103,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.share_url": {
            "name": "share_url",
            "location": 106,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.share_email_url": {
            "name": "share_email_url",
            "location": 113,
            "return": [
                "str",
                "Union[int, float, complex]",
                "bool",
                "IO"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.share_twitter_url": {
            "name": "share_twitter_url",
            "location": 129,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.ballot_url": {
            "name": "ballot_url",
            "location": 145,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.ballot_title": {
            "name": "ballot_title",
            "location": 148,
            "return": [
                "typing.Text",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.discussion_url": {
            "name": "discussion_url",
            "location": 155,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.propositions_tag_url": {
            "name": "propositions_tag_url",
            "location": 158,
            "return": [
                "bool",
                "int",
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "Optional[Dict[str, Any]]",
                    "str"
                ]
            }
        },
        "PropositionCell.current_user_is_supporter": {
            "name": "current_user_is_supporter",
            "location": 161,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.current_user_is_submitter": {
            "name": "current_user_is_submitter",
            "location": 166,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.current_user_is_author": {
            "name": "current_user_is_author",
            "location": 171,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.discussion_link_class": {
            "name": "discussion_link_class",
            "location": 176,
            "return": [
                "typing.Text",
                "str",
                "Dict[str, Union[str, Set]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.associated_link_class": {
            "name": "associated_link_class",
            "location": 179,
            "return": [
                "typing.Text",
                "str",
                "Dict[str, Union[str, Set]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.new_associated_proposition_url": {
            "name": "new_associated_proposition_url",
            "location": 182,
            "return": [
                "Mapping[str, Any]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "association_type": [
                    "str",
                    "type"
                ]
            }
        },
        "PropositionCell.new_pro_argument_url": {
            "name": "new_pro_argument_url",
            "location": 185,
            "return": [
                "Dict[str, Any]",
                "\"Flow\""
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.new_con_argument_url": {
            "name": "new_con_argument_url",
            "location": 190,
            "return": [
                "Dict[str, Any]",
                "\"Flow\""
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.missing_submitters_count": {
            "name": "missing_submitters_count",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.supporter_count": {
            "name": "supporter_count",
            "location": 198,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.become_submitter_action": {
            "name": "become_submitter_action",
            "location": 201,
            "return": [
                "str",
                "bool",
                "Iterable[str]",
                "List[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.secret_voting_action": {
            "name": "secret_voting_action",
            "location": 204,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.support_action": {
            "name": "support_action",
            "location": 207,
            "return": [
                "str",
                "bool",
                "Iterable[str]",
                "List[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.pro_argument_relations": {
            "name": "pro_argument_relations",
            "location": 210,
            "return": [
                "list[]",
                "str",
                "Dict[str, Any]",
                "Dict[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.contra_argument_relations": {
            "name": "contra_argument_relations",
            "location": 214,
            "return": [
                "list[]",
                "str",
                "Dict[str, Any]",
                "Dict[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.argument_count": {
            "name": "argument_count",
            "location": 218,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.full_title": {
            "name": "full_title",
            "location": 221,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.ready_to_submit": {
            "name": "ready_to_submit",
            "location": 227,
            "return": [
                "str",
                "dict",
                "float",
                "IO[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.show_support_actions": {
            "name": "show_support_actions",
            "location": 230,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.show_submit_draft_action": {
            "name": "show_submit_draft_action",
            "location": 236,
            "return": [
                "dict",
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.show_create_argument": {
            "name": "show_create_argument",
            "location": 241,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.show_create_associated_proposition": {
            "name": "show_create_associated_proposition",
            "location": 247,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.valid_submitter_invitation_key": {
            "name": "valid_submitter_invitation_key",
            "location": 253,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.voting_phase": {
            "name": "voting_phase",
            "location": 259,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.voting_result_state": {
            "name": "voting_result_state",
            "location": 262,
            "return": [
                "bool",
                "OpenSlidesVotingResult",
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.voting_result_symbol": {
            "name": "voting_result_symbol",
            "location": 272,
            "return": [
                "typing.Text",
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 280,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.submit_draft_url": {
            "name": "submit_draft_url",
            "location": 283,
            "return": [
                "str",
                "bool",
                "int",
                "List[str]",
                "List[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.edit_url": {
            "name": "edit_url",
            "location": 286,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.note_url": {
            "name": "note_url",
            "location": 289,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.become_submitter_url": {
            "name": "become_submitter_url",
            "location": 301,
            "return": [
                "str",
                "app.utils.types.JSON"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.submitter_names": {
            "name": "submitter_names",
            "location": 304,
            "return": [
                "list[]",
                "bool",
                "List[str]",
                "str",
                "Iterable[str]",
                "List[Tuple[str, Any]]",
                "Tuple[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.show_full_history": {
            "name": "show_full_history",
            "location": 307,
            "return": [
                "int",
                "bool",
                "Optional[BaseException]",
                "Union[str, Tuple[str, ...]]",
                "str",
                "Type[BaseException]",
                "T"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionCell.secret_voting": {
            "name": "secret_voting",
            "location": 310,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewPropositionCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 326,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewPropositionCell.new_draft_explanation": {
            "name": "new_draft_explanation",
            "location": 343,
            "return": [
                "T",
                "Optional[Dict[str, str]]",
                "float",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 350,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.department_name": {
            "name": "department_name",
            "location": 369,
            "return": [
                "bool",
                "Type",
                "type",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.subject_area_name": {
            "name": "subject_area_name",
            "location": 372,
            "return": [
                "Type",
                "type",
                "Optional[BaseException]",
                "List[str]",
                "Optional[str]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.ballot_id": {
            "name": "ballot_id",
            "location": 375,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.ballot_name": {
            "name": "ballot_name",
            "location": 378,
            "return": [
                "str",
                "List[str]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.ballot_url": {
            "name": "ballot_url",
            "location": 381,
            "return": [
                "str",
                "bool",
                "List[List[str]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.become_submitter_url": {
            "name": "become_submitter_url",
            "location": 384,
            "return": [
                "str",
                "app.utils.types.JSON"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.show_push_draft": {
            "name": "show_push_draft",
            "location": 387,
            "return": [
                "bool",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.push_draft_action": {
            "name": "push_draft_action",
            "location": 391,
            "return": [
                "str",
                "bool",
                "Iterable[str]",
                "List[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionCell.exporter_description": {
            "name": "exporter_description",
            "location": 394,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionsCell.propositions": {
            "name": "propositions",
            "location": 414,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Optional[List[str]]",
                "tuple",
                "List[\"Node\"]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionsCell.search_query": {
            "name": "search_query",
            "location": 419,
            "return": [
                "bytes",
                "Callable[[Mapping], Awaitable]",
                "Callable[[], Awaitable[Mapping]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionsCell.change_self_link": {
            "name": "change_self_link",
            "location": 422,
            "return": [
                "Iterable[str]",
                "bool",
                "str",
                "List[str]",
                "bs4.Tag"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionsCell.voting_phase_title": {
            "name": "voting_phase_title",
            "location": 426,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "phase": [
                    "dict",
                    "str",
                    "Mapping[str, Any]",
                    "List[Dict]",
                    "Dict[str, str]"
                ]
            }
        },
        "PropositionsCell.proposition_type_name": {
            "name": "proposition_type_name",
            "location": 433,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "proposition_type": [
                    "str",
                    "Type"
                ]
            }
        },
        "PropositionsCell.visibility_values": {
            "name": "visibility_values",
            "location": 442,
            "return": [
                "None",
                "str",
                "Callable",
                "List[Exception]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNewDraftCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 452,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNewDraftCell._document": {
            "name": "_document",
            "location": 458,
            "return": [
                "Tuple[str, str]",
                "sqlalchemy.exdeclarative.DeclarativeMeta",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNewDraftCell.department_name": {
            "name": "department_name",
            "location": 461,
            "return": [
                "Dict[str, str]",
                "str",
                "List[Callable]",
                "list",
                "type"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNewDraftCell.document_name": {
            "name": "document_name",
            "location": 464,
            "return": [
                "str",
                "List[Tuple[str]]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNewDraftCell.explanation": {
            "name": "explanation",
            "location": 467,
            "return": [
                "T",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionSubmitDraftCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 474,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionSubmitDraftCell.department_name": {
            "name": "department_name",
            "location": 489,
            "return": [
                "bool",
                "Type",
                "type",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionSubmitDraftCell.subject_area_name": {
            "name": "subject_area_name",
            "location": 492,
            "return": [
                "Type",
                "type",
                "Optional[BaseException]",
                "List[str]",
                "Optional[str]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionSubmitDraftCell.proposition_type_name": {
            "name": "proposition_type_name",
            "location": 495,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionSubmitDraftCell.explanation": {
            "name": "explanation",
            "location": 498,
            "return": [
                "str",
                "Iterable[str]",
                "Match",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionSubmitDraftCell.draft_not_fully_matched": {
            "name": "draft_not_fully_matched",
            "location": 501,
            "return": [
                "bool",
                "Dict[str, Any]",
                "Optional[int]",
                "Dict[int, dict]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/proposition_contracts.py": {
        "common_widgets": {
            "name": "common_widgets",
            "location": 11,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "items_for_selects": [
                    "bytes",
                    "int",
                    "Callable[[str], int]",
                    "bool",
                    "dict"
                ]
            }
        },
        "PropositionNewForm.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "PropositionNewForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "list[list[str]]",
                    "int",
                    "bool",
                    "List[List[str]]"
                ]
            }
        },
        "PropositionEditForm.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "PropositionEditForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "tuple[typing.Union[str,typing.Any]]",
                    "str",
                    "dict",
                    "Tuple[str, Any]",
                    "bool"
                ]
            }
        },
        "PropositionNewDraftForm.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "action": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "PropositionNewDraftForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "Sequence[object]",
                    "str",
                    "typing.Sequence[_]",
                    "int"
                ]
            }
        },
        "PropositionSubmitDraftForm.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "action": [
                    "Dict[str, Any]",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PropositionSubmitDraftForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "int",
                    "float",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/proposition_helper.py": {
        "items_for_proposition_select_widgets": {
            "name": "items_for_proposition_select_widgets",
            "location": 18,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {
                "departments": [],
                "tags": [],
                "proposition_types": [],
                "selected_tags": [
                    "None"
                ]
            }
        },
        "get_or_create_tags": {
            "name": "get_or_create_tags",
            "location": 43,
            "return": [],
            "arguments": {
                "db_session": [],
                "tag_names": []
            }
        },
        "proposition_slug": {
            "name": "proposition_slug",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "proposition": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/proposition_permissions.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/proposition_views.py": {
        "proposition_view_permission_anon": {
            "name": "proposition_view_permission_anon",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "model": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "proposition_view_permission": {
            "name": "proposition_view_permission",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "int"
                ],
                "model": [
                    "bool",
                    "str"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "propositions_create_permission": {
            "name": "propositions_create_permission",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ],
                "model": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ],
                "permission": [
                    "str",
                    "Optional[bool]",
                    "bool",
                    "list",
                    "Sequence[str]"
                ]
            }
        },
        "proposition_support_permission": {
            "name": "proposition_support_permission",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "proposition_edit_permission": {
            "name": "proposition_edit_permission",
            "location": 67,
            "return": [
                "str",
                "Tuple[float, float, float]",
                "int",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Set[str]]",
                    "str",
                    "Callable",
                    "List[List[str]]"
                ],
                "model": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "proposition_new_draft_permission": {
            "name": "proposition_new_draft_permission",
            "location": 72,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Set[str]]",
                    "Dict[str, str]",
                    "List[str]",
                    "Dict[str, Optional[str]]",
                    "int"
                ],
                "model": [
                    "bool",
                    "str",
                    "Iterable[str]",
                    "List[str]",
                    "List[Tuple[int, str]]"
                ],
                "permission": [
                    "bool",
                    "str",
                    "Iterable[str]",
                    "List[str]",
                    "List[Tuple[int, str]]"
                ]
            }
        },
        "proposition_submit_permission": {
            "name": "proposition_submit_permission",
            "location": 77,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "int",
                    "zulipterminal.helper.Message"
                ],
                "model": [
                    "str",
                    "int",
                    "zulipterminal.helper.Message"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "proposition_path": {
            "name": "proposition_path",
            "location": 89,
            "return": [
                "str",
                "Optional[int]",
                "Optional[str]",
                "List[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "request": [
                    "str"
                ],
                "proposition_id": [
                    "str",
                    "starlette.requests.Request",
                    "aiohttp.web.Request"
                ],
                "slug": [
                    "List[List[int]]",
                    "str"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 113,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "associated": {
            "name": "associated",
            "location": 119,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "process_secret_voting": {
            "name": "process_secret_voting",
            "location": 124,
            "return": [
                "str",
                "Dict[str, Any]",
                "Optional[Dict]",
                "int",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "_models.Request"
                ]
            }
        },
        "secret_voting": {
            "name": "secret_voting",
            "location": 150,
            "return": [
                "str",
                "bytes",
                "Union[bytes, bytearray]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "flask.Request",
                    "Request"
                ]
            }
        },
        "support": {
            "name": "support",
            "location": 155,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "become_submitter": {
            "name": "become_submitter",
            "location": 174,
            "return": [
                "int",
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "Dict[str, Any]"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 192,
            "return": [
                "bool",
                "List[Dict[str, Any]]",
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "Request",
                    "dict",
                    "aiohttp.web.Request"
                ]
            }
        },
        "new": {
            "name": "new",
            "location": 197,
            "return": [
                "str",
                "Sequence[str]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "str",
                    "flask.Request",
                    "requests.Request",
                    "Dict[str, Any]"
                ]
            }
        },
        "_create_proposition": {
            "name": "_create_proposition",
            "location": 222,
            "return": [
                "str",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [],
                "ballot": [
                    "str"
                ],
                "appstruct": [
                    "aiohttp.web.Request",
                    "_models.Request"
                ],
                "document": [
                    "Optional[int]",
                    "str",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "List[int]"
                ],
                "section": [
                    "Optional[int]",
                    "str",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "List[int]"
                ]
            }
        },
        "create": {
            "name": "create",
            "location": 273,
            "return": [
                "List[str]",
                "dict",
                "Dict[str, Any]",
                "bool",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "flask.Request"
                ],
                "appstruct": [
                    "int",
                    "str",
                    "morepath.Request",
                    "aiohttp.web.Request"
                ]
            }
        },
        "proposition_redirect": {
            "name": "proposition_redirect",
            "location": 313,
            "return": [
                "int",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "str"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 319,
            "return": [
                "List[dict]",
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "_models.Request"
                ]
            }
        },
        "update": {
            "name": "update",
            "location": 325,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Tuple[int]",
                    "dict"
                ],
                "appstruct": [
                    "aiohttp.web.Request",
                    "_models.Request",
                    "Dict[str, Any]"
                ]
            }
        },
        "new_draft": {
            "name": "new_draft",
            "location": 343,
            "return": [
                "bool",
                "int",
                "Dict[str, int]",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Request",
                    "requests.Request",
                    "fastapi.Request",
                    "aiohttp.web.Request",
                    "starlette.requests.Request"
                ]
            }
        },
        "new_draft_post": {
            "name": "new_draft_post",
            "location": 366,
            "return": [
                "int",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "werkzeug.Request"
                ]
            }
        },
        "push_draft": {
            "name": "push_draft",
            "location": 383,
            "return": [
                "dict",
                "List[str]",
                "str",
                "int",
                "list"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request"
                ]
            }
        },
        "submit_draft": {
            "name": "submit_draft",
            "location": 405,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "starlette.requests.Request"
                ]
            }
        },
        "submit_draft_post": {
            "name": "submit_draft_post",
            "location": 445,
            "return": [
                "set",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "aiohttp.web.Request",
                    "ocfweb.docs.doc.Document"
                ],
                "appstruct": [
                    "Dict[str, Any]",
                    "Optional[Hashable]",
                    "bytes",
                    "_models.Request",
                    "app.models.user.User",
                    "dict",
                    "Request",
                    "Dict[str, str]"
                ]
            }
        },
        "PropositionRedirect.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "proposition_id": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition/__init__.py": {
        "proposition_concept": {
            "name": "proposition_concept",
            "location": 8,
            "return": [
                "dict[typing.Text, ]",
                "Dict[str, Any]",
                "Tuple[type]",
                "Callable[..., None]",
                "int"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_note/proposition_notes.py": {
        "PropositionNotes.proposition_notes": {
            "name": "proposition_notes",
            "location": 6,
            "return": [
                "Mapping",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_note/proposition_note_cells.py": {
        "PropositionNotesCell.proposition_notes": {
            "name": "proposition_notes",
            "location": 13,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNotesCell.show_new_button": {
            "name": "show_new_button",
            "location": 16,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionNoteCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 24,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionNoteCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_note/proposition_note_contracts.py": {
        "PropositionNoteForm.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "PropositionNoteForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "str",
                    "Sequence[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_note/proposition_note_helper.py": {
        "items_for_proposition_note_select_widgets": {
            "name": "items_for_proposition_note_select_widgets",
            "location": 7,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {
                "_model": [
                    "List[Tuple[str, str]]",
                    "list[tuple[typing.Union[str,str]]]",
                    "Type[T]",
                    "str",
                    "typing.Type",
                    "Exception",
                    "dict",
                    "bool",
                    "dict[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_note/proposition_note_views.py": {
        "proposition_note_edit_permission": {
            "name": "proposition_note_edit_permission",
            "location": 13,
            "return": [
                "str",
                "bool",
                "Dict[str, Any]",
                "Type[T]"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "int",
                    "bool"
                ],
                "model": [
                    "str",
                    "int",
                    "bool"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "proposition_note": {
            "name": "proposition_note",
            "location": 19,
            "return": [
                "bool",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "request": [
                    "str",
                    "int"
                ],
                "proposition_id": [
                    "str",
                    "int",
                    "dict"
                ],
                "user_id": [
                    "str",
                    "int",
                    "dict"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 28,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 36,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "dict"
                ],
                "appstruct": [
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_note/__init__.py": {
        "proposition_note_concept": {
            "name": "proposition_note_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_type/proposition_types.py": {
        "PropositionTypes.proposition_types": {
            "name": "proposition_types",
            "location": 6,
            "return": [
                "str",
                "Dict[str, List[Callable]]",
                "Dict[str, str]",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "Tuple[Type]",
                    "str",
                    "tuple[typing.Type]",
                    "type",
                    "typing.Type",
                    "List[str]",
                    "list[str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_type/proposition_type_cells.py": {
        "PropositionTypesCell.proposition_types": {
            "name": "proposition_types",
            "location": 14,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionTypesCell.show_new_button": {
            "name": "show_new_button",
            "location": 17,
            "return": [
                "Optional[str]",
                "Optional[Any]",
                "bool",
                "List[Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropositionTypeCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 26,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewPropositionTypeCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 34,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditPropositionTypeCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 43,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_type/proposition_type_contracts.py": {
        "PropositionTypeForm.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "action": [
                    "str",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PropositionTypeForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_type/proposition_type_helper.py": {
        "items_for_proposition_type_select_widgets": {
            "name": "items_for_proposition_type_select_widgets",
            "location": 1,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {
                "policies": [
                    "str",
                    "int",
                    "Type",
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_type/proposition_type_views.py": {
        "proposition_types_create_permission": {
            "name": "proposition_types_create_permission",
            "location": 13,
            "return": [
                "int",
                "Tuple[float, float, float]"
            ],
            "arguments": {
                "identity": [
                    "Type",
                    "Dict[str, Optional[str]]",
                    "bool",
                    "Optional[Callable]",
                    "List[str]"
                ],
                "model": [
                    "List[str]",
                    "dict",
                    "bool",
                    "Optional[List]",
                    "Tuple[str]",
                    "Type"
                ],
                "permission": [
                    "List[str]",
                    "dict",
                    "bool",
                    "Optional[List]",
                    "Tuple[str]",
                    "Type"
                ]
            }
        },
        "proposition_type_edit_permission": {
            "name": "proposition_type_edit_permission",
            "location": 18,
            "return": [
                "int",
                "Tuple[float, float, float]"
            ],
            "arguments": {
                "identity": [
                    "Type",
                    "type",
                    "int"
                ],
                "model": [
                    "Optional[List]",
                    "bool",
                    "type",
                    "Tuple[str]",
                    "Type"
                ],
                "permission": [
                    "Optional[List]",
                    "bool",
                    "type",
                    "Tuple[str]",
                    "Type"
                ]
            }
        },
        "proposition_types": {
            "name": "proposition_types",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 28,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]"
                ]
            }
        },
        "new": {
            "name": "new",
            "location": 34,
            "return": [
                "Dict[str, Any]",
                "int",
                "Type",
                "Optional[Dict[str, str]]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "create": {
            "name": "create",
            "location": 42,
            "return": [
                "str",
                "int",
                "Exception"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "str",
                    "bool",
                    "app.models.farm.Farm"
                ]
            }
        },
        "proposition_type": {
            "name": "proposition_type",
            "location": 50,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "Dict[str, Any]",
                    "List[Dict[str, Any]]",
                    "bool",
                    "int"
                ],
                "id": [
                    "str",
                    "Dict[str, Any]",
                    "List[Dict[str, Any]]",
                    "bool",
                    "int"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 55,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 61,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 69,
            "return": [
                "bool",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "appstruct": [
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/proposition_type/__init__.py": {
        "proposition_type_concept": {
            "name": "proposition_type_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "str",
                "bool",
                "Dict[str, Any]",
                "Iterator",
                "int"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/user/user_cells.py": {
        "UserCell.departments_with_subject_areas": {
            "name": "departments_with_subject_areas",
            "location": 13,
            "return": [
                "set[list[]]",
                "Dict[str, Any]",
                "dict",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserCell.supported_proposition_count": {
            "name": "supported_proposition_count",
            "location": 24,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserCell.argument_count": {
            "name": "argument_count",
            "location": 27,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserCell.member_area_action": {
            "name": "member_area_action",
            "location": 30,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/user/user_views.py": {
        "user_view_permission": {
            "name": "user_view_permission",
            "location": 9,
            "return": [
                "app.models.GameMember",
                "app.models.course.Course",
                "app.models.Game",
                "daylighdb.models.User"
            ],
            "arguments": {
                "identity": [
                    "Callable[[List, bool], None]"
                ],
                "model": [
                    "Callable[[List, bool], None]"
                ],
                "permission": []
            }
        },
        "user": {
            "name": "user",
            "location": 15,
            "return": [
                "str",
                "metaswitch_tinder.database.models.User",
                "int",
                "abilian.core.models.subjects.User"
            ],
            "arguments": {
                "request": [
                    "Union[int,str]",
                    "str",
                    "Optional[str]",
                    "Optional[int]"
                ],
                "name": [
                    "Union[int,str]",
                    "str",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 21,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "str"
                ]
            }
        },
        "show_member_area": {
            "name": "show_member_area",
            "location": 27,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/user/__init__.py": {
        "user_concept": {
            "name": "user_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "str",
                "dict"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/user/templates/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/voting_phases.py": {
        "VotingPhases.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "department": [
                    "int",
                    "None",
                    "float",
                    "bool"
                ]
            }
        },
        "VotingPhases.voting_phases": {
            "name": "voting_phases",
            "location": 9,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Dict[str, str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/voting_phase_cells.py": {
        "VotingPhasesCell.voting_phases": {
            "name": "voting_phases",
            "location": 16,
            "return": [
                "list[]",
                "List[Dict]",
                "list",
                "str",
                "List[str]",
                "tuple"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotingPhasesCell.show_new_button": {
            "name": "show_new_button",
            "location": 19,
            "return": [
                "bool",
                "Optional[Callable]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotingPhaseCell.show_edit_button": {
            "name": "show_edit_button",
            "location": 29,
            "return": [
                "str",
                "float",
                "Optional[str]",
                "int",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotingPhaseCell.propositions": {
            "name": "propositions",
            "location": 33,
            "return": [
                "list[]",
                "int",
                "Sequence[int]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewVotingPhaseCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 40,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditVotingPhaseCell._prepare_form_for_render": {
            "name": "_prepare_form_for_render",
            "location": 56,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditVotingPhaseCell.show_create_voting": {
            "name": "show_create_voting",
            "location": 70,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditVotingPhaseCell.voting_modules": {
            "name": "voting_modules",
            "location": 73,
            "return": [
                "list[tuple[bool]]",
                "str",
                "Dict[str, str]",
                "dict",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EditVotingPhaseCell.create_voting_action": {
            "name": "create_voting_action",
            "location": 77,
            "return": [
                "int",
                "Dict[str, str]",
                "bool",
                "str",
                "Dict[str, int]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/voting_phase_contracts.py": {
        "VotingPhaseForm.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "VotingPhaseForm.prepare_for_render": {
            "name": "prepare_for_render",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items_for_selects": [
                    "int",
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/voting_phase_helper.py": {
        "items_for_voting_phase_select_widgets": {
            "name": "items_for_voting_phase_select_widgets",
            "location": 6,
            "return": [
                "Dict[(str, List[Tuple[(Any, Any)]])]"
            ],
            "arguments": {
                "phase_types": [
                    "str",
                    "Type",
                    "BaseException"
                ],
                "departments": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "Dict[str, Any]",
                    "list[str]",
                    "Optional[List[str]]",
                    "dict[, ]",
                    "dict",
                    "Callable"
                ],
                "voting_phase": [
                    "str",
                    "None",
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "voting_phase_title": {
            "name": "voting_phase_title",
            "location": 15,
            "return": [
                "typing.Text",
                "str",
                "Callable",
                "dict",
                "type",
                "bool"
            ],
            "arguments": {
                "voting_phase": [
                    "bool",
                    "str",
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]",
                    "dict",
                    "dict[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/voting_phase_permissions.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/voting_phase_views.py": {
        "voting_phases_create_permission": {
            "name": "voting_phases_create_permission",
            "location": 23,
            "return": [
                "str",
                "Type[T]",
                "Dict[str, Any]",
                "Container[str]",
                "int",
                "bool",
                "Union[List, Dict]"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "int"
                ],
                "model": [
                    "str",
                    "int"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "voting_phase_edit_permission": {
            "name": "voting_phase_edit_permission",
            "location": 33,
            "return": [
                "str",
                "Type[T]",
                "Dict[str, Any]",
                "Container[str]",
                "int",
                "bool",
                "Union[List, Dict]"
            ],
            "arguments": {
                "identity": [
                    "str",
                    "int"
                ],
                "model": [
                    "str",
                    "int"
                ],
                "permission": [
                    "str",
                    "Sequence[str]",
                    "T",
                    "Mapping[str, T]"
                ]
            }
        },
        "voting_phases": {
            "name": "voting_phases",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "voting_phase_path": {
            "name": "voting_phase_path",
            "location": 43,
            "return": [
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "int",
                    "Tuple['cirq.Qid']"
                ],
                "id": [
                    "str",
                    "int",
                    "Tuple['cirq.Qid']"
                ],
                "slug": [
                    "str",
                    "bool",
                    "int",
                    "MutableMapping"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 48,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str, Any]",
                    "str",
                    "bool",
                    "Dict[Hashable, Iterable[Hashable]]"
                ]
            }
        },
        "new": {
            "name": "new",
            "location": 54,
            "return": [
                "Sequence['cirq.Qid']",
                "list"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "create": {
            "name": "create",
            "location": 60,
            "return": [
                "Dict[str, Any]",
                "dict",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int"
                ],
                "appstruct": [
                    "int",
                    "Dict[str, Any]"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 82,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "update": {
            "name": "update",
            "location": 88,
            "return": [
                "dict",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "int"
                ],
                "appstruct": [
                    "app.models.dto.RenewRequest"
                ]
            }
        },
        "show": {
            "name": "show",
            "location": 111,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "routemaster.app.App",
                    "str"
                ]
            }
        },
        "spickerrr": {
            "name": "spickerrr",
            "location": 117,
            "return": [
                "int",
                "List[str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "create_voting": {
            "name": "create_voting",
            "location": 136,
            "return": [
                "bool",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "spickerrr.serialize_proposition": {
            "name": "serialize_proposition",
            "location": 120,
            "return": [
                "int",
                "List[str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "proposition": [
                    "MutableMapping[str, Any]",
                    "Union[object, type]",
                    "bool",
                    "IPython.lib.pretty.PrettyPrinter"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/concepts/voting_phase/__init__.py": {
        "voting_phase_concept": {
            "name": "voting_phase_concept",
            "location": 5,
            "return": [
                "dict[, ]",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/exporter/discourse.py": {
        "push_draft_to_discourse": {
            "name": "push_draft_to_discourse",
            "location": 8,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "exporter_config": [
                    "dict[, ]",
                    "dict",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "Dict[str, Any]",
                    "Mapping[str, Any]",
                    "Dict[str, str]",
                    "Sequence[str]"
                ],
                "external_content_template": [
                    "str"
                ],
                "portal_content_template": [
                    "str"
                ],
                "proposition": [
                    "str"
                ],
                "proposition_url": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/exporter/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/helper/json.py": {
        "JSONEncoder.default": {
            "name": "default",
            "location": 16,
            "return": [
                "int",
                "Optional[int]",
                "List[int]",
                "tuple",
                "str"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/helper/missing_translations.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/helper/url_shortener.py": {
        "make_tiny": {
            "name": "make_tiny",
            "location": 8,
            "return": [
                "bytes",
                "dict"
            ],
            "arguments": {
                "url": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/helper/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/importer/discourse.py": {
        "parse_raw_content": {
            "name": "parse_raw_content",
            "location": 17,
            "return": [
                "dict[typing.Text, typing.Union[None,bool]]"
            ],
            "arguments": {
                "raw": []
            }
        },
        "import_discourse_post_as_proposition": {
            "name": "import_discourse_post_as_proposition",
            "location": 43,
            "return": [
                "dict[typing.Text, typing.Union[None,typing.Text]]"
            ],
            "arguments": {
                "config": [],
                "from_data": []
            }
        },
        "import_discourse_topic_as_proposition": {
            "name": "import_discourse_topic_as_proposition",
            "location": 77,
            "return": [
                "dict[typing.Text, typing.Union[None,typing.Text]]"
            ],
            "arguments": {
                "config": [],
                "import_info": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/importer/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/lib/customizable_text.py": {
        "customizable_text": {
            "name": "customizable_text",
            "location": 4,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "name": [
                    "str",
                    "Optional[str]",
                    "None",
                    "int",
                    "Optional[int]",
                    "bool"
                ],
                "lang": [
                    "List[int]",
                    "None",
                    "Optional[str]",
                    "list[int]",
                    "Dict[str, str]",
                    "str",
                    "Optional[bool]",
                    "dict[str, str]",
                    "Optional[Dict]",
                    "bool",
                    "Optional[Any]",
                    "dict[, ]",
                    "typing.Any"
                ],
                "vars": [
                    "dict[, ]",
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/lib/discourse.py": {
        "create_discourse_topic": {
            "name": "create_discourse_topic",
            "location": 28,
            "return": [
                "str",
                "dict",
                "Exception",
                "int",
                "Optional[int]",
                "Dict[str, Union[str, Set]]"
            ],
            "arguments": {
                "config": [
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "topic": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "str",
                    "Optional[Iterable[str]]",
                    "None"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/lib/identity.py": {
        "identity_manages_department": {
            "name": "identity_manages_department",
            "location": 1,
            "return": [
                "bool"
            ],
            "arguments": {
                "identity": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "department": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/lib/password.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/lib/voting.py": {
        "prepare_module_config": {
            "name": "prepare_module_config",
            "location": 5,
            "return": [
                "dict"
            ],
            "arguments": {
                "app": [
                    "List[str]",
                    "list[str]",
                    "TextIO",
                    "str",
                    "typing.TextIO",
                    "dict",
                    "dict[, ]"
                ],
                "department": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "voting_module_name": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/lib/__init__.py": {},
    "ekklesia-portal-master/src/ekklesia_portal/lib/vvvote/election_config.py": {
        "ballot_to_vvvote_question": {
            "name": "ballot_to_vvvote_question",
            "location": 7,
            "return": [
                "Question",
                "bytes",
                "int",
                "IO",
                "List[str]",
                "str"
            ],
            "arguments": {
                "ballot": [
                    "int"
                ],
                "question_id": [
                    "int",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "voting_phase_to_vvvote_election_config": {
            "name": "voting_phase_to_vvvote_election_config",
            "location": 41,
            "return": [
                "ElectionConfig",
                "Dict[str, str]",
                "Optional[str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "module_config": [
                    "dict",
                    "Dict[str, Any]"
                ],
                "phase": [
                    "Optional[int]",
                    "int",
                    "None"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/lib/vvvote/schema.py": {
        "iso_date_field": {
            "name": "iso_date_field",
            "location": 11,
            "return": [
                "int",
                "dict"
            ],
            "arguments": {}
        },
        "YesNoScheme.__post_init__": {
            "name": "__post_init__",
            "location": 81,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.__post_init__": {
            "name": "__post_init__",
            "location": 112,
            "return": [
                "None",
                "str",
                "T",
                "list",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElectionConfig.__post_init__": {
            "name": "__post_init__",
            "location": 130,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/lib/vvvote/__init__.py": {
        "create_election_in_vvvote": {
            "name": "create_election_in_vvvote",
            "location": 4,
            "return": [
                "str",
                "Iterable[str]",
                "bytes"
            ],
            "arguments": {
                "module_config": [
                    "str",
                    "Optional[str]",
                    "Optional[dict]",
                    "bool",
                    "Optional[Dict[str, Any]]"
                ],
                "election_config": [
                    "str",
                    "bool",
                    "Optional[int]",
                    "None"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/voting_modules/vvvote.py": {
        "create_vvvote_voting": {
            "name": "create_vvvote_voting",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "module_config": [
                    "dict"
                ],
                "voting_phase": [
                    "ekklesia_portal.datamodel.VotingPhase"
                ]
            }
        }
    },
    "ekklesia-portal-master/src/ekklesia_portal/voting_modules/__init__.py": {},
    "ekklesia-portal-master/tests/conftest.py": {},
    "ekklesia-portal-master/tests/create_test_db.py": {},
    "ekklesia-portal-master/tests/factories.py": {
        "DepartmentFactory.add_subject_areas": {
            "name": "add_subject_areas",
            "location": 36,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "Callable"
                ],
                "extracted": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "Callable"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/fixtures.py": {
        "fixture_by_name": {
            "name": "fixture_by_name",
            "location": 22,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "config_filepath": {
            "name": "config_filepath",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "app": {
            "name": "app",
            "location": 32,
            "return": [],
            "arguments": {
                "config_filepath": []
            }
        },
        "client": {
            "name": "client",
            "location": 38,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "req": {
            "name": "req",
            "location": 43,
            "return": [
                "EkklesiaRequest"
            ],
            "arguments": {
                "app": []
            }
        },
        "db_session": {
            "name": "db_session",
            "location": 52,
            "return": [
                "Session"
            ],
            "arguments": {
                "app": []
            }
        },
        "db_query": {
            "name": "db_query",
            "location": 57,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "proposition_with_arguments": {
            "name": "proposition_with_arguments",
            "location": 62,
            "return": [],
            "arguments": {
                "user": [],
                "user_two": [],
                "proposition": [],
                "argument_factory": [],
                "argument_relation_factory": []
            }
        },
        "user_with_departments": {
            "name": "user_with_departments",
            "location": 73,
            "return": [],
            "arguments": {
                "user_factory": [],
                "department_factory": []
            }
        },
        "refresh_user_object": {
            "name": "refresh_user_object",
            "location": 84,
            "return": [
                "_T0"
            ],
            "arguments": {
                "user": [
                    "_T0"
                ]
            }
        },
        "logged_in_user": {
            "name": "logged_in_user",
            "location": 89,
            "return": [],
            "arguments": {
                "user": [],
                "monkeypatch": []
            }
        },
        "logged_in_user_with_departments": {
            "name": "logged_in_user_with_departments",
            "location": 96,
            "return": [],
            "arguments": {
                "user_with_departments": [],
                "monkeypatch": []
            }
        },
        "global_admin": {
            "name": "global_admin",
            "location": 104,
            "return": [],
            "arguments": {
                "group_factory": [],
                "user_factory": []
            }
        },
        "department_admin": {
            "name": "department_admin",
            "location": 112,
            "return": [],
            "arguments": {
                "db_session": [],
                "user_factory": [],
                "department_factory": []
            }
        },
        "logged_in_department_admin": {
            "name": "logged_in_department_admin",
            "location": 123,
            "return": [],
            "arguments": {
                "department_admin": [],
                "monkeypatch": []
            }
        },
        "logged_in_global_admin": {
            "name": "logged_in_global_admin",
            "location": 130,
            "return": [],
            "arguments": {
                "global_admin": [],
                "monkeypatch": []
            }
        },
        "no_db_commit": {
            "name": "no_db_commit",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "no_db_commit.dummy_commit": {
            "name": "dummy_commit",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/test_app.py": {
        "test_get_app_settings_none": {
            "name": "test_get_app_settings_none",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str"
                ]
            }
        },
        "test_make_wsgi_app": {
            "name": "test_make_wsgi_app",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "aioapp.app.Application",
                    "app.GrpyApp"
                ]
            }
        },
        "test_app_settings": {
            "name": "test_app_settings",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "aioapp.app.Application"
                ]
            }
        },
        "test_app_babel_config": {
            "name": "test_app_babel_config",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/test_app_with_ekklesia_auth.py": {
        "token": {
            "name": "token",
            "location": 19,
            "return": [
                "dict[typing.Text, typing.Text]",
                "List[str]",
                "Union[str, float]",
                "int",
                "str"
            ],
            "arguments": {}
        },
        "allow_insecure_transport": {
            "name": "allow_insecure_transport",
            "location": 30,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "app": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None",
                    "Sequence[int]",
                    "typing.Sequence[int]"
                ],
                "monkeypatch": [
                    "str",
                    "bool"
                ]
            }
        },
        "client": {
            "name": "client",
            "location": 35,
            "return": [
                "solo.server.app.App"
            ],
            "arguments": {
                "app": [
                    "str",
                    "bool"
                ],
                "allow_insecure_transport": [
                    "bool",
                    "str",
                    "list[]",
                    "faustypes.app.AppT",
                    "list"
                ]
            }
        },
        "test_create_or_update_user_should_create_new_user": {
            "name": "test_create_or_update_user_should_create_new_user",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "str",
                    "typing.Callable[, ]",
                    "bool",
                    "Callable",
                    "typing.Mapping",
                    "Mapping[str, Any]",
                    "asgard.models.user.User"
                ],
                "req": [
                    "str",
                    "bool",
                    "List[List[int]]",
                    "list[list[int]]"
                ],
                "ekklesia_auth_data": [
                    "str"
                ]
            }
        },
        "test_oauth_new_user": {
            "name": "test_oauth_new_user",
            "location": 48,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "app": [
                    "neuromation.api.Client"
                ],
                "client": [
                    "neuromation.api.Client",
                    "croud.api.Client",
                    "str"
                ],
                "token": [
                    "bool"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/test_identity_policy.py": {
        "identity_policy": {
            "name": "identity_policy",
            "location": 9,
            "return": [
                "EkklesiaPortalIdentityPolicy",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "identity": {
            "name": "identity",
            "location": 14,
            "return": [
                "bool",
                "Optional[str]",
                "Dict[str, Any]",
                "Optional[Any]"
            ],
            "arguments": {}
        },
        "test_remember": {
            "name": "test_remember",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_policy": [
                    "bool"
                ],
                "identity": [
                    "bool"
                ],
                "req": []
            }
        },
        "test_identify": {
            "name": "test_identify",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_policy": [
                    "str",
                    "slice"
                ],
                "req": [],
                "user_factory": [
                    "int"
                ]
            }
        },
        "test_identify_admin": {
            "name": "test_identify_admin",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_policy": [
                    "str",
                    "slice"
                ],
                "req": [],
                "user_factory": [
                    "int"
                ],
                "group_factory": [
                    "bool",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_forget": {
            "name": "test_forget",
            "location": 42,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "identity_policy": [
                    "bool"
                ],
                "req": []
            }
        }
    },
    "ekklesia-portal-master/tests/__init__.py": {},
    "ekklesia-portal-master/tests/cells/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/argument/test_argument.py": {
        "test_argument": {
            "name": "test_argument",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/argument/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/argument_relation/test_argument_relation.py": {
        "test_argumentrelation": {
            "name": "test_argumentrelation",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "argument_relation": []
            }
        },
        "test_argumentrelation_with_logged_in_user": {
            "name": "test_argumentrelation_with_logged_in_user",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "argument_relation": [],
                "logged_in_user": [
                    "bool"
                ]
            }
        },
        "test_new": {
            "name": "test_new",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "logged_in_user": [
                    "set",
                    "bool",
                    "set[]"
                ],
                "proposition": [
                    "str"
                ]
            }
        },
        "test_create": {
            "name": "test_create",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "bool"
                ],
                "client": [
                    "Callable",
                    "dict"
                ],
                "logged_in_user": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "bool",
                    "list",
                    "list[]"
                ],
                "proposition": []
            }
        },
        "test_does_not_create_without_title": {
            "name": "test_does_not_create_without_title",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "bool"
                ],
                "client": [
                    "Callable",
                    "dict"
                ],
                "logged_in_user": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "bool",
                    "list",
                    "list[]"
                ],
                "proposition": []
            }
        },
        "test_vote": {
            "name": "test_vote",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "str",
                    "Optional[int]",
                    "int",
                    "None"
                ],
                "client": [
                    "dict"
                ],
                "logged_in_user": [
                    "str",
                    "Optional[int]",
                    "int",
                    "None"
                ],
                "argument_relation": []
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/argument_relation/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/ballot/test_ballot_views.py": {
        "test_update": {
            "name": "test_update",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "bool",
                    "str",
                    "typing.Callable[[], None]",
                    "int",
                    "Callable[[], None]"
                ],
                "client": [
                    "str",
                    "bool",
                    "list"
                ],
                "ballot_factory": [
                    "bool"
                ],
                "voting_phase_factory": [
                    "bool"
                ],
                "logged_in_department_admin": [
                    "float",
                    "bool",
                    "int"
                ]
            }
        },
        "test_update_global_admin": {
            "name": "test_update_global_admin",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "bool",
                    "str",
                    "typing.Callable[[], None]",
                    "int",
                    "Callable[[], None]"
                ],
                "client": [
                    "str",
                    "bool",
                    "list"
                ],
                "ballot_factory": [
                    "bool"
                ],
                "voting_phase_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "bool",
                    "str",
                    "typing.Callable[[], None]",
                    "int",
                    "Callable[[], None]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/ballot/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/customizable_text/test_customizable_texts.py": {
        "test_customizable_text": {
            "name": "test_customizable_text",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "dict[str, str]",
                    "str",
                    "Dict[str, str]"
                ],
                "db_query": [],
                "customizable_text_factory": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_create_customizable_text": {
            "name": "test_create_customizable_text",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "db_query": [],
                "customizable_text_factory": [],
                "logged_in_global_admin": [
                    "typing.Callable[..., None]",
                    "str",
                    "Callable[..., None]",
                    "Callable[[], None]"
                ]
            }
        },
        "test_update_customizable_text": {
            "name": "test_update_customizable_text",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "typing.Callable[, ]",
                    "Callable",
                    "bool",
                    "list[]",
                    "str",
                    "list",
                    "Callable[..., None]"
                ],
                "client": [
                    "str",
                    "List[str]",
                    "bool"
                ],
                "customizable_text_factory": [
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "logged_in_global_admin": [
                    "typing.Callable[, ]",
                    "Callable",
                    "bool",
                    "list[]",
                    "str",
                    "list",
                    "Callable[..., None]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/customizable_text/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/department/test_departments.py": {
        "test_create_department": {
            "name": "test_create_department",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "db_query": [
                    "Dict[Any, int]",
                    "dict[typing.Any, int]",
                    "List[Tuple[bool, Any]]",
                    "list[tuple[typing.Union[bool,typing.Any]]]"
                ],
                "department_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "Callable[[], None]",
                    "typing.Callable[[], None]",
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "test_update_department": {
            "name": "test_update_department",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ],
                "client": [
                    "dict[, ]",
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "dict"
                ],
                "department_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/department/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/document/test_documents.py": {
        "test_create_document": {
            "name": "test_create_document",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "db_query": [
                    "Optional[int]",
                    "int",
                    "bool",
                    "bytes",
                    "None",
                    "Optional[str]",
                    "str",
                    "Optional[Callable[[str], bool]]",
                    "typing.Callable[str, bool]"
                ],
                "document_factory": [
                    "bool",
                    "str"
                ],
                "proposition_type_factory": [
                    "int"
                ],
                "logged_in_department_admin": [
                    "float",
                    "bool",
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "test_update_document": {
            "name": "test_update_document",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ],
                "client": [
                    "dict[, ]",
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "dict"
                ],
                "document_factory": [
                    "bool"
                ],
                "logged_in_department_admin": [
                    "Callable",
                    "float",
                    "typing.Callable[, ]",
                    "int"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/document/test_document_cells.py": {
        "test_document_new_draft_cell_text_with_propose_change": {
            "name": "test_document_new_draft_cell_text_with_propose_change",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "document": [],
                "req": []
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/document/test_document_helper.py": {
        "test_get_section_from_document": {
            "name": "test_get_section_from_document",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/concepts/document/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/ekklesia_portal/test_index.py": {
        "test_index": {
            "name": "test_index",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_change_language": {
            "name": "test_change_language",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "client": []
            }
        },
        "test_change_language_url_with_params": {
            "name": "test_change_language_url_with_params",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "client": [
                    "str"
                ]
            }
        },
        "test_change_language_invalid": {
            "name": "test_change_language_invalid",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "bool"
                ],
                "client": [
                    "tests.e2e.Helper",
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/ekklesia_portal/test_login.py": {
        "test_show_login": {
            "name": "test_show_login",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_submit_login": {
            "name": "test_submit_login",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_submit_login_wrong_password": {
            "name": "test_submit_login_wrong_password",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "test_submit_login_incomplete": {
            "name": "test_submit_login_incomplete",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_find_user_with_wrong_username_raises_user_not_found": {
            "name": "test_find_user_with_wrong_username_raises_user_not_found",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "req": [
                    "str",
                    "int"
                ]
            }
        },
        "test_verify_password_without_user_raises_value_error": {
            "name": "test_verify_password_without_user_raises_value_error",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_verify_password_is_false_when_user_pw_is_none": {
            "name": "test_verify_password_is_false_when_user_pw_is_none",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_verify_password_is_true_for_empty_pw_with_insecure_mode": {
            "name": "test_verify_password_is_true_for_empty_pw_with_insecure_mode",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/concepts/ekklesia_portal/test_logout.py": {
        "test_logout": {
            "name": "test_logout",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "bool"
                ],
                "client": []
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/ekklesia_portal/test_pagetest.py": {
        "test_pagetest": {
            "name": "test_pagetest",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/ekklesia_portal/test_token.py": {
        "test_token": {
            "name": "test_token",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "user_login_token_factory": [
                    "str",
                    "asgard.models.user.User"
                ],
                "page_factory": [
                    "str",
                    "int",
                    "bytes",
                    "Type[Iterable[Any]]",
                    "typing.Type"
                ]
            }
        },
        "test_token_wrong_token": {
            "name": "test_token_wrong_token",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ],
                "client": [
                    "str"
                ]
            }
        },
        "test_submit_token_new_user": {
            "name": "test_submit_token_new_user",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "client": [],
                "user_login_token_factory": [
                    "models.User",
                    "app.models.User",
                    "app.models.user.User"
                ]
            }
        },
        "test_submit_token_existing_user": {
            "name": "test_submit_token_existing_user",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [],
                "client": [
                    "Callable",
                    "typing.Callable[, ]",
                    "dict",
                    "dict[, ]"
                ],
                "user_factory": [
                    "float"
                ],
                "user_login_token_factory": [
                    "Callable",
                    "str",
                    "typing.Callable[, ]",
                    "bool",
                    "Tuple[int, int]",
                    "tuple[typing.Union[int,int]]",
                    "list",
                    "list[]"
                ]
            }
        },
        "test_submit_token_wrong_token": {
            "name": "test_submit_token_wrong_token",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "dict[, ]",
                    "asgard.models.user.User",
                    "dict"
                ],
                "client": [
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/ekklesia_portal/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/page/test_pages.py": {
        "test_page": {
            "name": "test_page",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "Optional[str]"
                ],
                "db_query": [
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ],
                "page_factory": []
            }
        },
        "test_create_page": {
            "name": "test_create_page",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "db_query": [
                    "Dict[Any, int]",
                    "dict[typing.Any, int]",
                    "List[Tuple[bool, Any]]",
                    "list[tuple[typing.Union[bool,typing.Any]]]"
                ],
                "page_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "Callable[[], None]",
                    "typing.Callable[[], None]",
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "test_update_page": {
            "name": "test_update_page",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ],
                "client": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "page_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/page/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/policy/test_policies.py": {
        "test_create_policy": {
            "name": "test_create_policy",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "db_query": [
                    "Dict[Any, int]",
                    "dict[typing.Any, int]",
                    "List[Tuple[bool, Any]]",
                    "list[tuple[typing.Union[bool,typing.Any]]]"
                ],
                "policy_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "Callable[[], None]",
                    "typing.Callable[[], None]",
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "test_update_policy": {
            "name": "test_update_policy",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ],
                "client": [
                    "dict[, ]",
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "dict"
                ],
                "policy_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "typing.Callable[, ]",
                    "str",
                    "Callable",
                    "Callable[[], None]",
                    "Callable[..., None]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/policy/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/proposition/test_propositions.py": {
        "test_index": {
            "name": "test_index",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_sort_by_supporter_count": {
            "name": "test_index_sort_by_supporter_count",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_search": {
            "name": "test_index_search",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_tag": {
            "name": "test_index_tag",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [],
                "client": []
            }
        },
        "test_index_status": {
            "name": "test_index_status",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_phase": {
            "name": "test_index_phase",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_type": {
            "name": "test_index_type",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_search_status": {
            "name": "test_index_search_status",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_index_department_subject_area": {
            "name": "test_index_department_subject_area",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_show": {
            "name": "test_show",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "proposition": []
            }
        },
        "test_show_legacy_id": {
            "name": "test_show_legacy_id",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "proposition_factory": []
            }
        },
        "test_show_associated": {
            "name": "test_show_associated",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "proposition_factory": []
            }
        },
        "test_new_with_data_import": {
            "name": "test_new_with_data_import",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "logged_in_user": []
            }
        },
        "test_create": {
            "name": "test_create",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [],
                "client": [],
                "proposition_factory": [],
                "proposition_type": [],
                "logged_in_user_with_departments": []
            }
        },
        "test_create_somewhere_as_global_admin": {
            "name": "test_create_somewhere_as_global_admin",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [],
                "client": [],
                "proposition_factory": [],
                "proposition_type": [],
                "department": [],
                "logged_in_global_admin": []
            }
        },
        "test_update_as_global_admin": {
            "name": "test_update_as_global_admin",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "proposition_factory": [],
                "logged_in_global_admin": []
            }
        },
        "test_does_not_create_without_title": {
            "name": "test_does_not_create_without_title",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [],
                "client": [],
                "proposition_factory": [],
                "logged_in_user": []
            }
        },
        "test_support": {
            "name": "test_support",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "db_session": [],
                "logged_in_user": [],
                "proposition_factory": []
            }
        },
        "test_redirect_to_full_url": {
            "name": "test_redirect_to_full_url",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "proposition_factory": []
            }
        },
        "test_new_draft": {
            "name": "test_new_draft",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [],
                "client": [],
                "proposition_factory": [],
                "document": [],
                "logged_in_user": []
            }
        },
        "test_new_with_data_import.import_test": {
            "name": "import_test",
            "location": 118,
            "return": [],
            "arguments": {
                "base_url": [],
                "from_data": []
            }
        },
        "test_support.assert_supporter": {
            "name": "assert_supporter",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "status": []
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/proposition/test_propositions_integration.py": {
        "test_user_creates_proposition": {
            "name": "test_user_creates_proposition",
            "location": 7,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "client": [
                    "dict[str, str]",
                    "List[str]",
                    "Dict[str, str]"
                ],
                "logged_in_user_with_departments": [
                    "str",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/proposition/test_proposition_cells.py": {
        "test_proposition_cell": {
            "name": "test_proposition_cell",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "proposition_with_arguments": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "req": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_proposition_share_url": {
            "name": "test_proposition_share_url",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "proposition_with_arguments": [
                    "Dict[str, Sequence[str]]",
                    "dict[str, typing.Sequence[str]]",
                    "IO[str]",
                    "typing.IO"
                ],
                "req": [
                    "Dict[str, Sequence[str]]",
                    "dict[str, typing.Sequence[str]]",
                    "IO[str]",
                    "typing.IO"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/proposition/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/proposition_type/test_proposition_types.py": {
        "test_create_proposition_type": {
            "name": "test_create_proposition_type",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "db_query": [],
                "proposition_type_factory": [
                    "Dict[str, Any]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "logged_in_global_admin": [
                    "typing.Callable[..., None]",
                    "str",
                    "Callable[..., None]",
                    "Callable[[], None]"
                ]
            }
        },
        "test_update_proposition_type": {
            "name": "test_update_proposition_type",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "typing.Callable[..., None]",
                    "str",
                    "Callable[..., None]",
                    "Callable",
                    "Callable[[], None]"
                ],
                "client": [
                    "dict[str, typing.Any]",
                    "str",
                    "Dict[str, Any]",
                    "List[str]"
                ],
                "proposition_type_factory": [
                    "typing.Callable[dict[, ], None]",
                    "Callable[[Dict], None]",
                    "dict[str, typing.Any]",
                    "bool",
                    "Dict[str, Any]",
                    "tuple[]",
                    "tuple",
                    "Callable"
                ],
                "logged_in_global_admin": [
                    "typing.Callable[..., None]",
                    "str",
                    "Callable[..., None]",
                    "Callable",
                    "Callable[[], None]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/proposition_type/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/user/test_user_cell.py": {
        "user_cell": {
            "name": "user_cell",
            "location": 9,
            "return": [
                "UserCell",
                "str",
                "Union[grouper.models.user.User, Group]"
            ],
            "arguments": {
                "app": [
                    "str",
                    "app.db_models.user.User",
                    "asgard.models.user.User",
                    "ultron8.api.db_models.user.User"
                ],
                "user_with_departments": [
                    "int",
                    "str",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "test_user_cell": {
            "name": "test_user_cell",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "user_cell": [
                    "typing.Callable[, ]",
                    "asgard.models.user.User",
                    "Callable"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/user/test_user_views.py": {
        "test_show": {
            "name": "test_show",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "str",
                    "Callable[..., None]",
                    "typing.Callable[..., None]"
                ],
                "client": [
                    "bool",
                    "str",
                    "List[str]"
                ],
                "logged_in_user": [
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_cannot_view_profile_of_another_user": {
            "name": "test_cannot_view_profile_of_another_user",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "str",
                    "Callable[..., None]",
                    "bool",
                    "typing.Callable[..., None]",
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ],
                "client": [
                    "dict[, ]",
                    "Callable",
                    "dict",
                    "str"
                ],
                "logged_in_user": [
                    "str",
                    "Callable[..., None]",
                    "bool",
                    "typing.Callable[..., None]",
                    "list",
                    "list[]",
                    "dict",
                    "dict[, ]"
                ],
                "user_two": [
                    "Callable",
                    "typing.Callable[, ]",
                    "str",
                    "dict",
                    "dict[, ]"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/user/__init__.py": {},
    "ekklesia-portal-master/tests/concepts/voting_phase/test_voting_phases.py": {
        "test_create_voting_phase": {
            "name": "test_create_voting_phase",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "List[str]"
                ],
                "db_query": [
                    "List[List[int]]",
                    "list[list[int]]",
                    "List[str]",
                    "list[str]"
                ],
                "voting_phase_type": [
                    "str"
                ],
                "voting_phase_factory": [],
                "logged_in_department_admin": [
                    "int",
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "test_update_voting_phase": {
            "name": "test_update_voting_phase",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "dict[str, str]",
                    "str",
                    "Dict[str, str]"
                ],
                "voting_phase_factory": [
                    "bool"
                ],
                "logged_in_department_admin": [
                    "str",
                    "List[float]",
                    "list[float]",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_create_as_global_admin": {
            "name": "test_create_as_global_admin",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "db_query": [
                    "str",
                    "Dict[Any, bool]",
                    "dict[typing.Any, bool]",
                    "Optional[int]",
                    "int",
                    "Dict[str, list]",
                    "None",
                    "Any",
                    "dict[str, list[]]",
                    "Optional[str]",
                    "typing.Any"
                ],
                "client": [
                    "dict[str, str]",
                    "str",
                    "Dict[str, str]"
                ],
                "voting_phase_factory": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "None"
                ],
                "voting_phase_type": [
                    "bool",
                    "str",
                    "tuple[typing.Type]",
                    "Tuple[Type]",
                    "list[str]",
                    "Iterable[Dict[str, Any]]",
                    "List[str]"
                ],
                "logged_in_global_admin": [
                    "bool",
                    "float",
                    "str",
                    "Optional[bool]",
                    "None",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "test_update_as_global_admin": {
            "name": "test_update_as_global_admin",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "voting_phase_factory": [
                    "bool"
                ],
                "logged_in_global_admin": [
                    "list[str]",
                    "bool",
                    "List[str]",
                    "typing.Callable[[], None]",
                    "Callable[[], None]",
                    "int"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/concepts/voting_phase/__init__.py": {},
    "ekklesia-portal-master/tests/database/test_datamodel.py": {
        "test_proposition": {
            "name": "test_proposition",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "bool",
                    "set"
                ],
                "user": [
                    "Dict[Hashable, Iterable[Hashable]]",
                    "dict[typing.Hashable, typing.Iterable[typing.Hashable]]"
                ],
                "user_two": [],
                "proposition": [
                    "Dict[Hashable, Iterable[Hashable]]",
                    "dict[typing.Hashable, typing.Iterable[typing.Hashable]]"
                ],
                "proposition_two": []
            }
        },
        "test_managed_departments": {
            "name": "test_managed_departments",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "department_admin": [
                    "str",
                    "float"
                ]
            }
        },
        "test_user": {
            "name": "test_user",
            "location": 26,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "user": [
                    "str"
                ],
                "user__name": [
                    "str"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/database/test_proposition.py": {
        "test_proposition": {
            "name": "test_proposition",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "str"
                ],
                "proposition_factory": []
            }
        }
    },
    "ekklesia-portal-master/tests/database/__init__.py": {},
    "ekklesia-portal-master/tests/helper/test_json.py": {
        "test_json_encoder": {
            "name": "test_json_encoder",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/helper/__init__.py": {},
    "ekklesia-portal-master/tests/helpers/assert_helpers.py": {
        "assert_no_difference": {
            "name": "assert_no_difference",
            "location": 5,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "func": [
                    "str",
                    "Set[str]",
                    "set[str]",
                    "List[str]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "None",
                    "Set[str]",
                    "List[str]",
                    "set[str]",
                    "list[str]"
                ]
            }
        },
        "assert_difference": {
            "name": "assert_difference",
            "location": 21,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "func": [
                    "str",
                    "List[str]",
                    "list[str]"
                ],
                "diff": [
                    "str",
                    "bool",
                    "dict",
                    "dict[, ]"
                ],
                "name": [
                    "str",
                    "None",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "assert_no_difference.assertion_msg": {
            "name": "assertion_msg",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "assert_difference.assertion_msg": {
            "name": "assertion_msg",
            "location": 30,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/helpers/ipython_helpers.py": {
        "load_config_for_embed_ipython": {
            "name": "load_config_for_embed_ipython",
            "location": 10,
            "return": [
                "Dict[str, Any]",
                "Optional[type]",
                "Optional[str]",
                "Optional[dict]",
                "dict"
            ],
            "arguments": {
                "profile_name": [
                    "str",
                    "typing.Text"
                ]
            }
        },
        "embed_ipython": {
            "name": "embed_ipython",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/helpers/webtest_helpers.py": {
        "python_to_deform_value": {
            "name": "python_to_deform_value",
            "location": 4,
            "return": [
                "bool",
                "typing.Text",
                "str"
            ],
            "arguments": {
                "py_value": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]"
                ]
            }
        },
        "assert_deform": {
            "name": "assert_deform",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "response": [
                    "str"
                ],
                "expected_form_data": [
                    "dict[, ]",
                    "dict",
                    "Dict[str, Any]",
                    "bytes"
                ]
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 44,
            "return": [
                "str",
                "Callable",
                "bool"
            ],
            "arguments": {
                "app": [],
                "client": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "_set_form_field_value": {
            "name": "_set_form_field_value",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "form": [
                    "str",
                    "set",
                    "set[]",
                    "Optional[str]",
                    "None",
                    "List[str]",
                    "list[str]"
                ],
                "data": [
                    "str",
                    "dict"
                ],
                "field_name": [
                    "bool",
                    "str",
                    "dict",
                    "List[str]",
                    "Dict[str, Any]",
                    "Optional[Dict]",
                    "Mapping[str, Any]"
                ],
                "enum_field_names": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "fill_form": {
            "name": "fill_form",
            "location": 59,
            "return": [
                "_T0"
            ],
            "arguments": {
                "form": [
                    "_T0"
                ],
                "data": [
                    "str",
                    "int"
                ],
                "field_names": [
                    "None",
                    "str",
                    "Optional[str]",
                    "typing.Callable[, ]",
                    "Optional[object]",
                    "Callable"
                ],
                "enum_field_names": [
                    "list[]",
                    "str",
                    "int"
                ]
            }
        }
    },
    "ekklesia-portal-master/tests/importer/test_discourse.py": {
        "test_parse_raw_content": {
            "name": "test_parse_raw_content",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_import_discourse_post_as_proposition": {
            "name": "test_import_discourse_post_as_proposition",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ekklesia-portal-master/tests/lib/__init__.py": {},
    "ekklesia-portal-master/tests/lib/vvvote/test_election_config.py": {
        "test_ballot_to_vvvote_question": {
            "name": "test_ballot_to_vvvote_question",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "bool"
                ],
                "ballot": [],
                "proposition_factory": []
            }
        },
        "test_voting_phase_to_vvvote_election_config": {
            "name": "test_voting_phase_to_vvvote_election_config",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": [
                    "bool"
                ],
                "ballot_factory": [],
                "proposition_factory": [
                    "int"
                ],
                "voting_phase_factory": []
            }
        }
    },
    "ekklesia-portal-master/tests/lib/vvvote/test_schema.py": {
        "oauth_config": {
            "name": "oauth_config",
            "location": 12,
            "return": [
                "OAuthConfig",
                "str",
                "Optional[int]",
                "Optional[bool]",
                "Optional[str]",
                "Dict[str, Any]",
                "bool",
                "Dict[str, List[str]]"
            ],
            "arguments": {}
        },
        "yes_no_scheme": {
            "name": "yes_no_scheme",
            "location": 31,
            "return": [
                "YesNoScheme",
                "str",
                "Type",
                "bool"
            ],
            "arguments": {}
        },
        "score_scheme": {
            "name": "score_scheme",
            "location": 36,
            "return": [
                "ScoreScheme",
                "bool",
                "bytes",
                "Optional[str]",
                "str"
            ],
            "arguments": {}
        },
        "question": {
            "name": "question",
            "location": 41,
            "return": [
                "str",
                "Question"
            ],
            "arguments": {
                "yes_no_scheme": [
                    "bool",
                    "bytes",
                    "typing.Type",
                    "Type[\"SerializationDialect\"]",
                    "dict[str, typing.Any]",
                    "Type[object]",
                    "Dict[str, Any]"
                ],
                "score_scheme": [
                    "bool",
                    "bytes",
                    "typing.Type",
                    "Type[\"SerializationDialect\"]",
                    "dict[str, typing.Any]",
                    "Type[object]",
                    "Dict[str, Any]"
                ]
            }
        },
        "test_oauth_config": {
            "name": "test_oauth_config",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "oauth_config": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "test_yes_no_scheme": {
            "name": "test_yes_no_scheme",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "yes_no_scheme": [
                    "str",
                    "list",
                    "bytes",
                    "Pattern[str]"
                ]
            }
        },
        "test_election_config": {
            "name": "test_election_config",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "oauth_config": [
                    "str"
                ],
                "question": []
            }
        }
    },
    "ekklesia-portal-master/tests/lib/vvvote/__init__.py": {},
    "ekklesia-portal-master/tests/templates/__init__.py": {}
}
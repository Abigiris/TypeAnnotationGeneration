{
    "envclasses-master/test_envclasses.py": {
        "test_envclass_primitive": {
            "name": "test_envclass_primitive",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_envclass_enum": {
            "name": "test_envclass_enum",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_envclass_list": {
            "name": "test_envclass_list",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_envclass_dict": {
            "name": "test_envclass_dict",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_envclass_tuple": {
            "name": "test_envclass_tuple",
            "location": 115,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_envclass_nested": {
            "name": "test_envclass_nested",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_envclass_pathlib": {
            "name": "test_envclass_pathlib",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_env_with_prefix": {
            "name": "test_load_env_with_prefix",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_load_env_with_empty_prefix": {
            "name": "test_load_env_with_empty_prefix",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_str": {
            "name": "test_str",
            "location": 205,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_is_enum": {
            "name": "test_is_enum",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "envclasses-master/envclasses/__init__.py": {
        "envclass": {
            "name": "envclass",
            "location": 135,
            "return": [
                "str",
                "Pattern",
                "int",
                "OrderedDict"
            ],
            "arguments": {
                "_cls": [
                    "Type",
                    "float",
                    "type"
                ]
            }
        },
        "_load_dataclass": {
            "name": "_load_dataclass",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "T",
                    "bytes",
                    "Dict[str, Any]",
                    "Callable"
                ],
                "f": [
                    "str"
                ],
                "prefix": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "_load_list": {
            "name": "_load_list",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "dict",
                    "Mapping",
                    "enum.Enum",
                    "str"
                ],
                "f": [
                    "os.DirEntry",
                    "List[str]",
                    "IO"
                ],
                "prefix": [
                    "str",
                    "ruamel.yaml.YAML",
                    "IO[bytes]",
                    "IO",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "_load_tuple": {
            "name": "_load_tuple",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "dict",
                    "Exception",
                    "str",
                    "Optional[str]"
                ],
                "f": [
                    "List[str]",
                    "os.DirEntry",
                    "str"
                ],
                "prefix": [
                    "str",
                    "ruamel.yaml.YAML"
                ]
            }
        },
        "_load_dict": {
            "name": "_load_dict",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "dict",
                    "Mapping",
                    "IO",
                    "str"
                ],
                "f": [
                    "List[str]",
                    "os.DirEntry",
                    "IO",
                    "str"
                ],
                "prefix": [
                    "str",
                    "ruamel.yaml.YAML",
                    "IO[bytes]",
                    "IO",
                    "dict"
                ]
            }
        },
        "_to_value": {
            "name": "_to_value",
            "location": 238,
            "return": [
                "bool",
                "Union[List[str], List[Any]]",
                "int",
                "str"
            ],
            "arguments": {
                "v": [
                    "int",
                    "Type[Any]",
                    "bytes"
                ],
                "typ": [
                    "int",
                    "float"
                ]
            }
        },
        "_load_enum": {
            "name": "_load_enum",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "List[str]",
                    "type"
                ],
                "f": [
                    "dict",
                    "str"
                ],
                "prefix": [
                    "str",
                    "ruamel.yaml.YAML"
                ]
            }
        },
        "_load_str": {
            "name": "_load_str",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "dict",
                    "bool",
                    "str"
                ],
                "f": [
                    "int",
                    "Exception",
                    "IO",
                    "dict",
                    "List[str]"
                ],
                "prefix": [
                    "str",
                    "ruamel.yaml.YAML",
                    "IO",
                    "IO[bytes]",
                    "dict"
                ]
            }
        },
        "_load_other": {
            "name": "_load_other",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "dict"
                ],
                "f": [
                    "Mapping",
                    "dict",
                    "Exception"
                ],
                "prefix": [
                    "str",
                    "IO[bytes]",
                    "IO",
                    "Exception",
                    "dict",
                    "List[str]",
                    "Set[str]"
                ]
            }
        },
        "is_enum": {
            "name": "is_enum",
            "location": 280,
            "return": [
                "bool"
            ],
            "arguments": {
                "typ": [
                    "float"
                ]
            }
        },
        "is_list": {
            "name": "is_list",
            "location": 290,
            "return": [
                "bool"
            ],
            "arguments": {
                "typ": [
                    "Type",
                    "list",
                    "Iterable[Type]",
                    "Dict[str, Any]"
                ]
            }
        },
        "is_tuple": {
            "name": "is_tuple",
            "location": 300,
            "return": [
                "bool"
            ],
            "arguments": {
                "typ": [
                    "Type",
                    "bool",
                    "Tuple[int, int]",
                    "int",
                    "logging.LogRecord"
                ]
            }
        },
        "is_dict": {
            "name": "is_dict",
            "location": 310,
            "return": [
                "bool"
            ],
            "arguments": {
                "typ": [
                    "Type",
                    "Dict[str, Any]"
                ]
            }
        },
        "is_str": {
            "name": "is_str",
            "location": 320,
            "return": [
                "bool"
            ],
            "arguments": {
                "typ": [
                    "str",
                    "dict",
                    "Optional[int]",
                    "Tuple[bytes, bytes, bytes]",
                    "bytes"
                ]
            }
        },
        "is_envclass": {
            "name": "is_envclass",
            "location": 330,
            "return": [
                "bool"
            ],
            "arguments": {
                "instance_or_class": [
                    "str",
                    "bool"
                ]
            }
        },
        "load_env": {
            "name": "load_env",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "inst": [
                    "str",
                    "List[str]"
                ],
                "prefix": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "envclass.wrap": {
            "name": "wrap",
            "location": 141,
            "return": [
                "Dict[str, Any]",
                "str",
                "Callable[[str], T]"
            ],
            "arguments": {
                "cls": [
                    "complex",
                    "bytes",
                    "enum.Enum",
                    "bool",
                    "type",
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "envclass.wrap.load_env": {
            "name": "load_env",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_prefix": []
            }
        }
    }
}
{
    "flake8-annotations-complexity-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 9,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "flake8-annotations-complexity-master/flake8_annotations_complexity/ast_helpers.py": {
        "get_annotation_complexity": {
            "name": "get_annotation_complexity",
            "location": 6,
            "return": [
                "int",
                "str",
                "List"
            ],
            "arguments": {
                "annotation_node": [
                    "str",
                    "Callable",
                    "int"
                ],
                "default_complexity": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "get_annotation_len": {
            "name": "get_annotation_len",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "annotation_node": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "validate_annotations_in_ast_node": {
            "name": "validate_annotations_in_ast_node",
            "location": 41,
            "return": [
                "List[Tuple[(nothing, str)]]"
            ],
            "arguments": {
                "node": [],
                "max_annotations_complexity": [
                    "int",
                    "List[int]",
                    "List",
                    "List[str]"
                ],
                "max_annotations_len": [
                    "str"
                ]
            }
        }
    },
    "flake8-annotations-complexity-master/flake8_annotations_complexity/checker.py": {
        "AnnotationsComplexityChecker.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tree": [
                    "Iterable[bytes]",
                    "int",
                    "Tuple[str,str]",
                    "bool"
                ],
                "filename": [
                    "str",
                    "Dict[str,str]",
                    "Dict"
                ]
            }
        },
        "AnnotationsComplexityChecker.add_options": {
            "name": "add_options",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "parser": []
            }
        },
        "AnnotationsComplexityChecker.parse_options": {
            "name": "parse_options",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "bytes",
                    "Match[str]",
                    "Match"
                ],
                "options": [
                    "int",
                    "bytes",
                    "Match[str]",
                    "Match"
                ]
            }
        },
        "AnnotationsComplexityChecker.run": {
            "name": "run",
            "location": 44,
            "return": [
                "Generator[(Tuple[(nothing, nothing, str, Type[AnnotationsComplexityChecker])], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flake8-annotations-complexity-master/flake8_annotations_complexity/__init__.py": {},
    "flake8-annotations-complexity-master/tests/conftest.py": {
        "run_validator_for_test_file": {
            "name": "run_validator_for_test_file",
            "location": 7,
            "return": [
                "List[Tuple[(nothing, nothing, str, Type[flake8_annotations_complexity.checker.AnnotationsComplexityChecker])]]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "max_annotations_complexity": [
                    "int",
                    "None",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "flake8-annotations-complexity-master/tests/test_annotations_complexity.py": {
        "test_always_ok_for_empty_file": {
            "name": "test_always_ok_for_empty_file",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ok_for_unannotated_file": {
            "name": "test_ok_for_unannotated_file",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ok_for_dynamic_annotations_file": {
            "name": "test_ok_for_dynamic_annotations_file",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ok_for_string_annotations_file": {
            "name": "test_ok_for_string_annotations_file",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validates_annotations_complexity_for_annassigments": {
            "name": "test_validates_annotations_complexity_for_annassigments",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ok_for_empty_tuple": {
            "name": "test_ok_for_empty_tuple",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_not_raises_errors_for_weird_annotations": {
            "name": "test_not_raises_errors_for_weird_annotations",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ok_for_empty_string": {
            "name": "test_ok_for_empty_string",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pep_585_compliance": {
            "name": "test_pep_585_compliance",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validates_too_long_annotations": {
            "name": "test_validates_too_long_annotations",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flake8-annotations-complexity-master/tests/test_files/dynamic_annotations.py": {
        "foo": {
            "name": "foo",
            "location": 4,
            "return": [
                "List[int]"
            ],
            "arguments": {}
        },
        "bar": {
            "name": "bar",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "arg1": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "arg2": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "flake8-annotations-complexity-master/tests/test_files/empty.py": {},
    "flake8-annotations-complexity-master/tests/test_files/empty_string.py": {},
    "flake8-annotations-complexity-master/tests/test_files/empty_tuple.py": {},
    "flake8-annotations-complexity-master/tests/test_files/pep_585.py": {
        "find": {
            "name": "find",
            "location": 7,
            "return": [
                "int"
            ],
            "arguments": {
                "haystack": [
                    "List[str]",
                    "bool",
                    "List[object]",
                    "Sized",
                    "str",
                    "Optional[List]",
                    "List",
                    "None"
                ]
            }
        }
    },
    "flake8-annotations-complexity-master/tests/test_files/string_annotations.py": {
        "foo": {
            "name": "foo",
            "location": 4,
            "return": [
                "List[int]"
            ],
            "arguments": {}
        },
        "bar": {
            "name": "bar",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "arg1": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "arg2": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "flake8-annotations-complexity-master/tests/test_files/too_long_annotation.py": {},
    "flake8-annotations-complexity-master/tests/test_files/unannotated.py": {
        "foo": {
            "name": "foo",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "bar": {
            "name": "bar",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "arg": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "flake8-annotations-complexity-master/tests/test_files/var_annotation.py": {},
    "flake8-annotations-complexity-master/tests/test_files/weird_annotations.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [
                    "int",
                    "Mapping",
                    "List[str]"
                ],
                "b": [
                    "int",
                    "Mapping",
                    "List[str]"
                ]
            }
        }
    }
}
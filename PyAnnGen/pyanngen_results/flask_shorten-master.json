{
    "flask_shorten-master/run.py": {},
    "flask_shorten-master/alembic/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flask_shorten-master/alembic/versions/b3e9d4be4d7c_added_url_mapper_table.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flask_shorten-master/flask_shorten/models.py": {
        "UrlMapper.generate_hash_path": {
            "name": "generate_hash_path",
            "location": 25,
            "return": [
                "str",
                "int"
            ],
            "arguments": {}
        }
    },
    "flask_shorten-master/flask_shorten/views.py": {
        "create_url_mapper": {
            "name": "create_url_mapper",
            "location": 53,
            "return": [
                "flask_shorten.models.UrlMapper"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "UrlMapping.get": {
            "name": "get",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "UrlMapping.post": {
            "name": "post",
            "location": 85,
            "return": [
                "str",
                "zerver.models.Realm",
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Redirection.get": {
            "name": "get",
            "location": 99,
            "return": [
                "str",
                "Dict[str, Any]",
                "int",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        },
        "HomePage.get": {
            "name": "get",
            "location": 109,
            "return": [
                "int",
                "bytes",
                "djmoney.contrib.exchange.models.Rate",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flask_shorten-master/flask_shorten/__init__.py": {
        "set_config": {
            "name": "set_config",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "str",
                    "flask.Flask"
                ],
                "testing": [
                    "bool",
                    "str",
                    "flask.Flask",
                    "tuple"
                ]
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 56,
            "return": [
                "flask.Flask",
                "Flask"
            ],
            "arguments": {
                "testing": [
                    "bool",
                    "str",
                    "list",
                    "Dict[str, Any]",
                    "server.models.User"
                ]
            }
        }
    },
    "flask_shorten-master/test/test_flask_shorten.py": {
        "app": {
            "name": "app",
            "location": 9,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "monkeypatch": [
                    "models.Project",
                    "int",
                    "django.contrib.auth.models.User",
                    "str",
                    "bool"
                ]
            }
        },
        "database": {
            "name": "database",
            "location": 16,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "app": []
            }
        },
        "test_custom_path_creation": {
            "name": "test_custom_path_creation",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "database": [
                    "str",
                    "int"
                ]
            }
        },
        "test_random_path_creation": {
            "name": "test_random_path_creation",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "database": [
                    "str",
                    "int"
                ],
                "app": [],
                "monkeypatch": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_taken_path": {
            "name": "test_taken_path",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "database": [
                    "str",
                    "int"
                ],
                "monkeypatch": [
                    "str",
                    "int"
                ]
            }
        },
        "test_no_path": {
            "name": "test_no_path",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "database": [
                    "Generator",
                    "typing.Generator[]"
                ],
                "monkeypatch": [
                    "Generator",
                    "typing.Generator[]"
                ]
            }
        }
    }
}
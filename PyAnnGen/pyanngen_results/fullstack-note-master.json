{
    "fullstack-note-master/fullstack_stuff/django_stuff/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/populate_first_app.py": {
        "add_topic": {
            "name": "add_topic",
            "location": 14,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "populate": {
            "name": "populate",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "N": [
                    "int"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/advcbv/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/advcbv/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/advcbv/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/advcbv/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/models.py": {
        "School.__str__": {
            "name": "__str__",
            "location": 10,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "School.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [
                "str",
                "Mapping[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Student.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/views.py": {
        "IndexView.get_context_data": {
            "name": "get_context_data",
            "location": 24,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CBView.get": {
            "name": "get",
            "location": 62,
            "return": [
                "HttpResponse",
                "str",
                "int",
                "models.Dashboard",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "django.http.HttpRequest",
                    "dict[, ]",
                    "django.http.requesHttpRequest",
                    "Dict[str, str]",
                    "dict"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/migrations/0002_auto_20170318_0000.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/advcbv/basic_app/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/forms.py": {
        "check_for_z": {
            "name": "check_for_z",
            "location": 4,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "value": [
                    "str",
                    "bytes",
                    "int",
                    "T"
                ]
            }
        },
        "FormName.clean": {
            "name": "clean",
            "location": 27,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/models.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/views.py": {
        "index": {
            "name": "index",
            "location": 5,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "form_name_view": {
            "name": "form_name_view",
            "location": 8,
            "return": [
                "int",
                "Dict[str, Tuple[Any, Any]]",
                "str"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicapp/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicform/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicform/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicform/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/basicform/basicform/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/models.py": {
        "Topic.__str__": {
            "name": "__str__",
            "location": 7,
            "return": [
                "str",
                "zerver.models.Realm"
            ],
            "arguments": {
                "self": []
            }
        },
        "Webpage.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccessRecord.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/views.py": {
        "index": {
            "name": "index",
            "location": 6,
            "return": [
                "str",
                "Optional[Any]",
                "app.models.TweetContent",
                "Optional[str]",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_app/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_project/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_project/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_project/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/first_project/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/models.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/views.py": {
        "index": {
            "name": "index",
            "location": 4,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "other": {
            "name": "other",
            "location": 8,
            "return": [
                "Dict[str, Any]",
                "Optional[bytes]",
                "int",
                "bool",
                "Dict[str, str]",
                "str",
                "dict"
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "relative": {
            "name": "relative",
            "location": 11,
            "return": [
                "Optional[str]",
                "List[str]",
                "dict",
                "str",
                "Dict[str, Any]",
                "Optional[Any]"
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/templatetags/my_extras.py": {
        "cut": {
            "name": "cut",
            "location": 6,
            "return": [
                "str",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {
                "value": [
                    "str",
                    "int",
                    "Sequence[str]"
                ],
                "arg": [
                    "str",
                    "int",
                    "Sequence[str]"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/basic_app/templatetags/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/learning_templates/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/learning_templates/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/learning_templates/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_templates/learning_templates/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/forms.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/models.py": {
        "UserProfileInfo.__str__": {
            "name": "__str__",
            "location": 12,
            "return": [
                "bool",
                "set",
                "zam_repondeur.models.Lecture",
                "django.db.migrations.state.StateApps",
                "django.db.models.QuerySet"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/views.py": {
        "index": {
            "name": "index",
            "location": 11,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "special": {
            "name": "special",
            "location": 15,
            "return": [
                "HttpResponse",
                "Dict[str, Any]",
                "Optional[str]"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "user_logout": {
            "name": "user_logout",
            "location": 19,
            "return": [
                "HttpResponseRedirect",
                "bool",
                "int"
            ],
            "arguments": {
                "request": [
                    "django.core.handlers.wsgi.WSGIRequest",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "register": {
            "name": "register",
            "location": 23,
            "return": [
                "str",
                "Optional[Any]",
                "dict",
                "Optional[str]",
                "Tuple[str, str]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "user_login": {
            "name": "user_login",
            "location": 55,
            "return": [
                "HttpResponseRedirect",
                "bool",
                "HttpResponse",
                "str",
                "int",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/basic_app/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/learning_users/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/learning_users/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/learning_users/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/learning_users/learning_users/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/forms.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/models.py": {
        "Post.publish": {
            "name": "publish",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.approve_comments": {
            "name": "approve_comments",
            "location": 17,
            "return": [
                "bool",
                "int",
                "Optional[int]",
                "Optional[bool]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 20,
            "return": [
                "str",
                "Optional[str]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Post.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.approve": {
            "name": "approve",
            "location": 33,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 37,
            "return": [
                "str",
                "List[annofabapi.models.SingleAnnotation]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.__str__": {
            "name": "__str__",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/views.py": {
        "post_publish": {
            "name": "post_publish",
            "location": 54,
            "return": [
                "cmk.utils.type_defs.EventRule",
                "core.models.Grouping",
                "dict"
            ],
            "arguments": {
                "reqest": [
                    "dict[, ]",
                    "bool",
                    "dict",
                    "django.db.backends.postgresql.schema.DatabaseSchemaEditor"
                ],
                "pk": [
                    "dict[, ]",
                    "dict",
                    "int",
                    "zerver.models.Realm",
                    "None",
                    "Optional[int]",
                    "models.Course"
                ]
            }
        },
        "add_comment_to_post": {
            "name": "add_comment_to_post",
            "location": 60,
            "return": [
                "Dict[str, Any]",
                "List[dict]"
            ],
            "arguments": {
                "request": [
                    "django.core.handlers.wsgi.WSGIRequest",
                    "django.http.HttpRequest"
                ],
                "pk": [
                    "str",
                    "int",
                    "django.http.HttpRequest"
                ]
            }
        },
        "comment_approve": {
            "name": "comment_approve",
            "location": 78,
            "return": [
                "bool",
                "Mapping[str, Any]",
                "Dict[str, Any]",
                "dict",
                "Callable",
                "OrderedDict",
                "List[str]"
            ],
            "arguments": {
                "request": [
                    "bool"
                ],
                "pk": [
                    "int",
                    "str",
                    "django.http.HttpRequest"
                ]
            }
        },
        "comment_remove": {
            "name": "comment_remove",
            "location": 85,
            "return": [
                "Dict[str, Dict[str, int]]",
                "str",
                "cmk.utils.type_defs.HostName",
                "bool",
                "Callable",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "bool"
                ],
                "pk": [
                    "int",
                    "str",
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "PostListView.get_queryset": {
            "name": "get_queryset",
            "location": 19,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DraftListView.get_queryset": {
            "name": "get_queryset",
            "location": 47,
            "return": [
                "raiden.utils.ChannelID",
                "dict",
                "bytes",
                "transfer.models.Order",
                "int",
                "Tuple[int, int]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/migrations/0002_auto_20180214_1201.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/migrations/0003_auto_20180214_1404.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/blog/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/mysite/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/mysite/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/mysite/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/mysite/mysite/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/settings/base.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/settings/local.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/settings/production.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/settings/test.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/config/settings/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/docs/conf.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/docs/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory",
                "int",
                "List[Dict[str, Any]]",
                "bool",
                "list"
            ],
            "arguments": {}
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/contrib/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/contrib/sites/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/contrib/sites/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/contrib/sites/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/models.py": {
        "Question.__str__": {
            "name": "__str__",
            "location": 8,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.was_published_recently": {
            "name": "was_published_recently",
            "location": 11,
            "return": [
                "bool",
                "int",
                "Optional[str]",
                "x509_pki.models.Certificate"
            ],
            "arguments": {
                "self": []
            }
        },
        "Choice.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/views.py": {
        "vote": {
            "name": "vote",
            "location": 57,
            "return": [
                "HttpResponseRedirect",
                "int",
                "str"
            ],
            "arguments": {
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "dict"
                ],
                "question_id": [
                    "int",
                    "django.http.HttpRequest",
                    "zerver.models.UserProfile"
                ]
            }
        },
        "IndexView.get_queryset": {
            "name": "get_queryset",
            "location": 42,
            "return": [
                "str",
                "bool",
                "Optional[float]",
                "int",
                "Union[str, int]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/polls/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ],
                "sociallogin": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [
                "bool",
                "Dict[int, dict]",
                "Optional[Iterable[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "django.conf.settings.AUTH_USER_MODEL",
                    "bool"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/polls/polls/users/tests/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/manage.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/population_users.py": {
        "populate": {
            "name": "populate",
            "location": 12,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "N": [
                    "int"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/admin.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/apps.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/forms.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/models.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/tests.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/views.py": {
        "index": {
            "name": "index",
            "location": 14,
            "return": [
                "HttpResponse",
                "bytes",
                "dict",
                "int"
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "help": {
            "name": "help",
            "location": 10,
            "return": [
                "bytes",
                "dict",
                "int"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "users": {
            "name": "users",
            "location": 17,
            "return": [
                "bool",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        }
    },
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/migrations/0001_initial.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/appTwo/migrations/__init__.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/ProTwo/settings.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/ProTwo/urls.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/ProTwo/wsgi.py": {},
    "fullstack-note-master/fullstack_stuff/django_stuff/ProTwo/ProTwo/__init__.py": {}
}
{
    "fun2-master/f2/f2.py": {
        "noop": {
            "name": "noop",
            "location": 10,
            "return": [
                "int",
                "str",
                "Callable",
                "Iterable[C]"
            ],
            "arguments": {
                "obj": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "car": {
            "name": "car",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "cdr": {
            "name": "cdr",
            "location": 18,
            "return": [
                "set",
                "Dict[str, Any]"
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "_generic_flatten_v1": {
            "name": "_generic_flatten_v1",
            "location": 25,
            "return": [
                "list"
            ],
            "arguments": {
                "obj": [
                    "Iterable[Iterable[T]]",
                    "int",
                    "Dict[str, str]"
                ]
            }
        },
        "Fun.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "iterable": [
                    "List",
                    "List[str]",
                    "List[int]",
                    "int"
                ]
            }
        },
        "Fun.map": {
            "name": "map",
            "location": 34,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "ufunc": [
                    "int",
                    "str",
                    "T"
                ]
            }
        },
        "Fun.reduce": {
            "name": "reduce",
            "location": 38,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "binary_op": [
                    "int",
                    "Sequence[str]",
                    "Dict[str,str]",
                    "Dict[str,Set[str]]",
                    "Dict[str,set[str]]"
                ]
            }
        },
        "Fun.filter": {
            "name": "filter",
            "location": 42,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "bool_op": [
                    "int",
                    "Optional[Awaitable[None]]",
                    "collections.abc.Awaitable[None]",
                    "None"
                ]
            }
        },
        "Fun.sum": {
            "name": "sum",
            "location": 46,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ]
            }
        },
        "Fun.flatten": {
            "name": "flatten",
            "location": 50,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ]
            }
        },
        "Fun.sorted": {
            "name": "sorted",
            "location": 54,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "key": [
                    "Optional[\"PNBuffer\"]",
                    "str",
                    "Optional[\"PNSqlCursor\"]",
                    "Match",
                    "bool",
                    "list"
                ],
                "reverse": [
                    "bool",
                    "Optional[PNBuffer]",
                    "str",
                    "Optional[PNSqlCursor]",
                    "Match",
                    "List"
                ]
            }
        },
        "Fun.reversed": {
            "name": "reversed",
            "location": 58,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ]
            }
        },
        "Fun.getitem": {
            "name": "getitem",
            "location": 62,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ]
            }
        },
        "Fun.getattr": {
            "name": "getattr",
            "location": 66,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ]
            }
        },
        "Fun.mask": {
            "name": "mask",
            "location": 70,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "mask": [
                    "int",
                    "float",
                    "str",
                    "List[str]"
                ]
            }
        },
        "Fun.map_apply": {
            "name": "map_apply",
            "location": 74,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "ufunc": [
                    "int",
                    "str",
                    "T"
                ]
            }
        },
        "Fun.flatmap": {
            "name": "flatmap",
            "location": 78,
            "return": [
                "Fun"
            ],
            "arguments": {
                "self": [
                    "_TFun@@Fun@@"
                ],
                "ufunc": [
                    "List[str]",
                    "List",
                    "str",
                    "Iterable[float]",
                    "None",
                    "Optional[str]"
                ]
            }
        },
        "Fun.collect": {
            "name": "collect",
            "location": 82,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "fun2-master/f2/setup.py": {},
    "fun2-master/f2/__init__.py": {},
    "fun2-master/tests/test_f2_chaining.py": {
        "_add1": {
            "name": "_add1",
            "location": 6,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "val": [
                    "List[str]",
                    "str",
                    "bytes"
                ]
            }
        },
        "TestF2Chaining.test_map": {
            "name": "test_map",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestF2Chaining.test_map_apply": {
            "name": "test_map_apply",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestF2Chaining.test_reduce": {
            "name": "test_reduce",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestF2Chaining.test_filter": {
            "name": "test_filter",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestF2Chaining.test_sorted": {
            "name": "test_sorted",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestF2Chaining.test_flatmap": {
            "name": "test_flatmap",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "futbolean-master/data_science/kedro_cli.py": {
        "cli": {
            "name": "cli",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "tag": [
                    "Iterable[str]",
                    "List",
                    "List[dict]",
                    "List[str]",
                    "List[Dict[str,Any]]"
                ],
                "env": [
                    "Iterable[str]",
                    "List",
                    "List[dict]",
                    "List[str]",
                    "List[Dict[str,Any]]"
                ],
                "parallel": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "List[str]",
                    "Type",
                    "None"
                ],
                "runner": [
                    "int"
                ],
                "node_names": [
                    "Iterable[str]",
                    "List",
                    "List[dict]",
                    "List[str]",
                    "List[Dict[str,Any]]"
                ],
                "to_nodes": [
                    "str",
                    "Optional[str]",
                    "Dict[str,Any]",
                    "List[str]"
                ],
                "from_nodes": [
                    "str",
                    "Optional[str]",
                    "Dict[str,Any]",
                    "List[str]"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "install": {
            "name": "install",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ipython": {
            "name": "ipython",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "package": {
            "name": "package",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "build_docs": {
            "name": "build_docs",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "build_reqs": {
            "name": "build_reqs",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "activate_nbstripout": {
            "name": "activate_nbstripout",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_build_jupyter_command": {
            "name": "_build_jupyter_command",
            "location": 256,
            "return": [
                "list"
            ],
            "arguments": {
                "base": [
                    "int",
                    "str",
                    "bool"
                ],
                "ip": [
                    "str",
                    "int",
                    "bool"
                ],
                "all_kernels": [
                    "str",
                    "Iterable",
                    "bool",
                    "Sequence[str]"
                ],
                "args": []
            }
        },
        "jupyter": {
            "name": "jupyter",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "jupyter_notebook": {
            "name": "jupyter_notebook",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "ip": [],
                "all_kernels": [
                    "Type",
                    "str",
                    "cmk.gui.plugins.visuals.utils.Filter"
                ],
                "args": []
            }
        },
        "jupyter_lab": {
            "name": "jupyter_lab",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "ip": [],
                "all_kernels": [
                    "Type",
                    "str",
                    "cmk.gui.plugins.visuals.utils.Filter"
                ],
                "args": []
            }
        },
        "convert_notebook": {
            "name": "convert_notebook",
            "location": 311,
            "return": [
                "None",
                "Union[tuple,list]",
                "Dict[str,Any]",
                "str",
                "Set[str]"
            ],
            "arguments": {
                "all_flag": [
                    "int",
                    "Sequence[float]"
                ],
                "overwrite_flag": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "int",
                    "None"
                ],
                "filepath": [
                    "str",
                    "List[str]",
                    "pathlib.Path",
                    "int"
                ]
            }
        },
        "ipython_message": {
            "name": "ipython_message",
            "location": 375,
            "return": [
                "None"
            ],
            "arguments": {
                "all_kernels": [
                    "bool"
                ]
            }
        }
    },
    "futbolean-master/data_science/.ipython/profile_default/startup/00-kedro-init.py": {
        "reload_kedro": {
            "name": "reload_kedro",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "project_path": [
                    "str",
                    "Optional[pathlib.Path]",
                    "None"
                ],
                "line": [
                    "str",
                    "None",
                    "bool",
                    "waterbutler.core.path.WaterButlerPath",
                    "List[str]",
                    "waterbutler.core.streams.BaseStream",
                    "List[tuple[Union[int,int]]]",
                    "List[Tuple[int,int]]"
                ]
            }
        }
    },
    "futbolean-master/data_science/docs/source/conf.py": {
        "remove_arrows_in_examples": {
            "name": "remove_arrows_in_examples",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "lines": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "autodoc_process_docstring": {
            "name": "autodoc_process_docstring",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "str",
                    "bool",
                    "Optional[bool]",
                    "None",
                    "utils.types.JSON"
                ],
                "what": [
                    "str",
                    "bool",
                    "Optional[bool]",
                    "None",
                    "utils.types.JSON"
                ],
                "name": [
                    "str",
                    "bool",
                    "Optional[bool]",
                    "None",
                    "utils.types.JSON"
                ],
                "obj": [
                    "str",
                    "bool",
                    "Optional[bool]",
                    "None",
                    "utils.types.JSON"
                ],
                "options": [
                    "str",
                    "bool",
                    "Optional[bool]",
                    "None",
                    "utils.types.JSON"
                ],
                "lines": [
                    "str",
                    "List[str]",
                    "cmk.utils.type_defs.HostName",
                    "Iterable[str]"
                ]
            }
        },
        "skip": {
            "name": "skip",
            "location": 243,
            "return": [
                "Union[(bool, _T4)]"
            ],
            "arguments": {
                "app": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[int]",
                    "None",
                    "bool",
                    "Optional[str]"
                ],
                "what": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[int]",
                    "None",
                    "bool",
                    "Optional[str]"
                ],
                "name": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[int]",
                    "None",
                    "bool",
                    "Optional[str]"
                ],
                "obj": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[int]",
                    "None",
                    "bool",
                    "Optional[str]"
                ],
                "skip": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[int]",
                    "None",
                    "bool",
                    "Optional[str]"
                ],
                "options": [
                    "str",
                    "int",
                    "List[str]",
                    "Optional[int]",
                    "None",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "futbolean-master/data_science/src/setup.py": {},
    "futbolean-master/data_science/src/futbolean/pipeline.py": {
        "create_pipeline": {
            "name": "create_pipeline",
            "location": 33,
            "return": [
                "Pipeline",
                "bool",
                "float"
            ],
            "arguments": {}
        }
    },
    "futbolean-master/data_science/src/futbolean/run.py": {
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "Tuple[str, str, str, str, str]",
                "str",
                "Tuple[Literal, Literal, Literal, Literal, Literal]",
                "Set[str]",
                "list",
                "Dict[str, Any]",
                "Optional[bool]",
                "List[str]"
            ],
            "arguments": {
                "tags": [
                    "Optional[List[str]]",
                    "None",
                    "str",
                    "List[str]",
                    "Optional[str]"
                ],
                "env": [
                    "str",
                    "None",
                    "Optional[str]"
                ],
                "runner": [
                    "Optional[List[str]]",
                    "None",
                    "str",
                    "List[str]",
                    "Optional[str]"
                ],
                "node_names": [
                    "Optional[List[str]]",
                    "None",
                    "str",
                    "List[str]",
                    "Optional[str]"
                ],
                "from_nodes": [
                    "Optional[List[str]]",
                    "None",
                    "str",
                    "List[str]",
                    "Optional[str]"
                ],
                "to_nodes": [
                    "Optional[List[str]]",
                    "None",
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "ProjectContext.pipeline": {
            "name": "pipeline",
            "location": 23,
            "return": [
                "Tuple[int, int]",
                "str",
                "int",
                "T"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "futbolean-master/data_science/src/futbolean/settings.py": {},
    "futbolean-master/data_science/src/futbolean/__init__.py": {},
    "futbolean-master/data_science/src/futbolean/data_import/base_data.py": {
        "_handle_response_data": {
            "name": "_handle_response_data",
            "location": 16,
            "return": [
                "Optional[str]",
                "List[str]",
                "Dict[str, Any]",
                "dict",
                "int",
                "str"
            ],
            "arguments": {
                "response": [
                    "dict",
                    "requests.Response",
                    "requests.models.Response",
                    "Dict[str, Any]"
                ]
            }
        },
        "_make_request": {
            "name": "_make_request",
            "location": 27,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "url": [
                    "Dict",
                    "str"
                ],
                "params": [
                    "Dict",
                    "str"
                ],
                "headers": [
                    "Dict",
                    "str",
                    "requests.models.Response",
                    "bool"
                ],
                "retry": [
                    "bool",
                    "str",
                    "Optional[dict]",
                    "Dict"
                ]
            }
        },
        "fetch_data": {
            "name": "fetch_data",
            "location": 48,
            "return": [
                "str",
                "Optional[str]",
                "Dict[str, Any]",
                "bytes"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "params": [
                    "Dict",
                    "str",
                    "int",
                    "Dict[str,Any]"
                ]
            }
        }
    },
    "futbolean-master/data_science/src/futbolean/data_import/epl_player_data.py": {
        "fetch_player_urls": {
            "name": "fetch_player_urls",
            "location": 37,
            "return": [
                "dict",
                "bool",
                "Optional[Dict]",
                "str",
                "Mapping[str, Any]"
            ],
            "arguments": {
                "start_season": [
                    "Text",
                    "int",
                    "float",
                    "datetime"
                ],
                "end_season": [
                    "Text",
                    "int",
                    "float",
                    "datetime"
                ],
                "verbose": [
                    "int",
                    "bool"
                ]
            }
        },
        "_fetch_player_match_data_batch": {
            "name": "_fetch_player_match_data_batch",
            "location": 71,
            "return": [
                "Optional[str]",
                "str",
                "Dict[str, Any]",
                "dict",
                "bytes"
            ],
            "arguments": {
                "player_urls": [
                    "str",
                    "Dict",
                    "List[str]"
                ],
                "idx": [
                    "int",
                    "str",
                    "numpy.ndarray"
                ],
                "verbose": [
                    "int",
                    "bool",
                    "str",
                    "Optional[bool]",
                    "Callable[[int],None]"
                ]
            }
        },
        "fetch_player_match_data": {
            "name": "fetch_player_match_data",
            "location": 85,
            "return": [
                "Tuple[(Dict[(str, list)], Any)]"
            ],
            "arguments": {
                "player_urls": [
                    "dict",
                    "List[Dict[str, Any]]",
                    "Dict[str, Any]",
                    "set",
                    "List[str]"
                ],
                "verbose": [
                    "int",
                    "Optional[str]",
                    "List[str]",
                    "Dict",
                    "str"
                ]
            }
        },
        "save_player_urls": {
            "name": "save_player_urls",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "start_season": [
                    "Text",
                    "int",
                    "str",
                    "bool",
                    "datetime.date",
                    "Union[datetime.datetime,str]"
                ],
                "end_season": [
                    "Text",
                    "int",
                    "str",
                    "bool",
                    "datetime.date",
                    "Union[datetime.datetime,str]"
                ],
                "verbose": [
                    "int",
                    "bytes",
                    "datetime.date"
                ]
            }
        },
        "save_player_match_data": {
            "name": "save_player_match_data",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "player_url_filepath": [
                    "str"
                ],
                "skipped_url_filepath": [
                    "str",
                    "bool"
                ],
                "starting_url": [
                    "str",
                    "Optional[str]",
                    "Awaitable"
                ],
                "skipped_only": [
                    "bool",
                    "str",
                    "int",
                    "Iterable[bytes]",
                    "Optional[str]"
                ],
                "verbose": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "futbolean-master/data_science/src/futbolean/data_import/__init__.py": {},
    "futbolean-master/data_science/src/futbolean/io/json_remote_data_set.py": {
        "JSONRemoteDataSet.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_source": [
                    "str",
                    "Optional[Game]"
                ],
                "load_kwargs": [
                    "Dict",
                    "pandas.Series",
                    "int",
                    "Match",
                    "List[Dict[str,Any]]",
                    "str",
                    "Type"
                ]
            }
        },
        "JSONRemoteDataSet._load": {
            "name": "_load",
            "location": 29,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "JSONRemoteDataSet._save": {
            "name": "_save",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "List[dict]",
                    "pandas.DataFrame",
                    "int",
                    "List[tuple]",
                    "bytes",
                    "List[Dict]",
                    "List[Tuple]"
                ]
            }
        },
        "JSONRemoteDataSet._describe": {
            "name": "_describe",
            "location": 35,
            "return": [
                "bool",
                "str",
                "int",
                "List[Dict[str, Any]]",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "futbolean-master/data_science/src/futbolean/io/__init__.py": {},
    "futbolean-master/data_science/src/futbolean/nodes/__init__.py": {},
    "futbolean-master/data_science/src/tests/test_run.py": {
        "project_context": {
            "name": "project_context",
            "location": 21,
            "return": [
                "ProjectContext",
                "str",
                "pathlib.Path"
            ],
            "arguments": {}
        },
        "TestProjectContext.test_project_name": {
            "name": "test_project_name",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "project_context": [
                    "pathlib.Path"
                ]
            }
        },
        "TestProjectContext.test_project_version": {
            "name": "test_project_version",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "project_context": [
                    "int"
                ]
            }
        }
    },
    "futbolean-master/data_science/src/tests/__init__.py": {},
    "futbolean-master/data_science/src/tests/unit/data_import/test_epl_player_data.py": {
        "TestEplPlayerData.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEplPlayerData.test_save_player_urls": {
            "name": "test_save_player_urls",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_mock_json_dump": [
                    "mock.Mock"
                ],
                "mock_fetch_data": []
            }
        },
        "TestEplPlayerData.test_save_player_match_data": {
            "name": "test_save_player_match_data",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_mock_json_dump": [
                    "mock.Mock"
                ],
                "mock_json_load": [
                    "mock.Mock"
                ],
                "mock_fetch_data": []
            }
        }
    },
    "futbolean-master/data_science/src/tests/unit/io/test_json_remote_data_set.py": {
        "TestJSONRemoteDataSet.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJSONRemoteDataSet.test_load": {
            "name": "test_load",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJSONRemoteDataSet.test_save": {
            "name": "test_save",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
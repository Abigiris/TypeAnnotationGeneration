{
    "geogent-master/geogent/__init__.py": {
        "parse_coordinates": {
            "name": "parse_coordinates",
            "location": 30,
            "return": [
                "Point",
                "int",
                "Polygon",
                "Tuple[int, int, int, int]",
                "Iterable[Any]",
                "dict"
            ],
            "arguments": {
                "coordinates": [
                    "str"
                ]
            }
        },
        "page_not_found": {
            "name": "page_not_found",
            "location": 41,
            "return": [
                "Response",
                "bool",
                "str",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "e": [
                    "Exception",
                    "int",
                    "str",
                    "typing.Type",
                    "type",
                    "bool"
                ]
            }
        },
        "get_dataset": {
            "name": "get_dataset",
            "location": 49,
            "return": [
                "Response",
                "Dict[str, Any]",
                "List['ValidatorRecord']",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "category": [
                    "int",
                    "str",
                    "Iterable[Sequence[str]]",
                    "typing.Iterable[typing.Sequence[str]]"
                ],
                "dataset": [
                    "int",
                    "str",
                    "Iterable[Sequence[str]]",
                    "typing.Iterable[typing.Sequence[str]]"
                ]
            }
        },
        "favicon": {
            "name": "favicon",
            "location": 97,
            "return": [
                "bytes",
                "List[str]",
                "Optional[str]",
                "dict",
                "flask.Response",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 104,
            "return": [
                "Response",
                "bool",
                "int",
                "OrderedDict"
            ],
            "arguments": {}
        }
    }
}
{
    "georinex-main/setup.py": {},
    "georinex-main/.archive/profileme.py": {},
    "georinex-main/.archive/rinex_reader.py": {
        "rinexnav": {
            "name": "rinexnav",
            "location": 16,
            "return": [],
            "arguments": {
                "fn": [],
                "ofn": []
            }
        },
        "rinexobs": {
            "name": "rinexobs",
            "location": 136,
            "return": [],
            "arguments": {
                "fn": [],
                "ofn": []
            }
        },
        "scan": {
            "name": "scan",
            "location": 181,
            "return": [],
            "arguments": {
                "L": []
            }
        },
        "processBlocks": {
            "name": "processBlocks",
            "location": 255,
            "return": [],
            "arguments": {
                "lines": [],
                "header": [],
                "obstimes": [],
                "svset": [],
                "ihead": [],
                "headlength": [],
                "sats": []
            }
        },
        "_obstime": {
            "name": "_obstime",
            "location": 286,
            "return": [],
            "arguments": {
                "fol": []
            }
        },
        "_block2df": {
            "name": "_block2df",
            "location": 304,
            "return": [],
            "arguments": {
                "block": [],
                "obstypes": [],
                "svnames": [],
                "svnum": []
            }
        }
    },
    "georinex-main/src/georinex/base.py": {
        "load": {
            "name": "load",
            "location": 20,
            "return": [
                "str",
                "dict",
                "int",
                "dict[typing.Text, typing.Union[tuple[typing.Union[typing.Any,typing.Any,typing.Any,typing.Any]],None]]",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any,typing.Any]]",
                "tuple[typing.Union[typing.Any,typing.Any,typing.Any,typing.Any,typing.Any,typing.Any,typing.Any]]",
                "dict[str, float]",
                "list[typing.Any]"
            ],
            "arguments": {
                "rinexfn": [
                    "str",
                    "pathlib.Path"
                ],
                "out": [
                    "pathlib.Path"
                ],
                "use": [
                    "Set[str]"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "batch_convert": {
            "name": "batch_convert",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ],
                "glob": [
                    "str"
                ],
                "out": [
                    "pathlib.Path"
                ],
                "use": [
                    "Set[str]"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "rinexnav": {
            "name": "rinexnav",
            "location": 141,
            "return": [
                "float",
                "str",
                "int"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "Union[io.TextIO, str, pathlib.Path]",
                    "None",
                    "typing.Iterable[typing.TextIO]",
                    "Optional[str]",
                    "Iterable[TextIO]",
                    "pydcop.replication.path_utils.Path"
                ],
                "outfn": [
                    "pathlib.Path"
                ],
                "use": [
                    "Set[str]"
                ],
                "group": [
                    "str"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ]
            }
        },
        "rinexobs": {
            "name": "rinexobs",
            "location": 185,
            "return": [
                "float",
                "int",
                "str",
                "list[str]"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "Union[io.TextIO, str, pathlib.Path]",
                    "None",
                    "typing.Iterable[typing.TextIO]",
                    "Optional[str]",
                    "Iterable[TextIO]",
                    "pydcop.replication.path_utils.Path"
                ],
                "outfn": [
                    "pathlib.Path"
                ],
                "use": [
                    "Set[str]"
                ],
                "group": [
                    "str"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "_groupexists": {
            "name": "_groupexists",
            "location": 255,
            "return": [
                "str"
            ],
            "arguments": {
                "fn": [
                    "pathlib.Path"
                ],
                "group": [
                    "str"
                ],
                "overwrite": [
                    "bool"
                ]
            }
        }
    },
    "georinex-main/src/georinex/common.py": {
        "check_unique_times": {
            "name": "check_unique_times",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "times": [
                    "np.ndarray"
                ]
            }
        },
        "rinex_string_to_float": {
            "name": "rinex_string_to_float",
            "location": 26,
            "return": [
                "float"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "check_ram": {
            "name": "check_ram",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "memneed": [
                    "int"
                ],
                "fn": [
                    "str"
                ]
            }
        },
        "determine_time_system": {
            "name": "determine_time_system",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "header": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "check_time_interval": {
            "name": "check_time_interval",
            "location": 77,
            "return": [
                "datetime.timedelta"
            ],
            "arguments": {
                "interval": [
                    "int",
                    "float",
                    "Tuple[float, float]",
                    "str"
                ]
            }
        }
    },
    "georinex-main/src/georinex/geo.py": {
        "get_locations": {
            "name": "get_locations",
            "location": 10,
            "return": [
                "List[List[int]]",
                "str",
                "Callable"
            ],
            "arguments": {
                "files": [
                    "List[pathlib.Path]"
                ]
            }
        }
    },
    "georinex-main/src/georinex/keplerian.py": {
        "keplerian2ecef": {
            "name": "keplerian2ecef",
            "location": 12,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {
                "sv": [
                    "list['cirq.Qid']",
                    "Union[int, float]",
                    "List['cirq.Qid']"
                ]
            }
        }
    },
    "georinex-main/src/georinex/nav2.py": {
        "rinexnav2": {
            "name": "rinexnav2",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "fn": [
                    "str"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ]
            }
        },
        "navheader2": {
            "name": "navheader2",
            "location": 213,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ]
            }
        },
        "_timenav": {
            "name": "_timenav",
            "location": 232,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "ln": [
                    "str"
                ]
            }
        },
        "_skip": {
            "name": "_skip",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ],
                "Nl": [
                    "int"
                ]
            }
        },
        "navtime2": {
            "name": "navtime2",
            "location": 258,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "bool",
                    "Union[io.TextIO, pathlib.Path]"
                ]
            }
        }
    },
    "georinex-main/src/georinex/nav3.py": {
        "rinexnav3": {
            "name": "rinexnav3",
            "location": 19,
            "return": [],
            "arguments": {
                "fn": [
                    "str",
                    "dict[pathlib.Path, ModuleSummary]",
                    "list[typing.TextIO]",
                    "typing.TextIO"
                ],
                "use": [
                    "Set[str]"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ]
            }
        },
        "_num_fields": {
            "name": "_num_fields",
            "location": 163,
            "return": [
                "int"
            ],
            "arguments": {
                "raw": [
                    "str"
                ]
            }
        },
        "_skip": {
            "name": "_skip",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ],
                "Nl": [
                    "int"
                ]
            }
        },
        "_time": {
            "name": "_time",
            "location": 176,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "ln": [
                    "str"
                ]
            }
        },
        "_sparefields": {
            "name": "_sparefields",
            "location": 188,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "cf": [
                    "List[str]"
                ],
                "sys": [
                    "str"
                ],
                "N": [
                    "int"
                ]
            }
        },
        "_fields": {
            "name": "_fields",
            "location": 237,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "ln": [
                    "str"
                ],
                "sv_sys": [
                    "str"
                ]
            }
        },
        "navheader3": {
            "name": "navheader3",
            "location": 470,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ]
            }
        },
        "navtime3": {
            "name": "navtime3",
            "location": 513,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "georinex-main/src/georinex/obs2.py": {
        "rinexobs2": {
            "name": "rinexobs2",
            "location": 21,
            "return": [],
            "arguments": {
                "fn": [
                    "bool",
                    "tuple[typing.Union[datetime.datetime,datetime.datetime]]",
                    "float",
                    "typing.Sequence[str]",
                    "str"
                ],
                "use": [
                    "Set[str]"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "rinexsystem2": {
            "name": "rinexsystem2",
            "location": 61,
            "return": [],
            "arguments": {
                "fn": [
                    "str",
                    "BaseException",
                    "None"
                ],
                "system": [
                    "str"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "_num_times": {
            "name": "_num_times",
            "location": 311,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "bool",
                    "str"
                ],
                "Nextra": [
                    "int"
                ],
                "tlim": [
                    "Optional[Tuple[(_datetime.datetime, _datetime.datetime)]]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "obsheader2": {
            "name": "obsheader2",
            "location": 342,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "f": [],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ]
            }
        },
        "_getsvind": {
            "name": "_getsvind",
            "location": 455,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ],
                "ln": [
                    "str"
                ]
            }
        },
        "_getSVlist": {
            "name": "_getSVlist",
            "location": 475,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "ln": [
                    "str"
                ],
                "N": [
                    "int"
                ],
                "sv": [
                    "List[str]"
                ]
            }
        },
        "obstime2": {
            "name": "obstime2",
            "location": 488,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "bool"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "_skip": {
            "name": "_skip",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ],
                "ln": [
                    "str"
                ],
                "Nl_sv": [
                    "int"
                ],
                "sv": [
                    "List[str]"
                ]
            }
        },
        "_timehdr": {
            "name": "_timehdr",
            "location": 526,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "ln": [
                    "str"
                ]
            }
        },
        "_timeobs": {
            "name": "_timeobs",
            "location": 559,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "ln": [
                    "str"
                ]
            }
        },
        "_skip_header": {
            "name": "_skip_header",
            "location": 589,
            "return": [
                "None"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ]
            }
        },
        "_fast_alloc": {
            "name": "_fast_alloc",
            "location": 595,
            "return": [
                "int"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "typing.IO",
                    "typing.TextIO"
                ],
                "Nl_sv": [
                    "int"
                ]
            }
        }
    },
    "georinex-main/src/georinex/obs3.py": {
        "rinexobs3": {
            "name": "rinexobs3",
            "location": 26,
            "return": [],
            "arguments": {
                "fn": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ],
                "use": [
                    "Set[str]"
                ],
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ],
                "useindicators": [
                    "bool"
                ],
                "meas": [
                    "List[str]"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "_timeobs": {
            "name": "_timeobs",
            "location": 165,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "ln": [
                    "str"
                ]
            }
        },
        "obstime3": {
            "name": "obstime3",
            "location": 184,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "bool"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "_epoch": {
            "name": "_epoch",
            "location": 207,
            "return": [],
            "arguments": {
                "data": [],
                "raw": [
                    "str"
                ],
                "hdr": [
                    "Dict[(str, Any)]"
                ],
                "time": [
                    "_datetime.datetime"
                ],
                "sv": [
                    "List[str]"
                ],
                "useindicators": [
                    "bool"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "_indicators": {
            "name": "_indicators",
            "location": 257,
            "return": [
                "Dict[(str, tuple)]"
            ],
            "arguments": {
                "d": [
                    "dict"
                ],
                "k": [
                    "str"
                ],
                "arr": [
                    "np.ndarray"
                ]
            }
        },
        "obsheader3": {
            "name": "obsheader3",
            "location": 269,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ],
                "use": [
                    "Set[str]"
                ],
                "meas": [
                    "List[str]"
                ]
            }
        }
    },
    "georinex-main/src/georinex/plots.py": {
        "timeseries": {
            "name": "timeseries",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "str",
                    "List[str]",
                    "list[str]",
                    "dict",
                    "dict[, ]",
                    "Union[Mapping, str]",
                    "typing.Mapping"
                ]
            }
        },
        "obstimeseries": {
            "name": "obstimeseries",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "obs": [
                    "float"
                ]
            }
        }
    },
    "georinex-main/src/georinex/plots_geo.py": {
        "navtimeseries": {
            "name": "navtimeseries",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "nav": [
                    "float",
                    "Union[numpy.ndarray, astropy.units.quantity.Quantity]",
                    "pandas.DataFrame"
                ]
            }
        },
        "receiver_locations": {
            "name": "receiver_locations",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "locs": [
                    "dict",
                    "int",
                    "Tuple[int, int, int, int]",
                    "Optional[BaseException]",
                    "str"
                ]
            }
        }
    },
    "georinex-main/src/georinex/rio.py": {
        "opener": {
            "name": "opener",
            "location": 23,
            "return": [
                "typing.Iterator[typing.TextIO]",
                "typing.Generator[io_@_StringIO]",
                "typing.Generator[]"
            ],
            "arguments": {
                "fn": [
                    "dict[str, typing.Any]",
                    "bytes",
                    "Dict[str, Any]",
                    "str",
                    "bool",
                    "Union[io.TextIO, pathlib.Path]"
                ],
                "header": [
                    "bytes",
                    "bool"
                ]
            }
        },
        "first_nonblank_line": {
            "name": "first_nonblank_line",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "f": [
                    "TextIO"
                ],
                "max_lines": [
                    "int"
                ]
            }
        },
        "rinexinfo": {
            "name": "rinexinfo",
            "location": 114,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "f": [
                    "str",
                    "typing.IO",
                    "pathlib.Path",
                    "IO"
                ]
            }
        },
        "rinex_version": {
            "name": "rinex_version",
            "location": 177,
            "return": [
                "Tuple[(Any, bool)]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        }
    },
    "georinex-main/src/georinex/sp3.py": {
        "load_sp3": {
            "name": "load_sp3",
            "location": 20,
            "return": [
                "str",
                "Dict[str, Any]",
                "Optional[str]"
            ],
            "arguments": {
                "fn": [
                    "pathlib.Path"
                ],
                "outfn": [
                    "pathlib.Path"
                ]
            }
        },
        "sp3dt": {
            "name": "sp3dt",
            "location": 128,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "ln": [
                    "str"
                ]
            }
        },
        "get_sv": {
            "name": "get_sv",
            "location": 167,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "ln": [
                    "str"
                ],
                "Nsv": [
                    "int"
                ]
            }
        }
    },
    "georinex-main/src/georinex/utils.py": {
        "globber": {
            "name": "globber",
            "location": 17,
            "return": [
                "List[pathlib.Path]"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ],
                "glob": [
                    "List[str]"
                ]
            }
        },
        "gettime": {
            "name": "gettime",
            "location": 33,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "fn": [
                    "bool",
                    "str",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "rinexheader": {
            "name": "rinexheader",
            "location": 79,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "Union[io.TextIO, str, pathlib.Path]",
                    "pathlib.Path"
                ]
            }
        },
        "_tlim": {
            "name": "_tlim",
            "location": 120,
            "return": [
                "Tuple[(_datetime.datetime, _datetime.datetime)]"
            ],
            "arguments": {
                "tlim": [
                    "Tuple[(_datetime.datetime, _datetime.datetime)]"
                ]
            }
        },
        "to_datetime": {
            "name": "to_datetime",
            "location": 133,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "times": [
                    "int",
                    "float",
                    "xarray.DataArray",
                    "numpy.ndarray"
                ]
            }
        }
    },
    "georinex-main/src/georinex/__init__.py": {},
    "georinex-main/src/georinex/loc/__init__.py": {},
    "georinex-main/src/georinex/loc/__main__.py": {},
    "georinex-main/src/georinex/plot/__init__.py": {},
    "georinex-main/src/georinex/plot/__main__.py": {},
    "georinex-main/src/georinex/read/__init__.py": {},
    "georinex-main/src/georinex/read/__main__.py": {},
    "georinex-main/src/georinex/rinex2hdf5/__init__.py": {},
    "georinex-main/src/georinex/rinex2hdf5/__main__.py": {},
    "georinex-main/src/georinex/tests/test_batch_convert.py": {
        "test_batch_convert_rinex2": {
            "name": "test_batch_convert_rinex2",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "pathlib.Path"
                ],
                "filename": [
                    "str",
                    "typing.Callable[, ]",
                    "Callable",
                    "dict[, ]",
                    "dict",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "test_bad": {
            "name": "test_bad",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "list[str]",
                    "str",
                    "Optional[List[str]]",
                    "None"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_conv.py": {
        "test_to_datetime": {
            "name": "test_to_datetime",
            "location": 24,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "time": [
                    "str",
                    "int",
                    "datetime.datetime"
                ],
                "exp_time": [
                    "str",
                    "int",
                    "datetime.datetime"
                ]
            }
        },
        "test_bad_files": {
            "name": "test_bad_files",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Dict[str, cerulean.Path]",
                    "pathlib.PosixPath"
                ]
            }
        },
        "test_netcdf_read": {
            "name": "test_netcdf_read",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_netcdf_write": {
            "name": "test_netcdf_write",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "test_locs": {
            "name": "test_locs",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nc_load": {
            "name": "test_nc_load",
            "location": 88,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "dtype": [
                    "Callable",
                    "Iterable[Any]"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_hatanaka.py": {
        "test_obs2": {
            "name": "test_obs2",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_obs3_gz": {
            "name": "test_obs3_gz",
            "location": 25,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "test_obs3": {
            "name": "test_obs3",
            "location": 83,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "suffix": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_header.py": {
        "test_header": {
            "name": "test_header",
            "location": 26,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [
                    "int",
                    "str"
                ],
                "rtype": [
                    "str",
                    "int",
                    "Dict[str, float]",
                    "dict[str, float]"
                ],
                "vers": [
                    "str",
                    "int",
                    "Dict[str, float]",
                    "dict[str, float]"
                ]
            }
        },
        "test_position": {
            "name": "test_position",
            "location": 42,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_kepler.py": {
        "kep_data": {
            "name": "kep_data",
            "location": 14,
            "return": [
                "str",
                "int",
                "Generator",
                "bool"
            ],
            "arguments": {}
        },
        "test_kepler": {
            "name": "test_kepler",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "kep_data": [
                    "str",
                    "bytes",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "dict",
                    "dict[, ]"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_lzw.py": {
        "test_obs2_lzw": {
            "name": "test_obs2_lzw",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_nav2.py": {
        "test_time": {
            "name": "test_time",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_data": {
            "name": "test_data",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mangled": {
            "name": "test_mangled",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mangled2": {
            "name": "test_mangled2",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tlim_past_eof": {
            "name": "test_tlim_past_eof",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_galileo": {
            "name": "test_galileo",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gps": {
            "name": "test_gps",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_small": {
            "name": "test_small",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ionospheric_correction": {
            "name": "test_ionospheric_correction",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_nav3.py": {
        "test_nav3header": {
            "name": "test_nav3header",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": [
                    "str"
                ]
            }
        },
        "test_time": {
            "name": "test_time",
            "location": 24,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": []
            }
        },
        "test_tlim_past_eof": {
            "name": "test_tlim_past_eof",
            "location": 32,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": [
                    "float",
                    "str"
                ]
            }
        },
        "test_spare": {
            "name": "test_spare",
            "location": 42,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": [
                    "float",
                    "str"
                ]
            }
        },
        "test_mixed": {
            "name": "test_mixed",
            "location": 55,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": [
                    "float",
                    "str"
                ]
            }
        },
        "test_large": {
            "name": "test_large",
            "location": 187,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "sv": [
                    "str",
                    "bool",
                    "Callable"
                ],
                "shape": [
                    "float",
                    "int"
                ]
            }
        },
        "test_large_all": {
            "name": "test_large_all",
            "location": 207,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "sv": [
                    "str",
                    "int",
                    "datetime.date"
                ],
                "size": [
                    "int",
                    "str"
                ]
            }
        },
        "test_ref": {
            "name": "test_ref",
            "location": 226,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "rfn": [
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "ncfn": [
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_ionospheric_correction": {
            "name": "test_ionospheric_correction",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_obs2.py": {
        "test_fast_slow": {
            "name": "test_fast_slow",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_continuation": {
            "name": "test_meas_continuation",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_one": {
            "name": "test_meas_one",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_two": {
            "name": "test_meas_two",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_miss": {
            "name": "test_meas_miss",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mangled_data": {
            "name": "test_mangled_data",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mangled_times": {
            "name": "test_mangled_times",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_one_sv": {
            "name": "test_one_sv",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_all_systems": {
            "name": "test_all_systems",
            "location": 194,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "bool",
                    "pathlib.Path",
                    "str",
                    "Optional[pathlib.Path]"
                ],
                "use": [
                    "str",
                    "bytes",
                    "dict[, ]",
                    "pathlib.Path",
                    "dict"
                ]
            }
        },
        "test_one_system": {
            "name": "test_one_system",
            "location": 224,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "use": [
                    "str",
                    "int",
                    "float",
                    "set[]",
                    "set",
                    "bool"
                ]
            }
        },
        "test_multi_system": {
            "name": "test_multi_system",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_all_indicators": {
            "name": "test_all_indicators",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_indicators": {
            "name": "test_meas_indicators",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_onesys_indicators": {
            "name": "test_meas_onesys_indicators",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_time_system": {
            "name": "test_time_system",
            "location": 282,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [
                    "str"
                ],
                "tname": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_wrong_header_count": {
            "name": "test_wrong_header_count",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_obs3.py": {
        "test_contents": {
            "name": "test_contents",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_one": {
            "name": "test_meas_one",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_two": {
            "name": "test_meas_two",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_some_missing": {
            "name": "test_meas_some_missing",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_all_missing": {
            "name": "test_meas_all_missing",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meas_wildcard": {
            "name": "test_meas_wildcard",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_junk_time": {
            "name": "test_junk_time",
            "location": 84,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": [
                    "str"
                ]
            }
        },
        "test_zip": {
            "name": "test_zip",
            "location": 96,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fname": [
                    "float",
                    "str",
                    "bool"
                ]
            }
        },
        "test_bad_system": {
            "name": "test_bad_system",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_one_system": {
            "name": "test_one_system",
            "location": 152,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "use": [
                    "str",
                    "int",
                    "float",
                    "set[]",
                    "set",
                    "bool"
                ]
            }
        },
        "test_multi_system": {
            "name": "test_multi_system",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_all_system": {
            "name": "test_all_system",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tests_all_indicators": {
            "name": "tests_all_indicators",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_time_system": {
            "name": "test_time_system",
            "location": 209,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [
                    "str"
                ],
                "tname": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_rinex.py": {
        "test_blank_read": {
            "name": "test_blank_read",
            "location": 22,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "Optional[Callable[[Any], None]]",
                    "typing.Callable[typing.Any, None]",
                    "None"
                ],
                "filename": [
                    "str",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Dict[str, str]]",
                    "dict[str, dict[str, str]]",
                    "BinaryIO",
                    "typing.BinaryIO"
                ]
            }
        },
        "test_blank_write": {
            "name": "test_blank_write",
            "location": 28,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "bool",
                    "Tuple[str, str]",
                    "tuple[typing.Union[str,str]]",
                    "Optional[str]",
                    "None"
                ],
                "filename": [
                    "str",
                    "bool",
                    "Tuple[str, str]",
                    "tuple[typing.Union[str,str]]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_blank_times": {
            "name": "test_blank_times",
            "location": 34,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "int",
                    "list[dict[str, typing.Any]]",
                    "List[Dict[str, Any]]",
                    "pathlib.Path"
                ]
            }
        },
        "test_minimal": {
            "name": "test_minimal",
            "location": 44,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "bool",
                    "None",
                    "pathlib.Path",
                    "Union[pathlib.Path, str]",
                    "pathlib.PosixPath",
                    "Optional[pathlib.Path]"
                ],
                "filename": [
                    "str",
                    "dict[str, str]",
                    "Dict[str, str]",
                    "tuple[typing.Union[str,str]]",
                    "Tuple[str, str]",
                    "list[dict[str, typing.Any]]",
                    "pathlib.Path",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "test_dont_care_file_extension": {
            "name": "test_dont_care_file_extension",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_scripts.py": {
        "test_convenience": {
            "name": "test_convenience",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_time": {
            "name": "test_time",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_batch_convert": {
            "name": "test_batch_convert",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "pathlib.Path"
                ],
                "filename": [
                    "str",
                    "list[str]",
                    "List[str]",
                    "pypi2nix.path.Path"
                ]
            }
        }
    },
    "georinex-main/src/georinex/tests/test_sp3.py": {
        "test_sp3a": {
            "name": "test_sp3a",
            "location": 13,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [
                    "str"
                ]
            }
        },
        "test_sp3c": {
            "name": "test_sp3c",
            "location": 31,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_blank": {
            "name": "test_blank",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_header": {
            "name": "test_header",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_minimal_sp3c": {
            "name": "test_minimal_sp3c",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_minimal_sp3d": {
            "name": "test_minimal_sp3d",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_stringio.py": {
        "test_nav3": {
            "name": "test_nav3",
            "location": 15,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "rinex_version": [
                    "float"
                ],
                "t": [
                    "int",
                    "float",
                    "bytes",
                    "Callable[[T], bool]",
                    "typing.Callable[T, bool]"
                ]
            }
        },
        "test_obs": {
            "name": "test_obs",
            "location": 32,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "rinex_version": [
                    "int",
                    "str"
                ]
            }
        },
        "test_locs": {
            "name": "test_locs",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "georinex-main/src/georinex/tests/test_time.py": {
        "test_tlim": {
            "name": "test_tlim",
            "location": 49,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "fn": [],
                "tlim": [],
                "tref": [
                    "int",
                    "Sequence[int]",
                    "typing.Sequence[int]",
                    "Dict[str, numpy.ndarray]",
                    "dict[str, numpy.ndarray]"
                ],
                "tlen": [
                    "int"
                ]
            }
        },
        "test_interval_obs3": {
            "name": "test_interval_obs3",
            "location": 71,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "interval": [
                    "str",
                    "bytes",
                    "pathlib.Path",
                    "dict[, ]",
                    "dict"
                ],
                "expected_len": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_interval_obs2": {
            "name": "test_interval_obs2",
            "location": 85,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "interval": [
                    "str",
                    "bytes",
                    "pathlib.Path",
                    "dict[, ]",
                    "dict"
                ],
                "expected_len": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "georinex-main/src/georinex/time/__init__.py": {},
    "georinex-main/src/georinex/time/__main__.py": {
        "eachfile": {
            "name": "eachfile",
            "location": 11,
            "return": [
                "Iterator",
                "None"
            ],
            "arguments": {
                "fn": [
                    "str",
                    "type",
                    "typing.Type"
                ],
                "verbose": [
                    "bool",
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict"
                ]
            }
        }
    }
}
{
    "geostream-master/setup.py": {},
    "geostream-master/geostream/base.py": {
        "read_header": {
            "name": "read_header",
            "location": 17,
            "return": [
                "Header"
            ],
            "arguments": {
                "stream": [
                    "bytes",
                    "BinaryIO",
                    "TextIO"
                ]
            }
        },
        "GeoStreamReader.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "str"
                ]
            }
        },
        "GeoStreamReader.__iter__": {
            "name": "__iter__",
            "location": 40,
            "return": [
                "GeoStreamReader"
            ],
            "arguments": {
                "self": [
                    "_TGeoStreamReader@@GeoStreamReader@@"
                ]
            }
        },
        "GeoStreamReader.__next__": {
            "name": "__next__",
            "location": 43,
            "return": [
                "bool",
                "str",
                "int",
                "None",
                "bytes",
                "Optional[BaseException]",
                "Union[str,Tuple[str,...]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReader._load_properties": {
            "name": "_load_properties",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "bytes",
                    "str",
                    "int",
                    "IO[str]",
                    "IO",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        },
        "GeoStreamReader._load_feature": {
            "name": "_load_feature",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "str",
                    "List[str]",
                    "Dict[str,Any]",
                    "bool"
                ]
            }
        },
        "GeoStreamReader._read_stream_header": {
            "name": "_read_stream_header",
            "location": 58,
            "return": [
                "Tuple[(nothing, nothing, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReader._read_length": {
            "name": "_read_length",
            "location": 71,
            "return": [
                "None",
                "Optional[bool]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReader._reader": {
            "name": "_reader",
            "location": 77,
            "return": [
                "None",
                "Callable[[Mapping],Awaitable]",
                "Callable[,Awaitable[Mapping]]",
                "Dict",
                "Dict[str,str]",
                "List[str]",
                "float",
                "bool",
                "Optional[List]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReader.schema_version": {
            "name": "schema_version",
            "location": 90,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReader.srid": {
            "name": "srid",
            "location": 94,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReader.properties": {
            "name": "properties",
            "location": 98,
            "return": [
                "float",
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReverseReader.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [],
                "buf_size": [
                    "int",
                    "bool",
                    "Optional[int]"
                ]
            }
        },
        "GeoStreamReverseReader._grow_buffer": {
            "name": "_grow_buffer",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReverseReader._read_length": {
            "name": "_read_length",
            "location": 138,
            "return": [
                "None",
                "List[str]",
                "str",
                "Iterable[T]",
                "float",
                "int",
                "List[DictDataLoader]",
                "Type"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamReverseReader._reader": {
            "name": "_reader",
            "location": 142,
            "return": [
                "None",
                "bool",
                "Optional[int]",
                "Optional[str]",
                "Optional[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoStreamWriter.__init__": {
            "name": "__init__",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "str"
                ],
                "props": [
                    "int",
                    "None",
                    "float",
                    "bool"
                ],
                "srid": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "GeoStreamWriter._dump_properties": {
            "name": "_dump_properties",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "properties": [
                    "Dict[str,Any]",
                    "Dict",
                    "bool",
                    "str",
                    "Iterable[str]"
                ]
            }
        },
        "GeoStreamWriter._dump_feature": {
            "name": "_dump_feature",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feature": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "GeoStreamWriter._write_header": {
            "name": "_write_header",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "srid": [
                    "str",
                    "BinaryIO",
                    "IO",
                    "IO[str]"
                ],
                "props": [
                    "Optional[bytes]",
                    "None",
                    "bytes"
                ]
            }
        },
        "GeoStreamWriter.write_feature": {
            "name": "write_feature",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "feature": [
                    "bytes",
                    "str",
                    "int",
                    "eth.abc.ComputationAPI"
                ]
            }
        },
        "GeoStreamWriter.write_feature_collection": {
            "name": "write_feature_collection",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "collection": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "geostream-master/geostream/constants.py": {},
    "geostream-master/geostream/feature.py": {
        "srid_to_crs": {
            "name": "srid_to_crs",
            "location": 15,
            "return": [
                "Dict[Text,Union[Text,dict[Text,Text]]]",
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "srid": [
                    "Optional[str]",
                    "str",
                    "Optional[int]",
                    "None",
                    "Optional[float]",
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "cached_crs": {
            "name": "cached_crs",
            "location": 22,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Dict[str, Dict[str, Any]]",
                "Dict[str, float]"
            ],
            "arguments": {
                "srid": [
                    "Optional[int]",
                    "int",
                    "Match[str]",
                    "None",
                    "Match"
                ]
            }
        },
        "Feature.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "geometry": [
                    "bool",
                    "str",
                    "Callable",
                    "Optional[Any]",
                    "Any",
                    "None"
                ],
                "properties": [
                    "Dict[str,Set[str]]",
                    "None",
                    "bool",
                    "recidiviz.common.constants.entity_enum.EntityEnumMeta",
                    "Hashable",
                    "Dict[str,set[str]]"
                ]
            }
        },
        "Feature.geometry": {
            "name": "geometry",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.properties": {
            "name": "properties",
            "location": 49,
            "return": [
                "Dict[str, Any]",
                "set",
                "dict",
                "Mapping[str, str]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.srid": {
            "name": "srid",
            "location": 53,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.wkb": {
            "name": "wkb",
            "location": 57,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.wkt": {
            "name": "wkt",
            "location": 61,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.ewkt": {
            "name": "ewkt",
            "location": 65,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.ewkb": {
            "name": "ewkb",
            "location": 69,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.from_dict": {
            "name": "from_dict",
            "location": 73,
            "return": [
                "Feature"
            ],
            "arguments": {
                "cls": [
                    "Type[_TFeature]"
                ],
                "value": [
                    "int",
                    "Optional[int]",
                    "Mapping",
                    "None",
                    "str",
                    "float",
                    "Union[str]",
                    "T"
                ]
            }
        },
        "FeatureCollection.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "features": [
                    "bool",
                    "Dict[str,str]",
                    "List[Callable]",
                    "Dict",
                    "Optional[Iterable[Any]]",
                    "None",
                    "Optional[str]",
                    "str"
                ],
                "properties": [
                    "Optional[str]",
                    "None",
                    "Optional[List[str]]",
                    "str",
                    "Optional[List[Any]]",
                    "List[str]",
                    "Optional[Dict[str,float]]",
                    "Dict[str,float]"
                ]
            }
        },
        "FeatureCollection.features": {
            "name": "features",
            "location": 99,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeatureCollection.properties": {
            "name": "properties",
            "location": 103,
            "return": [
                "List[int]",
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeatureCollection.srid": {
            "name": "srid",
            "location": 107,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "geostream-master/geostream/geostream.py": {
        "reader": {
            "name": "reader",
            "location": 10,
            "return": [
                "Union[(geostream.v3.GeoStreamReaderV3, geostream.v3.GeoStreamReverseReaderV3, geostream.v4.GeoStreamReaderV4, geostream.v4.GeoStreamReverseReaderV4)]"
            ],
            "arguments": {
                "stream": [
                    "int",
                    "bytes",
                    "bool"
                ],
                "reverse": [
                    "bool",
                    "str",
                    "float"
                ],
                "rev_buf_size": [
                    "int",
                    "Tuple[int, int]"
                ]
            }
        },
        "writer": {
            "name": "writer",
            "location": 33,
            "return": [
                "geostream.v4.GeoStreamWriterV4"
            ],
            "arguments": {
                "stream": [
                    "int",
                    "BinaryIO",
                    "Optional[Mapping[str,Any]]",
                    "str",
                    "Mapping",
                    "List[str]",
                    "None"
                ],
                "props": [
                    "int",
                    "None",
                    "BinaryIO",
                    "Optional[Mapping[str,Any]]",
                    "str",
                    "List[str]",
                    "Mapping"
                ],
                "srid": [
                    "int",
                    "Optional[Mapping[str, Any]]",
                    "BinaryIO",
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "geostream-master/geostream/v3.py": {
        "GeoStreamReaderV3._load_properties": {
            "name": "_load_properties",
            "location": 14,
            "return": [
                "dict",
                "int",
                "bool",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "bytes",
                    "str",
                    "Callable",
                    "IO"
                ]
            }
        },
        "GeoStreamReaderV3._load_feature": {
            "name": "_load_feature",
            "location": 17,
            "return": [
                "int",
                "Dict[str, str]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Dict",
                    "str",
                    "Optional[Exception]",
                    "Exception",
                    "None"
                ]
            }
        },
        "GeoStreamReverseReaderV3._load_properties": {
            "name": "_load_properties",
            "location": 26,
            "return": [
                "dict",
                "int",
                "bool",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "bytes",
                    "str",
                    "Callable",
                    "IO"
                ]
            }
        },
        "GeoStreamReverseReaderV3._load_feature": {
            "name": "_load_feature",
            "location": 29,
            "return": [
                "int",
                "Dict[str, str]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Dict",
                    "str",
                    "Optional[Exception]",
                    "Exception",
                    "None"
                ]
            }
        },
        "GeoStreamWriterV3._dump_properties": {
            "name": "_dump_properties",
            "location": 38,
            "return": [
                "Optional[bytes]"
            ],
            "arguments": {
                "self": [],
                "properties": [
                    "str",
                    "geostream.base.Properties",
                    "Dict[str,Any]",
                    "None",
                    "Optional[str]",
                    "bool",
                    "Optional[bool]",
                    "bytes",
                    "Optional[bytes]",
                    "MutableMapping",
                    "Optional[MutableMapping]",
                    "Optional[Dict[str,Any]]"
                ]
            }
        },
        "GeoStreamWriterV3._dump_feature": {
            "name": "_dump_feature",
            "location": 44,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "feature": [
                    "int",
                    "geostream.base.Feature",
                    "Dict",
                    "Callable[,collections.abc.Awaitable[Mapping]]",
                    "Callable[,Awaitable[Mapping]]"
                ]
            }
        }
    },
    "geostream-master/geostream/v4.py": {
        "GeoStreamReaderV4._load_properties": {
            "name": "_load_properties",
            "location": 15,
            "return": [
                "dict",
                "int",
                "bool",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "bytes",
                    "str",
                    "Callable",
                    "IO"
                ]
            }
        },
        "GeoStreamReaderV4._load_feature": {
            "name": "_load_feature",
            "location": 18,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "bytes",
                    "str"
                ]
            }
        },
        "GeoStreamReverseReaderV4._load_properties": {
            "name": "_load_properties",
            "location": 29,
            "return": [
                "dict",
                "int",
                "bool",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "bytes",
                    "str",
                    "Callable",
                    "IO"
                ]
            }
        },
        "GeoStreamReverseReaderV4._load_feature": {
            "name": "_load_feature",
            "location": 32,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "bytes",
                    "str"
                ]
            }
        },
        "GeoStreamWriterV4._dump_properties": {
            "name": "_dump_properties",
            "location": 43,
            "return": [
                "None",
                "Optional[str]",
                "str",
                "List"
            ],
            "arguments": {
                "self": [],
                "properties": [
                    "str",
                    "geostream.base.Properties",
                    "None",
                    "Union[str,None]",
                    "Any",
                    "Optional[Union[Any,Any]]",
                    "List[Any]",
                    "Optional[List[Any]]",
                    "Optional[str]"
                ]
            }
        },
        "GeoStreamWriterV4._dump_feature": {
            "name": "_dump_feature",
            "location": 49,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "feature": [
                    "Dict",
                    "bool",
                    "str",
                    "Dict[str,str]"
                ]
            }
        }
    },
    "geostream-master/geostream/__init__.py": {},
    "geostream-master/geostream/cli/unpack_gjz.py": {
        "_cbor2types_to_json": {
            "name": "_cbor2types_to_json",
            "location": 21,
            "return": [
                "str",
                "Type"
            ],
            "arguments": {
                "obj": [
                    "int",
                    "datetime.datetime",
                    "list",
                    "datetime.date",
                    "Dict[str, Any]",
                    "Optional[datetime.datetime]",
                    "Optional[datetime.tzinfo]",
                    "dict"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_count_features": {
            "name": "_count_features",
            "location": 120,
            "return": [
                "int",
                "str",
                "Callable",
                "Iterable[Context]"
            ],
            "arguments": {
                "pass_thru": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 125,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        }
    },
    "geostream-master/geostream/cli/__init__.py": {},
    "geostream-master/tests/conftest.py": {
        "_make_feature": {
            "name": "_make_feature",
            "location": 10,
            "return": [
                "dict"
            ],
            "arguments": {
                "geom": [
                    "Dict",
                    "str"
                ],
                "prop": [
                    "Dict",
                    "str"
                ]
            }
        },
        "_get_test_file": {
            "name": "_get_test_file",
            "location": 14,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "gjz_file": [
                    "Optional[str]",
                    "bool",
                    "str",
                    "Final",
                    "None"
                ]
            }
        },
        "feat_collection_1": {
            "name": "feat_collection_1",
            "location": 23,
            "return": [
                "bool",
                "Type",
                "float"
            ],
            "arguments": {}
        },
        "feat_collection_2": {
            "name": "feat_collection_2",
            "location": 34,
            "return": [
                "bool",
                "Type",
                "float"
            ],
            "arguments": {}
        },
        "feat_collection_3": {
            "name": "feat_collection_3",
            "location": 43,
            "return": [
                "bool",
                "Type",
                "float"
            ],
            "arguments": {}
        },
        "test_timestamp": {
            "name": "test_timestamp",
            "location": 63,
            "return": [
                "str",
                "int",
                "List[str]"
            ],
            "arguments": {}
        },
        "gjz_file_current_schema": {
            "name": "gjz_file_current_schema",
            "location": 68,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {}
        },
        "gjz_file_v2_schema": {
            "name": "gjz_file_v2_schema",
            "location": 73,
            "return": [
                "Dict[str, Any]",
                "str",
                "Dict[str, List[str]]"
            ],
            "arguments": {}
        },
        "gjz_file_v3_schema": {
            "name": "gjz_file_v3_schema",
            "location": 78,
            "return": [
                "Dict[str, Any]",
                "str",
                "Dict[str, List[str]]"
            ],
            "arguments": {}
        },
        "gjz_file_larger_v3": {
            "name": "gjz_file_larger_v3",
            "location": 83,
            "return": [
                "dict",
                "bytes",
                "Dict[str, List[str]]"
            ],
            "arguments": {}
        },
        "gjz_file_no_props_v3": {
            "name": "gjz_file_no_props_v3",
            "location": 88,
            "return": [
                "str",
                "Dict[str, Any]",
                "Dict[str, List[str]]",
                "bytes"
            ],
            "arguments": {}
        },
        "gjz_files_all_in_dir": {
            "name": "gjz_files_all_in_dir",
            "location": 93,
            "return": [
                "str",
                "Tuple"
            ],
            "arguments": {}
        },
        "gjz_nonexistent_file": {
            "name": "gjz_nonexistent_file",
            "location": 100,
            "return": [
                "List[str]",
                "Optional[str]"
            ],
            "arguments": {}
        },
        "gjz_file_wrong_ext": {
            "name": "gjz_file_wrong_ext",
            "location": 105,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "gjz_file_wrong_version": {
            "name": "gjz_file_wrong_version",
            "location": 110,
            "return": [
                "List[str]",
                "int"
            ],
            "arguments": {}
        },
        "test_file_dir": {
            "name": "test_file_dir",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "test_output_dir": {
            "name": "test_output_dir",
            "location": 120,
            "return": [],
            "arguments": {}
        }
    },
    "geostream-master/tests/test_geostream.py": {
        "_feature": {
            "name": "_feature",
            "location": 11,
            "return": [
                "dict"
            ],
            "arguments": {
                "shape": [
                    "Dict",
                    "int",
                    "Callable",
                    "Union[str,bytes]",
                    "str",
                    "bytes"
                ],
                "coord": [
                    "Dict",
                    "int",
                    "Callable",
                    "Union[str,bytes]",
                    "str",
                    "bytes"
                ]
            }
        },
        "test_write_read_geojson_with_props": {
            "name": "test_write_read_geojson_with_props",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "gjson": [],
                "props": [
                    "bool"
                ]
            }
        },
        "test_write_geojson_feature_collection_no_props": {
            "name": "test_write_geojson_feature_collection_no_props",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_1": [
                    "str"
                ]
            }
        },
        "test_write_geojson_feature_collection_diff_srid": {
            "name": "test_write_geojson_feature_collection_diff_srid",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_1": [
                    "str",
                    "float"
                ]
            }
        },
        "test_read_gjson_features_from_longer_stream": {
            "name": "test_read_gjson_features_from_longer_stream",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_3": [
                    "str",
                    "Iterable[int]",
                    "float"
                ],
                "test_timestamp": []
            }
        },
        "test_reverse_read_gjson_features_from_longer_stream": {
            "name": "test_reverse_read_gjson_features_from_longer_stream",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_3": [
                    "Iterable[int]",
                    "float"
                ]
            }
        },
        "test_read_truncated_after_feature_length": {
            "name": "test_read_truncated_after_feature_length",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_2": [
                    "str",
                    "float"
                ]
            }
        },
        "test_read_truncated_feature_data": {
            "name": "test_read_truncated_feature_data",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_2": []
            }
        },
        "test_read_empty_stream_raises_exception": {
            "name": "test_read_empty_stream_raises_exception",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reverse_read_empty_stream_raises_exception": {
            "name": "test_reverse_read_empty_stream_raises_exception",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_read_invalid_schema_from_stream_raises_exception": {
            "name": "test_read_invalid_schema_from_stream_raises_exception",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_2": []
            }
        },
        "test_reverse_read_invalid_schema_from_stream_raises_exception": {
            "name": "test_reverse_read_invalid_schema_from_stream_raises_exception",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_2": [
                    "str"
                ]
            }
        },
        "test_feature_collection_class": {
            "name": "test_feature_collection_class",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "feat_collection_2": []
            }
        }
    },
    "geostream-master/tests/test_unpack_gjz.py": {
        "test_unpack_file": {
            "name": "test_unpack_file",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_current_schema": [
                    "str",
                    "BinaryIO"
                ]
            }
        },
        "test_unpack_bigger_file": {
            "name": "test_unpack_bigger_file",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_larger_v3": [
                    "str",
                    "bool"
                ],
                "test_output_dir": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "test_unpack_select_bigger_file": {
            "name": "test_unpack_select_bigger_file",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_larger_v3": [
                    "str"
                ],
                "test_output_dir": [
                    "str"
                ]
            }
        },
        "test_reverse_unpack_bigger_file": {
            "name": "test_reverse_unpack_bigger_file",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_larger_v3": [
                    "str"
                ],
                "test_output_dir": [
                    "str"
                ]
            }
        },
        "test_fail_reverse_unpack_v2_file": {
            "name": "test_fail_reverse_unpack_v2_file",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_v2_schema": [
                    "bool"
                ],
                "test_output_dir": []
            }
        },
        "test_unpack_file_all_flags": {
            "name": "test_unpack_file_all_flags",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_current_schema": [
                    "str"
                ],
                "test_output_dir": [
                    "str"
                ]
            }
        },
        "test_unpack_to_dir": {
            "name": "test_unpack_to_dir",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_no_props_v3": [],
                "test_output_dir": []
            }
        },
        "test_unpack_multiple": {
            "name": "test_unpack_multiple",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_files_all_in_dir": [
                    "str",
                    "List[str]"
                ],
                "test_output_dir": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "test_unpack_help": {
            "name": "test_unpack_help",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unpack_wrong_version_file": {
            "name": "test_unpack_wrong_version_file",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_wrong_version": [
                    "str"
                ]
            }
        },
        "test_unpack_wrong_file_ext": {
            "name": "test_unpack_wrong_file_ext",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_wrong_ext": [
                    "str"
                ]
            }
        },
        "test_unpack_missing_file": {
            "name": "test_unpack_missing_file",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_nonexistent_file": [
                    "bool"
                ]
            }
        },
        "test_unpack_bad_out_dir": {
            "name": "test_unpack_bad_out_dir",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_current_schema": [
                    "str",
                    "int"
                ]
            }
        },
        "test_unpack_bad_out_param": {
            "name": "test_unpack_bad_out_param",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_files_all_in_dir": [
                    "str",
                    "Tuple[str,str,str]",
                    "Tuple[Union[str,str,str]]"
                ],
                "test_output_dir": [
                    "str",
                    "List[int]",
                    "Optional[str]"
                ]
            }
        },
        "test_unpack_bad_out_param2": {
            "name": "test_unpack_bad_out_param2",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_files_all_in_dir": [
                    "str",
                    "Callable[[str],None]"
                ],
                "gjz_file_wrong_ext": [
                    "str",
                    "Tuple[Union[str,str,str]]",
                    "Optional[str]",
                    "Tuple[str,str,str]"
                ]
            }
        },
        "test_unpack_bad_input": {
            "name": "test_unpack_bad_input",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "test_file_dir": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "bytes"
                ]
            }
        },
        "test_unpack_bad_select_param": {
            "name": "test_unpack_bad_select_param",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "gjz_file_current_schema": [
                    "str",
                    "Optional[str]"
                ],
                "test_output_dir": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "geostream-master/tests/__init__.py": {}
}
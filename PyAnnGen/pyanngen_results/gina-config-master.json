{
    "gina-config-master/gina_config/categories.py": {
        "create_category": {
            "name": "create_category",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Optional[str]",
                    "None",
                    "int",
                    "bytes",
                    "List[str]",
                    "list[str]",
                    "Union[int, List]",
                    "list[]"
                ],
                "is_default": [
                    "bool",
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ],
                "text_overlay": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ],
                "text_font_color": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ],
                "text_timer_bar_color": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ],
                "timer_overlay": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ],
                "timer_font_color": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ],
                "timer_timer_bar_color": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "Union[int, List]",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "gina-config-master/gina_config/characters.py": {
        "get_character": {
            "name": "get_character",
            "location": 12,
            "return": [
                "Character"
            ],
            "arguments": {
                "characters": [
                    "list"
                ],
                "character_name": [
                    "str"
                ]
            }
        },
        "dump_character": {
            "name": "dump_character",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "characters": [
                    "list"
                ],
                "character_name": [
                    "str"
                ]
            }
        }
    },
    "gina-config-master/gina_config/colors.py": {
        "ColorPalette.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gina-config-master/gina_config/fonts.py": {},
    "gina-config-master/gina_config/overlays.py": {
        "_create_overlay": {
            "name": "_create_overlay",
            "location": 20,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "name": [
                    "str",
                    "bool",
                    "Tuple[float, float]",
                    "tuple[typing.Union[float,float]]"
                ]
            }
        },
        "create_text_overlay": {
            "name": "create_text_overlay",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Iterable[str]",
                    "typing.Iterable[str]"
                ]
            }
        },
        "create_timer_overlay": {
            "name": "create_timer_overlay",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Iterable[str]",
                    "typing.Iterable[str]"
                ]
            }
        },
        "_get_overlay": {
            "name": "_get_overlay",
            "location": 78,
            "return": [
                "dict"
            ],
            "arguments": {
                "name": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ],
                "overlays": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "get_text_overlay": {
            "name": "get_text_overlay",
            "location": 85,
            "return": [
                "dict"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "get_timer_overlay": {
            "name": "get_timer_overlay",
            "location": 89,
            "return": [
                "dict"
            ],
            "arguments": {
                "name": [
                    "str",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "set_overlay_font_size": {
            "name": "set_overlay_font_size",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "font_size": [
                    "str"
                ],
                "overlay": [
                    "str"
                ]
            }
        },
        "set_overlay_bottom_position": {
            "name": "set_overlay_bottom_position",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "position": [
                    "bool",
                    "float"
                ],
                "overlay": [
                    "bool",
                    "float"
                ]
            }
        },
        "set_overlay_left_position": {
            "name": "set_overlay_left_position",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "position": [
                    "bool",
                    "float"
                ],
                "overlay": [
                    "bool",
                    "float"
                ]
            }
        },
        "set_overlay_right_position": {
            "name": "set_overlay_right_position",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "position": [
                    "bool",
                    "float"
                ],
                "overlay": [
                    "bool",
                    "float"
                ]
            }
        },
        "set_overlay_top_position": {
            "name": "set_overlay_top_position",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "position": [
                    "bool",
                    "float"
                ],
                "overlay": [
                    "bool",
                    "float"
                ]
            }
        }
    },
    "gina-config-master/gina_config/settings.py": {
        "add_phonetic_transform": {
            "name": "add_phonetic_transform",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "actual_word": [
                    "str",
                    "List[str]",
                    "int"
                ],
                "phonetic_word": [
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        },
        "set_everquest_folder_path": {
            "name": "set_everquest_folder_path",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "set_imported_media_file_folder_path": {
            "name": "set_imported_media_file_folder_path",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "set_log_archive_folder_path": {
            "name": "set_log_archive_folder_path",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "gina-config-master/gina_config/spellbook.py": {
        "add_spell": {
            "name": "add_spell",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_collect_spells_for_character": {
            "name": "_collect_spells_for_character",
            "location": 59,
            "return": [
                "list"
            ],
            "arguments": {
                "character": [
                    "float",
                    "str",
                    "List[str]",
                    "int"
                ],
                "spells": [
                    "float",
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        },
        "add_character_levels_to_spells": {
            "name": "add_character_levels_to_spells",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "characters": [
                    "str",
                    "bool"
                ],
                "spells": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "IO[Any]"
                ]
            }
        },
        "_create_parent_trigger_group_for_spell": {
            "name": "_create_parent_trigger_group_for_spell",
            "location": 83,
            "return": [
                "dict"
            ],
            "arguments": {
                "spell": [
                    "str",
                    "Optional[float]",
                    "Callable",
                    "dict"
                ]
            }
        },
        "_add_spell_to_trigger_groups": {
            "name": "_add_spell_to_trigger_groups",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "spell": [
                    "str",
                    "Dict[str, List[str]]",
                    "int",
                    "Dict[str, Any]"
                ]
            }
        },
        "add_spells_to_trigger_groups": {
            "name": "add_spells_to_trigger_groups",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "spells": [
                    "int",
                    "str",
                    "List[str]",
                    "bool",
                    "Type"
                ]
            }
        }
    },
    "gina-config-master/gina_config/triggers.py": {
        "create_trigger": {
            "name": "create_trigger",
            "location": 2,
            "return": [
                "dict"
            ],
            "arguments": {
                "name": [
                    "str",
                    "List[str]",
                    "list[str]",
                    "Optional[List[str]]",
                    "None"
                ]
            }
        }
    },
    "gina-config-master/gina_config/trigger_groups.py": {
        "next_available_id": {
            "name": "next_available_id",
            "location": 13,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "create_trigger_group": {
            "name": "create_trigger_group",
            "location": 22,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "add_trigger_group": {
            "name": "add_trigger_group",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "trigger_group": [
                    "int"
                ]
            }
        },
        "add_child_to_group": {
            "name": "add_child_to_group",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "parent_trigger_group": [
                    "str",
                    "Callable"
                ],
                "child_trigger_group": [
                    "Union[str, 'Path']",
                    "str"
                ]
            }
        },
        "add_trigger_to_group": {
            "name": "add_trigger_to_group",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "trigger_group": [
                    "int",
                    "str",
                    "list[str]",
                    "List[str]",
                    "typing.Type",
                    "bool",
                    "Type"
                ],
                "trigger": [
                    "int",
                    "str",
                    "list[str]",
                    "List[str]",
                    "typing.Type",
                    "bool",
                    "Type"
                ]
            }
        }
    },
    "gina-config-master/gina_config/xml_converter.py": {
        "export_to_string": {
            "name": "export_to_string",
            "location": 482,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "export_to_file": {
            "name": "export_to_file",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str",
                    "IO[Any]",
                    "dict"
                ]
            }
        }
    },
    "gina-config-master/gina_config/__init__.py": {
        "action_step": {
            "name": "action_step",
            "location": 14,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "description": [
                    "str",
                    "bool",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "output_step": {
            "name": "output_step",
            "location": 25,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "description": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "_load_json_file_from_disk": {
            "name": "_load_json_file_from_disk",
            "location": 39,
            "return": [
                "Union[(dict, list)]"
            ],
            "arguments": {
                "json_file_path": [
                    "str"
                ]
            }
        },
        "load_config_file": {
            "name": "load_config_file",
            "location": 46,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "load_spells_file": {
            "name": "load_spells_file",
            "location": 51,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "update_settings": {
            "name": "update_settings",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "str",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "_update_overlay_font_size_and_position": {
            "name": "_update_overlay_font_size_and_position",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "overlay": [
                    "int",
                    "str",
                    "bool",
                    "None",
                    "Optional[str]",
                    "Union[int, str]"
                ],
                "overlay_settings": [
                    "str",
                    "int",
                    "bool",
                    "Optional[str]",
                    "Union[int, str]"
                ]
            }
        },
        "update_overlays": {
            "name": "update_overlays",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "list[str]",
                    "Dict[str, Any]",
                    "dict",
                    "Mapping",
                    "List[str]"
                ]
            }
        },
        "update_trigger_groups": {
            "name": "update_trigger_groups",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "str",
                    "Optional[str]",
                    "Optional[int]"
                ],
                "spells": []
            }
        },
        "dump_gina_config": {
            "name": "dump_gina_config",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "save_gina_config": {
            "name": "save_gina_config",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "str",
                    "Optional[str]",
                    "Optional[IO[str]]"
                ]
            }
        },
        "launch_gina": {
            "name": "launch_gina",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "list[]",
                    "Optional[type]",
                    "list",
                    "dict"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "action_step.decorator": {
            "name": "decorator",
            "location": 15,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "output_step.decorator": {
            "name": "decorator",
            "location": 26,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "action_step.decorator.wrapper": {
            "name": "wrapper",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "output_step.decorator.wrapper": {
            "name": "wrapper",
            "location": 27,
            "return": [
                "bool",
                "int",
                "str"
            ],
            "arguments": {}
        }
    },
    "gina-config-master/gina_config/__main__.py": {},
    "gina-config-master/gina_config/config_data/_trigger_groups.py": {},
    "gina-config-master/gina_config/config_data/__init__.py": {},
    "gina-config-master/gina_config/config_data_utils/trigger_groups.py": {
        "_find_trigger_group_by_name": {
            "name": "_find_trigger_group_by_name",
            "location": 2,
            "return": [
                "Dict[int, int]",
                "int",
                "list",
                "Dict[str, float]"
            ],
            "arguments": {
                "name": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "trigger_groups": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "_find_trigger_group_by_id": {
            "name": "_find_trigger_group_by_id",
            "location": 10,
            "return": [
                "int",
                "Dict[str, Tuple[str, str]]",
                "List[str]",
                "str"
            ],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "List[tuple]"
                ],
                "trigger_groups": [
                    "str",
                    "int",
                    "List[tuple]"
                ]
            }
        },
        "_recursive_find_trigger_group_by_name": {
            "name": "_recursive_find_trigger_group_by_name",
            "location": 18,
            "return": [
                "None",
                "Optional[str]",
                "bool",
                "Dict[str, Dict]",
                "str",
                "Optional[Any]"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Set[str]",
                    "dict"
                ],
                "trigger_groups": [
                    "Sequence[str]",
                    "str",
                    "int",
                    "Set[str]"
                ]
            }
        },
        "_recursive_find_trigger_group_by_id": {
            "name": "_recursive_find_trigger_group_by_id",
            "location": 34,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "id": [
                    "Optional[str]",
                    "bool"
                ],
                "trigger_groups": [
                    "str",
                    "int"
                ]
            }
        },
        "_recursive_get_trigger_group_ids": {
            "name": "_recursive_get_trigger_group_ids",
            "location": 50,
            "return": [
                "list"
            ],
            "arguments": {
                "trigger_groups": [
                    "str",
                    "Optional[str]",
                    "T",
                    "int",
                    "bool"
                ]
            }
        },
        "get_trigger_group_by_name": {
            "name": "get_trigger_group_by_name",
            "location": 63,
            "return": [
                "Optional[int]",
                "T",
                "Optional[str]",
                "Optional[Iterable[Any]]",
                "List[str]",
                "str",
                "Optional[T]",
                "bool"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "get_trigger_group_by_id": {
            "name": "get_trigger_group_by_id",
            "location": 67,
            "return": [
                "dict",
                "str"
            ],
            "arguments": {
                "id": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "get_buffs_trigger_group": {
            "name": "get_buffs_trigger_group",
            "location": 71,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "get_debuffs_trigger_group": {
            "name": "get_debuffs_trigger_group",
            "location": 75,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "get_trigger_group_names": {
            "name": "get_trigger_group_names",
            "location": 79,
            "return": [
                "list"
            ],
            "arguments": {
                "trigger_groups": [
                    "Dict[str, Any]",
                    "Iterable[str]",
                    "bool"
                ]
            }
        },
        "get_buff_trigger_group_by_name": {
            "name": "get_buff_trigger_group_by_name",
            "location": 88,
            "return": [
                "Optional[int]",
                "Optional[BaseException]",
                "Optional[Iterable[Any]]",
                "Callable",
                "Type",
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "get_debuff_trigger_group_by_name": {
            "name": "get_debuff_trigger_group_by_name",
            "location": 94,
            "return": [
                "Optional[int]",
                "Optional[BaseException]",
                "Optional[Iterable[Any]]",
                "Callable",
                "Type",
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "_get_next_available_group_id": {
            "name": "_get_next_available_group_id",
            "location": 100,
            "return": [
                "int"
            ],
            "arguments": {
                "trigger_group_ids": [
                    "list"
                ]
            }
        },
        "get_next_available_group_id": {
            "name": "get_next_available_group_id",
            "location": 109,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "generate_trigger": {
            "name": "generate_trigger",
            "location": 124,
            "return": [
                "dict"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Iterable[str]",
                    "bool"
                ]
            }
        },
        "add_buff_trigger_group": {
            "name": "add_buff_trigger_group",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "trigger_group": [
                    "float",
                    "int"
                ]
            }
        },
        "next_available_id": {
            "name": "next_available_id",
            "location": 199,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "generate_empty": {
            "name": "generate_empty",
            "location": 204,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "convert_to_parent": {
            "name": "convert_to_parent",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "group": [
                    "Type",
                    "str",
                    "int"
                ]
            }
        },
        "add_group_to_parent": {
            "name": "add_group_to_parent",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "parent": [
                    "Callable",
                    "int",
                    "Optional[str]",
                    "str",
                    "list"
                ],
                "group": [
                    "str"
                ]
            }
        }
    },
    "gina-config-master/gina_config/config_data_utils/__init__.py": {}
}
{
    "git-browse-master/setup.py": {},
    "git-browse-master/git_browse/bitbucket.py": {
        "BitbucketHost.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_config": [
                    "Callable",
                    "dict",
                    "Optional[List[Any]]"
                ],
                "user": [
                    "str",
                    "list"
                ],
                "repository": [
                    "str",
                    "list"
                ]
            }
        },
        "BitbucketHost.create": {
            "name": "create",
            "location": 31,
            "return": [
                "BitbucketHost"
            ],
            "arguments": {
                "git_config": [
                    "dict"
                ]
            }
        },
        "BitbucketHost.set_host_class": {
            "name": "set_host_class",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Callable",
                    "type"
                ]
            }
        },
        "BitbucketHost.get_url": {
            "name": "get_url",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "str"
                ]
            }
        },
        "BitbucketHost.commit_hash_url": {
            "name": "commit_hash_url",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_hash": [
                    "str"
                ]
            }
        },
        "BitbucketHost.root_url": {
            "name": "root_url",
            "location": 66,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "List[str]"
                ],
                "focus_object": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "BitbucketHost.directory_url": {
            "name": "directory_url",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_object": [
                    "str"
                ]
            }
        },
        "BitbucketHost.file_url": {
            "name": "file_url",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "Dict[str, str]"
                ],
                "focus_object": [
                    "str",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "git-browse-master/git_browse/browse.py": {
        "copy_text_to_clipboard": {
            "name": "copy_text_to_clipboard",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_repository_root": {
            "name": "get_repository_root",
            "location": 48,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {}
        },
        "get_git_config_path": {
            "name": "get_git_config_path",
            "location": 57,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {}
        },
        "get_git_config_data": {
            "name": "get_git_config_data",
            "location": 68,
            "return": [
                "typedefs.GitConfig"
            ],
            "arguments": {
                "git_config_file": [
                    "str",
                    "Callable[[str], None]",
                    "configparser.RawConfigParser",
                    "Union[str, pathlib.Path]",
                    "Optional[str]"
                ]
            }
        },
        "parse_git_url": {
            "name": "parse_git_url",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "git_config": [
                    "str",
                    "Callable",
                    "bool"
                ],
                "use_sourcegraph": [
                    "str",
                    "bool",
                    "dict"
                ],
                "use_godocs": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        },
        "get_repository_host": {
            "name": "get_repository_host",
            "location": 113,
            "return": [
                "str"
            ],
            "arguments": {
                "use_sourcegraph": [
                    "dict",
                    "configparser.ConfigParser",
                    "Dict[str, Any]",
                    "str",
                    "bytes",
                    "tuple"
                ],
                "godocs": [
                    "dict",
                    "configparser.ConfigParser",
                    "Dict[str, Any]",
                    "str",
                    "bytes",
                    "tuple"
                ]
            }
        },
        "get_git_object": {
            "name": "get_git_object",
            "location": 123,
            "return": [
                "str",
                "dict",
                "int"
            ],
            "arguments": {
                "focus_object": [
                    "List[str]",
                    "str",
                    "list",
                    "pathlib.Path",
                    "int"
                ],
                "path": [
                    "str",
                    "pathlib.Path"
                ],
                "host": [
                    "List[pathlib.Path]",
                    "str",
                    "list",
                    "bool"
                ]
            }
        },
        "get_commit_hash": {
            "name": "get_commit_hash",
            "location": 141,
            "return": [
                "Optional[typedefs.FocusHash]"
            ],
            "arguments": {
                "identifier": [
                    "str",
                    "int",
                    "tuple",
                    "List[str]"
                ]
            }
        },
        "open_url": {
            "name": "open_url",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "dict"
                ],
                "dry_run": [
                    "bool",
                    "str"
                ],
                "copy_clipboard": [
                    "bool",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "git-browse-master/git_browse/github.py": {
        "GithubHost.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_config": [
                    "Callable",
                    "Dict",
                    "Optional[List[Any]]",
                    "List[Any]",
                    "None"
                ],
                "user": [
                    "str",
                    "List"
                ],
                "repository": [
                    "str",
                    "List"
                ]
            }
        },
        "GithubHost.create": {
            "name": "create",
            "location": 29,
            "return": [
                "GithubHost"
            ],
            "arguments": {
                "git_config": [
                    "Dict"
                ]
            }
        },
        "GithubHost.set_host_class": {
            "name": "set_host_class",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Callable",
                    "Type"
                ]
            }
        },
        "GithubHost.get_url": {
            "name": "get_url",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "str"
                ]
            }
        },
        "GithubHost.commit_hash_url": {
            "name": "commit_hash_url",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_hash": [
                    "str"
                ]
            }
        },
        "GithubHost.root_url": {
            "name": "root_url",
            "location": 64,
            "return": [
                "str",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "List[str]"
                ],
                "focus_object": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "GithubHost.directory_url": {
            "name": "directory_url",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_object": [
                    "str"
                ]
            }
        },
        "GithubHost.file_url": {
            "name": "file_url",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "Dict[str,str]"
                ],
                "focus_object": [
                    "str",
                    "Dict[str,str]"
                ]
            }
        }
    },
    "git-browse-master/git_browse/gitlab.py": {
        "GitlabHost.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_config": [
                    "Callable",
                    "dict",
                    "Optional[List[Any]]"
                ],
                "user": [
                    "str",
                    "list"
                ],
                "repository": [
                    "str",
                    "list"
                ]
            }
        },
        "GitlabHost.create": {
            "name": "create",
            "location": 31,
            "return": [
                "GitlabHost"
            ],
            "arguments": {
                "git_config": [
                    "dict"
                ]
            }
        },
        "GitlabHost.set_host_class": {
            "name": "set_host_class",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Callable",
                    "type"
                ]
            }
        },
        "GitlabHost.get_url": {
            "name": "get_url",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "str"
                ]
            }
        },
        "GitlabHost.commit_hash_url": {
            "name": "commit_hash_url",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_hash": [
                    "str"
                ]
            }
        },
        "GitlabHost.root_url": {
            "name": "root_url",
            "location": 66,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "List[str]"
                ],
                "focus_object": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "GitlabHost.directory_url": {
            "name": "directory_url",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_object": [
                    "str"
                ]
            }
        },
        "GitlabHost.file_url": {
            "name": "file_url",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "Dict[str, str]"
                ],
                "focus_object": [
                    "str",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "git-browse-master/git_browse/godocs.py": {
        "GodocsHost.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_config": [
                    "Dict",
                    "str",
                    "Callable"
                ],
                "host": [
                    "Dict",
                    "str",
                    "List"
                ],
                "repository": [
                    "Dict",
                    "str",
                    "List"
                ]
            }
        },
        "GodocsHost.create": {
            "name": "create",
            "location": 26,
            "return": [
                "GodocsHost"
            ],
            "arguments": {
                "git_config": [
                    "Dict"
                ]
            }
        },
        "GodocsHost.set_host_class": {
            "name": "set_host_class",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Dict[str,dict[str,str]]",
                    "Dict[str,Dict[str,str]]",
                    "Dict[str,str]",
                    "Tuple[Type]",
                    "str",
                    "Tuple[type]",
                    "Dict[str,Any]"
                ]
            }
        },
        "GodocsHost.get_url": {
            "name": "get_url",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "str",
                    "Type['Declared']",
                    "Optional[List[str]]"
                ]
            }
        },
        "GodocsHost.commit_hash_url": {
            "name": "commit_hash_url",
            "location": 59,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "bool"
                ],
                "focus_hash": [
                    "str",
                    "bool"
                ]
            }
        },
        "GodocsHost.directory_url": {
            "name": "directory_url",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_object": [
                    "str"
                ]
            }
        },
        "GodocsHost.file_url": {
            "name": "file_url",
            "location": 75,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str",
                    "List[str]"
                ],
                "focus_object": [
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "git-browse-master/git_browse/phabricator.py": {
        "PhabricatorHost.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhabricatorHost.create": {
            "name": "create",
            "location": 29,
            "return": [
                "PhabricatorHost"
            ],
            "arguments": {
                "git_config": [
                    "Dict[str,Any]",
                    "List",
                    "Dict",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "PhabricatorHost.set_host_class": {
            "name": "set_host_class",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Callable",
                    "Type"
                ]
            }
        },
        "PhabricatorHost._parse_arcconfig": {
            "name": "_parse_arcconfig",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository_root": [
                    "int",
                    "str",
                    "List[str]",
                    "Dict[str,str]",
                    "pathlib.Path"
                ]
            }
        },
        "PhabricatorHost.get_url": {
            "name": "get_url",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "str",
                    "dict"
                ]
            }
        },
        "PhabricatorHost.commit_hash_url": {
            "name": "commit_hash_url",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "focus_hash": [
                    "str",
                    "Dict[str,Any]",
                    "IO[str]",
                    "IO"
                ]
            }
        },
        "PhabricatorHost.root_url": {
            "name": "root_url",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "focus_object": [
                    "str",
                    "Dict[str,Any]",
                    "Callable",
                    "Optional",
                    "int",
                    "List[Tuple]",
                    "List[tuple]"
                ]
            }
        },
        "PhabricatorHost.file_url": {
            "name": "file_url",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "focus_object": [
                    "str",
                    "int",
                    "Dict[str,str]",
                    "List[str]"
                ]
            }
        }
    },
    "git-browse-master/git_browse/sourcegraph.py": {
        "SourcegraphHost.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_config": [
                    "dict",
                    "str",
                    "Callable"
                ],
                "host": [
                    "dict",
                    "str",
                    "list"
                ],
                "repository": [
                    "dict",
                    "str",
                    "list"
                ]
            }
        },
        "SourcegraphHost.create": {
            "name": "create",
            "location": 26,
            "return": [
                "SourcegraphHost"
            ],
            "arguments": {
                "git_config": [
                    "dict"
                ]
            }
        },
        "SourcegraphHost.set_host_class": {
            "name": "set_host_class",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Dict[str, Dict[str, str]]",
                    "Tuple[type]",
                    "Dict[str, str]",
                    "str",
                    "Dict[str, Any]"
                ]
            }
        },
        "SourcegraphHost.get_url": {
            "name": "get_url",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "str",
                    "Type['Declared']",
                    "Optional[List[str]]"
                ]
            }
        },
        "SourcegraphHost.commit_hash_url": {
            "name": "commit_hash_url",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_hash": [
                    "str"
                ]
            }
        },
        "SourcegraphHost.directory_url": {
            "name": "directory_url",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_object": [
                    "str"
                ]
            }
        },
        "SourcegraphHost.file_url": {
            "name": "file_url",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repository_url": [
                    "str"
                ],
                "focus_object": [
                    "str"
                ]
            }
        }
    },
    "git-browse-master/git_browse/typedefs.py": {
        "GitConfig.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_url": [
                    "str",
                    "Callable[[str], str]"
                ],
                "default_branch": [
                    "Callable",
                    "str",
                    "bool",
                    "list"
                ]
            }
        },
        "GitConfig.try_url_match": {
            "name": "try_url_match",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "regex": [
                    "str",
                    "dict",
                    "Tuple[str, str]",
                    "list"
                ]
            }
        },
        "Host.user": {
            "name": "user",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "list"
                ]
            }
        },
        "Host.repository": {
            "name": "repository",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repository": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "Host.create": {
            "name": "create",
            "location": 47,
            "return": [
                "Host",
                "None"
            ],
            "arguments": {
                "git_config": [
                    "Dict[str, Any]",
                    "list",
                    "dict",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "Host.set_host_class": {
            "name": "set_host_class",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host_class": [
                    "Callable",
                    "type"
                ]
            }
        },
        "Host.get_url": {
            "name": "get_url",
            "location": 55,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "git_object": [
                    "Optional[List[str]]",
                    "str"
                ]
            }
        },
        "GitObject.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "GitObject.is_commit_hash": {
            "name": "is_commit_hash",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitObject.is_root": {
            "name": "is_root",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitObject.is_directory": {
            "name": "is_directory",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.is_root": {
            "name": "is_root",
            "location": 74,
            "return": [
                "bool",
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.is_directory": {
            "name": "is_directory",
            "location": 77,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.default": {
            "name": "default",
            "location": 81,
            "return": [
                "FocusObject"
            ],
            "arguments": {}
        },
        "FocusHash.is_commit_hash": {
            "name": "is_commit_hash",
            "location": 86,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/__init__.py": {},
    "git-browse-master/git_browse/tests/test_bitbucket.py": {
        "TestBitbucketHost.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBitbucketHost.test_init": {
            "name": "test_init",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBitbucketHost.test_get_url": {
            "name": "test_get_url",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBitbucketHost.test_root_url": {
            "name": "test_root_url",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBitbucketHost.test_directory_url": {
            "name": "test_directory_url",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBitbucketHost.test_file_url": {
            "name": "test_file_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBitbucketHost.test_commit_hash_url": {
            "name": "test_commit_hash_url",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_browse.py": {
        "GetRepositoryRoot.test_get": {
            "name": "test_get",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetRepositoryRoot.test_fail_get": {
            "name": "test_fail_get",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigPath.test_get": {
            "name": "test_get",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigPath.test_submodule_get": {
            "name": "test_submodule_get",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigData.setUp": {
            "name": "setUp",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigData.tearDown": {
            "name": "tearDown",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigData.test_url": {
            "name": "test_url",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigData.test_bad_url": {
            "name": "test_bad_url",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetGitConfigData.test_multiple_fetch": {
            "name": "test_multiple_fetch",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseGitURL.setUp": {
            "name": "setUp",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseGitURL.test_ssh_url": {
            "name": "test_ssh_url",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseGitURL.test_https_url": {
            "name": "test_https_url",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseGitURL.check_host": {
            "name": "check_host",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int",
                    "Optional[Iterable[Any]]",
                    "Iterable[Any]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "ParseGitURL.test_sourcegraph_github_host": {
            "name": "test_sourcegraph_github_host",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseGitURL.test_sourcegraph_uber_host": {
            "name": "test_sourcegraph_uber_host",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseGitURL.test_broken_url": {
            "name": "test_broken_url",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetRepositoryHost.test_repository_host": {
            "name": "test_repository_host",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFocusObject.setUp": {
            "name": "setUp",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFocusObject.test_default_focus_object": {
            "name": "test_default_focus_object",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFocusObject.test_file_focus_object": {
            "name": "test_file_focus_object",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFocusObject.test_directory_focus_object": {
            "name": "test_directory_focus_object",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFocusObject.test_get_focus_hash": {
            "name": "test_get_focus_hash",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFocusObject.test_nonexistend_focus_object": {
            "name": "test_nonexistend_focus_object",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCommitHash.test_get_unknown_hash": {
            "name": "test_get_unknown_hash",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCommitHash.test_get_hash": {
            "name": "test_get_hash",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOpenURL.test_open_url": {
            "name": "test_open_url",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.setUp": {
            "name": "setUp",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FullTest.tearDown": {
            "name": "tearDown",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FullTest.test_default": {
            "name": "test_default",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.test_file": {
            "name": "test_file",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "tests.test_util.aiohttp.AiohttpClientMocker",
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.test_subdirectory_file": {
            "name": "test_subdirectory_file",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.test_chdir_subdirectory_file": {
            "name": "test_chdir_subdirectory_file",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.test_directory": {
            "name": "test_directory",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.test_subdirectory": {
            "name": "test_subdirectory",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.test_chdir_subdirectory": {
            "name": "test_chdir_subdirectory",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_url": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FullTest.check_main": {
            "name": "check_main",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sys_argv": [
                    "List[str]",
                    "str",
                    "int",
                    "float"
                ],
                "expected": [
                    "str"
                ],
                "mock_open_url": [
                    "str"
                ]
            }
        },
        "FullTest.test_check_version": {
            "name": "test_check_version",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": [
                    "unittesmock.MagicMock"
                ]
            }
        }
    },
    "git-browse-master/git_browse/tests/test_github.py": {
        "TestGithubHost.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGithubHost.test_init": {
            "name": "test_init",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGithubHost.test_get_url": {
            "name": "test_get_url",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGithubHost.test_root_url": {
            "name": "test_root_url",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGithubHost.test_directory_url": {
            "name": "test_directory_url",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGithubHost.test_file_url": {
            "name": "test_file_url",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGithubHost.test_commit_hash_url": {
            "name": "test_commit_hash_url",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_gitlab.py": {
        "TestGitlabHost.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitlabHost.test_init": {
            "name": "test_init",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitlabHost.test_get_url": {
            "name": "test_get_url",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitlabHost.test_root_url": {
            "name": "test_root_url",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitlabHost.test_directory_url": {
            "name": "test_directory_url",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitlabHost.test_file_url": {
            "name": "test_file_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitlabHost.test_commit_hash_url": {
            "name": "test_commit_hash_url",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_git_urls.py": {
        "generate_test": {
            "name": "generate_test",
            "location": 175,
            "return": [
                "Callable[([], None)]"
            ],
            "arguments": {
                "test_config": [
                    "Dict[str, Any]",
                    "bool",
                    "tuple",
                    "dict"
                ]
            }
        },
        "TestGitURLs.setUp": {
            "name": "setUp",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitURLs.tearDown": {
            "name": "tearDown",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitURLs.mock_arcconfig": {
            "name": "mock_arcconfig",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "generate_test.test": {
            "name": "test",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_git_config_data": [
                    "unittesmock.MagicMock"
                ]
            }
        }
    },
    "git-browse-master/git_browse/tests/test_godocs.py": {
        "TestGodocsHost.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_init": {
            "name": "test_init",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_create": {
            "name": "test_create",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_create_dot_git": {
            "name": "test_create_dot_git",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_get_url_commit": {
            "name": "test_get_url_commit",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_get_url_root": {
            "name": "test_get_url_root",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_get_url_directory": {
            "name": "test_get_url_directory",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGodocsHost.test_get_url_file": {
            "name": "test_get_url_file",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_phabricator.py": {
        "TestPhabricatorHost.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.tearDown": {
            "name": "tearDown",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_create": {
            "name": "test_create",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_set_host_class": {
            "name": "test_set_host_class",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig": {
            "name": "test_parse_arcconfig",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig_no_config": {
            "name": "test_parse_arcconfig_no_config",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig_invalid_config": {
            "name": "test_parse_arcconfig_invalid_config",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig_no_callsign": {
            "name": "test_parse_arcconfig_no_callsign",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig_no_url": {
            "name": "test_parse_arcconfig_no_url",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig_url_trailing_slash": {
            "name": "test_parse_arcconfig_url_trailing_slash",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_parse_arcconfig_no_default_branch": {
            "name": "test_parse_arcconfig_no_default_branch",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_get_url": {
            "name": "test_get_url",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_root_url": {
            "name": "test_root_url",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_file_url": {
            "name": "test_file_url",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPhabricatorHost.test_commit_hash_url": {
            "name": "test_commit_hash_url",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_sourcegraph.py": {
        "SourcegraphHost.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_init": {
            "name": "test_init",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_create": {
            "name": "test_create",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_create_dot_git": {
            "name": "test_create_dot_git",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_get_url_commit": {
            "name": "test_get_url_commit",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_get_url_root": {
            "name": "test_get_url_root",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_get_url_directory": {
            "name": "test_get_url_directory",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcegraphHost.test_get_url_file": {
            "name": "test_get_url_file",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_types.py": {
        "GitObject.test_is_directory": {
            "name": "test_is_directory",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.test_init": {
            "name": "test_init",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.test_is_root": {
            "name": "test_is_root",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.test_is_not_root": {
            "name": "test_is_not_root",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.test_is_directory": {
            "name": "test_is_directory",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.test_is_not_directory": {
            "name": "test_is_not_directory",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusObject.test_default": {
            "name": "test_default",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusHash.test_init": {
            "name": "test_init",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FocusHash.test_is_commit_hash": {
            "name": "test_is_commit_hash",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "git-browse-master/git_browse/tests/test_util.py": {
        "get_tag": {
            "name": "get_tag",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_tag_commit_hash": {
            "name": "get_tag_commit_hash",
            "location": 8,
            "return": [
                "str",
                "dict",
                "bytes",
                "Optional[str]"
            ],
            "arguments": {}
        }
    },
    "git-browse-master/git_browse/tests/__init__.py": {}
}
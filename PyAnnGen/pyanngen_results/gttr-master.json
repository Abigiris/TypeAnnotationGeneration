{
    "gttr-master/main.py": {},
    "gttr-master/setup.py": {},
    "gttr-master/gttr/cli.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "url_base": [],
                "token": [],
                "projects": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "gttr-master/gttr/timetracking.py": {
        "TimeReport.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeReport._parse_body": {
            "name": "_parse_body",
            "location": 11,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "body": [
                    "str"
                ]
            }
        },
        "TimeReport._add_spent_time": {
            "name": "_add_spent_time",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "int",
                    "Optional[datetime.datetime]",
                    "Dict[str, str]",
                    "str"
                ],
                "created_at": [
                    "int",
                    "datetime.date",
                    "str",
                    "Optional[int]",
                    "Tuple[int, int]",
                    "datetime.datetime"
                ],
                "spent_time": [
                    "str",
                    "datetime.date",
                    "datetime.datetime",
                    "int"
                ]
            }
        },
        "TimeReport._parse_created_at": {
            "name": "_parse_created_at",
            "location": 51,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": [],
                "created_at_str": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "TimeReport.parse_note": {
            "name": "parse_note",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "float",
                    "int",
                    "bool"
                ],
                "body": [
                    "str",
                    "Callable"
                ],
                "created_at_str": [
                    "str",
                    "Optional[List[str]]",
                    "Optional[Dict[str, Any]]",
                    "List[Dict[str, Any]]",
                    "Optional[str]",
                    "bool",
                    "List[str]",
                    "float"
                ]
            }
        },
        "TimeReport.total_report": {
            "name": "total_report",
            "location": 61,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gttr-master/gttr/__init__.py": {},
    "gttr-master/gttr/lib/gitlab.py": {
        "GitlabApi.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url_base": [
                    "str",
                    "int"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "GitlabApi._request": {
            "name": "_request",
            "location": 10,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Exception",
                "Optional[Dict[str, str]]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "int"
                ],
                "allow_http_status": [
                    "Tuple[int]",
                    "int",
                    "float",
                    "List[int]",
                    "Optional[int]",
                    "Tuple"
                ]
            }
        },
        "GitlabApi.projects": {
            "name": "projects",
            "location": 25,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitlabApi.issues": {
            "name": "issues",
            "location": 35,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "project_id": [
                    "str",
                    "Dict[str, Any]"
                ],
                "state": [
                    "Text",
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "GitlabApi.merge_requests": {
            "name": "merge_requests",
            "location": 45,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "project_id": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "GitlabApi.merge_requests_notes": {
            "name": "merge_requests_notes",
            "location": 55,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "project_id": [
                    "str",
                    "int",
                    "Optional[str]"
                ],
                "mr_iid": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "GitlabApi.issue_notes": {
            "name": "issue_notes",
            "location": 66,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "project_id": [
                    "str",
                    "int",
                    "Union[int,str]",
                    "Optional[str]"
                ],
                "issue_iid": [
                    "str",
                    "int",
                    "Union[int,str]",
                    "Optional[str]"
                ]
            }
        }
    },
    "gttr-master/gttr/lib/__init__.py": {},
    "gttr-master/tests/__init__.py": {}
}
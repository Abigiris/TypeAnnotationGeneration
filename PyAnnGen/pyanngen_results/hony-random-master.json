{
    "hony-random-master/server.py": {
        "parse_post": {
            "name": "parse_post",
            "location": 18,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "raw_post": [
                    "dict"
                ]
            }
        },
        "tumblr_session": {
            "name": "tumblr_session",
            "location": 27,
            "return": [
                "requests.sessions.Session"
            ],
            "arguments": {}
        },
        "posts_count": {
            "name": "posts_count",
            "location": 35,
            "return": [
                "str",
                "list",
                "bool"
            ],
            "arguments": {}
        },
        "query_posts": {
            "name": "query_posts",
            "location": 45,
            "return": [
                "None",
                "Optional[str]",
                "Dict",
                "int"
            ],
            "arguments": {
                "params": [
                    "str",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "random_post": {
            "name": "random_post",
            "location": 61,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "posts_count": [
                    "int",
                    "float",
                    "List[List[int]]",
                    "List[list[int]]"
                ]
            }
        },
        "post_by_id": {
            "name": "post_by_id",
            "location": 78,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "identifier": [
                    "str",
                    "Dict",
                    "int",
                    "Optional[Type]",
                    "Type",
                    "None"
                ]
            }
        },
        "parse_post_number_in_series": {
            "name": "parse_post_number_in_series",
            "location": 89,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "post": [
                    "str",
                    "int",
                    "Dict[str,Any]",
                    "Dict",
                    "T"
                ]
            }
        },
        "nth_previous_posts": {
            "name": "nth_previous_posts",
            "location": 97,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "post": [
                    "str",
                    "float",
                    "bool"
                ],
                "n": [
                    "int",
                    "float",
                    "Dict[str,int]",
                    "str",
                    "List[str]"
                ]
            }
        },
        "first_post": {
            "name": "first_post",
            "location": 112,
            "return": [
                "None",
                "int",
                "Dict[str,Any]"
            ],
            "arguments": {
                "identifier": [
                    "int",
                    "Dict[int,dict]",
                    "float",
                    "bool"
                ]
            }
        },
        "post_url": {
            "name": "post_url",
            "location": 118,
            "return": [
                "str",
                "dict",
                "Exception"
            ],
            "arguments": {
                "post": [
                    "Optional[Callable[[], None]]",
                    "sqlalchemy.orm.session.Session"
                ]
            }
        },
        "random_long_post": {
            "name": "random_long_post",
            "location": 122,
            "return": [
                "int",
                "List[Dict[str,Any]]",
                "List[int]",
                "str",
                "List",
                "List[tuple[Union[str,...]]]",
                "None"
            ],
            "arguments": {
                "posts_count": [
                    "float",
                    "int",
                    "Dict[str,Any]",
                    "List[List[int]]",
                    "List[list[int]]"
                ]
            }
        },
        "next_post": {
            "name": "next_post",
            "location": 136,
            "return": [
                "None",
                "bool",
                "str",
                "Dict[str,Any]"
            ],
            "arguments": {
                "identifier": [
                    "int"
                ]
            }
        },
        "posts_before": {
            "name": "posts_before",
            "location": 147,
            "return": [
                "list"
            ],
            "arguments": {
                "timestamp": [
                    "Optional[Type]",
                    "Dict",
                    "Type",
                    "None"
                ]
            }
        },
        "find_following_post": {
            "name": "find_following_post",
            "location": 156,
            "return": [
                "None",
                "bool",
                "Dict[int,dict]",
                "str"
            ],
            "arguments": {
                "posts": [],
                "current_post": []
            }
        },
        "redirect_to_random_post": {
            "name": "redirect_to_random_post",
            "location": 164,
            "return": [
                "str",
                "Exception",
                "Dict[str, str]",
                "dict",
                "Dict[str, Union[str, Set]]"
            ],
            "arguments": {}
        },
        "redirect_to_random_long_post": {
            "name": "redirect_to_random_long_post",
            "location": 171,
            "return": [
                "dict",
                "Exception"
            ],
            "arguments": {}
        },
        "redirect_to_first_post": {
            "name": "redirect_to_first_post",
            "location": 178,
            "return": [
                "Text",
                "str",
                "Exception",
                "Dict[str,str]",
                "Dict",
                "Dict[str,Union[str,Set]]"
            ],
            "arguments": {
                "post_id": [
                    "str",
                    "int",
                    "Tuple[Union[str,None,str]]",
                    "Union[int,str]",
                    "Tuple[Optional[str],str]"
                ],
                "after": [
                    "str",
                    "bool",
                    "List[str]",
                    "int"
                ]
            }
        },
        "redirect_to_next_post": {
            "name": "redirect_to_next_post",
            "location": 187,
            "return": [
                "Text",
                "str",
                "Exception",
                "Dict[str,str]",
                "Dict",
                "Dict[str,Union[str,Set]]"
            ],
            "arguments": {
                "post_id": [
                    "str",
                    "int",
                    "Tuple[Union[str,None,str]]",
                    "Union[int,str]",
                    "Tuple[Optional[str],str]"
                ],
                "after": [
                    "str",
                    "bool",
                    "List[str]",
                    "int"
                ]
            }
        },
        "random_exception": {
            "name": "random_exception",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "hony-random-master/tests.py": {
        "make_test_post": {
            "name": "make_test_post",
            "location": 96,
            "return": [
                "Dict[(str, Union[(int, _T0, _T1, _T2, _T3)])]"
            ],
            "arguments": {
                "post_url": [
                    "typing.Text"
                ],
                "slug": [
                    "typing.Text"
                ],
                "caption": [
                    "typing.Text"
                ],
                "timestamp": [
                    "None"
                ]
            }
        },
        "test_parse_post__parses_post_url": {
            "name": "test_parse_post__parses_post_url",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_post__parses_slug": {
            "name": "test_parse_post__parses_slug",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_post__parses_caption": {
            "name": "test_parse_post__parses_caption",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_post__parses_timestamp": {
            "name": "test_parse_post__parses_timestamp",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tumblr_session_has_correct_key": {
            "name": "test_tumblr_session_has_correct_key",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_query_posts__argument_passed": {
            "name": "test_query_posts__argument_passed",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_query_posts__filter_added": {
            "name": "test_query_posts__filter_added",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_query_posts__returns_json": {
            "name": "test_query_posts__returns_json",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_query_posts__returns_none_if_does_not_exists": {
            "name": "test_query_posts__returns_none_if_does_not_exists",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_post_count__returns_post": {
            "name": "test_post_count__returns_post",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_random_post__passes_correct_post": {
            "name": "test_random_post__passes_correct_post",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_random_post__selects_article": {
            "name": "test_random_post__selects_article",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_post_url": {
            "name": "test_post_url",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_random_long_post__first_post_is_long_enough": {
            "name": "test_random_long_post__first_post_is_long_enough",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_random_long_post__third_post_is_long_enough": {
            "name": "test_random_long_post__third_post_is_long_enough",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_post_by_id__passes_correct_post": {
            "name": "test_post_by_id__passes_correct_post",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_post_by_id__return_none_if_do_not_exists": {
            "name": "test_post_by_id__return_none_if_do_not_exists",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_post_by_id__correct_argument_passed": {
            "name": "test_post_by_id__correct_argument_passed",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nth_previous_posts__correct_timstamp_passed": {
            "name": "test_nth_previous_posts__correct_timstamp_passed",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nth_previous_posts__passes_correct_post": {
            "name": "test_nth_previous_posts__passes_correct_post",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_post_number_in_series__with_carriage_return": {
            "name": "test_parse_post_number_in_series__with_carriage_return",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_post_number_in_series__without_carriage_return": {
            "name": "test_parse_post_number_in_series__without_carriage_return",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_post_number_in_series__not_a_series": {
            "name": "test_parse_post_number_in_series__not_a_series",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_post__position_passed": {
            "name": "test_first_post__position_passed",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_post__identifier_passed": {
            "name": "test_first_post__identifier_passed",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_post__returns_none__post_exists_no_position": {
            "name": "test_first_post__returns_none__post_exists_no_position",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_post__returns_post__post_exists_and_has_position": {
            "name": "test_first_post__returns_post__post_exists_and_has_position",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_next_post__passes_id_correctly": {
            "name": "test_next_post__passes_id_correctly",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_next_post__passes_datetimes_correctly": {
            "name": "test_next_post__passes_datetimes_correctly",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_next_post__passes_correct_posts": {
            "name": "test_next_post__passes_correct_posts",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_posts_before__correct_parameters_passed": {
            "name": "test_posts_before__correct_parameters_passed",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_posts_before__correct_posts_passed": {
            "name": "test_posts_before__correct_posts_passed",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_posts_before__correct_posts_returned": {
            "name": "test_posts_before__correct_posts_returned",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_find_following_post__nominal": {
            "name": "test_find_following_post__nominal",
            "location": 410,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_find_following_post__previous_post_not_in_list": {
            "name": "test_find_following_post__previous_post_not_in_list",
            "location": 425,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_find_following_post__current_post_not_in_list": {
            "name": "test_find_following_post__current_post_not_in_list",
            "location": 438,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_find_following_post__no_posts_returned": {
            "name": "test_find_following_post__no_posts_returned",
            "location": 453,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
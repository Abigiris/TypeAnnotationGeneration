{
    "ietfdata-master/setup.py": {},
    "ietfdata-master/examples/org-chart.py": {
        "print_group": {
            "name": "print_group",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "group": [
                    "Optional[bool]",
                    "bool",
                    "Iterable[int]",
                    "int",
                    "float",
                    "None"
                ],
                "level": [
                    "int",
                    "Optional[int]",
                    "float",
                    "str"
                ]
            }
        }
    },
    "ietfdata-master/examples/person.py": {},
    "ietfdata-master/ietfdata/datatracker.py": {
        "DocumentURI.__post_init__": {
            "name": "__post_init__",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GroupURI.__post_init__": {
            "name": "__post_init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PersonURI.__post_init__": {
            "name": "__post_init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PersonAliasURI.__post_init__": {
            "name": "__post_init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PersonEventURI.__post_init__": {
            "name": "__post_init__",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EmailURI.__post_init__": {
            "name": "__post_init__",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTypeURI.__post_init__": {
            "name": "__post_init__",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentStateTypeURI.__post_init__": {
            "name": "__post_init__",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentStateURI.__post_init__": {
            "name": "__post_init__",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamURI.__post_init__": {
            "name": "__post_init__",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubmissionURI.__post_init__": {
            "name": "__post_init__",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubmissionCheckURI.__post_init__": {
            "name": "__post_init__",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Submission.urls": {
            "name": "urls",
            "location": 297,
            "return": [
                "Generator[(Tuple[(Any, str)], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubmissionEventURI.__post_init__": {
            "name": "__post_init__",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__post_init__": {
            "name": "__post_init__",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.url": {
            "name": "url",
            "location": 354,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentAliasURI.__post_init__": {
            "name": "__post_init__",
            "location": 400,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentEventURI.__post_init__": {
            "name": "__post_init__",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BallotPositionNameURI.__post_init__": {
            "name": "__post_init__",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BallotTypeURI.__post_init__": {
            "name": "__post_init__",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BallotDocumentEventURI.__post_init__": {
            "name": "__post_init__",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RelationshipTypeURI.__post_init__": {
            "name": "__post_init__",
            "location": 488,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RelatedDocumentURI.__post_init__": {
            "name": "__post_init__",
            "location": 505,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentAuthorURI.__post_init__": {
            "name": "__post_init__",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GroupStateURI.__post_init__": {
            "name": "__post_init__",
            "location": 540,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MeetingURI.__post_init__": {
            "name": "__post_init__",
            "location": 589,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MeetingTypeURI.__post_init__": {
            "name": "__post_init__",
            "location": 595,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScheduleURI.__post_init__": {
            "name": "__post_init__",
            "location": 611,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Meeting.status": {
            "name": "status",
            "location": 666,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SessionURI.__post_init__": {
            "name": "__post_init__",
            "location": 680,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeslotURI.__post_init__": {
            "name": "__post_init__",
            "location": 686,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SessionAssignmentURI.__post_init__": {
            "name": "__post_init__",
            "location": 707,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailingListURI.__post_init__": {
            "name": "__post_init__",
            "location": 755,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailingListSubscriptionsURI.__post_init__": {
            "name": "__post_init__",
            "location": 770,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.__init__": {
            "name": "__init__",
            "location": 790,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cache_dir": [
                    "None"
                ]
            }
        },
        "DataTracker.__del__": {
            "name": "__del__",
            "location": 834,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker._cache_filepath": {
            "name": "_cache_filepath",
            "location": 838,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "self": [],
                "resource_uri": []
            }
        },
        "DataTracker._obj_is_cached": {
            "name": "_obj_is_cached",
            "location": 843,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "resource_uri": []
            }
        },
        "DataTracker._retrieve_from_cache": {
            "name": "_retrieve_from_cache",
            "location": 849,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "resource_uri": []
            }
        },
        "DataTracker._cache_obj": {
            "name": "_cache_obj",
            "location": 856,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource_uri": [],
                "obj_json": []
            }
        },
        "DataTracker._rate_limit": {
            "name": "_rate_limit",
            "location": 864,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker._retrieve": {
            "name": "_retrieve",
            "location": 873,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource_uri": [],
                "obj_type": []
            }
        },
        "DataTracker._retrieve_multi": {
            "name": "_retrieve_multi",
            "location": 889,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "resource_uri": [],
                "obj_type": []
            }
        },
        "DataTracker.person": {
            "name": "person",
            "location": 916,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "person_uri": []
            }
        },
        "DataTracker.person_from_email": {
            "name": "person_from_email",
            "location": 920,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email_addr": []
            }
        },
        "DataTracker.person_aliases": {
            "name": "person_aliases",
            "location": 928,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "person": []
            }
        },
        "DataTracker.person_history": {
            "name": "person_history",
            "location": 934,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "person": []
            }
        },
        "DataTracker.person_events": {
            "name": "person_events",
            "location": 940,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "person": []
            }
        },
        "DataTracker.people": {
            "name": "people",
            "location": 946,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "name_contains": [
                    "None"
                ]
            }
        },
        "DataTracker.email": {
            "name": "email",
            "location": 974,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "email_uri": []
            }
        },
        "DataTracker.email_for_person": {
            "name": "email_for_person",
            "location": 978,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "person": []
            }
        },
        "DataTracker.email_history_for_address": {
            "name": "email_history_for_address",
            "location": 984,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "email_addr": []
            }
        },
        "DataTracker.email_history_for_person": {
            "name": "email_history_for_person",
            "location": 990,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "person": []
            }
        },
        "DataTracker.emails": {
            "name": "emails",
            "location": 996,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "addr_contains": [
                    "None"
                ]
            }
        },
        "DataTracker.document": {
            "name": "document",
            "location": 1023,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document_uri": []
            }
        },
        "DataTracker.documents": {
            "name": "documents",
            "location": 1027,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "doctype": [
                    "None"
                ],
                "group": [
                    "None"
                ]
            }
        },
        "DataTracker.docaliases_from_name": {
            "name": "docaliases_from_name",
            "location": 1045,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "DataTracker.document_from_draft": {
            "name": "document_from_draft",
            "location": 1060,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "draft": []
            }
        },
        "DataTracker.document_from_rfc": {
            "name": "document_from_rfc",
            "location": 1080,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rfc": []
            }
        },
        "DataTracker.documents_from_bcp": {
            "name": "documents_from_bcp",
            "location": 1100,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "bcp": []
            }
        },
        "DataTracker.documents_from_std": {
            "name": "documents_from_std",
            "location": 1117,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "std": []
            }
        },
        "DataTracker.document_type": {
            "name": "document_type",
            "location": 1137,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "doctype": []
            }
        },
        "DataTracker.document_types": {
            "name": "document_types",
            "location": 1151,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.document_state": {
            "name": "document_state",
            "location": 1159,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "state_uri": []
            }
        },
        "DataTracker.document_states": {
            "name": "document_states",
            "location": 1163,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "state_type": [
                    "None"
                ]
            }
        },
        "DataTracker.document_state_type": {
            "name": "document_state_type",
            "location": 1170,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "state_type_uri": []
            }
        },
        "DataTracker.document_state_types": {
            "name": "document_state_types",
            "location": 1174,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.document_event": {
            "name": "document_event",
            "location": 1195,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "event_uri": []
            }
        },
        "DataTracker.document_events": {
            "name": "document_events",
            "location": 1199,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "doc": [
                    "None"
                ],
                "by": [
                    "None"
                ],
                "event_type": [
                    "None"
                ]
            }
        },
        "DataTracker.document_authors": {
            "name": "document_authors",
            "location": 1234,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "document": []
            }
        },
        "DataTracker.documents_authored_by_person": {
            "name": "documents_authored_by_person",
            "location": 1240,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "person": []
            }
        },
        "DataTracker.documents_authored_by_email": {
            "name": "documents_authored_by_email",
            "location": 1246,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "email": []
            }
        },
        "DataTracker.related_documents": {
            "name": "related_documents",
            "location": 1257,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "None"
                ],
                "target": [
                    "None"
                ],
                "relationship_type": [
                    "None"
                ]
            }
        },
        "DataTracker.relationship_type": {
            "name": "relationship_type",
            "location": 1272,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "relationship_type_uri": []
            }
        },
        "DataTracker.relationship_types": {
            "name": "relationship_types",
            "location": 1286,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.ballot_position_name": {
            "name": "ballot_position_name",
            "location": 1314,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ballot_position_name_uri": []
            }
        },
        "DataTracker.ballot_position_names": {
            "name": "ballot_position_names",
            "location": 1318,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.ballot_type": {
            "name": "ballot_type",
            "location": 1331,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ballot_type_uri": []
            }
        },
        "DataTracker.ballot_types": {
            "name": "ballot_types",
            "location": 1335,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "doc_type": []
            }
        },
        "DataTracker.ballot_document_event": {
            "name": "ballot_document_event",
            "location": 1352,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ballot_event_uri": []
            }
        },
        "DataTracker.ballot_document_events": {
            "name": "ballot_document_events",
            "location": 1356,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "ballot_type": [
                    "None"
                ],
                "event_type": [
                    "None"
                ],
                "by": [
                    "None"
                ],
                "doc": [
                    "None"
                ]
            }
        },
        "DataTracker.submission": {
            "name": "submission",
            "location": 1397,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "submission_uri": []
            }
        },
        "DataTracker.submissions": {
            "name": "submissions",
            "location": 1401,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ]
            }
        },
        "DataTracker.submission_event": {
            "name": "submission_event",
            "location": 1410,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "event_uri": []
            }
        },
        "DataTracker.submission_events": {
            "name": "submission_events",
            "location": 1414,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "by": [
                    "None"
                ],
                "submission": [
                    "None"
                ]
            }
        },
        "DataTracker.stream": {
            "name": "stream",
            "location": 1453,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stream_uri": []
            }
        },
        "DataTracker.streams": {
            "name": "streams",
            "location": 1457,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.group": {
            "name": "group",
            "location": 1482,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "group_uri": []
            }
        },
        "DataTracker.group_from_acronym": {
            "name": "group_from_acronym",
            "location": 1486,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "acronym": []
            }
        },
        "DataTracker.groups": {
            "name": "groups",
            "location": 1498,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "name_contains": [
                    "None"
                ],
                "state": [
                    "None"
                ],
                "parent": [
                    "None"
                ]
            }
        },
        "DataTracker.group_state": {
            "name": "group_state",
            "location": 1515,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "group_state": []
            }
        },
        "DataTracker.group_states": {
            "name": "group_states",
            "location": 1532,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.meeting_session_assignment": {
            "name": "meeting_session_assignment",
            "location": 1564,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "assignment_uri": []
            }
        },
        "DataTracker.meeting_session_assignments": {
            "name": "meeting_session_assignments",
            "location": 1568,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "schedule": []
            }
        },
        "DataTracker.meeting_schedule": {
            "name": "meeting_schedule",
            "location": 1578,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "schedule_uri": []
            }
        },
        "DataTracker.meeting": {
            "name": "meeting",
            "location": 1588,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "meeting_uri": []
            }
        },
        "DataTracker.meetings": {
            "name": "meetings",
            "location": 1595,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "start_date": [
                    "typing.Text"
                ],
                "end_date": [
                    "typing.Text"
                ],
                "meeting_type": [
                    "None"
                ]
            }
        },
        "DataTracker.meeting_type": {
            "name": "meeting_type",
            "location": 1611,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "meeting_type": []
            }
        },
        "DataTracker.meeting_types": {
            "name": "meeting_types",
            "location": 1626,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.mailing_list": {
            "name": "mailing_list",
            "location": 1701,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "mailing_list_uri": []
            }
        },
        "DataTracker.mailing_lists": {
            "name": "mailing_lists",
            "location": 1705,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTracker.mailing_list_subscriptions": {
            "name": "mailing_list_subscriptions",
            "location": 1710,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "email_addr": []
            }
        }
    },
    "ietfdata-master/ietfdata/rfcindex.py": {
        "RfcEntry.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rfc_element": []
            }
        },
        "RfcEntry.__str__": {
            "name": "__str__",
            "location": 204,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RfcEntry.charset": {
            "name": "charset",
            "location": 232,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RfcEntry.content_url": {
            "name": "content_url",
            "location": 273,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "required_format": []
            }
        },
        "RfcEntry.date": {
            "name": "date",
            "location": 289,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "RfcNotIssuedEntry.__init__": {
            "name": "__init__",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rfc_not_issued_element": []
            }
        },
        "RfcNotIssuedEntry.__str__": {
            "name": "__str__",
            "location": 317,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BcpEntry.__init__": {
            "name": "__init__",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bcp_element": []
            }
        },
        "BcpEntry.__str__": {
            "name": "__str__",
            "location": 351,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StdEntry.__init__": {
            "name": "__init__",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "std_element": []
            }
        },
        "StdEntry.__str__": {
            "name": "__str__",
            "location": 389,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FyiEntry.__init__": {
            "name": "__init__",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fyi_element": []
            }
        },
        "FyiEntry.__str__": {
            "name": "__str__",
            "location": 424,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RFCIndex.__init__": {
            "name": "__init__",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RFCIndex.rfc": {
            "name": "rfc",
            "location": 478,
            "return": [
                "RfcEntry"
            ],
            "arguments": {
                "self": [],
                "rfc_id": []
            }
        },
        "RFCIndex.rfc_not_issued": {
            "name": "rfc_not_issued",
            "location": 482,
            "return": [
                "RfcNotIssuedEntry"
            ],
            "arguments": {
                "self": [],
                "rfc_id": []
            }
        },
        "RFCIndex.bcp": {
            "name": "bcp",
            "location": 486,
            "return": [
                "BcpEntry"
            ],
            "arguments": {
                "self": [],
                "bcp_id": []
            }
        },
        "RFCIndex.fyi": {
            "name": "fyi",
            "location": 490,
            "return": [
                "FyiEntry"
            ],
            "arguments": {
                "self": [],
                "fyi_id": []
            }
        },
        "RFCIndex.std": {
            "name": "std",
            "location": 494,
            "return": [
                "StdEntry"
            ],
            "arguments": {
                "self": [],
                "std_id": []
            }
        },
        "RFCIndex.rfcs": {
            "name": "rfcs",
            "location": 498,
            "return": [
                "Generator[(RfcEntry, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "typing.Text"
                ],
                "until": [
                    "typing.Text"
                ],
                "stream": [
                    "None"
                ],
                "area": [
                    "None"
                ],
                "wg": [
                    "None"
                ],
                "status": [
                    "None"
                ]
            }
        }
    },
    "ietfdata-master/ietfdata/__init__.py": {},
    "ietfdata-master/tests/test_datatracker.py": {
        "TestDatatracker.setUpClass": {
            "name": "setUpClass",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "Type[TestDatatracker]"
                ]
            }
        },
        "TestDatatracker.test_email": {
            "name": "test_email",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_email_for_person": {
            "name": "test_email_for_person",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_email_history_for_address": {
            "name": "test_email_history_for_address",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_email_history_for_person": {
            "name": "test_email_history_for_person",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_emails": {
            "name": "test_emails",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_person_from_email": {
            "name": "test_person_from_email",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_person": {
            "name": "test_person",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_person_history": {
            "name": "test_person_history",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_person_aliases": {
            "name": "test_person_aliases",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_person_events": {
            "name": "test_person_events",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_people": {
            "name": "test_people",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_agenda": {
            "name": "test_document_agenda",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_bluesheets": {
            "name": "test_document_bluesheets",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_charter": {
            "name": "test_document_charter",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_conflrev": {
            "name": "test_document_conflrev",
            "location": 390,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_draft": {
            "name": "test_document_draft",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_liaison": {
            "name": "test_document_liaison",
            "location": 466,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_liai_att": {
            "name": "test_document_liai_att",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_minutes": {
            "name": "test_document_minutes",
            "location": 542,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_recording": {
            "name": "test_document_recording",
            "location": 580,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_review": {
            "name": "test_document_review",
            "location": 619,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_shepwrit": {
            "name": "test_document_shepwrit",
            "location": 657,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_slides": {
            "name": "test_document_slides",
            "location": 662,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_statchg": {
            "name": "test_document_statchg",
            "location": 700,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_documents": {
            "name": "test_documents",
            "location": 738,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_from_draft": {
            "name": "test_document_from_draft",
            "location": 765,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_from_rfc": {
            "name": "test_document_from_rfc",
            "location": 773,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_documents_from_bcp": {
            "name": "test_documents_from_bcp",
            "location": 781,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_documents_from_std": {
            "name": "test_documents_from_std",
            "location": 790,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_state": {
            "name": "test_document_state",
            "location": 796,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_states": {
            "name": "test_document_states",
            "location": 812,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_state_type": {
            "name": "test_document_state_type",
            "location": 837,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_state_types": {
            "name": "test_document_state_types",
            "location": 847,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_event": {
            "name": "test_document_event",
            "location": 876,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_events": {
            "name": "test_document_events",
            "location": 891,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_ballot_position_name": {
            "name": "test_ballot_position_name",
            "location": 917,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_ballot_position_names": {
            "name": "test_ballot_position_names",
            "location": 928,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_ballot_type": {
            "name": "test_ballot_type",
            "location": 942,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_ballot_types_doctype": {
            "name": "test_ballot_types_doctype",
            "location": 964,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_ballot_document_event": {
            "name": "test_ballot_document_event",
            "location": 971,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_ballot_document_events": {
            "name": "test_ballot_document_events",
            "location": 988,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_documents_authored_by_person": {
            "name": "test_documents_authored_by_person",
            "location": 1003,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_documents_authored_by_email": {
            "name": "test_documents_authored_by_email",
            "location": 1019,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_submission": {
            "name": "test_submission",
            "location": 1038,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_submission_event": {
            "name": "test_submission_event",
            "location": 1069,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_type": {
            "name": "test_document_type",
            "location": 1083,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_document_types": {
            "name": "test_document_types",
            "location": 1097,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_stream": {
            "name": "test_stream",
            "location": 1118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_streams": {
            "name": "test_streams",
            "location": 1131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_group": {
            "name": "test_group",
            "location": 1144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_group_from_acronym": {
            "name": "test_group_from_acronym",
            "location": 1168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_group_from_acronym_invalid": {
            "name": "test_group_from_acronym_invalid",
            "location": 1176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_groups": {
            "name": "test_groups",
            "location": 1181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_groups_namecontains": {
            "name": "test_groups_namecontains",
            "location": 1186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_groups_state": {
            "name": "test_groups_state",
            "location": 1193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_groups_parent": {
            "name": "test_groups_parent",
            "location": 1204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_group_state": {
            "name": "test_group_state",
            "location": 1211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_group_states": {
            "name": "test_group_states",
            "location": 1225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_schedule": {
            "name": "test_meeting_schedule",
            "location": 1242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_session_assignment": {
            "name": "test_meeting_session_assignment",
            "location": 1257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_session_assignments": {
            "name": "test_meeting_session_assignments",
            "location": 1275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting": {
            "name": "test_meeting",
            "location": 1288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meetings": {
            "name": "test_meetings",
            "location": 1325,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_types": {
            "name": "test_meeting_types",
            "location": 1333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_status_future": {
            "name": "test_meeting_status_future",
            "location": 1341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_status_completed": {
            "name": "test_meeting_status_completed",
            "location": 1351,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_meeting_status_ongoing": {
            "name": "test_meeting_status_ongoing",
            "location": 1361,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_all": {
            "name": "test_related_documents_all",
            "location": 1373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_source_target": {
            "name": "test_related_documents_source_target",
            "location": 1386,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_source_relationship": {
            "name": "test_related_documents_source_relationship",
            "location": 1398,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_target_relationship": {
            "name": "test_related_documents_target_relationship",
            "location": 1410,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_target": {
            "name": "test_related_documents_target",
            "location": 1422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_source": {
            "name": "test_related_documents_source",
            "location": 1433,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_related_documents_relationship": {
            "name": "test_related_documents_relationship",
            "location": 1469,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_relationship_types": {
            "name": "test_relationship_types",
            "location": 1475,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_mailing_list": {
            "name": "test_mailing_list",
            "location": 1496,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_mailing_lists": {
            "name": "test_mailing_lists",
            "location": 1508,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDatatracker.test_mailing_list_subscriptions": {
            "name": "test_mailing_list_subscriptions",
            "location": 1516,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ietfdata-master/tests/test_rfcindex.py": {
        "TestRFCIndex.setUpClass": {
            "name": "setUpClass",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "Type[TestRFCIndex]"
                ]
            }
        },
        "TestRFCIndex.test_rfc": {
            "name": "test_rfc",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_rfc_april_fool": {
            "name": "test_rfc_april_fool",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_rfc_editor": {
            "name": "test_rfc_editor",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_rfc_empty_kw": {
            "name": "test_rfc_empty_kw",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_rfc_not_issued": {
            "name": "test_rfc_not_issued",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_bcp": {
            "name": "test_bcp",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_fyi": {
            "name": "test_fyi",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_std": {
            "name": "test_std",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRFCIndex.test_rfcs": {
            "name": "test_rfcs",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
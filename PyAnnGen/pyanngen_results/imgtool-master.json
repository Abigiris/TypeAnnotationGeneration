{
    "imgtool-master/imgtool.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 16,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {
                "args": [
                    "list"
                ]
            }
        },
        "avgze": {
            "name": "avgze",
            "location": 150,
            "return": [
                "list"
            ],
            "arguments": {
                "image": [
                    "str",
                    "float"
                ]
            }
        },
        "oppose": {
            "name": "oppose",
            "location": 179,
            "return": [
                "float",
                "int",
                "Optional[int]",
                "str",
                "Generator"
            ],
            "arguments": {
                "value": [
                    "bool",
                    "str"
                ],
                "mx": [
                    "bool",
                    "str"
                ]
            }
        },
        "rgb_to_cmyk": {
            "name": "rgb_to_cmyk",
            "location": 316,
            "return": [
                "CMYK"
            ],
            "arguments": {
                "rgb": [
                    "RGB"
                ]
            }
        },
        "rgb_to_grayscale": {
            "name": "rgb_to_grayscale",
            "location": 334,
            "return": [
                "int"
            ],
            "arguments": {
                "rgb": [
                    "RGB"
                ]
            }
        },
        "resize": {
            "name": "resize",
            "location": 342,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "im": [
                    "int",
                    "str",
                    "bool",
                    "pyvips.Image"
                ],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TextWatermark.add_to_image": {
            "name": "add_to_image",
            "location": 212,
            "return": [
                "int",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "im": [
                    "int",
                    "pyvips.Image",
                    "float",
                    "str"
                ]
            }
        },
        "TextWatermark.add": {
            "name": "add",
            "location": 259,
            "return": [
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "im": [
                    "int",
                    "pyvips.Image",
                    "Union[int, float]",
                    "List[Tuple[int, int]]"
                ]
            }
        },
        "rgb_to_cmyk.float2int": {
            "name": "float2int",
            "location": 319,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "imgtool-master/test/watermark_context.py": {
        "avgze": {
            "name": "avgze",
            "location": 12,
            "return": [
                "list"
            ],
            "arguments": {
                "image": [
                    "str",
                    "float"
                ]
            }
        },
        "oppose": {
            "name": "oppose",
            "location": 41,
            "return": [
                "float",
                "int",
                "Optional[int]",
                "str",
                "Generator"
            ],
            "arguments": {
                "value": [
                    "bool",
                    "str"
                ],
                "mx": [
                    "bool",
                    "str"
                ]
            }
        }
    }
}
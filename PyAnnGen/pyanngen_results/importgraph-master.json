{
    "importgraph-master/importgraph.py": {
        "main": {
            "name": "main",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ImportAction.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "the_globals": [
                    "Dict[(str, Any)]"
                ],
                "fromlist": [
                    "Optional[List[str]]"
                ],
                "level": [
                    "int"
                ],
                "imported_module": [
                    "module"
                ]
            }
        },
        "ImportAction.from_name": {
            "name": "from_name",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportAction._build_imported_paths": {
            "name": "_build_imported_paths",
            "location": 43,
            "return": [
                "Iterable[Tuple[(str, ...)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportAction._get_module": {
            "name": "_get_module",
            "location": 55,
            "return": [
                "Optional[module]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "ImportAction.module_file_path": {
            "name": "module_file_path",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "ImportAction._last_module_in_path": {
            "name": "_last_module_in_path",
            "location": 71,
            "return": [
                "Tuple[(str, ...)]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "Tuple[(str, ...)]"
                ]
            }
        },
        "ImportAction.imported_names": {
            "name": "imported_names",
            "location": 78,
            "return": [
                "Iterable[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractImportGraph.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename_regex": [
                    "Optional[str]",
                    "str",
                    "Optional[IO[bytes]]",
                    "List[str]"
                ],
                "exclude_files": [
                    "str",
                    "Union[List, Dict]",
                    "dml_thread.types.simpDict",
                    "dict",
                    "bool"
                ]
            }
        },
        "AbstractImportGraph.imported_modules": {
            "name": "imported_modules",
            "location": 101,
            "return": [
                "Optional[Set[str]]"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph.importing_modules": {
            "name": "importing_modules",
            "location": 104,
            "return": [
                "Optional[Set[str]]"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph._files_match_regex": {
            "name": "_files_match_regex",
            "location": 107,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "from_name": [
                    "str"
                ],
                "to_name": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph._files_are_excluded": {
            "name": "_files_are_excluded",
            "location": 114,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "from_name": [
                    "str"
                ],
                "to_name": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph._should_keep_edge": {
            "name": "_should_keep_edge",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "from_name": [
                    "str"
                ],
                "to_name": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph._add_node": {
            "name": "_add_node",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph._add_edge": {
            "name": "_add_edge",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "edge": [
                    "Tuple[(str, str)]"
                ]
            }
        },
        "AbstractImportGraph._build_hierarchy": {
            "name": "_build_hierarchy",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractImportGraph.add_import": {
            "name": "add_import",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_action": [
                    "ImportAction"
                ]
            }
        },
        "AbstractImportGraph.save": {
            "name": "save",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "AbstractImportGraph.to_string": {
            "name": "to_string",
            "location": 178,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CouplingGraph.__init__": {
            "name": "__init__",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_graph": [
                    "AbstractImportGraph"
                ]
            }
        },
        "DotImportGraph._build_digraph": {
            "name": "_build_digraph",
            "location": 188,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "DotImportGraph.to_string": {
            "name": "to_string",
            "location": 198,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DotImportGraph.save": {
            "name": "save",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "ModuleClusterer.__init__": {
            "name": "__init__",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_graph": [
                    "AbstractImportGraph"
                ]
            }
        },
        "ImportGraphCommand.__init__": {
            "name": "__init__",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "ImportGraphCommand._import_wrapper": {
            "name": "_import_wrapper",
            "location": 255,
            "return": [
                "Callable[([str, Dict[(str, Any)], Dict[(str, Any)], List[str], int], Any)]"
            ],
            "arguments": {
                "self": [],
                "old_import": [
                    "Callable[([str, Dict[(str, Any)], Dict[(str, Any)], List[str], int], Any)]"
                ]
            }
        },
        "ImportGraphCommand._collect_module_names": {
            "name": "_collect_module_names",
            "location": 269,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "str"
                ],
                "parents": [
                    "str",
                    "Sequence[Tuple[str, Any]]"
                ]
            }
        },
        "ImportGraphCommand._module_names": {
            "name": "_module_names",
            "location": 286,
            "return": [
                "str",
                "opentrons.protocols.types.APIVersion",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportGraphCommand.run": {
            "name": "run",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportGraphCommand._import_wrapper.new_import": {
            "name": "new_import",
            "location": 256,
            "return": [
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "name": [
                    "dict",
                    "str",
                    "Type"
                ],
                "the_globals": [
                    "dict",
                    "str",
                    "Type"
                ],
                "the_locals": [
                    "str",
                    "Dict[str, Any]"
                ],
                "fromlist": [
                    "dict",
                    "str",
                    "Type"
                ],
                "level": [
                    "dict",
                    "str",
                    "Type"
                ]
            }
        }
    },
    "importgraph-master/setup.py": {},
    "importgraph-master/tests/conftest.py": {
        "import_action": {
            "name": "import_action",
            "location": 8,
            "return": [
                "ImportAction",
                "List[int]",
                "int",
                "str"
            ],
            "arguments": {}
        }
    },
    "importgraph-master/tests/test_importgraph.py": {
        "TestImportAction.test_from_name": {
            "name": "test_from_name",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "the_globals": [
                    "Optional[Dict[str, Any]]",
                    "dict[str, typing.Any]",
                    "str",
                    "Union[str, float]",
                    "int",
                    "None",
                    "float"
                ],
                "expected_result": [
                    "str",
                    "Callable",
                    "typing.Callable[, ]",
                    "Sequence[str]",
                    "typing.Sequence[str]"
                ],
                "import_action": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "TestImportAction.test_build_imported_paths": {
            "name": "test_build_imported_paths",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool",
                    "int"
                ],
                "fromlist": [
                    "list[str]",
                    "Optional[List[str]]",
                    "float",
                    "None",
                    "Optional[str]",
                    "str",
                    "bool",
                    "Container[str]",
                    "typing.Container",
                    "Iterable[str]",
                    "int"
                ],
                "level": [
                    "int",
                    "float",
                    "Union[float, int]",
                    "None",
                    "Optional[int]"
                ],
                "expected_result": [
                    "str",
                    "Optional[str]",
                    "None",
                    "tuple",
                    "tuple[]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "import_action": [
                    "importgraph.ImportAction",
                    "str",
                    "bool"
                ]
            }
        },
        "TestImportAction.test_last_module_in_path_returns_full_path_module_not_none": {
            "name": "test_last_module_in_path_returns_full_path_module_not_none",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_action": [
                    "importgraph.ImportAction"
                ]
            }
        }
    },
    "importgraph-master/tests/__init__.py": {}
}
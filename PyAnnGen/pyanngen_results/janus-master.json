{
    "janus-master/setup.py": {},
    "janus-master/janus/__init__.py": {
        "BaseQueue.maxsize": {
            "name": "maxsize",
            "location": 31,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.closed": {
            "name": "closed",
            "location": 35,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.task_done": {
            "name": "task_done",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.qsize": {
            "name": "qsize",
            "location": 41,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.unfinished_tasks": {
            "name": "unfinished_tasks",
            "location": 45,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.empty": {
            "name": "empty",
            "location": 48,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.full": {
            "name": "full",
            "location": 51,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseQueue.put_nowait": {
            "name": "put_nowait",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "int"
                ]
            }
        },
        "BaseQueue.get_nowait": {
            "name": "get_nowait",
            "location": 57,
            "return": [
                "T",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.maxsize": {
            "name": "maxsize",
            "location": 63,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.closed": {
            "name": "closed",
            "location": 67,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.task_done": {
            "name": "task_done",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.qsize": {
            "name": "qsize",
            "location": 73,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.unfinished_tasks": {
            "name": "unfinished_tasks",
            "location": 77,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.empty": {
            "name": "empty",
            "location": 80,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.full": {
            "name": "full",
            "location": 83,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.put_nowait": {
            "name": "put_nowait",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "int"
                ]
            }
        },
        "SyncQueue.get_nowait": {
            "name": "get_nowait",
            "location": 89,
            "return": [
                "T",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SyncQueue.put": {
            "name": "put",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "bool",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]",
                    "Callable[,None]",
                    "Union[Type[Exception],Tuple[Any,...]]",
                    "str",
                    "Type",
                    "int",
                    "Tuple[Union[Any,...]]",
                    "Coroutine",
                    "collections.abc.Coroutine"
                ],
                "block": [
                    "bool",
                    "List[Dict[str,Any]]",
                    "Union[Type[Exception],Tuple[Any,...]]",
                    "int",
                    "Callable[,None]",
                    "str",
                    "Coroutine"
                ],
                "timeout": [
                    "bool",
                    "None",
                    "List[Dict[str,Any]]",
                    "Callable[,None]",
                    "Union[Type[Exception],Tuple[Any,...]]",
                    "str",
                    "List[dict[str,Any]]",
                    "int",
                    "Type",
                    "Tuple[Union[Any,...]]",
                    "Coroutine",
                    "collections.abc.Coroutine"
                ]
            }
        },
        "SyncQueue.get": {
            "name": "get",
            "location": 95,
            "return": [
                "T",
                "None"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "bool",
                    "int",
                    "Mapping[str,float]",
                    "List[str]",
                    "List",
                    "Exception"
                ],
                "timeout": [
                    "bool",
                    "None",
                    "int",
                    "List[str]",
                    "List",
                    "Mapping[str,float]",
                    "Exception",
                    "Mapping"
                ]
            }
        },
        "SyncQueue.join": {
            "name": "join",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "maxsize": [
                    "int",
                    "Dict[str,Any]",
                    "Union[str,int]",
                    "bool"
                ]
            }
        },
        "Queue.close": {
            "name": "close",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.closed": {
            "name": "closed",
            "location": 183,
            "return": [
                "bool",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.maxsize": {
            "name": "maxsize",
            "location": 187,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.sync_q": {
            "name": "sync_q",
            "location": 191,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.async_q": {
            "name": "async_q",
            "location": 195,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._init": {
            "name": "_init",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "maxsize": [
                    "int",
                    "Dict[str,Any]",
                    "str",
                    "Union[str,int]",
                    "bool"
                ]
            }
        },
        "Queue._qsize": {
            "name": "_qsize",
            "location": 205,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._put": {
            "name": "_put",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "int",
                    "str",
                    "Callable",
                    "T"
                ]
            }
        },
        "Queue._get": {
            "name": "_get",
            "location": 213,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._put_internal": {
            "name": "_put_internal",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "Queue._notify_sync_not_empty": {
            "name": "_notify_sync_not_empty",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._notify_sync_not_full": {
            "name": "_notify_sync_not_full",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._notify_async_not_empty": {
            "name": "_notify_async_not_empty",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._notify_async_not_full": {
            "name": "_notify_async_not_full",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue._check_closing": {
            "name": "_check_closing",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.__init__": {
            "name": "__init__",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "str",
                    "bool",
                    "List[str]",
                    "Tuple[Type]",
                    "Tuple[type]",
                    "int"
                ]
            }
        },
        "_SyncQueueProxy.maxsize": {
            "name": "maxsize",
            "location": 282,
            "return": [
                "Optional[int]",
                "Optional[List[Callable]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.closed": {
            "name": "closed",
            "location": 286,
            "return": [
                "Optional[int]",
                "Optional[List[Callable]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.task_done": {
            "name": "task_done",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.join": {
            "name": "join",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.qsize": {
            "name": "qsize",
            "location": 328,
            "return": [
                "Optional[int]",
                "Optional[List[Callable]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.unfinished_tasks": {
            "name": "unfinished_tasks",
            "location": 333,
            "return": [
                "bool",
                "Optional[BaseException]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.empty": {
            "name": "empty",
            "location": 337,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.full": {
            "name": "full",
            "location": 350,
            "return": [
                "bool",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_SyncQueueProxy.put": {
            "name": "put",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,int]",
                    "Optional[Dict[str,Any]]",
                    "None"
                ],
                "block": [
                    "bool",
                    "List[Dict[str,Any]]",
                    "Union[Type[Exception],Tuple[Any,...]]",
                    "int",
                    "Callable[,None]",
                    "str",
                    "Coroutine"
                ],
                "timeout": [
                    "Optional[str]",
                    "None",
                    "str",
                    "Optional[int]",
                    "Callable",
                    "int"
                ]
            }
        },
        "_SyncQueueProxy.get": {
            "name": "get",
            "location": 394,
            "return": [
                "str",
                "Iterable[str]",
                "List[str]",
                "Dict[str,Union[Any,Any]]",
                "Dict[str,dict[str,Any]]",
                "List"
            ],
            "arguments": {
                "self": [],
                "block": [
                    "bool",
                    "int",
                    "Mapping[str,float]",
                    "List[str]",
                    "List",
                    "Exception"
                ],
                "timeout": [
                    "int",
                    "None",
                    "Optional[Callable[...,Any]]",
                    "Callable[...,Any]",
                    "bool",
                    "Optional[Callable[[Any],bool]]"
                ]
            }
        },
        "_SyncQueueProxy.put_nowait": {
            "name": "put_nowait",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "Type",
                    "Dict",
                    "T"
                ]
            }
        },
        "_SyncQueueProxy.get_nowait": {
            "name": "get_nowait",
            "location": 436,
            "return": [
                "Optional[str]",
                "bool",
                "Optional[List[str]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.__init__": {
            "name": "__init__",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "str",
                    "bool",
                    "List[str]",
                    "Tuple[Type]",
                    "Tuple[type]",
                    "int"
                ]
            }
        },
        "_AsyncQueueProxy.closed": {
            "name": "closed",
            "location": 455,
            "return": [
                "Optional[int]",
                "Optional[List[Callable]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.qsize": {
            "name": "qsize",
            "location": 458,
            "return": [
                "Optional[int]",
                "Optional[List[Callable]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.unfinished_tasks": {
            "name": "unfinished_tasks",
            "location": 463,
            "return": [
                "bool",
                "Optional[BaseException]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.maxsize": {
            "name": "maxsize",
            "location": 468,
            "return": [
                "Optional[int]",
                "Optional[List[Callable]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.empty": {
            "name": "empty",
            "location": 472,
            "return": [
                "bool",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.full": {
            "name": "full",
            "location": 476,
            "return": [
                "bool",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.put_nowait": {
            "name": "put_nowait",
            "location": 518,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "List[dict[str,Any]]",
                    "str",
                    "List[Dict[str,Any]]",
                    "Iterable[str]"
                ]
            }
        },
        "_AsyncQueueProxy.get_nowait": {
            "name": "get_nowait",
            "location": 564,
            "return": [
                "str",
                "Iterable[str]",
                "List[str]",
                "Dict[str,Union[Any,Any]]",
                "Dict[str,dict[str,Any]]",
                "List"
            ],
            "arguments": {
                "self": []
            }
        },
        "_AsyncQueueProxy.task_done": {
            "name": "task_done",
            "location": 579,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PriorityQueue._init": {
            "name": "_init",
            "location": 626,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "maxsize": [
                    "int",
                    "Dict[str,Any]",
                    "str",
                    "Union[str,int]",
                    "bool"
                ]
            }
        },
        "PriorityQueue._qsize": {
            "name": "_qsize",
            "location": 629,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PriorityQueue._put": {
            "name": "_put",
            "location": 632,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "List",
                    "IO"
                ]
            }
        },
        "PriorityQueue._get": {
            "name": "_get",
            "location": 635,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifoQueue._qsize": {
            "name": "_qsize",
            "location": 642,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "LifoQueue._put": {
            "name": "_put",
            "location": 645,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "int",
                    "str",
                    "Callable",
                    "T"
                ]
            }
        },
        "LifoQueue._get": {
            "name": "_get",
            "location": 648,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.__init__.checked_call_soon_threadsafe": {
            "name": "checked_call_soon_threadsafe",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "callback": [
                    "Optional[int]"
                ]
            }
        },
        "Queue.__init__.checked_call_soon": {
            "name": "checked_call_soon",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "callback": [
                    "List[str]",
                    "tuple",
                    "int",
                    "asyncio.BaseTransport",
                    "Callable"
                ]
            }
        },
        "Queue._notify_sync_not_empty.f": {
            "name": "f",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Queue._notify_sync_not_full.f": {
            "name": "f",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Queue._notify_async_not_empty.task_maker": {
            "name": "task_maker",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Queue._notify_async_not_full.task_maker": {
            "name": "task_maker",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "janus-master/tests/test_async.py": {},
    "janus-master/tests/test_mixed.py": {
        "TestMixedMode.test_ctor_noloop": {
            "name": "test_ctor_noloop",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMixedMode.test_sync_put_async_get.threaded": {
            "name": "threaded",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestMixedMode.test_async_put_sync_get.threaded": {
            "name": "threaded",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestMixedMode.test_sync_join_async_done.threaded": {
            "name": "threaded",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestMixedMode.test_async_join_async_done.threaded": {
            "name": "threaded",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestMixedMode.test_sync_join_after_closing.sync_join": {
            "name": "sync_join",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestMixedMode.test_close_after_sync_join.sync_join": {
            "name": "sync_join",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "janus-master/tests/test_sync.py": {
        "qfull": {
            "name": "qfull",
            "location": 16,
            "return": [
                "bool",
                "str",
                "Type",
                "Optional[Iterable[Any]]",
                "int"
            ],
            "arguments": {
                "q": []
            }
        },
        "_TriggerThread.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fn": [
                    "int",
                    "float",
                    "bool"
                ],
                "args": []
            }
        },
        "_TriggerThread.run": {
            "name": "run",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BlockingTestMixin.do_blocking_test": {
            "name": "do_blocking_test",
            "location": 55,
            "return": [
                "List[str]",
                "Tuple[int,Dict[str,Any]]",
                "Dict[str,Any]",
                "bool",
                "Dict[str,Union[dict,Any,Any,Any,Any,Any,Any]]",
                "Dict[str,dict[str,Any]]",
                "str",
                "Dict[int,int]"
            ],
            "arguments": {
                "self": [],
                "block_func": [
                    "bool",
                    "float",
                    "int"
                ],
                "block_args": [
                    "bool",
                    "Sequence[Any]",
                    "Optional[str]",
                    "Callable",
                    "str",
                    "Dict",
                    "None"
                ],
                "trigger_func": [
                    "bool",
                    "Optional[float]",
                    "float",
                    "None"
                ],
                "trigger_args": [
                    "bool",
                    "int"
                ]
            }
        },
        "BlockingTestMixin.do_exceptional_blocking_test": {
            "name": "do_exceptional_blocking_test",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "block_func": [
                    "List",
                    "float",
                    "Optional[str]",
                    "str",
                    "List[str]",
                    "None",
                    "Dict[str,Dict]",
                    "Dict[str,dict]"
                ],
                "block_args": [
                    "List",
                    "float",
                    "Optional[str]",
                    "str",
                    "List[str]",
                    "None",
                    "Dict[str,Dict]",
                    "Dict[str,dict]"
                ],
                "trigger_func": [
                    "bool",
                    "Dict[str,Any]",
                    "Callable",
                    "Exception",
                    "Optional[str]",
                    "str",
                    "None",
                    "Optional[float]",
                    "float"
                ],
                "trigger_args": [
                    "bool",
                    "Dict",
                    "None",
                    "Optional[int]",
                    "int"
                ],
                "expected_exception_class": [
                    "str",
                    "int",
                    "Dict[str,float]",
                    "List[str]"
                ]
            }
        },
        "BaseQueueTestMixin.simple_queue_test": {
            "name": "simple_queue_test",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_q": [
                    "bool",
                    "str"
                ]
            }
        },
        "BaseQueueTestMixin.worker": {
            "name": "worker",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "dict",
                    "Mapping[str, Any]",
                    "str"
                ]
            }
        },
        "BaseQueueTestMixin.queue_join_test": {
            "name": "queue_join_test",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "int",
                    "bool",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "FailingQueue.__init__": {
            "name": "__init__",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FailingQueue._put": {
            "name": "_put",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "Dict",
                    "Exception",
                    "float",
                    "Type"
                ]
            }
        },
        "FailingQueue._get": {
            "name": "_get",
            "location": 310,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFailingQueue.failing_queue_test": {
            "name": "failing_queue_test",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_q": []
            }
        }
    }
}
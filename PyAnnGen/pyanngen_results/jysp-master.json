{
    "jysp-master/src/descriptor.py": {
        "IncompleteTypeDescriptor.validate": {
            "name": "validate",
            "location": 26,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "component": [
                    "str",
                    "Tuple[Union[str,...]]",
                    "Optional[Tuple[str,...]]",
                    "None",
                    "Optional[Directory]",
                    "Optional[str]"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "Sequence[Any]"
                ]
            }
        },
        "IncompleteTypeDescriptor.__str__": {
            "name": "__str__",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BoolDescriptor.validate": {
            "name": "validate",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "component": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "Sequence[Any]"
                ]
            }
        },
        "BoolDescriptor.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringDescriptor.validate": {
            "name": "validate",
            "location": 72,
            "return": [
                "bool"
            ],
            "arguments": {
                "component": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[IO[bytes]]",
                    "IO"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "Sequence[Any]"
                ]
            }
        },
        "StringDescriptor.__str__": {
            "name": "__str__",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntDescriptor.validate": {
            "name": "validate",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "component": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "Sequence[Any]"
                ]
            }
        },
        "IntDescriptor.__str__": {
            "name": "__str__",
            "location": 109,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FloatDescriptor.validate": {
            "name": "validate",
            "location": 118,
            "return": [
                "bool"
            ],
            "arguments": {
                "component": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "Sequence[Any]"
                ]
            }
        },
        "FloatDescriptor.__str__": {
            "name": "__str__",
            "location": 132,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MapItem.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str,Any]",
                    "Dict[str,str]"
                ],
                "item_type": [
                    "str",
                    "float"
                ],
                "required": [
                    "Optional[List[str]]",
                    "List[str]",
                    "int",
                    "None",
                    "bool"
                ]
            }
        },
        "MapItem.__str__": {
            "name": "__str__",
            "location": 148,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MapDescriptor.__init__": {
            "name": "__init__",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "items": [
                    "Dict",
                    "List",
                    "Dict[int,dict[str,Any]]",
                    "Dict[str,Any]",
                    "Dict[int,Dict[str,Any]]",
                    "Deque",
                    "Iterable[T]"
                ],
                "descriptors": [
                    "int",
                    "str",
                    "Dict[str,Any]",
                    "List[str]",
                    "float",
                    "bool",
                    "Union[int,float]",
                    "List[dict]",
                    "List[Dict]"
                ]
            }
        },
        "MapDescriptor.validate": {
            "name": "validate",
            "location": 169,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "component": [
                    "str",
                    "Dict[str,str]",
                    "List[str]",
                    "Optional[str]"
                ],
                "path": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "MapDescriptor.__str__": {
            "name": "__str__",
            "location": 203,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListDescriptor.__init__": {
            "name": "__init__",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item_types": [
                    "List[str]",
                    "str",
                    "bool",
                    "Optional[str]"
                ],
                "min_items": [
                    "bool",
                    "str",
                    "int"
                ],
                "max_items": [
                    "int",
                    "Optional[int]",
                    "None"
                ],
                "descriptors": [
                    "bool",
                    "str",
                    "int"
                ]
            }
        },
        "ListDescriptor.validate": {
            "name": "validate",
            "location": 232,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "component": [
                    "str",
                    "int",
                    "Optional[int]"
                ],
                "path": [
                    "List[str]",
                    "List",
                    "str",
                    "int"
                ]
            }
        },
        "ListDescriptor.__str__": {
            "name": "__str__",
            "location": 268,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jysp-master/src/error.py": {
        "SchemaError.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "int",
                    "bool"
                ],
                "msg": [
                    "str",
                    "bytes",
                    "Optional[Directory]",
                    "None"
                ]
            }
        },
        "SchemaError.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValidationError.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "int",
                    "bool"
                ],
                "msg": [
                    "str",
                    "bytes",
                    "Optional[Directory]",
                    "None"
                ]
            }
        },
        "ValidationError.__str__": {
            "name": "__str__",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jysp-master/src/jysp.py": {
        "validate": {
            "name": "validate",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "schema_name": [
                    "str"
                ],
                "data_name": [
                    "str"
                ]
            }
        }
    },
    "jysp-master/src/schema.py": {
        "Schema.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema_def": [
                    "int",
                    "Dict[str,Any]",
                    "bool"
                ]
            }
        },
        "Schema.register_descriptor": {
            "name": "register_descriptor",
            "location": 46,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "component_name": [
                    "str",
                    "Dict[str,str]"
                ],
                "component_def": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "int",
                    "Dict[str,Any]",
                    "Optional[int]",
                    "Optional[Dict[str,Any]]"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "int",
                    "Union[str,bytes]"
                ]
            }
        },
        "Schema.create_map_descriptor": {
            "name": "create_map_descriptor",
            "location": 104,
            "return": [
                "MapDescriptor",
                "str",
                "Dict",
                "Iterable[str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "component_name": [
                    "str"
                ],
                "component_def": [
                    "str",
                    "bool",
                    "Optional[int]",
                    "Optional[str]"
                ],
                "path": [
                    "List[str]",
                    "List",
                    "str",
                    "Union[list,str]"
                ]
            }
        },
        "Schema.create_list_descriptor": {
            "name": "create_list_descriptor",
            "location": 146,
            "return": [
                "ListDescriptor",
                "List",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "component_name": [
                    "str",
                    "List[str]",
                    "int"
                ],
                "component_def": [
                    "str",
                    "int"
                ],
                "path": [
                    "List[str]",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "Schema.get_definition": {
            "name": "get_definition",
            "location": 194,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "component_type": [
                    "str"
                ]
            }
        },
        "Schema.validate": {
            "name": "validate",
            "location": 208,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "doc": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "jysp-master/src/__init__.py": {},
    "jysp-master/test/test_schema_processing.py": {
        "TestSchemaProcessing.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_empty_schema": {
            "name": "test_empty_schema",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_definitions_part_is_not_a_map": {
            "name": "test_definitions_part_is_not_a_map",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_has_no_definition": {
            "name": "test_component_has_no_definition",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_definition_is_not_a_map": {
            "name": "test_component_definition_is_not_a_map",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_has_no_type": {
            "name": "test_component_has_no_type",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_type_is_not_a_string": {
            "name": "test_component_type_is_not_a_string",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_type_unknown": {
            "name": "test_component_type_unknown",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_type_bool": {
            "name": "test_component_type_bool",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_type_string": {
            "name": "test_component_type_string",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_type_int": {
            "name": "test_component_type_int",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_component_type_float": {
            "name": "test_component_type_float",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_has_no_items_component": {
            "name": "test_map_has_no_items_component",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_has_none_items_component": {
            "name": "test_map_has_none_items_component",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_items_component_is_not_a_list": {
            "name": "test_map_items_component_is_not_a_list",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_has_empty_items_component": {
            "name": "test_map_has_empty_items_component",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_is_none": {
            "name": "test_map_item_is_none",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_is_not_a_map": {
            "name": "test_map_item_is_not_a_map",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_is_empty": {
            "name": "test_map_item_is_empty",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_has_no_definition": {
            "name": "test_map_item_has_no_definition",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_has_no_type": {
            "name": "test_map_item_has_no_type",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_has_unknown_type": {
            "name": "test_map_item_has_unknown_type",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_required_is_not_a_bool": {
            "name": "test_map_item_required_is_not_a_bool",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_simple_map_type": {
            "name": "test_simple_map_type",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_alias_map_type": {
            "name": "test_alias_map_type",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_has_map_type": {
            "name": "test_map_item_has_map_type",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_contains_unknown_type": {
            "name": "test_map_contains_unknown_type",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_deep_map": {
            "name": "test_deep_map",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_item_has_predefined_type": {
            "name": "test_map_item_has_predefined_type",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_map_is_recursive": {
            "name": "test_map_is_recursive",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_mutually_recursive_maps": {
            "name": "test_mutually_recursive_maps",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_has_no_item_types_component": {
            "name": "test_list_has_no_item_types_component",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_has_none_item_types_component": {
            "name": "test_list_has_none_item_types_component",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_item_types_component_is_not_a_list": {
            "name": "test_list_item_types_component_is_not_a_list",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_item_types_component_is_empty_list": {
            "name": "test_list_item_types_component_is_empty_list",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_simple_list": {
            "name": "test_simple_list",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_multitype_list": {
            "name": "test_multitype_list",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_min_not_int": {
            "name": "test_list_min_not_int",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_min_negative": {
            "name": "test_list_min_negative",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_min": {
            "name": "test_list_min",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_max_not_int": {
            "name": "test_list_max_not_int",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_max_negative": {
            "name": "test_list_max_negative",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_max": {
            "name": "test_list_max",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_min_greater_than_max": {
            "name": "test_list_min_greater_than_max",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_min_max": {
            "name": "test_list_min_max",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_contains_unknown_type": {
            "name": "test_list_contains_unknown_type",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_list_contains_predefined_type": {
            "name": "test_list_contains_predefined_type",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_complex": {
            "name": "test_complex",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemaProcessing.test_complex2": {
            "name": "test_complex2",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jysp-master/test/test_validation.py": {
        "TestValidation.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_bool": {
            "name": "test_bool",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_string": {
            "name": "test_string",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_int": {
            "name": "test_int",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_float": {
            "name": "test_float",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_not_bool": {
            "name": "test_not_bool",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_not_string": {
            "name": "test_not_string",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_not_int": {
            "name": "test_not_int",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_not_float": {
            "name": "test_not_float",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_simple_map": {
            "name": "test_simple_map",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_map_is_not_map": {
            "name": "test_map_is_not_map",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_map_item_wrong_type": {
            "name": "test_map_item_wrong_type",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_unexpected_map_item": {
            "name": "test_unexpected_map_item",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_missing_map_item": {
            "name": "test_missing_map_item",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_optional_component_is_missing": {
            "name": "test_optional_component_is_missing",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_optional_map_item_is_missing": {
            "name": "test_optional_map_item_is_missing",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_complex_map": {
            "name": "test_complex_map",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_recursive_map": {
            "name": "test_recursive_map",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_simple_list": {
            "name": "test_simple_list",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_list_unexpected_type": {
            "name": "test_list_unexpected_type",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_list_too_few": {
            "name": "test_list_too_few",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValidation.test_list_too_many": {
            "name": "test_list_too_many",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
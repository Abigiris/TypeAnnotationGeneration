{
    "kelly-criterion-calc-master/unbelievaboat_cockfight.py": {
        "print_separator": {
            "name": "print_separator",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "int_input": {
            "name": "int_input",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "List[str]",
                    "bytes"
                ]
            }
        },
        "input_option": {
            "name": "input_option",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "List[str]",
                    "bool"
                ],
                "options": [
                    "str",
                    "Dict[str,Any]",
                    "bool",
                    "Tuple[Union[int,int]]",
                    "Tuple[int,int]"
                ]
            }
        },
        "round_to_inc": {
            "name": "round_to_inc",
            "location": 32,
            "return": [
                "int",
                "bytes",
                "IO",
                "List[str]",
                "str"
            ],
            "arguments": {
                "bankroll": [
                    "int",
                    "bytes",
                    "IO",
                    "List[str]",
                    "str"
                ],
                "increment": [
                    "int",
                    "bytes",
                    "IO",
                    "List[str]",
                    "str"
                ]
            }
        },
        "calc_bet_size": {
            "name": "calc_bet_size",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "bankroll": [
                    "int",
                    "str",
                    "bool"
                ],
                "win_chance": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "calc_all_outcomes": {
            "name": "calc_all_outcomes",
            "location": 40,
            "return": [
                "int",
                "List[int]",
                "str",
                "List",
                "Set[str]",
                "List[float]",
                "List[Union[int,float]]"
            ],
            "arguments": {
                "outcomes": [
                    "List[int]",
                    "List",
                    "List[float]",
                    "int",
                    "str"
                ],
                "bankroll": [
                    "int",
                    "List",
                    "Sequence[int]"
                ],
                "win_chance": [
                    "int",
                    "float",
                    "Iterable[Any]",
                    "Optional[float]",
                    "bool"
                ],
                "turn": [
                    "int",
                    "float",
                    "str",
                    "bool",
                    "Union[int,float]",
                    "List[int]"
                ]
            }
        },
        "calc_stats": {
            "name": "calc_stats",
            "location": 51,
            "return": [
                "Tuple[(list, list)]"
            ],
            "arguments": {
                "bankroll": [
                    "List[Tuple[Any,Any,Any]]",
                    "float",
                    "List[tuple[Union[Any,Any,Any]]]",
                    "int",
                    "List[int]"
                ],
                "win_chance": [
                    "int",
                    "str"
                ],
                "turns": [
                    "int",
                    "str"
                ]
            }
        },
        "calc_value_pct": {
            "name": "calc_value_pct",
            "location": 62,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "bankroll": [
                    "int"
                ],
                "outcome": [
                    "int",
                    "bool"
                ]
            }
        },
        "calc_bankroll": {
            "name": "calc_bankroll",
            "location": 68,
            "return": [
                "int",
                "float",
                "Callable",
                "str"
            ],
            "arguments": {
                "stats": [
                    "int",
                    "Callable",
                    "str"
                ],
                "increment": [
                    "int",
                    "float",
                    "bool"
                ],
                "turns": [
                    "int",
                    "float",
                    "str",
                    "bool"
                ]
            }
        },
        "calc_profit_chance": {
            "name": "calc_profit_chance",
            "location": 80,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "win_chance": [
                    "int",
                    "float",
                    "str",
                    "List[str]",
                    "Tuple[int,int,int]"
                ]
            }
        },
        "print_profit_stats": {
            "name": "print_profit_stats",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "bankroll": [
                    "int",
                    "float"
                ],
                "win_outcomes": [
                    "List[int]",
                    "int",
                    "Optional[int]"
                ]
            }
        },
        "print_loss_stats": {
            "name": "print_loss_stats",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "bankroll": [
                    "int",
                    "float"
                ],
                "loss_outcomes": [
                    "List[int]",
                    "float"
                ]
            }
        },
        "print_profit_chance": {
            "name": "print_profit_chance",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "win_chance": [
                    "int",
                    "str",
                    "float",
                    "bytes",
                    "[str]",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
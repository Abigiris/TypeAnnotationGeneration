{
    "knitj-master/knitj/cell.py": {
        "Hash.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "int",
                    "T"
                ]
            }
        },
        "Hash.__eq__": {
            "name": "__eq__",
            "location": 28,
            "return": [
                "bool",
                "int",
                "Tuple",
                "float",
                "List[int]",
                "str"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Hash.__hash__": {
            "name": "__hash__",
            "location": 33,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.__repr__": {
            "name": "__repr__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.value": {
            "name": "value",
            "location": 43,
            "return": [
                "str",
                "int",
                "Type[T]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hash.from_string": {
            "name": "from_string",
            "location": 47,
            "return": [
                "Hash"
            ],
            "arguments": {
                "cls": [
                    "Type[_THash]"
                ],
                "s": [
                    "str"
                ]
            }
        },
        "BaseCell.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "BaseCell.hashid": {
            "name": "hashid",
            "location": 57,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseCell.html": {
            "name": "html",
            "location": 61,
            "return": [
                "int",
                "Set",
                "Callable",
                "str",
                "Generator[Union[dict,None,None]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseCell.to_html": {
            "name": "to_html",
            "location": 67,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextCell.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "Dict",
                    "Union[None,dict]",
                    "Dict[str,Union[Any,Any]]",
                    "IO[bytes]"
                ]
            }
        },
        "TextCell.__repr__": {
            "name": "__repr__",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextCell.to_html": {
            "name": "to_html",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextCell.__eq__": {
            "name": "__eq__",
            "location": 82,
            "return": [
                "bool",
                "Type"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Dict[str,Type]",
                    "bool",
                    "Dict[str,Type[Any]]",
                    "None",
                    "Type",
                    "AbstractSet",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]",
                    "Optional[asyncio.AbstractEventLoop]",
                    "AbstractSet[Type[object]]"
                ]
            }
        },
        "CodeCell.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "Optional[Union[Dict,str,int,bytes]]",
                    "bytes",
                    "bool",
                    "Dict",
                    "Optional[str]"
                ]
            }
        },
        "CodeCell.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.__eq__": {
            "name": "__eq__",
            "location": 114,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int",
                    "str",
                    "Optional[float]",
                    "float",
                    "None"
                ]
            }
        },
        "CodeCell.code": {
            "name": "code",
            "location": 120,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.update_flags": {
            "name": "update_flags",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "CodeCell.append_stream": {
            "name": "append_stream",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str",
                    "Union[str,bytes]"
                ]
            }
        },
        "CodeCell.set_output": {
            "name": "set_output",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "output": [
                    "str",
                    "Type[T]",
                    "Type"
                ]
            }
        },
        "CodeCell.set_error": {
            "name": "set_error",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "str",
                    "Dict[str,Optional[str]]",
                    "Dict[str,Union[str,None]]",
                    "bytes",
                    "Optional[str]",
                    "None",
                    "Callable[[str],bool]",
                    "Callable[str,bool]"
                ]
            }
        },
        "CodeCell.reset": {
            "name": "reset",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.set_done": {
            "name": "set_done",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.done": {
            "name": "done",
            "location": 160,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "CodeCell.to_html": {
            "name": "to_html",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "JinjaCell.__init__": {
            "name": "__init__",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "template": [
                    "str",
                    "bool",
                    "Type",
                    "Type[GenericList]",
                    "int"
                ]
            }
        },
        "JinjaCell.append_stream": {
            "name": "append_stream",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "knitj-master/knitj/cli.py": {
        "parse_cli": {
            "name": "parse_cli",
            "location": 28,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "maybe_input": {
            "name": "maybe_input",
            "location": 93,
            "return": [
                "typing.Iterator[typing.IO[builtins.str]]"
            ],
            "arguments": {
                "path": [
                    "Optional[pathlib.Path]",
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "maybe_output": {
            "name": "maybe_output",
            "location": 102,
            "return": [
                "typing.Iterator[typing.IO[builtins.str]]"
            ],
            "arguments": {
                "path": [
                    "Optional[pathlib.Path]",
                    "pathlib.Path",
                    "str"
                ]
            }
        }
    },
    "knitj-master/knitj/convert.py": {
        "render_index": {
            "name": "render_index",
            "location": 24,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "cells": [
                    "str"
                ],
                "client": [
                    "str",
                    "bool"
                ],
                "template": [
                    "str",
                    "pathlib.Path",
                    "Optional[str]",
                    "path.Path"
                ]
            }
        }
    },
    "knitj-master/knitj/document.py": {
        "Document.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str",
                    "Parser",
                    "Type",
                    "bbcode.Parser",
                    "Type[Parser]"
                ]
            }
        },
        "Document.items": {
            "name": "items",
            "location": 27,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__iter__": {
            "name": "__iter__",
            "location": 30,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__getitem__": {
            "name": "__getitem__",
            "location": 33,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "hashid": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "Document.__len__": {
            "name": "__len__",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.frontmatter": {
            "name": "frontmatter",
            "location": 40,
            "return": [
                "Dict",
                "bool",
                "str",
                "Optional[bool]",
                "Optional[str]",
                "List[str]",
                "Optional[float]",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.hashes": {
            "name": "hashes",
            "location": 43,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.process_message": {
            "name": "process_message",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "Dict[str,Any]"
                ],
                "hashid": [
                    "int",
                    "str",
                    "logging.Logger"
                ]
            }
        },
        "Document.load_output_from_html": {
            "name": "load_output_from_html",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": [
                    "str",
                    "bool",
                    "List[dict]",
                    "List[Dict]",
                    "Mapping",
                    "bs4.BeautifulSoup",
                    "Mapping[str,Any]"
                ]
            }
        },
        "Document.update_from_source": {
            "name": "update_from_source",
            "location": 105,
            "return": [
                "Tuple[(list, list)]"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "knitj-master/knitj/kernel.py": {
        "Kernel.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "int",
                    "float",
                    "bool"
                ],
                "kernel": [
                    "str",
                    "None",
                    "int",
                    "bool"
                ]
            }
        },
        "Kernel.start": {
            "name": "start",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kernel.restart": {
            "name": "restart",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kernel.interrupt": {
            "name": "interrupt",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kernel.execute": {
            "name": "execute",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hashid": [
                    "str",
                    "int",
                    "Optional[float]",
                    "float",
                    "None"
                ],
                "code": [
                    "str",
                    "Sequence[str]"
                ]
            }
        },
        "Kernel._iopub_receiver.partial": {
            "name": "partial",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "Kernel._shell_receiver.partial": {
            "name": "partial",
            "location": 89,
            "return": [
                "Dict[str, Any]",
                "Optional[int]",
                "dict",
                "Optional[str]"
            ],
            "arguments": {}
        }
    },
    "knitj-master/knitj/parser.py": {
        "parse_markdown": {
            "name": "parse_markdown",
            "location": 32,
            "return": [
                "Tuple[(Optional[str], List[Union[(knitj.cell.CodeCell, knitj.cell.TextCell)]])]"
            ],
            "arguments": {
                "text": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "parse_python": {
            "name": "parse_python",
            "location": 68,
            "return": [
                "Tuple[(Optional[str], List[Union[(knitj.cell.CodeCell, knitj.cell.TextCell)]])]"
            ],
            "arguments": {
                "text": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "Parser.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fmt": [
                    "str"
                ]
            }
        },
        "Parser.parse": {
            "name": "parse",
            "location": 25,
            "return": [
                "Tuple[(Any, List[Union[(knitj.cell.CodeCell, knitj.cell.TextCell)]])]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "knitj-master/knitj/server.py": {
        "Broadcaster.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wss": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Broadcaster.register_message": {
            "name": "register_message",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "List[str]",
                    "bytes"
                ]
            }
        },
        "KnitjServer.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "Dict[pathlib.Path, ModuleSummary]",
                    "pathlib.Path",
                    "Path",
                    "TextIO",
                    "os.PathLike"
                ],
                "output": [
                    "os.PathLike",
                    "Path",
                    "Optional[bytes]",
                    "Union[os.PathLike, str]",
                    "Optional[pathlib.Path]",
                    "Optional[IO[bytes]]",
                    "str",
                    "IO[Any]",
                    "pathlib.Path",
                    "int"
                ],
                "fmt": [
                    "str",
                    "bool",
                    "Union[str, pathlib.Path]",
                    "pathlib.Path",
                    "int"
                ],
                "browser": [
                    "str",
                    "Set[str]",
                    "bool",
                    "List[str]"
                ],
                "kernel": [
                    "bool",
                    "str",
                    "list",
                    "int",
                    "List[List[Any]]"
                ]
            }
        },
        "KnitjServer.update_all": {
            "name": "update_all",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bool",
                    "str",
                    "int"
                ]
            }
        },
        "KnitjServer.get_index": {
            "name": "get_index",
            "location": 108,
            "return": [
                "str",
                "int",
                "List[Dict]"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "bool"
                ]
            }
        },
        "KnitjServer._kernel_handler": {
            "name": "_kernel_handler",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "int",
                    "str",
                    "List[str]"
                ],
                "hashid": [
                    "str",
                    "List[Dict]"
                ]
            }
        },
        "KnitjServer._ws_msg_handler": {
            "name": "_ws_msg_handler",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "float",
                    "Tuple[str, float]",
                    "str"
                ]
            }
        },
        "KnitjServer._source_handler": {
            "name": "_source_handler",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "dict",
                    "TextIO",
                    "BinaryIO",
                    "Optional[str]",
                    "pathlib.Path",
                    "bool"
                ]
            }
        }
    },
    "knitj-master/knitj/source.py": {
        "FileChangedHandler.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "FileChangedHandler._queue_modified": {
            "name": "_queue_modified",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "Dict[str,Any]",
                    "bool",
                    "None",
                    "Optional[str]",
                    "watchdog.events.FileSystemEvent"
                ]
            }
        },
        "FileChangedHandler.on_modified": {
            "name": "on_modified",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict[str,Any]",
                    "Callable",
                    "int",
                    "str",
                    "Dict"
                ]
            }
        },
        "FileChangedHandler.on_created": {
            "name": "on_created",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Callable",
                    "Dict[str,Any]"
                ]
            }
        },
        "SourceWatcher.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "Dict",
                    "bool"
                ],
                "path": [
                    "str",
                    "None",
                    "Union[str,pathlib.Path]",
                    "Optional[pathlib.Path]",
                    "pathlib.Path",
                    "Union[pathlib.Path,str]"
                ]
            }
        }
    },
    "knitj-master/knitj/webserver.py": {
        "init_webapp": {
            "name": "init_webapp",
            "location": 39,
            "return": [
                "aiohttp.web.Application"
            ],
            "arguments": {
                "get_index": [
                    "Callable[,str]",
                    "str",
                    "Dict[str,Optional[str]]",
                    "Dict[str,Union[str,None]]"
                ],
                "ws_msg_handler": [
                    "Callable[[Dict],None]",
                    "str",
                    "Callable[dict,None]",
                    "Sequence[str]",
                    "bytes",
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]",
                    "None"
                ]
            }
        }
    },
    "knitj-master/knitj/__init__.py": {},
    "knitj-master/knitj/jupyter_messaging/message.py": {
        "parse": {
            "name": "parse",
            "location": 164,
            "return": [
                "Type"
            ],
            "arguments": {
                "msg": [
                    "Tuple"
                ]
            }
        },
        "MsgType.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "colstr"
            ],
            "arguments": {
                "self": []
            }
        },
        "Header.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Header.__repr__": {
            "name": "__repr__",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.__repr__": {
            "name": "__repr__",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.msg_id": {
            "name": "msg_id",
            "location": 88,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMessage.msg_type": {
            "name": "msg_type",
            "location": 92,
            "return": [
                "str",
                "bool",
                "Tuple[Type]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteRequestMessage.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyMessage.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamMessage.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisplayDataMessage.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteInputMessage.__init__": {
            "name": "__init__",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteResultMessage.__init__": {
            "name": "__init__",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ErrorMessage.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelStatusMessage.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShutdownReplyMessage.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "colstr.__new__": {
            "name": "__new__",
            "location": 183,
            "return": [
                "colstr"
            ],
            "arguments": {
                "cls": [
                    "Type[_Tcolstr]"
                ],
                "s": [
                    "str"
                ],
                "color": [
                    "str"
                ]
            }
        },
        "colstr.__init__": {
            "name": "__init__",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str",
                    "int"
                ],
                "color": [
                    "str",
                    "Callable",
                    "bool",
                    "List[dict[str,Any]]",
                    "Callable[...,None]",
                    "int",
                    "List[Dict[str,Any]]"
                ]
            }
        },
        "colstr.__len__": {
            "name": "__len__",
            "location": 192,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "knitj-master/knitj/jupyter_messaging/__init__.py": {},
    "knitj-master/knitj/jupyter_messaging/content/content.py": {
        "parse_execute_reply": {
            "name": "parse_execute_reply",
            "location": 105,
            "return": [
                "Union[(ExecuteReplyAbortedContent, ExecuteReplyErrorContent, ExecuteReplyOkContent)]"
            ],
            "arguments": {
                "content": [
                    "bytes",
                    "str",
                    "Iterable[bytes]",
                    "Dict",
                    "Dict[str,Any]"
                ]
            }
        },
        "BaseContent.__repr__": {
            "name": "__repr__",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteRequestContent.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyOkContent.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyErrorContent.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteReplyAbortedContent.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamContent.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisplayDataContent.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteInputContent.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecuteResultContent.__init__": {
            "name": "__init__",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KernelStatusContent.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShutdownReplyContent.__init__": {
            "name": "__init__",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "knitj-master/knitj/jupyter_messaging/content/__init__.py": {}
}
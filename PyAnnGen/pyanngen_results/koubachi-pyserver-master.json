{
    "koubachi-pyserver-master/src/koubachi_pyserver/app.py": {
        "get_device_key": {
            "name": "get_device_key",
            "location": 37,
            "return": [
                "bytes"
            ],
            "arguments": {
                "mac_address": [
                    "str"
                ]
            }
        },
        "get_device_calibration_parameters": {
            "name": "get_device_calibration_parameters",
            "location": 41,
            "return": [
                "Mapping[(str, float)]"
            ],
            "arguments": {
                "mac_address": [
                    "str"
                ]
            }
        },
        "get_device_config": {
            "name": "get_device_config",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "_mac_address": [
                    "str"
                ]
            }
        },
        "get_device_last_config_change": {
            "name": "get_device_last_config_change",
            "location": 59,
            "return": [
                "int"
            ],
            "arguments": {
                "_mac_address": [
                    "str"
                ]
            }
        },
        "convert_readings": {
            "name": "convert_readings",
            "location": 63,
            "return": [
                "Iterable[Reading]"
            ],
            "arguments": {
                "mac_address": [
                    "str"
                ],
                "body": [
                    "Mapping[(str, Iterable[Tuple[(int, int, float)]])]"
                ]
            }
        },
        "get_mqtt_config": {
            "name": "get_mqtt_config",
            "location": 80,
            "return": [
                "Dict[(str, Union[(str, Dict[(str, str)])])]"
            ],
            "arguments": {
                "output": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "handle_readings": {
            "name": "handle_readings",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "mac_address": [
                    "str"
                ],
                "readings": [
                    "Iterable[Reading]"
                ]
            }
        },
        "write_to_csv": {
            "name": "write_to_csv",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "mac_address": [
                    "str"
                ],
                "readings": [
                    "Iterable[Reading]"
                ],
                "directory": [
                    "str"
                ]
            }
        },
        "post_to_thingsboard_mqtt": {
            "name": "post_to_thingsboard_mqtt",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "mac_address": [
                    "str"
                ],
                "readings": [
                    "Iterable[Reading]"
                ]
            }
        },
        "post_to_latestvals_mqtt": {
            "name": "post_to_latestvals_mqtt",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "readings": [
                    "Iterable[Reading]"
                ]
            }
        },
        "post_to_mqtt_individual": {
            "name": "post_to_mqtt_individual",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "readings": [
                    "Iterable[Reading]"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 166,
            "return": [
                "Response",
                "str",
                "flask.Response",
                "Optional[str]",
                "dict",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "connect": {
            "name": "connect",
            "location": 171,
            "return": [
                "Response",
                "Dict[str, Any]",
                "str",
                "Dict[str, str]",
                "Optional[Dict]",
                "collector_utilities.type.Response"
            ],
            "arguments": {
                "mac_address": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "get_config": {
            "name": "get_config",
            "location": 180,
            "return": [
                "Response",
                "str",
                "Dict[str, Any]",
                "int",
                "dict"
            ],
            "arguments": {
                "mac_address": [
                    "str",
                    "os.stat_result"
                ]
            }
        },
        "add_readings": {
            "name": "add_readings",
            "location": 189,
            "return": [
                "Response",
                "Dict[str, Any]",
                "Dict[str, str]",
                "str",
                "Optional[Dict]",
                "Exception"
            ],
            "arguments": {
                "mac_address": [
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "koubachi-pyserver-master/src/koubachi_pyserver/crypto.py": {
        "decrypt": {
            "name": "decrypt",
            "location": 12,
            "return": [
                "bytes"
            ],
            "arguments": {
                "key": [
                    "bytes"
                ],
                "data": [
                    "bytes"
                ]
            }
        },
        "encrypt": {
            "name": "encrypt",
            "location": 34,
            "return": [
                "bytes"
            ],
            "arguments": {
                "key": [
                    "bytes"
                ],
                "data": [
                    "bytes"
                ]
            }
        }
    },
    "koubachi-pyserver-master/src/koubachi_pyserver/sensors.py": {
        "convert_lm94022_temperature": {
            "name": "convert_lm94022_temperature",
            "location": 4,
            "return": [
                "float"
            ],
            "arguments": {
                "x": [
                    "float"
                ],
                "calibration_parameters": [
                    "Mapping[(str, float)]"
                ]
            }
        },
        "convert_sfh3710_light": {
            "name": "convert_sfh3710_light",
            "location": 11,
            "return": [
                "float"
            ],
            "arguments": {
                "x": [
                    "float"
                ],
                "calibration_parameters": [
                    "Mapping[(str, float)]"
                ]
            }
        },
        "convert_soil_moisture": {
            "name": "convert_soil_moisture",
            "location": 18,
            "return": [
                "float"
            ],
            "arguments": {
                "x": [
                    "float"
                ],
                "calibration_parameters": [
                    "Mapping[(str, float)]"
                ]
            }
        },
        "convert_tsl2561_light": {
            "name": "convert_tsl2561_light",
            "location": 31,
            "return": [
                "float"
            ],
            "arguments": {
                "x": [
                    "float"
                ],
                "_calibration_parameters": [
                    "Mapping[(str, float)]"
                ]
            }
        }
    },
    "koubachi-pyserver-master/src/koubachi_pyserver/__init__.py": {},
    "koubachi-pyserver-master/tests/test_koubachi_crypto.py": {
        "test_decryption": {
            "name": "test_decryption",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_encryption_and_decryption": {
            "name": "test_encryption_and_decryption",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
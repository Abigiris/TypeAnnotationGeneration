{
    "lectures-master/2018-2019/os-imt/setup-aio.py": {
        "make_conf": {
            "name": "make_conf",
            "location": 30,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "testing": [
                    "bool",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "get_nodes": {
            "name": "get_nodes",
            "location": 62,
            "return": [
                "List",
                "str",
                "Optional[List[str]]",
                "List[str]",
                "Optional[str]"
            ],
            "arguments": {
                "roles": [
                    "Dict[str,Any]",
                    "Tuple[str]",
                    "Iterable",
                    "str",
                    "logging.LogRecord"
                ]
            }
        },
        "bootstrap": {
            "name": "bootstrap",
            "location": 66,
            "return": [
                "int",
                "str",
                "Iterable[str]",
                "List[str]",
                "Union[int,slice]",
                "Set[int]",
                "Dict[str,Any]"
            ],
            "arguments": {
                "roles": [
                    "str",
                    "int",
                    "List"
                ]
            }
        }
    },
    "lectures-master/2018-2019/os-imt/setup-cloud.py": {
        "make_cloud": {
            "name": "make_cloud",
            "location": 51,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "cloud_auth_url": [
                    "str"
                ]
            }
        },
        "make_account": {
            "name": "make_account",
            "location": 83,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Any]"
                ],
                "users": [
                    "str",
                    "List[str]",
                    "Dict[str,Any]"
                ]
            }
        },
        "make_private_net": {
            "name": "make_private_net",
            "location": 117,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "net": [],
                "project": []
            }
        },
        "make_router": {
            "name": "make_router",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [
                    "str",
                    "Dict[str, Any]"
                ],
                "project": [],
                "priv_snet": []
            }
        },
        "make_sec_group_rule": {
            "name": "make_sec_group_rule",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [],
                "project": []
            }
        }
    },
    "lectures-master/2019-2020/os-imt/setup-infra/heat/setup.py": {
        "install_os": {
            "name": "install_os",
            "location": 61,
            "return": [
                "int",
                "bool",
                "List[str]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "make_cloud": {
            "name": "make_cloud",
            "location": 79,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "cloud_auth_url": [
                    "str"
                ]
            }
        },
        "make_account": {
            "name": "make_account",
            "location": 111,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "Dict[str, Any]"
                ],
                "users": [
                    "str",
                    "List[str]",
                    "Dict[str,Any]"
                ]
            }
        },
        "make_private_net": {
            "name": "make_private_net",
            "location": 145,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "net": [
                    "str"
                ],
                "project": [
                    "str"
                ],
                "enos_env": [
                    "str",
                    "bool"
                ]
            }
        },
        "make_router": {
            "name": "make_router",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [
                    "str",
                    "Dict[str, Any]"
                ],
                "project": [],
                "priv_snet": []
            }
        },
        "make_sec_group_rule": {
            "name": "make_sec_group_rule",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [],
                "project": []
            }
        },
        "make_flavors": {
            "name": "make_flavors",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "cpt": [
                    "int",
                    "T"
                ]
            }
        }
    },
    "lectures-master/2019-2020/os-imt/setup-infra/microstack/setup.py": {
        "get_addr": {
            "name": "get_addr",
            "location": 33,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "h": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "make_conf": {
            "name": "make_conf",
            "location": 49,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "testing": [
                    "bool",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "bootstrap": {
            "name": "bootstrap",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "rs": [
                    "float",
                    "int",
                    "opentrons.types.Point"
                ]
            }
        }
    },
    "lectures-master/2020-2021/os-imt/setup-infra/heat/setup.py": {
        "install_os": {
            "name": "install_os",
            "location": 72,
            "return": [
                "List[str]",
                "int",
                "bool",
                "List[tuple[Union[int,float]]]",
                "List[dict[str,str]]",
                "Dict[str,Any]",
                "Dict[str,dict[str,Any]]"
            ],
            "arguments": {
                "testing": [
                    "bool",
                    "Dict[str,Any]",
                    "Callable",
                    "Exception"
                ]
            }
        },
        "make_cloud": {
            "name": "make_cloud",
            "location": 88,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "cloud_auth_url": [
                    "str"
                ]
            }
        },
        "upload_debian10": {
            "name": "upload_debian10",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "img": [
                    "dict",
                    "Mapping[str, Any]",
                    "int"
                ]
            }
        },
        "make_flavors": {
            "name": "make_flavors",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "cpt": [
                    "int",
                    "T"
                ]
            }
        },
        "make_account": {
            "name": "make_account",
            "location": 154,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str"
                ],
                "user_name": [
                    "str",
                    "Callable",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "make_private_net": {
            "name": "make_private_net",
            "location": 187,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "net": [
                    "str"
                ],
                "project": [
                    "str"
                ],
                "enos_env": [
                    "str",
                    "bool"
                ]
            }
        },
        "make_router": {
            "name": "make_router",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [
                    "str",
                    "Dict[str, Any]"
                ],
                "project": [],
                "priv_snet": []
            }
        },
        "make_sec_group_rule": {
            "name": "make_sec_group_rule",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [],
                "project": []
            }
        },
        "main": {
            "name": "main",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "test": [
                    "bool",
                    "Callable",
                    "List[str]",
                    "Dict[int,set[int]]",
                    "Dict[int,Set[int]]",
                    "int"
                ]
            }
        }
    },
    "lectures-master/2020-2021/os-imt/setup-infra/microstack/setup.py": {
        "get_ip_addr": {
            "name": "get_ip_addr",
            "location": 49,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "h": []
            }
        },
        "make_conf": {
            "name": "make_conf",
            "location": 57,
            "return": [],
            "arguments": {
                "testing": [
                    "bool"
                ]
            }
        },
        "provision": {
            "name": "provision",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "rs": []
            }
        },
        "main": {
            "name": "main",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "test": []
            }
        }
    },
    "lectures-master/2021-2022/os-imt/setup-infra/heat/setup.py": {
        "install_os": {
            "name": "install_os",
            "location": 71,
            "return": [
                "List[str]",
                "int",
                "bool",
                "List[tuple[Union[int,float]]]",
                "List[dict[str,str]]",
                "Dict[str,Any]",
                "Dict[str,dict[str,Any]]"
            ],
            "arguments": {
                "testing": [
                    "bool",
                    "Dict[str,Any]",
                    "Callable",
                    "Exception"
                ]
            }
        },
        "make_cloud": {
            "name": "make_cloud",
            "location": 87,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "cloud_auth_url": [
                    "str"
                ]
            }
        },
        "upload_debian10": {
            "name": "upload_debian10",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "img": [
                    "dict",
                    "Mapping[str, Any]",
                    "int"
                ]
            }
        },
        "make_flavors": {
            "name": "make_flavors",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "cpt": [
                    "int",
                    "T"
                ]
            }
        },
        "make_account": {
            "name": "make_account",
            "location": 153,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "identity": [
                    "str"
                ],
                "user_name": [
                    "str",
                    "Callable",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "make_private_net": {
            "name": "make_private_net",
            "location": 186,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "net": [],
                "project": [],
                "dns": [
                    "Callable"
                ]
            }
        },
        "make_router": {
            "name": "make_router",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [
                    "str",
                    "Dict[str, Any]"
                ],
                "project": [],
                "priv_snet": []
            }
        },
        "make_sec_group_rule": {
            "name": "make_sec_group_rule",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "net": [],
                "project": []
            }
        },
        "main": {
            "name": "main",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "test": [
                    "bool",
                    "str",
                    "int"
                ]
            }
        }
    },
    "lectures-master/2021-2022/os-imt/setup-infra/microstack/setup.py": {
        "get_ip_addr": {
            "name": "get_ip_addr",
            "location": 31,
            "return": [
                "Text",
                "str",
                "Optional[str]",
                "Tuple[Tuple[int,...]]"
            ],
            "arguments": {
                "h": [
                    "int"
                ]
            }
        },
        "make_conf": {
            "name": "make_conf",
            "location": 39,
            "return": [
                "dict",
                "bytes",
                "int"
            ],
            "arguments": {
                "testing": [
                    "bool",
                    "Dict[str,Any]",
                    "Callable",
                    "Exception"
                ]
            }
        },
        "provision": {
            "name": "provision",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "rs": [
                    "float",
                    "int",
                    "opentrons.types.Point"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "test": [
                    "float",
                    "int",
                    "List[str]",
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        }
    }
}
{
    "lib_cast-master/build_docs.py": {
        "project_specific": {
            "name": "project_specific",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "repository_slug": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ],
                "repository": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ],
                "repository_dashed": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 39,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "lib_cast-master/conftest.py": {
        "pytest_cmdline_preparse": {
            "name": "pytest_cmdline_preparse",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "lib_cast-master/project_conf.py": {},
    "lib_cast-master/project_update.py": {
        "format_commandline_help_file": {
            "name": "format_commandline_help_file",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_commandline_help_file": {
            "name": "create_commandline_help_file",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_init_config_file": {
            "name": "create_init_config_file",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "is_in_own_project_folder": {
            "name": "is_in_own_project_folder",
            "location": 96,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_path_template_dir_local": {
            "name": "get_path_template_dir_local",
            "location": 103,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {}
        },
        "is_ok_to_copy": {
            "name": "is_ok_to_copy",
            "location": 113,
            "return": [
                "bool"
            ],
            "arguments": {
                "path_source_file": [
                    "pathlib.Path"
                ]
            }
        },
        "get_paths_to_copy": {
            "name": "get_paths_to_copy",
            "location": 127,
            "return": [
                "list"
            ],
            "arguments": {
                "path_source_dir": [
                    "pathlib.Path",
                    "list",
                    "List[str]",
                    "Optional[str]",
                    "Union[str, List[str]]"
                ]
            }
        },
        "copy_project_files": {
            "name": "copy_project_files",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "copy_template_files": {
            "name": "copy_template_files",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "replace_marker": {
            "name": "replace_marker",
            "location": 200,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "marker": [
                    "str"
                ],
                "src_filename": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Union[pathlib.Path,str]"
                ],
                "replace_marker_with_src_file": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "Callable[...,str]",
                    "Optional[int]"
                ]
            }
        },
        "create_travis_file": {
            "name": "create_travis_file",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "docopt_args": [
                    "str",
                    "List",
                    "Dict[str,Union[bool,str]]",
                    "List[str]",
                    "int",
                    "Callable",
                    "bool",
                    "Optional[int]",
                    "Optional[List[str]]"
                ]
            }
        },
        "main_commandline": {
            "name": "main_commandline",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "lib_cast-master/setup.py": {
        "is_travis_deploy": {
            "name": "is_travis_deploy",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_tagged_commit": {
            "name": "is_tagged_commit",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "strip_links_from_required": {
            "name": "strip_links_from_required",
            "location": 29,
            "return": [
                "list"
            ],
            "arguments": {
                "l_required": [
                    "List[str]",
                    "List",
                    "int"
                ]
            }
        },
        "get_requirements_from_file": {
            "name": "get_requirements_from_file",
            "location": 55,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "requirements_filename": [
                    "str",
                    "pathlib.Path",
                    "Union[str,os.PathLike]",
                    "Union[str,pathlib.Path]"
                ]
            }
        },
        "get_line_data": {
            "name": "get_line_data",
            "location": 68,
            "return": [
                "str",
                "Optional[Set[str]]",
                "List[str]",
                "float"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        }
    },
    "lib_cast-master/lib_cast/lib_cast.py": {
        "cast_float_2_string": {
            "name": "cast_float_2_string",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [],
                "digits": [
                    "int"
                ],
                "decimals": [
                    "int"
                ],
                "comma_seperator": [
                    "typing.Text"
                ],
                "remove_trailing_zeros": [
                    "bool"
                ],
                "strip": [
                    "bool"
                ]
            }
        },
        "cast_float_to_human_readable_size": {
            "name": "cast_float_to_human_readable_size",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [],
                "unit": [
                    "typing.Text"
                ],
                "decimals": [
                    "int"
                ],
                "base1024": [
                    "bool"
                ],
                "short_form": [
                    "bool"
                ],
                "remove_trailing_zeros": [
                    "bool"
                ],
                "show_exponent": [
                    "bool"
                ]
            }
        },
        "cast_float_2_human_readable_timediff": {
            "name": "cast_float_2_human_readable_timediff",
            "location": 274,
            "return": [
                "str"
            ],
            "arguments": {
                "float_seconds": [],
                "language": [
                    "typing.Text"
                ]
            }
        },
        "cast_float_2_human_readable_dimension": {
            "name": "cast_float_2_human_readable_dimension",
            "location": 405,
            "return": [
                "str"
            ],
            "arguments": {
                "dimension_in_meters": [],
                "language": [
                    "typing.Text"
                ],
                "unit_short": [
                    "bool"
                ]
            }
        },
        "cast_float_2_human_readable_iterations": {
            "name": "cast_float_2_human_readable_iterations",
            "location": 463,
            "return": [
                "str"
            ],
            "arguments": {
                "float_seconds": []
            }
        },
        "cast_float_2_human_readable_weight": {
            "name": "cast_float_2_human_readable_weight",
            "location": 500,
            "return": [
                "str"
            ],
            "arguments": {
                "weight_in_kg": [],
                "language": [
                    "typing.Text"
                ]
            }
        },
        "cast_human_readable_size_to_float": {
            "name": "cast_human_readable_size_to_float",
            "location": 546,
            "return": [
                "Union[(float, int)]"
            ],
            "arguments": {
                "s_human_readable_size": []
            }
        },
        "cast_to_bool": {
            "name": "cast_to_bool",
            "location": 655,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "cast_str_2_dec": {
            "name": "cast_str_2_dec",
            "location": 709,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "s_value": [],
                "s_comma_seperator": [
                    "typing.Text"
                ]
            }
        },
        "cast_str_2_list": {
            "name": "cast_str_2_list",
            "location": 719,
            "return": [
                "Any"
            ],
            "arguments": {
                "s_input": [],
                "keep_empty_list_items": [
                    "bool"
                ]
            }
        },
        "cast_list_of_strings_to_lower": {
            "name": "cast_list_of_strings_to_lower",
            "location": 750,
            "return": [
                "list"
            ],
            "arguments": {
                "list_of_strings": []
            }
        },
        "get_type_as_string": {
            "name": "get_type_as_string",
            "location": 758,
            "return": [
                "Any"
            ],
            "arguments": {
                "instance": []
            }
        },
        "is_castable_to_bool": {
            "name": "is_castable_to_bool",
            "location": 780,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "is_castable_to_float": {
            "name": "is_castable_to_float",
            "location": 802,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "is_castable_to_int": {
            "name": "is_castable_to_int",
            "location": 835,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "cast_datetime_2_str": {
            "name": "cast_datetime_2_str",
            "location": 862,
            "return": [
                "Any"
            ],
            "arguments": {
                "d_datetime": [],
                "b_format_for_filename": [
                    "bool"
                ]
            }
        },
        "cast_timestamp_seconds_since_epoch_to_text": {
            "name": "cast_timestamp_seconds_since_epoch_to_text",
            "location": 885,
            "return": [
                "str"
            ],
            "arguments": {
                "seconds": [],
                "timezone": [
                    "typing.Text"
                ],
                "time_in_nanoseconds": [
                    "bool"
                ],
                "date_time_format": [
                    "typing.Text"
                ]
            }
        },
        "cast_str_2_datetime": {
            "name": "cast_str_2_datetime",
            "location": 910,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "s_datetime": [],
                "b_format_for_filename": [
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 941,
            "return": [
                "None"
            ],
            "arguments": {
                "docopt_args": []
            }
        },
        "main_commandline": {
            "name": "main_commandline",
            "location": 968,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "lib_cast-master/lib_cast/__doc__.py": {},
    "lib_cast-master/lib_cast/__init__.py": {},
    "lib_cast-master/lib_cast/__init__conf__.py": {
        "print_version": {
            "name": "print_version",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "print_info": {
            "name": "print_info",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "lib_shell-master/build_docs.py": {
        "project_specific": {
            "name": "project_specific",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "repository_slug": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ],
                "repository": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ],
                "repository_dashed": [
                    "str",
                    "bool",
                    "Exception",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 32,
            "return": [
                "Tuple[(argparse.Namespace, argparse.ArgumentParser)]"
            ],
            "arguments": {
                "cmd_args": [
                    "Optional[List[str]]",
                    "argparse.Namespace",
                    "str",
                    "list",
                    "Union[str, Iterable[str]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 44,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "lib_shell-master/conftest.py": {
        "pytest_cmdline_preparse": {
            "name": "pytest_cmdline_preparse",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "lib_shell-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "dist_directory": [
                    "int",
                    "pathlib.Path",
                    "str",
                    "None",
                    "Union[str,pathlib.Path]",
                    "Optional[pathlib.Path]"
                ]
            }
        },
        "is_travis_deploy": {
            "name": "is_travis_deploy",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "strip_links_from_required": {
            "name": "strip_links_from_required",
            "location": 39,
            "return": [
                "list"
            ],
            "arguments": {
                "l_required": [
                    "List[str]",
                    "List",
                    "int"
                ]
            }
        }
    },
    "lib_shell-master/lib_shell/conf_lib_shell.py": {
        "get_sudo_command_exist": {
            "name": "get_sudo_command_exist",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "sudo_command": [
                    "Text",
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        },
        "ConfLibShell.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfLibShell.sudo_command": {
            "name": "sudo_command",
            "location": 35,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "Union[str, int, float]",
                    "Tuple[float]"
                ]
            }
        }
    },
    "lib_shell-master/lib_shell/lib_shell.py": {
        "run_shell_command": {
            "name": "run_shell_command",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "command": [],
                "shell": [
                    "bool"
                ],
                "communicate": [
                    "bool"
                ],
                "wait_finish": [
                    "bool"
                ],
                "raise_on_returncode_not_zero": [
                    "bool"
                ],
                "log_settings": [],
                "pass_stdout_stderr_to_sys": [
                    "bool"
                ],
                "start_new_session": [
                    "bool"
                ],
                "retries": [],
                "use_sudo": [
                    "bool"
                ],
                "run_as_user": [
                    "typing.Text"
                ],
                "quiet": [
                    "bool"
                ]
            }
        },
        "run_shell_ls_command": {
            "name": "run_shell_ls_command",
            "location": 95,
            "return": [
                "ShellCommandResponse"
            ],
            "arguments": {
                "ls_command": [],
                "shell": [
                    "bool"
                ],
                "communicate": [
                    "bool"
                ],
                "wait_finish": [
                    "bool"
                ],
                "raise_on_returncode_not_zero": [
                    "bool"
                ],
                "log_settings": [],
                "pass_stdout_stderr_to_sys": [
                    "bool"
                ],
                "start_new_session": [
                    "bool"
                ],
                "retries": [],
                "use_sudo": [
                    "bool"
                ],
                "run_as_user": [
                    "typing.Text"
                ],
                "quiet": [
                    "bool"
                ]
            }
        },
        "_run_shell_ls_command_one_try": {
            "name": "_run_shell_ls_command_one_try",
            "location": 148,
            "return": [
                "ShellCommandResponse"
            ],
            "arguments": {
                "ls_command": [],
                "shell": [
                    "bool"
                ],
                "communicate": [
                    "bool"
                ],
                "wait_finish": [
                    "bool"
                ],
                "raise_on_returncode_not_zero": [
                    "bool"
                ],
                "log_settings": [],
                "pass_stdout_stderr_to_sys": [
                    "bool"
                ],
                "start_new_session": [
                    "bool"
                ],
                "use_sudo": [
                    "bool"
                ],
                "run_as_user": [
                    "typing.Text"
                ],
                "quiet": [
                    "bool"
                ]
            }
        },
        "get_startup_info": {
            "name": "get_startup_info",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "start_new_session": []
            }
        },
        "get_pipes": {
            "name": "get_pipes",
            "location": 381,
            "return": [
                "Tuple[(Optional[int], Optional[int], Optional[int])]"
            ],
            "arguments": {
                "start_new_session": []
            }
        },
        "prepend_sudo_and_run_as_user": {
            "name": "prepend_sudo_and_run_as_user",
            "location": 402,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "ls_command": [],
                "shell": [],
                "run_as_user": [],
                "use_sudo": []
            }
        },
        "ShellCommandResponse.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lib_shell-master/lib_shell/lib_shell_commandline.py": {
        "get_l_commandline_from_pid": {
            "name": "get_l_commandline_from_pid",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "pid": []
            }
        },
        "get_l_commandline_from_psutil_process": {
            "name": "get_l_commandline_from_psutil_process",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "process": []
            }
        },
        "get_quoted_command": {
            "name": "get_quoted_command",
            "location": 106,
            "return": [
                "str"
            ],
            "arguments": {
                "s_command": [],
                "process": []
            }
        },
        "quote_string": {
            "name": "quote_string",
            "location": 194,
            "return": [
                "str"
            ],
            "arguments": {
                "unquoted_string": []
            }
        },
        "get_is_absolute_path": {
            "name": "get_is_absolute_path",
            "location": 208,
            "return": [
                "bool"
            ],
            "arguments": {
                "s_command": []
            }
        },
        "get_l_command_variations": {
            "name": "get_l_command_variations",
            "location": 221,
            "return": [
                "list"
            ],
            "arguments": {
                "s_command": []
            }
        },
        "get_executable_file": {
            "name": "get_executable_file",
            "location": 232,
            "return": [
                "Any"
            ],
            "arguments": {
                "l_command_variations": [],
                "process": []
            }
        }
    },
    "lib_shell-master/lib_shell/lib_shell_helpers.py": {
        "prepend_sudo_command": {
            "name": "prepend_sudo_command",
            "location": 18,
            "return": [
                "list"
            ],
            "arguments": {
                "l_command": [
                    "int"
                ]
            }
        },
        "prepend_run_as_user_command": {
            "name": "prepend_run_as_user_command",
            "location": 32,
            "return": [
                "Union[(list, _T0)]"
            ],
            "arguments": {
                "l_command": [
                    "str",
                    "bool"
                ],
                "user": [
                    "Text",
                    "str",
                    "Optional[dict]"
                ]
            }
        },
        "get_current_username": {
            "name": "get_current_username",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "lib_shell-master/lib_shell/lib_shell_log.py": {
        "set_log_settings_returncode_zero_to_level": {
            "name": "set_log_settings_returncode_zero_to_level",
            "location": 21,
            "return": [
                "RunShellCommandLogSettings",
                "int",
                "List",
                "str",
                "float",
                "Dict[str,Any]",
                "Tuple",
                "Callable[...,None]",
                "Dict"
            ],
            "arguments": {
                "level": [
                    "int"
                ],
                "log_settings": [
                    "int",
                    "RunShellCommandLogSettings"
                ]
            }
        },
        "set_log_settings_returncode_not_zero_to_level": {
            "name": "set_log_settings_returncode_not_zero_to_level",
            "location": 39,
            "return": [
                "RunShellCommandLogSettings",
                "int",
                "List",
                "str",
                "float",
                "Dict[str,Any]",
                "Tuple"
            ],
            "arguments": {
                "level": [
                    "int",
                    "Dict",
                    "Hashable"
                ],
                "log_settings": [
                    "RunShellCommandLogSettings",
                    "int",
                    "Dict",
                    "Hashable"
                ]
            }
        },
        "set_log_settings_to_level": {
            "name": "set_log_settings_to_level",
            "location": 57,
            "return": [
                "Dict",
                "int",
                "Dict[str,Any]"
            ],
            "arguments": {
                "level": [
                    "int",
                    "MutableMapping[str,Any]",
                    "MutableMapping"
                ],
                "log_settings": [
                    "RunShellCommandLogSettings",
                    "int",
                    "MutableMapping[str,Any]"
                ]
            }
        },
        "log_results": {
            "name": "log_results",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "s_command": [
                    "int",
                    "str",
                    "logging.Logger",
                    "bool"
                ],
                "stdout": [
                    "int",
                    "str",
                    "bool"
                ],
                "stderr": [
                    "int",
                    "str",
                    "Union[None,int]",
                    "None"
                ],
                "returncode": [
                    "int",
                    "str"
                ],
                "wait_finish": [
                    "bool",
                    "str"
                ],
                "log_settings": [
                    "int",
                    "bytes",
                    "Optional[Any]",
                    "Any",
                    "None"
                ]
            }
        },
        "delete_empty_lines": {
            "name": "delete_empty_lines",
            "location": 110,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "RunShellCommandLogSettings.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lib_shell-master/lib_shell/lib_shell_pass_output.py": {
        "pass_stdout_stderr_to_sys": {
            "name": "pass_stdout_stderr_to_sys",
            "location": 23,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "process": [
                    "subprocess.Popen"
                ],
                "encoding": [
                    "str",
                    "bytes"
                ]
            }
        },
        "report_thread_not_closed": {
            "name": "report_thread_not_closed",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "process": [
                    "str",
                    "int",
                    "bool"
                ],
                "pipe_name": [
                    "str",
                    "Type",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "enque_output": {
            "name": "enque_output",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "out": [
                    "str"
                ],
                "message_queue": [
                    "str",
                    "int",
                    "bytes",
                    "Dict"
                ]
            }
        },
        "poll_queue": {
            "name": "poll_queue",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "msg_queue": [
                    "float"
                ],
                "target_pipe": [
                    "str",
                    "bool",
                    "Optional[str]"
                ],
                "msg_list": [
                    "List[bytes]",
                    "str",
                    "int",
                    "Callable",
                    "List",
                    "Tuple"
                ],
                "encoding": [
                    "bool",
                    "float",
                    "int"
                ]
            }
        }
    },
    "lib_shell-master/lib_shell/lib_shell_shlex.py": {
        "shlex_split_multi_platform": {
            "name": "shlex_split_multi_platform",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {
                "s_commandline": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Optional[int]",
                    "int"
                ],
                "is_platform_windows": [
                    "str",
                    "None",
                    "Optional[int]",
                    "Optional[float]",
                    "int",
                    "Optional[str]",
                    "float"
                ]
            }
        }
    },
    "lib_shell-master/lib_shell/__init__.py": {
        "get_version": {
            "name": "get_version",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    }
}
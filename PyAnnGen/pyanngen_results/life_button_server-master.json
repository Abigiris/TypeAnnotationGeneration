{
    "life_button_server-master/app.py": {},
    "life_button_server-master/db.py": {},
    "life_button_server-master/settings.py": {},
    "life_button_server-master/api_http/exc.py": {
        "UnknownViewError.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "life_button_server-master/api_http/server.py": {
        "Root.render_GET": {
            "name": "render_GET",
            "location": 11,
            "return": [
                "str",
                "Dict[int,str]",
                "Dict[str,Any]",
                "Dict",
                "Dict[str,str]",
                "Exception",
                "OrderedDict",
                "Generator[Union[Any,None,None]]",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str,Any]",
                    "Optional[Dict[str,Any]]",
                    "None",
                    "aiohttp.web.Request"
                ]
            }
        }
    },
    "life_button_server-master/api_http/views.py": {
        "view": {
            "name": "view",
            "location": 9,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "regex": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "get_locations": {
            "name": "get_locations",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "request": [
                    "str",
                    "bytes"
                ],
                "device_id": [
                    "int",
                    "str"
                ]
            }
        },
        "get_keepalive": {
            "name": "get_keepalive",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "request": [
                    "str"
                ],
                "device_id": [
                    "int",
                    "str"
                ]
            }
        },
        "view.decorator": {
            "name": "decorator",
            "location": 10,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "f": [
                    "str",
                    "Dict[str, Any]",
                    "bytes",
                    "Dict[str, str]",
                    "int"
                ]
            }
        }
    },
    "life_button_server-master/api_http/__init__.py": {},
    "life_button_server-master/api_socket/commands.py": {
        "cmd_handler": {
            "name": "cmd_handler",
            "location": 14,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "name": [
                    "int",
                    "Iterable[float]",
                    "Sequence[str]",
                    "bool"
                ],
                "with_data": [
                    "bool",
                    "int",
                    "Iterable[float]",
                    "Sequence[str]"
                ],
                "requires_device_id": [
                    "bool",
                    "int",
                    "Iterable[float]",
                    "Sequence[str]"
                ],
                "with_ack": [
                    "bool",
                    "int",
                    "Iterable[float]",
                    "Sequence[str]"
                ]
            }
        },
        "cmd_id": {
            "name": "cmd_id",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "protocol": [
                    "str",
                    "int",
                    "Dict",
                    "Optional[Dict]",
                    "None"
                ],
                "data": [
                    "str",
                    "int",
                    "dict",
                    "Optional[Dict]"
                ]
            }
        },
        "cmd_location": {
            "name": "cmd_location",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "protocol": [
                    "Dict",
                    "str",
                    "Dict[str,Any]"
                ],
                "data": [
                    "str",
                    "Dict[str,str]"
                ]
            }
        },
        "cmd_keepalive": {
            "name": "cmd_keepalive",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "protocol": [
                    "Dict[str,Any]",
                    "bytes",
                    "IO[str]",
                    "IO"
                ],
                "data": [
                    "bool",
                    "str"
                ]
            }
        },
        "cmd_handler.decorator": {
            "name": "decorator",
            "location": 15,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "f": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ]
            }
        },
        "cmd_handler.decorator.wrapper": {
            "name": "wrapper",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "protocol": [
                    "dict",
                    "rotkehlchen.db.dbhandler.DBHandler",
                    "int",
                    "Dict[str, Any]"
                ],
                "data": [
                    "None",
                    "str",
                    "Dict[str,Any]",
                    "bytes"
                ]
            }
        }
    },
    "life_button_server-master/api_socket/exc.py": {
        "UnknownCommandError.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd_name": [
                    "str"
                ]
            }
        },
        "CommandFormatError.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MissedDataError.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataNotSupportedError.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MissedDeviceIdError.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "life_button_server-master/api_socket/server.py": {
        "Protocol.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol.dataReceived": {
            "name": "dataReceived",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Dict",
                    "Dict[str,float]",
                    "str"
                ]
            }
        },
        "Protocol._get_handler": {
            "name": "_get_handler",
            "location": 22,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "cmd_name": [
                    "str"
                ]
            }
        },
        "Protocol._parse_cmd": {
            "name": "_parse_cmd",
            "location": 28,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "cmd_str": [
                    "str",
                    "bytes",
                    "Pattern[str]"
                ]
            }
        }
    },
    "life_button_server-master/api_socket/__init__.py": {},
    "life_button_server-master/docs/conf.py": {}
}
{
    "lispy3-master/lis.py": {
        "add_globals": {
            "name": "add_globals",
            "location": 19,
            "return": [
                "Env"
            ],
            "arguments": {
                "env": [
                    "Env"
                ]
            }
        },
        "eval": {
            "name": "eval",
            "location": 56,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {
                "x": [],
                "env": [
                    "Env"
                ]
            }
        },
        "read": {
            "name": "read",
            "location": 87,
            "return": [
                "Union[(float, list, str)]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "tokenize": {
            "name": "tokenize",
            "location": 95,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "read_from": {
            "name": "read_from",
            "location": 100,
            "return": [
                "Union[(float, list, str)]"
            ],
            "arguments": {
                "tokens": [
                    "List[str]"
                ]
            }
        },
        "atom": {
            "name": "atom",
            "location": 117,
            "return": [
                "Union[(float, str)]"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "to_string": {
            "name": "to_string",
            "location": 128,
            "return": [
                "str"
            ],
            "arguments": {
                "exp": []
            }
        },
        "repl": {
            "name": "repl",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "prompt": [
                    "str"
                ]
            }
        },
        "Env.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parms": [
                    "tuple[]"
                ],
                "args": [
                    "tuple[]"
                ],
                "outer": [
                    "None"
                ]
            }
        },
        "Env.find": {
            "name": "find",
            "location": 15,
            "return": [
                "Env"
            ],
            "arguments": {
                "self": [
                    "_TEnv"
                ],
                "var": [
                    "str"
                ]
            }
        }
    },
    "lispy3-master/lispy.py": {
        "Sym": {
            "name": "Sym",
            "location": 14,
            "return": [
                "Optional[str]",
                "str",
                "Optional[T]",
                "Optional[Iterable[Any]]"
            ],
            "arguments": {
                "s": [
                    "T",
                    "dict",
                    "Optional[Dict[str, Any]]"
                ],
                "symbol_table": [
                    "T",
                    "dict",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "parse": {
            "name": "parse",
            "location": 43,
            "return": [
                "str",
                "int",
                "Tuple[Tuple[int, Any]]",
                "List[List[str]]",
                "bool"
            ],
            "arguments": {
                "inport": [
                    "str",
                    "io.StringIO"
                ]
            }
        },
        "readchar": {
            "name": "readchar",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "inport": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "read": {
            "name": "read",
            "location": 83,
            "return": [
                "dict"
            ],
            "arguments": {
                "inport": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "atom": {
            "name": "atom",
            "location": 112,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str",
                    "int",
                    "List[int]",
                    "Dict[int, bool]"
                ]
            }
        },
        "to_string": {
            "name": "to_string",
            "location": 132,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "x": [
                    "_T0"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "repl": {
            "name": "repl",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "prompt": [
                    "str"
                ],
                "inport": [
                    "str",
                    "io.IOBase",
                    "bytes",
                    "bool"
                ],
                "out": [
                    "str",
                    "Optional[List[str]]",
                    "Optional[AnyStr]",
                    "Optional[Dict[str, str]]",
                    "slice",
                    "Optional[float]",
                    "Optional[int]",
                    "int"
                ]
            }
        },
        "is_pair": {
            "name": "is_pair",
            "location": 200,
            "return": [
                "int",
                "tuple",
                "float",
                "Type[BaseException]",
                "dict"
            ],
            "arguments": {
                "x": [
                    "int",
                    "List[T]",
                    "float",
                    "Iterable[List[T]]",
                    "Union[bytes, bytearray, memoryview]"
                ]
            }
        },
        "cons": {
            "name": "cons",
            "location": 204,
            "return": [
                "list"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "str",
                    "Union[float, int]"
                ],
                "y": [
                    "int",
                    "float",
                    "str",
                    "Union[float, int]"
                ]
            }
        },
        "callcc": {
            "name": "callcc",
            "location": 208,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "proc": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "add_globals": {
            "name": "add_globals",
            "location": 225,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [
                    "_T0"
                ]
            }
        },
        "eval": {
            "name": "eval",
            "location": 286,
            "return": [
                "Optional[int]",
                "Optional[str]",
                "T",
                "bool",
                "List[str]",
                "Optional[List[Callable]]"
            ],
            "arguments": {
                "x": [
                    "list",
                    "List[dict]",
                    "int",
                    "tuple",
                    "str"
                ],
                "env": [
                    "Set[str]",
                    "dict",
                    "Callable"
                ]
            }
        },
        "expand": {
            "name": "expand",
            "location": 327,
            "return": [
                "str",
                "float",
                "bool",
                "int"
            ],
            "arguments": {
                "x": [
                    "list",
                    "int",
                    "Sequence[int]"
                ],
                "toplevel": [
                    "float"
                ]
            }
        },
        "require": {
            "name": "require",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "predicate": [
                    "bool",
                    "float",
                    "Iterable[Iterable[float]]",
                    "list",
                    "str",
                    "T",
                    "bytes"
                ],
                "msg": [
                    "int",
                    "float"
                ]
            }
        },
        "expand_quasiquote": {
            "name": "expand_quasiquote",
            "location": 396,
            "return": [
                "str",
                "Optional[int]",
                "Optional[List[int]]"
            ],
            "arguments": {
                "x": [
                    "list",
                    "float",
                    "List[float]"
                ]
            }
        },
        "let": {
            "name": "let",
            "location": 411,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "Procedure.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parms": [
                    "bool",
                    "dict",
                    "Optional[str]",
                    "Callable"
                ],
                "exp": [
                    "bool",
                    "dict",
                    "Optional[str]",
                    "Callable"
                ],
                "env": [
                    "bool",
                    "dict",
                    "Optional[str]",
                    "Callable"
                ]
            }
        },
        "Procedure.__call__": {
            "name": "__call__",
            "location": 36,
            "return": [
                "str",
                "bytes",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "InPort.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "int",
                    "str",
                    "bool",
                    "Dict[str, str]",
                    "Dict[str, int]"
                ]
            }
        },
        "InPort.next_token": {
            "name": "next_token",
            "location": 62,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "read.read_ahead": {
            "name": "read_ahead",
            "location": 86,
            "return": [
                "bool",
                "int",
                "Generator"
            ],
            "arguments": {
                "token": [
                    "bytes",
                    "List[int]"
                ]
            }
        },
        "Env.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parms": [
                    "str",
                    "int"
                ],
                "args": [],
                "outer": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Env.find": {
            "name": "find",
            "location": 190,
            "return": [
                "str",
                "List[str]",
                "set",
                "int"
            ],
            "arguments": {
                "self": [],
                "var": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "callcc.throw": {
            "name": "throw",
            "location": 212,
            "return": [
                ""
            ],
            "arguments": {
                "retval": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "lispy3-master/main.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "prompt": [
                    "typing.Text",
                    "str",
                    "List[Dict[str, Any]]"
                ]
            }
        }
    }
}
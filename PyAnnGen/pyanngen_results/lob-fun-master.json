{
    "lob-fun-master/parseaddrs.py": {
        "clean": {
            "name": "clean",
            "location": 34,
            "return": [
                "str",
                "int",
                "Dict[str,Any]"
            ],
            "arguments": {
                "value": [
                    "str",
                    "float"
                ]
            }
        },
        "parse_address": {
            "name": "parse_address",
            "location": 43,
            "return": [
                "ParsedAddress",
                "Optional[int]",
                "str",
                "Optional[List[int]]"
            ],
            "arguments": {
                "raw": [
                    "str",
                    "Optional[List[str]]",
                    "List[str]",
                    "None"
                ]
            }
        },
        "parse_landlord_addresses": {
            "name": "parse_landlord_addresses",
            "location": 67,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {}
        },
        "ParsedAddress.is_populated": {
            "name": "is_populated",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParsedAddress.short_desc": {
            "name": "short_desc",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lob-fun-master/test_parseaddrs.py": {
        "test_parse_address_works": {
            "name": "test_parse_address_works",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "raw": [
                    "str",
                    "Tuple[str]",
                    "bool"
                ],
                "expected": [
                    "str",
                    "Tuple[str]",
                    "bool"
                ]
            }
        },
        "test_is_populated_works": {
            "name": "test_is_populated_works",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_short_desc_works": {
            "name": "test_short_desc_works",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_works": {
            "name": "test_clean_works",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "value": [
                    "str",
                    "Set[str]",
                    "Tuple[bytes,bytes,bytes]",
                    "Tuple[Union[bytes,bytes,bytes]]"
                ],
                "expected": [
                    "str",
                    "Set[str]",
                    "Tuple[bytes,bytes,bytes]",
                    "Tuple[Union[bytes,bytes,bytes]]"
                ]
            }
        }
    },
    "lob-fun-master/verifyaddrs.py": {
        "get_verification": {
            "name": "get_verification",
            "location": 24,
            "return": [
                "bool",
                "Optional[str]",
                "Optional[Mapping[str, Any]]",
                "int"
            ],
            "arguments": {
                "addr": [
                    "int"
                ]
            }
        },
        "get_cached_verification": {
            "name": "get_cached_verification",
            "location": 36,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "addr": [
                    "bool",
                    "Optional[bool]",
                    "List[int]",
                    "None",
                    "str",
                    "Optional[int]",
                    "parseaddrs.ParsedAddress"
                ]
            }
        },
        "load_from_cache": {
            "name": "load_from_cache",
            "location": 47,
            "return": [
                "bytes",
                "bool",
                "str",
                "Dict[str, Dict[str, str]]"
            ],
            "arguments": {}
        },
        "save_to_cache": {
            "name": "save_to_cache",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "vmap": [
                    "bytes",
                    "str",
                    "int"
                ]
            }
        }
    }
}
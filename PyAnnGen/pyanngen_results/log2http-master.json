{
    "log2http-master/setup.py": {},
    "log2http-master/log2http/app.py": {
        "main": {
            "name": "main",
            "location": 155,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "load_config": {
            "name": "load_config",
            "location": 171,
            "return": [
                "None",
                "str",
                "Dict[str,Any]",
                "Optional[Tuple[str,str]]",
                "Optional[str]"
            ],
            "arguments": {
                "path": [
                    "str",
                    "pathlib.Path",
                    "Union[str,pathlib.Path]",
                    "cerulean.path.Path"
                ]
            }
        },
        "LogCollector.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "Dict[str,Any]",
                    "Dict",
                    "str"
                ]
            }
        },
        "LogCollector.__enter__": {
            "name": "__enter__",
            "location": 56,
            "return": [
                "LogCollector"
            ],
            "arguments": {
                "self": [
                    "_TLogCollector@@LogCollector@@"
                ]
            }
        },
        "LogCollector.__exit__": {
            "name": "__exit__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LogCollector.send": {
            "name": "send",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_idx": [
                    "str",
                    "Dict",
                    "BinaryIO",
                    "bool",
                    "Optional[pathlib.Path]",
                    "None"
                ]
            }
        },
        "LogCollector.open": {
            "name": "open",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LogCollector.close": {
            "name": "close",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LogCollector.reset_lines": {
            "name": "reset_lines",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_idx": [
                    "int",
                    "str",
                    "Dict[str,Any]",
                    "pathlib.Path",
                    "Mapping",
                    "Mapping[str,str]"
                ]
            }
        },
        "LogCollector.collect": {
            "name": "collect",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LogCollector.start": {
            "name": "start",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "interval": [
                    "int",
                    "Tuple[str,str]",
                    "str",
                    "List"
                ]
            }
        },
        "LogCollector.lines": {
            "name": "lines",
            "location": 147,
            "return": [
                "List",
                "List[str]",
                "List[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LogCollector._signal_handler": {
            "name": "_signal_handler",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "log2http-master/log2http/const.py": {},
    "log2http-master/log2http/__init__.py": {},
    "log2http-master/tests/__init__.py": {},
    "log2http-master/tests/unit/test_log2http.py": {
        "Log2HttpTestCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log2HttpTestCase.tearDown": {
            "name": "tearDown",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log2HttpTestCase.test_config_loader": {
            "name": "test_config_loader",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log2HttpTestCase.test_fail_on_invalid_config": {
            "name": "test_fail_on_invalid_config",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Log2HttpTestCase.test_collect": {
            "name": "test_collect",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_post": []
            }
        }
    },
    "log2http-master/tests/unit/__init__.py": {}
}
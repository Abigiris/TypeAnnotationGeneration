{
    "logmon-master/logmon/alert.py": {
        "BaseAlert.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseAlert.recover": {
            "name": "recover",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrafficAlert.__str__": {
            "name": "__str__",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "logmon-master/logmon/display.py": {
        "LineBox2.set_title": {
            "name": "set_title",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "str"
                ],
                "attr": [
                    "str"
                ]
            }
        },
        "Display.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "monitor": [
                    "int",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "str",
                    "Union[str, int]",
                    "bool"
                ],
                "refresh_rate": [
                    "float"
                ]
            }
        },
        "Display._init_left_panels": {
            "name": "_init_left_panels",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Display._init_right_panels": {
            "name": "_init_right_panels",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Display.update_alerts": {
            "name": "update_alerts",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_loop": [
                    "dict",
                    "None",
                    "bytes",
                    "dict[, ]",
                    "Type[object]",
                    "Dict[str, Any]",
                    "typing.Type",
                    "Dict[str, Dict[str, str]]",
                    "dict[str, typing.Any]",
                    "dict[str, dict[str, str]]"
                ],
                "data": [
                    "Dict[str, Any]",
                    "None",
                    "Optional[IO[bytes]]",
                    "dict[str, typing.Any]",
                    "str",
                    "Tuple[bytes]",
                    "typing.IO",
                    "dict",
                    "tuple[bytes]",
                    "dict[, ]"
                ]
            }
        },
        "Display.update": {
            "name": "update",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_loop": [
                    "bool",
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "Union[int, str]",
                    "time.Time",
                    "int"
                ],
                "data": [
                    "Dict[str, Any]",
                    "None",
                    "dict",
                    "str",
                    "dict[str, typing.Any]",
                    "List[Dict[str, Any]]",
                    "dict[, ]",
                    "list[dict[str, typing.Any]]",
                    "list",
                    "list[]"
                ]
            }
        },
        "Display.update_info": {
            "name": "update_info",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_loop": [
                    "Dict[str, Any]",
                    "None",
                    "str",
                    "List[dict]",
                    "dict[str, typing.Any]",
                    "list[dict[, ]]",
                    "Dict[str, Dict[str, str]]",
                    "dict[str, dict[str, str]]"
                ],
                "data": [
                    "Optional[bool]",
                    "None",
                    "str",
                    "dict",
                    "bool",
                    "dict[, ]",
                    "Iterable",
                    "List[bytes]",
                    "list[bytes]"
                ]
            }
        },
        "Display.update_summary": {
            "name": "update_summary",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_loop": [
                    "dict",
                    "None",
                    "bytes",
                    "dict[, ]",
                    "Type[object]",
                    "Dict[str, Any]",
                    "typing.Type",
                    "Dict[str, Dict[str, str]]",
                    "dict[str, typing.Any]",
                    "dict[str, dict[str, str]]"
                ],
                "data": [
                    "Dict[str, Any]",
                    "None",
                    "Optional[IO[bytes]]",
                    "dict[str, typing.Any]",
                    "str",
                    "Tuple[bytes]",
                    "typing.IO",
                    "dict",
                    "tuple[bytes]",
                    "dict[, ]"
                ]
            }
        },
        "Display.run": {
            "name": "run",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Display.close": {
            "name": "close",
            "location": 253,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Display.strfdelta": {
            "name": "strfdelta",
            "location": 256,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "tdelta": [
                    "_datetime.timedelta"
                ],
                "fmt": [
                    "str"
                ]
            }
        },
        "Display.__init__.handle_inputs": {
            "name": "handle_inputs",
            "location": 64,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "input": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "logmon-master/logmon/log_utils.py": {
        "LogItem.parse_line": {
            "name": "parse_line",
            "location": 19,
            "return": [
                "LogItem"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "LogTailer.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ]
            }
        },
        "LogTailer.get_new_lines": {
            "name": "get_new_lines",
            "location": 64,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "logmon-master/logmon/monitor.py": {
        "HTTPLogMonitor.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": [
                    "str"
                ],
                "alert_duration": [
                    "int"
                ],
                "alert_threshold": [
                    "int"
                ],
                "refresh_rate": [
                    "float"
                ]
            }
        },
        "HTTPLogMonitor.update": {
            "name": "update",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPLogMonitor.remove_old_logs": {
            "name": "remove_old_logs",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPLogMonitor.update_alert_status": {
            "name": "update_alert_status",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "logmon-master/logmon/__init__.py": {},
    "logmon-master/logmon/__main__.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "logmon-master/test/test_alert.py": {
        "TestAlertLogic.test_alert_triggered": {
            "name": "test_alert_triggered",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAlertLogic.test_alert_duration": {
            "name": "test_alert_duration",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "logmon-master/test/__init__.py": {}
}
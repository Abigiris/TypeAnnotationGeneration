{
    "magichttp-master/examples/echo_client.py": {
        "_EchoClientProtocol.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_EchoClientProtocol.connection_made": {
            "name": "connection_made",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "bool",
                    "asyncio.Transport"
                ]
            }
        },
        "_EchoClientProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "Optional[BaseException]",
                    "Callable",
                    "None",
                    "str",
                    "BaseException"
                ]
            }
        }
    },
    "magichttp-master/examples/echo_server.py": {
        "_EchoServerProtocol.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_EchoServerProtocol.connection_made": {
            "name": "connection_made",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "bool",
                    "asyncio.Transport"
                ]
            }
        },
        "_EchoServerProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "Optional[BaseException]",
                    "Callable",
                    "None",
                    "str",
                    "BaseException"
                ]
            }
        },
        "EchoHttpServer.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EchoHttpServer._create_protocol": {
            "name": "_create_protocol",
            "location": 71,
            "return": [
                "_EchoServerProtocol"
            ],
            "arguments": {
                "self": []
            }
        },
        "_print_welcome_msg": {
            "name": "_print_welcome_msg",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "magichttp-master/magichttp/constants.py": {},
    "magichttp-master/magichttp/initials.py": {
        "HttpRequestInitial.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "Dict[str,Any]",
                    "Optional[Dict[str,Any]]",
                    "None",
                    "Dict[str,str]",
                    "Optional[int]",
                    "int",
                    "Exception",
                    "bool",
                    "str",
                    "Mapping",
                    "Optional[Mapping]",
                    "Callable",
                    "Union[Callable,str]"
                ]
            }
        },
        "HttpRequestInitial.method": {
            "name": "method",
            "location": 65,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.version": {
            "name": "version",
            "location": 69,
            "return": [
                "str",
                "Callable[[], bool]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.uri": {
            "name": "uri",
            "location": 73,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.authority": {
            "name": "authority",
            "location": 77,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.scheme": {
            "name": "scheme",
            "location": 84,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.headers": {
            "name": "headers",
            "location": 91,
            "return": [
                "int",
                "dict",
                "Dict[str, Type]",
                "str",
                "Dict[str, float]",
                "Dict[str, str]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.__repr__": {
            "name": "__repr__",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestInitial.__str__": {
            "name": "__str__",
            "location": 113,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseInitial.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int"
                ]
            }
        },
        "HttpResponseInitial.status_code": {
            "name": "status_code",
            "location": 137,
            "return": [
                "int",
                "bytes",
                "dict",
                "str",
                "Dict[str, str]",
                "Dict[str, Tuple[Any, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseInitial.version": {
            "name": "version",
            "location": 141,
            "return": [
                "str",
                "Callable[[], bool]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseInitial.headers": {
            "name": "headers",
            "location": 145,
            "return": [
                "int",
                "dict",
                "Dict[str, Type]",
                "str",
                "Dict[str, float]",
                "Dict[str, str]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseInitial.__repr__": {
            "name": "__repr__",
            "location": 148,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseInitial.__str__": {
            "name": "__str__",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magichttp-master/magichttp/protocols.py": {
        "BaseHttpProtocolDelegate.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "bool",
                    "int"
                ],
                "max_initial_size": [
                    "bool",
                    "int"
                ]
            }
        },
        "BaseHttpProtocolDelegate.data_received": {
            "name": "data_received",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Iterable[bytes]",
                    "List[Dict]",
                    "List[List[Any]]"
                ]
            }
        },
        "BaseHttpProtocolDelegate.eof_received": {
            "name": "eof_received",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocolDelegate.close": {
            "name": "close",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocolDelegate.abort": {
            "name": "abort",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocolDelegate.connection_lost": {
            "name": "connection_lost",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "BaseHttpProtocol.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.connection_made": {
            "name": "connection_made",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "int",
                    "str"
                ]
            }
        },
        "BaseHttpProtocol._delegate": {
            "name": "_delegate",
            "location": 97,
            "return": [
                "BaseHttpProtocolDelegate",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.transport": {
            "name": "transport",
            "location": 101,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.pause_writing": {
            "name": "pause_writing",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.resume_writing": {
            "name": "resume_writing",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.data_received": {
            "name": "data_received",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "str",
                    "bytes"
                ]
            }
        },
        "BaseHttpProtocol.eof_received": {
            "name": "eof_received",
            "location": 131,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.close": {
            "name": "close",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str",
                    "bool",
                    "asyncio.Transport"
                ]
            }
        },
        "HttpServerProtocolDelegate.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "bool",
                    "int"
                ],
                "max_initial_size": [
                    "bool",
                    "int"
                ]
            }
        },
        "HttpServerProtocol.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpServerProtocol._delegate": {
            "name": "_delegate",
            "location": 184,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpServerProtocol.connection_made": {
            "name": "connection_made",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "bool",
                    "asyncio.Transport"
                ]
            }
        },
        "HttpServerProtocol.__aiter__": {
            "name": "__aiter__",
            "location": 197,
            "return": [
                "HttpServerProtocol"
            ],
            "arguments": {
                "self": [
                    "_THttpServerProtocol@@HttpServerProtocol@@"
                ]
            }
        },
        "HttpClientProtocolDelegate.__init__": {
            "name": "__init__",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "int",
                    "List[str]",
                    "Callable",
                    "constants.HttpVersion",
                    "bool"
                ],
                "max_initial_size": [
                    "int",
                    "List[str]",
                    "Callable",
                    "constants.HttpVersion",
                    "bool"
                ],
                "http_version": [
                    "int",
                    "List[str]",
                    "Callable",
                    "constants.HttpVersion",
                    "bool"
                ]
            }
        },
        "HttpClientProtocol.__init__": {
            "name": "__init__",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpClientProtocol._delegate": {
            "name": "_delegate",
            "location": 258,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpClientProtocol.connection_made": {
            "name": "connection_made",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "bool",
                    "asyncio.Transport"
                ]
            }
        }
    },
    "magichttp-master/magichttp/readers.py": {
        "RequestInitialTooLargeError.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "RequestInitialTooLargeError.write_response": {
            "name": "write_response",
            "location": 75,
            "return": [
                "Tuple[str, int, Dict[str, str]]",
                "Tuple[int, str]",
                "tuple",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int",
                    "List[str]",
                    "List[Dict[str, Any]]",
                    "constants.HttpStatusCode"
                ]
            }
        },
        "RequestInitialMalformedError.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "RequestInitialMalformedError.write_response": {
            "name": "write_response",
            "location": 156,
            "return": [
                "Tuple[str, int, Dict[str, str]]",
                "Tuple[int, str]",
                "tuple",
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int",
                    "List[str]",
                    "List[Dict[str, Any]]",
                    "constants.HttpStatusCode"
                ]
            }
        },
        "BaseHttpStreamReaderDelegate.pause_reading": {
            "name": "pause_reading",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReaderDelegate.resume_reading": {
            "name": "resume_reading",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReaderDelegate.abort": {
            "name": "abort",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader.__init__": {
            "name": "__init__",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "BaseHttpStreamReader._append_data": {
            "name": "_append_data",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "Iterable[T]",
                    "T"
                ]
            }
        },
        "BaseHttpStreamReader._append_end": {
            "name": "_append_end",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "BaseHttpStreamReader._raise_exc_if_finished": {
            "name": "_raise_exc_if_finished",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader._raise_exc_if_end_appended": {
            "name": "_raise_exc_if_end_appended",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader.max_buf_len": {
            "name": "max_buf_len",
            "location": 291,
            "return": [
                "None",
                "float",
                "int",
                "Dict[str,tuple[Union[str,int,int]]]"
            ],
            "arguments": {
                "self": [],
                "new_max_buf_len": [
                    "str"
                ]
            }
        },
        "BaseHttpStreamReader.__len__": {
            "name": "__len__",
            "location": 301,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader.busy": {
            "name": "busy",
            "location": 442,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader.end_appended": {
            "name": "end_appended",
            "location": 454,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader.finished": {
            "name": "finished",
            "location": 457,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamReader.abort": {
            "name": "abort",
            "location": 463,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestReaderDelegate.write_response": {
            "name": "write_response",
            "location": 474,
            "return": [
                "writers.HttpResponseWriter",
                "None"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "List",
                    "constants.HttpStatusCode",
                    "int",
                    "str",
                    "None",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "HttpRequestReader.__init__": {
            "name": "__init__",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "Optional[asyncio.AbstractEventLoop]",
                    "bool",
                    "None",
                    "Dict[str,Any]",
                    "Callable[[Any,Any],bool]",
                    "Callable[A,bool]"
                ]
            }
        },
        "HttpRequestReader.initial": {
            "name": "initial",
            "location": 504,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestReader.writer": {
            "name": "writer",
            "location": 511,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestReader.write_response": {
            "name": "write_response",
            "location": 523,
            "return": [
                "int",
                "Dict",
                "Dict[int,str]",
                "str",
                "Dict[str,str]",
                "Callable",
                "Callable[[None,None],bool]"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int",
                    "bytes",
                    "MutableMapping",
                    "constants.HttpStatusCode"
                ]
            }
        },
        "HttpResponseReader.__init__": {
            "name": "__init__",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "Optional[asyncio.AbstractEventLoop]",
                    "bool",
                    "None",
                    "Dict[str,Any]",
                    "Callable[[Any,Any],bool]",
                    "Callable[A,bool]"
                ]
            }
        },
        "HttpResponseReader.initial": {
            "name": "initial",
            "location": 564,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseReader.writer": {
            "name": "writer",
            "location": 571,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magichttp-master/magichttp/writers.py": {
        "BaseHttpStreamWriterDelegate.write_data": {
            "name": "write_data",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "str",
                    "bool",
                    "List[List[Any]]",
                    "List[list[Any]]"
                ],
                "finished": [
                    "bool",
                    "bytes",
                    "str",
                    "List[List[Any]]"
                ]
            }
        },
        "BaseHttpStreamWriterDelegate.abort": {
            "name": "abort",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamWriter.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "BaseHttpStreamWriter.write": {
            "name": "write",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Dict",
                    "int",
                    "Dict[str,Any]",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        },
        "BaseHttpStreamWriter.finish": {
            "name": "finish",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "str",
                    "Dict",
                    "Tuple[int,int,bytearray]",
                    "int"
                ]
            }
        },
        "BaseHttpStreamWriter.finished": {
            "name": "finished",
            "location": 165,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseHttpStreamWriter.abort": {
            "name": "abort",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriter.__init__": {
            "name": "__init__",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "Optional[asyncio.AbstractEventLoop]",
                    "bool",
                    "None",
                    "Dict[str,Any]",
                    "Callable[[Any,Any],bool]",
                    "Callable[Any,Any,bool]"
                ]
            }
        },
        "HttpRequestWriter.initial": {
            "name": "initial",
            "location": 214,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriter.reader": {
            "name": "reader",
            "location": 221,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseWriter.__init__": {
            "name": "__init__",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__delegate": [
                    "Optional[asyncio.AbstractEventLoop]",
                    "bool",
                    "None",
                    "Dict[str,Any]",
                    "Callable[[Any,Any],bool]",
                    "Callable[Any,Any,bool]"
                ]
            }
        },
        "HttpResponseWriter.initial": {
            "name": "initial",
            "location": 267,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseWriter.reader": {
            "name": "reader",
            "location": 274,
            "return": [
                "None",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magichttp-master/magichttp/_version.py": {},
    "magichttp-master/magichttp/__init__.py": {},
    "magichttp-master/magichttp/h1impl/composers.py": {
        "_compose_initial_bytes": {
            "name": "_compose_initial_bytes",
            "location": 29,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "compose_request_initial": {
            "name": "compose_request_initial",
            "location": 42,
            "return": [
                "Tuple[(initials.HttpRequestInitial, bytes)]"
            ],
            "arguments": {
                "method": [
                    "str",
                    "None",
                    "Optional[str]",
                    "int",
                    "Optional[int]",
                    "constants.HttpRequestMethod"
                ]
            }
        },
        "compose_response_initial": {
            "name": "compose_response_initial",
            "location": 86,
            "return": [
                "Tuple[(initials.HttpResponseInitial, bytes)]"
            ],
            "arguments": {
                "status_code": [
                    "bool",
                    "constants.HttpStatusCode",
                    "str",
                    "List[Dict[str,str]]",
                    "Dict[int,Dict]"
                ]
            }
        },
        "compose_chunked_body": {
            "name": "compose_chunked_body",
            "location": 176,
            "return": [
                "bytes"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "str",
                    "dict"
                ],
                "finished": [
                    "bool",
                    "bytes",
                    "Optional[dict]",
                    "Set[str]"
                ]
            }
        }
    },
    "magichttp-master/magichttp/h1impl/impls.py": {
        "BaseH1Impl.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "BaseH1Impl._pause_reading": {
            "name": "_pause_reading",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1Impl._resume_reading": {
            "name": "_resume_reading",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1Impl._stream": {
            "name": "_stream",
            "location": 59,
            "return": [
                "stream_mgrs.BaseH1StreamManager",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1Impl.data_received": {
            "name": "data_received",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "Iterable[T]",
                    "T"
                ]
            }
        },
        "BaseH1Impl.eof_received": {
            "name": "eof_received",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1Impl.close": {
            "name": "close",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1Impl._set_abort_error": {
            "name": "_set_abort_error",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__cause": [
                    "Optional[BaseException]",
                    "BaseException",
                    "bool",
                    "List[str]",
                    "str",
                    "None",
                    "Dict"
                ]
            }
        },
        "BaseH1Impl.abort": {
            "name": "abort",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1Impl.connection_lost": {
            "name": "connection_lost",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str"
                ]
            }
        },
        "H1ServerImpl.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "int",
                    "float",
                    "str"
                ],
                "max_initial_size": [
                    "int",
                    "str",
                    "Sequence[int]",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "H1ServerImpl._stream": {
            "name": "_stream",
            "location": 118,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ServerImpl._set_abort_error": {
            "name": "_set_abort_error",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__cause": [
                    "str",
                    "int",
                    "None",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "H1ClientImpl.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "str",
                    "bool",
                    "int"
                ],
                "max_initial_size": [
                    "int",
                    "float",
                    "str",
                    "bool",
                    "None",
                    "Optional[int]"
                ],
                "http_version": [
                    "int",
                    "BinaryIO",
                    "str",
                    "float",
                    "List[str]",
                    "bytes",
                    "bool"
                ]
            }
        },
        "H1ClientImpl._stream": {
            "name": "_stream",
            "location": 182,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ClientImpl._set_abort_error": {
            "name": "_set_abort_error",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__cause": [
                    "str",
                    "int",
                    "None",
                    "Optional[str]",
                    "bool"
                ]
            }
        }
    },
    "magichttp-master/magichttp/h1impl/parsers.py": {
        "is_chunked_body": {
            "name": "is_chunked_body",
            "location": 48,
            "return": [
                "bool",
                "int",
                "List[str]",
                "Dict[str,Tuple[int,int]]",
                "Parameter",
                "recidiviz.common.constants.entity_enum.EntityEnumMeta"
            ],
            "arguments": {
                "te_header_bytes": [
                    "str",
                    "List[int]",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "_parse_content_length_header": {
            "name": "_parse_content_length_header",
            "location": 70,
            "return": [
                "int"
            ],
            "arguments": {
                "cl_header_str": [
                    "Optional[str]",
                    "str",
                    "constants.HttpRequestMethod",
                    "dict"
                ]
            }
        },
        "_split_initial_lines": {
            "name": "_split_initial_lines",
            "location": 80,
            "return": [
                "None",
                "bool",
                "Optional[Dict]",
                "Optional[str]",
                "Optional[Literal[only_clustered,include_clustered]]"
            ],
            "arguments": {
                "buf": [
                    "bytes",
                    "str",
                    "Callable",
                    "int",
                    "BinaryIO"
                ]
            }
        },
        "_parse_headers": {
            "name": "_parse_headers",
            "location": 92,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {
                "header_lines": [
                    "List[tuple[Union[str,str]]]",
                    "str",
                    "List[Tuple[str,str]]",
                    "bool"
                ]
            }
        },
        "parse_request_initial": {
            "name": "parse_request_initial",
            "location": 109,
            "return": [
                "Optional[initials.HttpRequestInitial]"
            ],
            "arguments": {
                "buf": [
                    "str",
                    "Union[str,IO]",
                    "bytes",
                    "float",
                    "IO"
                ]
            }
        },
        "parse_response_initial": {
            "name": "parse_response_initial",
            "location": 140,
            "return": [
                "None",
                "Union[str,None]",
                "int",
                "Dict",
                "Optional[Dict[str,Any]]"
            ],
            "arguments": {
                "buf": [
                    "str"
                ],
                "req_initial": [
                    "Dict",
                    "Callable",
                    "Optional[List[Any]]",
                    "str",
                    "List[Any]",
                    "None"
                ]
            }
        },
        "discover_request_body_length": {
            "name": "discover_request_body_length",
            "location": 174,
            "return": [
                "int"
            ],
            "arguments": {
                "initial": [
                    "Dict",
                    "str",
                    "Mapping[str,Any]",
                    "Mapping"
                ]
            }
        },
        "discover_response_body_length": {
            "name": "discover_response_body_length",
            "location": 189,
            "return": [
                "int"
            ],
            "arguments": {
                "initial": [
                    "str",
                    "int",
                    "List",
                    "List[str]"
                ]
            }
        },
        "parse_chunk_length": {
            "name": "parse_chunk_length",
            "location": 223,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "buf": [
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "magichttp-master/magichttp/h1impl/stream_mgrs.py": {
        "BaseH1StreamManager.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__impl": [
                    "int",
                    "List[int]",
                    "bool"
                ],
                "buf": [
                    "int",
                    "List[int]",
                    "bool"
                ],
                "max_initial_size": [
                    "int",
                    "str",
                    "Union[None,int]",
                    "float",
                    "None"
                ]
            }
        },
        "BaseH1StreamManager.pause_reading": {
            "name": "pause_reading",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager.resume_reading": {
            "name": "resume_reading",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._reader_fur": {
            "name": "_reader_fur",
            "location": 100,
            "return": [
                "_ReaderFuture[readers.BaseHttpStreamReader]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._writer": {
            "name": "_writer",
            "location": 107,
            "return": [
                "Optional[writers.BaseHttpStreamWriter]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._try_parse_initial": {
            "name": "_try_parse_initial",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._try_parse_chunked_body": {
            "name": "_try_parse_chunked_body",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._try_parse_body": {
            "name": "_try_parse_body",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._data_appended": {
            "name": "_data_appended",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._eof_received": {
            "name": "_eof_received",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._read_finished": {
            "name": "_read_finished",
            "location": 234,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._finished": {
            "name": "_finished",
            "location": 243,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._is_last_stream": {
            "name": "_is_last_stream",
            "location": 257,
            "return": [
                "Optional[bool]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._mark_as_last_stream": {
            "name": "_mark_as_last_stream",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager.write_data": {
            "name": "write_data",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "Dict"
                ],
                "finished": [
                    "bool",
                    "bytes",
                    "int"
                ]
            }
        },
        "BaseH1StreamManager._maybe_cleanup": {
            "name": "_maybe_cleanup",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager.abort": {
            "name": "abort",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseH1StreamManager._set_read_exception": {
            "name": "_set_read_exception",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "int",
                    "Dict[str,Any]",
                    "Optional[int]",
                    "str",
                    "None"
                ]
            }
        },
        "BaseH1StreamManager._set_write_exception": {
            "name": "_set_write_exception",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "bool",
                    "str",
                    "Iterable[str]"
                ]
            }
        },
        "BaseH1StreamManager._set_abort_error": {
            "name": "_set_abort_error",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__cause": [
                    "Optional[BaseException]",
                    "BaseException",
                    "int",
                    "Dict",
                    "None",
                    "Tuple[int,int,int,int]",
                    "Tuple[Union[int,int,int,int]]"
                ]
            }
        },
        "BaseH1StreamManager._connection_lost": {
            "name": "_connection_lost",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str"
                ]
            }
        },
        "H1ClientStreamManager.__init__": {
            "name": "__init__",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__impl": [
                    "int",
                    "bytearray",
                    "bool"
                ],
                "buf": [
                    "int",
                    "bytearray",
                    "bool"
                ],
                "max_initial_size": [
                    "int",
                    "bytearray",
                    "bool"
                ],
                "http_version": [
                    "int",
                    "bool",
                    "bytes",
                    "List[Any]",
                    "str",
                    "Optional[List[Any]]",
                    "None"
                ]
            }
        },
        "H1ClientStreamManager._reader_fur": {
            "name": "_reader_fur",
            "location": 398,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ClientStreamManager._writer": {
            "name": "_writer",
            "location": 402,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ClientStreamManager._try_parse_initial": {
            "name": "_try_parse_initial",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ClientStreamManager._write_request": {
            "name": "_write_request",
            "location": 431,
            "return": [
                "writers.HttpRequestWriter"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str",
                    "Optional[str]",
                    "Callable",
                    "None",
                    "bool",
                    "constants.HttpRequestMethod",
                    "asyncio.StreamWriter"
                ]
            }
        },
        "H1ClientStreamManager._is_last_stream": {
            "name": "_is_last_stream",
            "location": 485,
            "return": [
                "Optional[str]",
                "str",
                "None",
                "List",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ServerStreamManager.__init__": {
            "name": "__init__",
            "location": 545,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "__impl": [
                    "int",
                    "bytearray"
                ],
                "buf": [
                    "int",
                    "bytearray"
                ],
                "max_initial_size": [
                    "int",
                    "bytearray"
                ]
            }
        },
        "H1ServerStreamManager._reader_fur": {
            "name": "_reader_fur",
            "location": 562,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ServerStreamManager._writer": {
            "name": "_writer",
            "location": 566,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ServerStreamManager._try_parse_initial": {
            "name": "_try_parse_initial",
            "location": 569,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ServerStreamManager.write_response": {
            "name": "write_response",
            "location": 595,
            "return": [
                "writers.HttpResponseWriter"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int",
                    "constants.HttpStatusCode",
                    "MutableMapping",
                    "List[dict[str,Any]]",
                    "List[Dict[str,Any]]"
                ]
            }
        },
        "H1ServerStreamManager._is_last_stream": {
            "name": "_is_last_stream",
            "location": 650,
            "return": [
                "Optional[str]",
                "str",
                "None",
                "List",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ReaderFuture.cancel": {
            "name": "cancel",
            "location": 52,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "None",
                    "bytes",
                    "Dict",
                    "Optional[str]"
                ]
            }
        }
    },
    "magichttp-master/magichttp/h1impl/__init__.py": {},
    "magichttp-master/tests/test_h1impl_composers.py": {
        "test_simple_request": {
            "name": "test_simple_request",
            "location": 36,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_http_10_request": {
            "name": "test_http_10_request",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_simple_response": {
            "name": "test_simple_response",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_request": {
            "name": "test_bad_request",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_http_10": {
            "name": "test_http_10",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_keep_alive": {
            "name": "test_keep_alive",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_http_10_keep_alive": {
            "name": "test_http_10_keep_alive",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_keep_alive": {
            "name": "test_no_keep_alive",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_204_keep_alive": {
            "name": "test_204_keep_alive",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_304_keep_alive": {
            "name": "test_304_keep_alive",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_head_keep_alive": {
            "name": "test_head_keep_alive",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_normal_chunk": {
            "name": "test_normal_chunk",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_chunk": {
            "name": "test_empty_chunk",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_normal_last_chunk": {
            "name": "test_normal_last_chunk",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_last_chunk": {
            "name": "test_empty_last_chunk",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "magichttp-master/tests/test_h1impl_parsers.py": {
        "H1IsChunkedBodyTestCase.test_chunked": {
            "name": "test_chunked",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1IsChunkedBodyTestCase.test_identity": {
            "name": "test_identity",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1IsChunkedBodyTestCase.test_malformed_transfer_encodings": {
            "name": "test_malformed_transfer_encodings",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseRequestInitialTestCase.test_simple_request": {
            "name": "test_simple_request",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseRequestInitialTestCase.test_simple_post_request": {
            "name": "test_simple_post_request",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseRequestInitialTestCase.test_malformed_requests": {
            "name": "test_malformed_requests",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseResponseInitialTestCase.test_simple_response": {
            "name": "test_simple_response",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseResponseInitialTestCase.test_malformed_responses": {
            "name": "test_malformed_responses",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverRequestBodyLengthTestCase.test_upgrade_request": {
            "name": "test_upgrade_request",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverRequestBodyLengthTestCase.test_request_chunked": {
            "name": "test_request_chunked",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverRequestBodyLengthTestCase.test_request_content_length": {
            "name": "test_request_content_length",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverRequestBodyLengthTestCase.test_request_malformed_content_length": {
            "name": "test_request_malformed_content_length",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverRequestBodyLengthTestCase.test_request_no_body": {
            "name": "test_request_no_body",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverResponseBodyLengthTestCase.test_upgrade_response": {
            "name": "test_upgrade_response",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverResponseBodyLengthTestCase.test_head_request": {
            "name": "test_head_request",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverResponseBodyLengthTestCase.test_no_content": {
            "name": "test_no_content",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverResponseBodyLengthTestCase.test_response_chunked": {
            "name": "test_response_chunked",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverResponseBodyLengthTestCase.test_response_endless": {
            "name": "test_response_endless",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1DiscoverResponseBodyLengthTestCase.test_response_content_length": {
            "name": "test_response_content_length",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseChunkLengthTestCase.test_valid_chunk_length": {
            "name": "test_valid_chunk_length",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseChunkLengthTestCase.test_valid_last_chunk": {
            "name": "test_valid_last_chunk",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "H1ParseChunkLengthTestCase.test_malformed_chunk_lengths": {
            "name": "test_malformed_chunk_lengths",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magichttp-master/tests/test_helper.py": {
        "TestHelper.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHelper.run_async_test": {
            "name": "run_async_test",
            "location": 31,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "coro_fn": [
                    "bool",
                    "Generator",
                    "Union[bool,str]",
                    "str"
                ]
            }
        },
        "TestHelper.create_task": {
            "name": "create_task",
            "location": 68,
            "return": [
                "asyncio.tasks.Task"
            ],
            "arguments": {
                "self": [],
                "coro": [
                    "Awaitable[None]",
                    "List[str]",
                    "collections.abc.Awaitable[None]"
                ]
            }
        },
        "TestHelper.get_version_str": {
            "name": "get_version_str",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHelper.get_version_bytes": {
            "name": "get_version_bytes",
            "location": 78,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHelper.assert_initial_bytes": {
            "name": "assert_initial_bytes",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buf": [
                    "bytes",
                    "Callable",
                    "bool",
                    "Dict"
                ],
                "first_line": [
                    "str",
                    "Dict[str,Any]",
                    "T"
                ]
            }
        },
        "TestHelper.run_async_test.wrapper": {
            "name": "wrapper",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "_self": [
                    "str",
                    "Callable",
                    "Sequence[str]",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "magichttp-master/tests/test_protocols.py": {
        "TransportMock.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportMock._pop_stored_data": {
            "name": "_pop_stored_data",
            "location": 49,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportMock.pause_reading": {
            "name": "pause_reading",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportMock.resume_reading": {
            "name": "resume_reading",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportMock.close": {
            "name": "close",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportMock.is_closing": {
            "name": "is_closing",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransportMock.write": {
            "name": "write",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "Dict[str,Any]",
                    "Sequence[str]",
                    "int",
                    "List[List[Any]]",
                    "List[list[Any]]"
                ]
            }
        },
        "TransportMock.get_extra_info": {
            "name": "get_extra_info",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str,Dict[str,Any]]",
                    "Dict[str,str]",
                    "Dict[str,dict[str,Any]]",
                    "Optional[Mapping[str,Any]]",
                    "Mapping",
                    "None"
                ]
            }
        },
        "HttpClientProtocolTestCase.test_init": {
            "name": "test_init",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpServerProtocolTestCase.test_init": {
            "name": "test_init",
            "location": 893,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magichttp-master/tests/test_readers.py": {
        "ReaderDelegateMock.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderDelegateMock.pause_reading": {
            "name": "pause_reading",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderDelegateMock.resume_reading": {
            "name": "resume_reading",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderDelegateMock.abort": {
            "name": "abort",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderDelegateMock.write_response": {
            "name": "write_response",
            "location": 58,
            "return": [
                "Dict",
                "str",
                "List[tuple[Union[str,str]]]",
                "Callable",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestReaderTestCase.test_init": {
            "name": "test_init",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestReaderTestCase.test_initial": {
            "name": "test_initial",
            "location": 314,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestReaderTestCase.test_write_response": {
            "name": "test_write_response",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseReaderTestCase.test_init": {
            "name": "test_init",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseReaderTestCase.test_initial": {
            "name": "test_initial",
            "location": 338,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseReaderTestCase.test_writer": {
            "name": "test_writer",
            "location": 347,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "magichttp-master/tests/test_writers.py": {
        "HttpWriterDelegateMock.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpWriterDelegateMock.write_data": {
            "name": "write_data",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[str,Any]",
                    "Dict",
                    "float",
                    "str",
                    "Mapping[str,Any]",
                    "Mapping",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ],
                "finished": [
                    "bool",
                    "str"
                ]
            }
        },
        "HttpWriterDelegateMock.abort": {
            "name": "abort",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriterTestCase.test_init": {
            "name": "test_init",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriterTestCase.test_write": {
            "name": "test_write",
            "location": 83,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriterTestCase.test_write_err": {
            "name": "test_write_err",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriterTestCase.test_finish_err": {
            "name": "test_finish_err",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriterTestCase.test_abort": {
            "name": "test_abort",
            "location": 209,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpRequestWriterTestCase.test_initial": {
            "name": "test_initial",
            "location": 219,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseWriterTestCase.test_init": {
            "name": "test_init",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseWriterTestCase.test_initial": {
            "name": "test_initial",
            "location": 244,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseWriterTestCase.test_reader": {
            "name": "test_reader",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpResponseWriterTestCase.test_reader_attr_err": {
            "name": "test_reader_attr_err",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
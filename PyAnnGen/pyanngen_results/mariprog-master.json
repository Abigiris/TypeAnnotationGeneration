{
    "mariprog-master/mariprog/main.py": {
        "parse_programme_date": {
            "name": "parse_programme_date",
            "location": 28,
            "return": [
                "_datetime.date"
            ],
            "arguments": {
                "date_string": [
                    "str"
                ]
            }
        },
        "_convert_year_str": {
            "name": "_convert_year_str",
            "location": 35,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "year_str": [
                    "_T0"
                ]
            }
        },
        "_get_header_key_from_csv": {
            "name": "_get_header_key_from_csv",
            "location": 77,
            "return": [
                "Optional[List[str]]"
            ],
            "arguments": {
                "opened_csv": [
                    "str",
                    "int",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Sequence[Dict[str, str]]",
                    "typing.Sequence[dict[str, str]]"
                ]
            }
        },
        "_convert_str_to_bool": {
            "name": "_convert_str_to_bool",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {
                "bstr": [
                    "list[str]",
                    "List[str]",
                    "bytes",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "int",
                    "typing.IO",
                    "IO",
                    "bool"
                ]
            }
        },
        "_convert_datetime_str_to_datetime": {
            "name": "_convert_datetime_str_to_datetime",
            "location": 117,
            "return": [
                "typing.Text",
                "Optional[str]",
                "datetime.datetime",
                "str",
                "datetime.date"
            ],
            "arguments": {
                "dstr": [
                    "str",
                    "int"
                ]
            }
        },
        "psa_meetings": {
            "name": "psa_meetings",
            "location": 129,
            "return": [
                "List[PSAMeeting]"
            ],
            "arguments": {
                "csv_file": [
                    "str"
                ]
            }
        },
        "parse_programme": {
            "name": "parse_programme",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "csv_file": [
                    "str"
                ]
            }
        },
        "parse_pfsa_csv": {
            "name": "parse_pfsa_csv",
            "location": 216,
            "return": [
                "List[PortFromPFSARow]"
            ],
            "arguments": {
                "csv_file": [
                    "str",
                    "bool"
                ]
            }
        },
        "parse_csv": {
            "name": "parse_csv",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "csv_file": [
                    "str",
                    "bool"
                ]
            }
        },
        "print_site_data_to_terminal": {
            "name": "print_site_data_to_terminal",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Union[str, dict]",
                    "dict[, ]"
                ]
            }
        },
        "week_port_is_in_programme": {
            "name": "week_port_is_in_programme",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "port": [
                    "str",
                    "int"
                ]
            }
        },
        "count_inspections_for_inspector": {
            "name": "count_inspections_for_inspector",
            "location": 304,
            "return": [
                "int"
            ],
            "arguments": {
                "initials": [
                    "float",
                    "str",
                    "int",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "calculate_port_within_allowed_period": {
            "name": "calculate_port_within_allowed_period",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "port": [
                    "int",
                    "bool"
                ]
            }
        },
        "in_current_programme": {
            "name": "in_current_programme",
            "location": 320,
            "return": [
                "Union[(bool, Tuple[(bool, nothing)])]"
            ],
            "arguments": {
                "port": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "print_port_inspection_expiry": {
            "name": "print_port_inspection_expiry",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "print_psa_meetings_from_date": {
            "name": "print_psa_meetings_from_date",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "date": [
                    "str",
                    "datetime.datetime",
                    "list[int]",
                    "datetime.date",
                    "List[int]"
                ],
                "comments": [
                    "bool",
                    "datetime.datetime",
                    "datetime.date",
                    "Optional[datetime.datetime]"
                ]
            }
        },
        "get_psa_assessment_data": {
            "name": "get_psa_assessment_data",
            "location": 354,
            "return": [
                "List[PSAData]"
            ],
            "arguments": {
                "csv_file": [
                    "str"
                ]
            }
        },
        "print_psa_assessment_data": {
            "name": "print_psa_assessment_data",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Inspection.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "week_begining": [
                    "Union[int, float]",
                    "int",
                    "str",
                    "Optional[str]",
                    "float",
                    "Optional[List[\"custom_index\"]]",
                    "None",
                    "bool",
                    "list[\"custom_index\"]"
                ],
                "inspection_data": [
                    "List[Dict[str, Any]]",
                    "bool",
                    "list[dict[str, typing.Any]]",
                    "Tuple[int, str, bytearray]",
                    "tuple[typing.Union[int,str,bytearray]]",
                    "Callable",
                    "typing.Callable[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "dict",
                    "dict[, ]",
                    "List[Tuple[Any, Dict]]",
                    "list[tuple[typing.Union[typing.Any,dict[, ]]]]"
                ]
            }
        },
        "Inspection.__repr__": {
            "name": "__repr__",
            "location": 49,
            "return": [
                "List[str]",
                "str",
                "Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "Inspection.facility": {
            "name": "facility",
            "location": 53,
            "return": [
                "List[str]",
                "str",
                "Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "Inspection.location": {
            "name": "location",
            "location": 57,
            "return": [
                "List[str]",
                "List[Dict[str, str]]",
                "Iterable[str]",
                "str",
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Inspection.inspectors": {
            "name": "inspectors",
            "location": 61,
            "return": [
                "list[]",
                "List[str]",
                "str",
                "Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "Inspection.comments": {
            "name": "comments",
            "location": 69,
            "return": [
                "List[str]",
                "str",
                "Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "PortFromPFSARow.__init__": {
            "name": "__init__",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "str",
                    "Dict[str, str]",
                    "Dict[str, int]"
                ]
            }
        },
        "PortFromPFSARow.parse_date_string": {
            "name": "parse_date_string",
            "location": 205,
            "return": [
                "_datetime.date"
            ],
            "arguments": {
                "self": [],
                "date_string": [
                    "str"
                ]
            }
        },
        "PortFromCSVRow.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "str",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "PortFromCSVRow.parse_date_string": {
            "name": "parse_date_string",
            "location": 250,
            "return": [
                "_datetime.date"
            ],
            "arguments": {
                "self": [],
                "date_string": [
                    "str"
                ]
            }
        },
        "PortFromCSVRow.__repr__": {
            "name": "__repr__",
            "location": 260,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
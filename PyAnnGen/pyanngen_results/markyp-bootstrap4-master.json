{
    "markyp-bootstrap4-master/demo.py": {
        "get_alert": {
            "name": "get_alert",
            "location": 193,
            "return": [
                "alerts.alert"
            ],
            "arguments": {}
        },
        "get_dismissable_alert": {
            "name": "get_dismissable_alert",
            "location": 205,
            "return": [
                "alerts.dismissable"
            ],
            "arguments": {}
        },
        "get_breadcrumb": {
            "name": "get_breadcrumb",
            "location": 217,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_breadcrumb_code": {
            "name": "get_breadcrumb_code",
            "location": 225,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_buttons": {
            "name": "get_buttons",
            "location": 236,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_buttons_large": {
            "name": "get_buttons_large",
            "location": 252,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_buttons_small": {
            "name": "get_buttons_small",
            "location": 268,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_buttons_disabled": {
            "name": "get_buttons_disabled",
            "location": 284,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_buttons_block": {
            "name": "get_buttons_block",
            "location": 300,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_buttons": {
            "name": "get_outline_buttons",
            "location": 316,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_buttons_large": {
            "name": "get_outline_buttons_large",
            "location": 332,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_buttons_small": {
            "name": "get_outline_buttons_small",
            "location": 348,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_buttons_disabled": {
            "name": "get_outline_buttons_disabled",
            "location": 364,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_buttons_block": {
            "name": "get_outline_buttons_block",
            "location": 380,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_toggle_buttons": {
            "name": "get_toggle_buttons",
            "location": 396,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_toggle_buttons_large": {
            "name": "get_toggle_buttons_large",
            "location": 412,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_toggle_buttons_small": {
            "name": "get_toggle_buttons_small",
            "location": 428,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_toggle_buttons_disabled": {
            "name": "get_toggle_buttons_disabled",
            "location": 444,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_toggle_buttons_block": {
            "name": "get_toggle_buttons_block",
            "location": 460,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_toggle_buttons": {
            "name": "get_outline_toggle_buttons",
            "location": 476,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_toggle_buttons_large": {
            "name": "get_outline_toggle_buttons_large",
            "location": 492,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_toggle_buttons_small": {
            "name": "get_outline_toggle_buttons_small",
            "location": 508,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_toggle_buttons_disabled": {
            "name": "get_outline_toggle_buttons_disabled",
            "location": 524,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_outline_toggle_buttons_block": {
            "name": "get_outline_toggle_buttons_block",
            "location": 540,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_card_left": {
            "name": "get_card_left",
            "location": 556,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_card_center": {
            "name": "get_card_center",
            "location": 572,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_card_right": {
            "name": "get_card_right",
            "location": 590,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_carousel": {
            "name": "get_carousel",
            "location": 607,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_collapse": {
            "name": "get_collapse",
            "location": 688,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_accordion": {
            "name": "get_accordion",
            "location": 728,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_dropdown": {
            "name": "get_dropdown",
            "location": 745,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_multiline_login_form": {
            "name": "get_multiline_login_form",
            "location": 782,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_grid_login_form": {
            "name": "get_grid_login_form",
            "location": 799,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_inline_login_form": {
            "name": "get_inline_login_form",
            "location": 818,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_jumbotron": {
            "name": "get_jumbotron",
            "location": 834,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_input_groups": {
            "name": "get_input_groups",
            "location": 847,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_list_group": {
            "name": "get_list_group",
            "location": 870,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {}
        },
        "get_modal": {
            "name": "get_modal",
            "location": 905,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_navbar": {
            "name": "get_navbar",
            "location": 932,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_navbar_example_code": {
            "name": "get_navbar_example_code",
            "location": 952,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_nav": {
            "name": "get_nav",
            "location": 973,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_pagination": {
            "name": "get_pagination",
            "location": 994,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {}
        },
        "get_pagination_example_code": {
            "name": "get_pagination_example_code",
            "location": 1009,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_popovers": {
            "name": "get_popovers",
            "location": 1021,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_auto_dismissed_popovers": {
            "name": "get_auto_dismissed_popovers",
            "location": 1053,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_popover_example_code": {
            "name": "get_popover_example_code",
            "location": 1090,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_progressbar": {
            "name": "get_progressbar",
            "location": 1103,
            "return": [
                "Tuple[(Any, Any, Any, Any)]"
            ],
            "arguments": {}
        },
        "get_progressbar_example_code": {
            "name": "get_progressbar_example_code",
            "location": 1116,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_tooltips": {
            "name": "get_tooltips",
            "location": 1131,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "get_tooltip_example_code": {
            "name": "get_tooltip_example_code",
            "location": 1151,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "SectionRegistry.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SectionRegistry.dropdown": {
            "name": "dropdown",
            "location": 157,
            "return": [
                "Dropdown"
            ],
            "arguments": {
                "self": []
            }
        },
        "SectionRegistry.sidebar_nav": {
            "name": "sidebar_nav",
            "location": 161,
            "return": [
                "SidebarNav"
            ],
            "arguments": {
                "self": []
            }
        },
        "SectionRegistry.items": {
            "name": "items",
            "location": 164,
            "return": [
                "dict_items[(nothing, nothing)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SectionRegistry.section": {
            "name": "section",
            "location": 167,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "SectionRegistry.subsection": {
            "name": "subsection",
            "location": 176,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SectionRegistry._get_id": {
            "name": "_get_id",
            "location": 180,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "get_pagination.create": {
            "name": "create",
            "location": 995,
            "return": [],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "SectionRegistry.Dropdown.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "registry": []
            }
        },
        "SectionRegistry.Dropdown.__str__": {
            "name": "__str__",
            "location": 126,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "SectionRegistry.SidebarNav.__init__": {
            "name": "__init__",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "registry": []
            }
        },
        "SectionRegistry.SidebarNav.__str__": {
            "name": "__str__",
            "location": 144,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/setup.py": {},
    "markyp-bootstrap4-master/markyp_bootstrap4/alerts.py": {
        "alert.primary": {
            "name": "primary",
            "location": 27,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.secondary": {
            "name": "secondary",
            "location": 39,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.success": {
            "name": "success",
            "location": 51,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.danger": {
            "name": "danger",
            "location": 63,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.warning": {
            "name": "warning",
            "location": 75,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.info": {
            "name": "info",
            "location": 87,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.light": {
            "name": "light",
            "location": 99,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.dark": {
            "name": "dark",
            "location": 111,
            "return": [
                "alert"
            ],
            "arguments": {
                "cls": [
                    "Type[_Talert]"
                ]
            }
        },
        "alert.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "alert.element_name": {
            "name": "element_name",
            "location": 143,
            "return": [
                "Text",
                "str",
                "Dict[str,Any]",
                "Container[str]",
                "int",
                "bool",
                "Union[List,Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "dismissable.__init__": {
            "name": "__init__",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/badges.py": {
        "BadgeFactory.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "Type[markyp.elements.Element]",
                    "Type"
                ]
            }
        },
        "BadgeFactory.primary": {
            "name": "primary",
            "location": 34,
            "return": [
                "type",
                "int",
                "Dict[str, List[Callable]]",
                "dict",
                "Type[T]",
                "Dict[str, Any]",
                "Dict[str, Union[str, Any]]",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.primary_pill": {
            "name": "primary_pill",
            "location": 38,
            "return": [
                "type",
                "int",
                "Dict[str, List[Callable]]",
                "dict",
                "Type[T]",
                "Dict[str, Any]",
                "Dict[str, Union[str, Any]]",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.secondary": {
            "name": "secondary",
            "location": 42,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.secondary_pill": {
            "name": "secondary_pill",
            "location": 46,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.success": {
            "name": "success",
            "location": 50,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.success_pill": {
            "name": "success_pill",
            "location": 54,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.danger": {
            "name": "danger",
            "location": 58,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.danger_pill": {
            "name": "danger_pill",
            "location": 62,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.warning": {
            "name": "warning",
            "location": 66,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.warning_pill": {
            "name": "warning_pill",
            "location": 70,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.info": {
            "name": "info",
            "location": 74,
            "return": [
                "type",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.info_pill": {
            "name": "info_pill",
            "location": 78,
            "return": [
                "type",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.light": {
            "name": "light",
            "location": 82,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.light_pill": {
            "name": "light_pill",
            "location": 86,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.dark": {
            "name": "dark",
            "location": 90,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BadgeFactory.dark_pill": {
            "name": "dark_pill",
            "location": 94,
            "return": [
                "bool",
                "int",
                "type",
                "Type",
                "Dict[str, Any]",
                "List[Dict[str, Any]]",
                "Optional[Any]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/breadcrumbs.py": {
        "custom_breadcrumb": {
            "name": "custom_breadcrumb",
            "location": 16,
            "return": [
                "Tuple[type]",
                "Dict[str, Any]",
                "str",
                "Callable[..., None]"
            ],
            "arguments": {}
        },
        "breadcrumb": {
            "name": "breadcrumb",
            "location": 39,
            "return": [
                "str",
                "dict",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {}
        },
        "breadcrumb_item": {
            "name": "breadcrumb_item",
            "location": 63,
            "return": [
                "Type",
                "type",
                "str"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/buttons.py": {
        "BaseButtonFactory.create_element": {
            "name": "create_element",
            "location": 78,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.get_css_class": {
            "name": "get_css_class",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "BaseButtonFactory.update_attributes": {
            "name": "update_attributes",
            "location": 116,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "attributes": [
                    "_T0@@"
                ]
            }
        },
        "BaseButtonFactory.primary": {
            "name": "primary",
            "location": 140,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.primary_outline": {
            "name": "primary_outline",
            "location": 166,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.secondary": {
            "name": "secondary",
            "location": 192,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.secondary_outline": {
            "name": "secondary_outline",
            "location": 218,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.success": {
            "name": "success",
            "location": 244,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.success_outline": {
            "name": "success_outline",
            "location": 270,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.danger": {
            "name": "danger",
            "location": 296,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.danger_outline": {
            "name": "danger_outline",
            "location": 322,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.warning": {
            "name": "warning",
            "location": 348,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.warning_outline": {
            "name": "warning_outline",
            "location": 374,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.info": {
            "name": "info",
            "location": 400,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.info_outline": {
            "name": "info_outline",
            "location": 426,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.light": {
            "name": "light",
            "location": 452,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.light_outline": {
            "name": "light_outline",
            "location": 478,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.dark": {
            "name": "dark",
            "location": 504,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.dark_outline": {
            "name": "dark_outline",
            "location": 530,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.link": {
            "name": "link",
            "location": 556,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseButtonFactory.link_outline": {
            "name": "link_outline",
            "location": 582,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseToggleButtonFactory.update_attributes": {
            "name": "update_attributes",
            "location": 618,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "attributes": [
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "ElementButtonFactory.__init__": {
            "name": "__init__",
            "location": 637,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "typing.Type"
                ]
            }
        },
        "ElementButtonFactory.create_element": {
            "name": "create_element",
            "location": 650,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementToggleButtonFactory.__init__": {
            "name": "__init__",
            "location": 664,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "typing.Type"
                ]
            }
        },
        "ElementToggleButtonFactory.create_element": {
            "name": "create_element",
            "location": 677,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "StandaloneElementButtonFactory.__init__": {
            "name": "__init__",
            "location": 691,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "bool"
                ]
            }
        },
        "StandaloneElementButtonFactory.create_element": {
            "name": "create_element",
            "location": 714,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "StandaloneElementToggleButtonFactory.__init__": {
            "name": "__init__",
            "location": 729,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "bool"
                ]
            }
        },
        "StandaloneElementToggleButtonFactory.create_element": {
            "name": "create_element",
            "location": 752,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/button_groups.py": {
        "button_group": {
            "name": "button_group",
            "location": 29,
            "return": [
                "bool",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "toggle_button_group": {
            "name": "toggle_button_group",
            "location": 48,
            "return": [
                "BaseException",
                "bool",
                "Tuple[str, str]"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/cards.py": {
        "card": {
            "name": "card",
            "location": 97,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "body": {
            "name": "body",
            "location": 111,
            "return": [
                "BaseException",
                "Dict[str, Any]",
                "Tuple[type]",
                "Tuple[str, str]",
                "int"
            ],
            "arguments": {}
        },
        "footer_div": {
            "name": "footer_div",
            "location": 125,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "bool"
            ],
            "arguments": {}
        },
        "header_div": {
            "name": "header_div",
            "location": 139,
            "return": [
                "Mapping[str, Any]",
                "Tuple[type]",
                "Callable[..., None]",
                "Exception"
            ],
            "arguments": {}
        },
        "link": {
            "name": "link",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Image.bottom": {
            "name": "bottom",
            "location": 71,
            "return": [
                "int",
                "bytes"
            ],
            "arguments": {
                "src": [
                    "str",
                    "Optional[str]",
                    "Callable",
                    "None",
                    "markyp.PropertyValue",
                    "bytes",
                    "Union[str,bytes]"
                ]
            }
        },
        "Image.top": {
            "name": "top",
            "location": 84,
            "return": [
                "int",
                "bytes"
            ],
            "arguments": {
                "src": [
                    "str",
                    "Optional[str]",
                    "Callable",
                    "None",
                    "markyp.PropertyValue",
                    "bytes",
                    "Union[str,bytes]"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/carousels.py": {
        "carousel": {
            "name": "carousel",
            "location": 19,
            "return": [
                "Dict[str, int]",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "controls": {
            "name": "controls",
            "location": 64,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "carousel_id": [
                    "str",
                    "None",
                    "Optional[str]",
                    "int",
                    "Collection",
                    "markyp.PropertyValue",
                    "Optional[int]",
                    "Optional[Collection[str]]",
                    "Optional[bool]"
                ]
            }
        },
        "indicators": {
            "name": "indicators",
            "location": 96,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "carousel_id": [
                    "int",
                    "str",
                    "None",
                    "markyp.PropertyValue",
                    "Optional[str]",
                    "Optional[int]"
                ],
                "n": [
                    "int",
                    "str",
                    "None",
                    "markyp.PropertyValue",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "inner": {
            "name": "inner",
            "location": 115,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "bool"
            ],
            "arguments": {}
        },
        "item": {
            "name": "item",
            "location": 129,
            "return": [
                "BaseException",
                "bool",
                "Type"
            ],
            "arguments": {}
        },
        "item_caption": {
            "name": "item_caption",
            "location": 145,
            "return": [
                "bool",
                "Dict[str, Any]",
                "int",
                "Callable[[Exception], bool]"
            ],
            "arguments": {}
        },
        "slide": {
            "name": "slide",
            "location": 159,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "bool"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/collapses.py": {
        "a_args_for": {
            "name": "a_args_for",
            "location": 17,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "collapse_id": [
                    "str",
                    "List",
                    "List[str]",
                    "Dict[str,str]"
                ]
            }
        },
        "button_args_for": {
            "name": "button_args_for",
            "location": 41,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "collapse_id": [
                    "str",
                    "List",
                    "List[str]",
                    "Dict[str,str]"
                ]
            }
        },
        "collapse": {
            "name": "collapse",
            "location": 65,
            "return": [
                "bool",
                "List[str]",
                "int",
                "dict"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/colors.py": {
        "__Background.primary": {
            "name": "primary",
            "location": 19,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.secondary": {
            "name": "secondary",
            "location": 23,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.success": {
            "name": "success",
            "location": 27,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.danger": {
            "name": "danger",
            "location": 31,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.warning": {
            "name": "warning",
            "location": 35,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.info": {
            "name": "info",
            "location": 39,
            "return": [
                "Text",
                "str",
                "int",
                "Dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.light": {
            "name": "light",
            "location": 43,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.dark": {
            "name": "dark",
            "location": 47,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Background.white": {
            "name": "white",
            "location": 51,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.primary": {
            "name": "primary",
            "location": 63,
            "return": [
                "Text",
                "str",
                "bool",
                "Exception",
                "BaseException",
                "Hashable"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.secondary": {
            "name": "secondary",
            "location": 67,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.success": {
            "name": "success",
            "location": 71,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.danger": {
            "name": "danger",
            "location": 75,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.warning": {
            "name": "warning",
            "location": 79,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.info": {
            "name": "info",
            "location": 83,
            "return": [
                "Text",
                "str",
                "List[str]",
                "Type[Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.light": {
            "name": "light",
            "location": 87,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.dark": {
            "name": "dark",
            "location": 91,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.muted": {
            "name": "muted",
            "location": 95,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "__Text.white": {
            "name": "white",
            "location": 99,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/dropdowns.py": {
        "dropdown": {
            "name": "dropdown",
            "location": 78,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "menu": {
            "name": "menu",
            "location": 95,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "bool"
            ],
            "arguments": {}
        },
        "menu_divider": {
            "name": "menu_divider",
            "location": 114,
            "return": [
                "str",
                "Exception"
            ],
            "arguments": {}
        },
        "menu_item": {
            "name": "menu_item",
            "location": 127,
            "return": [
                "type",
                "int",
                "dict"
            ],
            "arguments": {}
        },
        "DropdownButtonFactory.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropdownButtonFactory.get_css_class": {
            "name": "get_css_class",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "bool",
                    "str",
                    "Dict[str,Any]",
                    "None",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "DropdownButtonFactory.update_attributes": {
            "name": "update_attributes",
            "location": 51,
            "return": [
                "float",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "attributes": [
                    "bool",
                    "markyp.PropertyDict"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/elements.py": {
        "close_icon": {
            "name": "close_icon",
            "location": 15,
            "return": [
                "dict",
                "int"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/forms.py": {
        "form_check": {
            "name": "form_check",
            "location": 132,
            "return": [
                "BaseException",
                "Type",
                "float",
                "Iterable",
                "List[str]"
            ],
            "arguments": {}
        },
        "form_check_label": {
            "name": "form_check_label",
            "location": 155,
            "return": [
                "Dict[str, Any]",
                "Tuple[str]"
            ],
            "arguments": {}
        },
        "form_label": {
            "name": "form_label",
            "location": 171,
            "return": [
                "Tuple[str]",
                "Mapping[str, Any]",
                "str"
            ],
            "arguments": {}
        },
        "form_group": {
            "name": "form_group",
            "location": 188,
            "return": [
                "str",
                "Tuple[type]",
                "float",
                "int"
            ],
            "arguments": {}
        },
        "form_row": {
            "name": "form_row",
            "location": 206,
            "return": [
                "tuple",
                "Callable"
            ],
            "arguments": {}
        },
        "inline_form": {
            "name": "inline_form",
            "location": 220,
            "return": [
                "BaseException",
                "bool",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "SubmitButtonFactory.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubmitButtonFactory.update_attributes": {
            "name": "update_attributes",
            "location": 59,
            "return": [
                "float",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "attributes": [
                    "bool",
                    "Dict",
                    "markyp.PropertyDict"
                ]
            }
        },
        "input_.__init__": {
            "name": "__init__",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "class_": [
                    "str",
                    "int",
                    "None",
                    "Sequence[Any]"
                ],
                "type_": [
                    "Optional[Type]",
                    "None",
                    "Type"
                ]
            }
        },
        "select.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "textarea.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/input_groups.py": {
        "input_group": {
            "name": "input_group",
            "location": 38,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "bool"
            ],
            "arguments": {}
        },
        "pre_group": {
            "name": "pre_group",
            "location": 56,
            "return": [
                "BaseException",
                "Type",
                "float",
                "Iterable",
                "List[str]"
            ],
            "arguments": {}
        },
        "post_group": {
            "name": "post_group",
            "location": 71,
            "return": [
                "BaseException",
                "Callable[[KT], VT]",
                "Dict[str, Any]",
                "Tuple[str, str]"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/jumbotrons.py": {
        "jumbotron": {
            "name": "jumbotron",
            "location": 17,
            "return": [
                "BaseException",
                "Type",
                "float",
                "Iterable",
                "List[str]"
            ],
            "arguments": {}
        },
        "rectangular_jumbotron": {
            "name": "rectangular_jumbotron",
            "location": 37,
            "return": [
                "Callable[..., None]",
                "Tuple[type]",
                "int",
                "str"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/layout.py": {
        "container": {
            "name": "container",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "container_fluid": {
            "name": "container_fluid",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "row": {
            "name": "row",
            "location": 120,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "one": {
            "name": "one",
            "location": 139,
            "return": [
                "Any"
            ],
            "arguments": {
                "item": [
                    "str",
                    "None"
                ]
            }
        },
        "two": {
            "name": "two",
            "location": 176,
            "return": [
                "Any"
            ],
            "arguments": {
                "left": [
                    "bool",
                    "str",
                    "typing.Callable[None, None]"
                ],
                "right": [
                    "bool",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "three": {
            "name": "three",
            "location": 220,
            "return": [
                "Any"
            ],
            "arguments": {
                "left": [
                    "bool",
                    "typing.Callable[None, None]",
                    "list[int]",
                    "str"
                ],
                "middle": [
                    "str",
                    "None",
                    "int"
                ],
                "right": [
                    "bool",
                    "typing.Callable[None, None]",
                    "list[int]",
                    "str"
                ]
            }
        },
        "row_break": {
            "name": "row_break",
            "location": 272,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "row_item": {
            "name": "row_item",
            "location": 280,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "autocol": {
            "name": "autocol",
            "location": 343,
            "return": [
                "str"
            ],
            "arguments": {
                "xs": [
                    "None",
                    "bool"
                ],
                "sm": [
                    "None",
                    "bool"
                ],
                "md": [
                    "None",
                    "bool"
                ],
                "lg": [
                    "None",
                    "bool"
                ],
                "xl": [
                    "None",
                    "bool"
                ]
            }
        },
        "col": {
            "name": "col",
            "location": 364,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "xs": [
                    "None"
                ],
                "sm": [
                    "None"
                ],
                "md": [
                    "None"
                ],
                "lg": [
                    "None"
                ],
                "xl": [
                    "None"
                ]
            }
        },
        "margin": {
            "name": "margin",
            "location": 385,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "around": [
                    "None",
                    "int"
                ]
            }
        },
        "offset": {
            "name": "offset",
            "location": 411,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "xs": [
                    "None"
                ],
                "sm": [
                    "None"
                ],
                "md": [
                    "None"
                ],
                "lg": [
                    "None"
                ],
                "xl": [
                    "None"
                ]
            }
        },
        "padding": {
            "name": "padding",
            "location": 430,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "around": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/list_groups.py": {
        "list_group": {
            "name": "list_group",
            "location": 51,
            "return": [
                "str",
                "Dict[str, Optional[str]]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "list_group_item": {
            "name": "list_group_item",
            "location": 82,
            "return": [
                "Dict[str, Any]",
                "Dict[str, Dict]"
            ],
            "arguments": {}
        },
        "ItemContext.get_class": {
            "name": "get_class",
            "location": 40,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "context": [
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/modals.py": {
        "modal": {
            "name": "modal",
            "location": 95,
            "return": [
                "str",
                "Optional[int]",
                "List[str]",
                "int",
                "List[Dict[str, Any]]",
                "bytes"
            ],
            "arguments": {}
        },
        "modal_element": {
            "name": "modal_element",
            "location": 156,
            "return": [
                "BaseException",
                "Dict[str, Any]",
                "Type",
                "Callable[..., None]",
                "Callable[[KT], VT]",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "modal_dialog_base": {
            "name": "modal_dialog_base",
            "location": 181,
            "return": [
                "BaseException",
                "str",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "modal_content": {
            "name": "modal_content",
            "location": 205,
            "return": [
                "str",
                "Callable",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "modal_header": {
            "name": "modal_header",
            "location": 220,
            "return": [
                "str",
                "dict",
                "Mapping[str, Any]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "modal_body": {
            "name": "modal_body",
            "location": 235,
            "return": [
                "Callable[..., None]",
                "Tuple[type]",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "modal_footer": {
            "name": "modal_footer",
            "location": 250,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "List[recidiviz.persistence.entity.entities.EntityPersonType]",
                "bool"
            ],
            "arguments": {}
        },
        "CloseButtonFactory.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "bool",
                    "Dict[str,Any]",
                    "None",
                    "Callable[[Any,Any],bool]",
                    "Callable[Any,Any,bool]"
                ]
            }
        },
        "CloseButtonFactory.update_attributes": {
            "name": "update_attributes",
            "location": 44,
            "return": [
                "float",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "attributes": [
                    "bool",
                    "Dict",
                    "markyp.PropertyDict"
                ]
            }
        },
        "ModalToggleButtonFactory.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": [
                    "bool",
                    "Dict[str,Any]",
                    "None",
                    "Callable[[Any,Any],bool]",
                    "Callable[Any,Any,bool]"
                ]
            }
        },
        "ModalToggleButtonFactory.update_attributes": {
            "name": "update_attributes",
            "location": 67,
            "return": [
                "float",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "attributes": [
                    "bool",
                    "Dict",
                    "markyp.PropertyDict"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/navbars.py": {
        "brand": {
            "name": "brand",
            "location": 52,
            "return": [
                "tuple",
                "bool",
                "Hashable"
            ],
            "arguments": {}
        },
        "collapse": {
            "name": "collapse",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "navbar": {
            "name": "navbar",
            "location": 102,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "navbar_nav": {
            "name": "navbar_nav",
            "location": 134,
            "return": [
                "str",
                "Tuple[type]",
                "Dict[str, Any]",
                "Callable[..., None]",
                "bool"
            ],
            "arguments": {}
        },
        "navbar_toggler": {
            "name": "navbar_toggler",
            "location": 153,
            "return": [
                "Sequence[Any]",
                "bool"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/navs.py": {
        "nav": {
            "name": "nav",
            "location": 45,
            "return": [
                "BaseException",
                "Type",
                "float",
                "Iterable",
                "List[str]"
            ],
            "arguments": {}
        },
        "nav_item": {
            "name": "nav_item",
            "location": 85,
            "return": [
                "Dict[str, Dict[str, int]]",
                "List[str]",
                "bool",
                "Optional[Union[str, Any]]",
                "int"
            ],
            "arguments": {}
        },
        "nav_link": {
            "name": "nav_link",
            "location": 119,
            "return": [
                "Iterable[str]",
                "str",
                "IO[str]",
                "Callable"
            ],
            "arguments": {}
        },
        "tab_link": {
            "name": "tab_link",
            "location": 153,
            "return": [
                "int",
                "Optional[int]",
                "List[int]",
                "str"
            ],
            "arguments": {}
        },
        "navigated_tabs": {
            "name": "navigated_tabs",
            "location": 195,
            "return": [
                "Tuple",
                "bool",
                "Optional[Any]"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/pagination.py": {
        "base_page_item": {
            "name": "base_page_item",
            "location": 42,
            "return": [
                "List[str]",
                "Optional[Union[str, Any]]",
                "bool"
            ],
            "arguments": {}
        },
        "page_item": {
            "name": "page_item",
            "location": 77,
            "return": [
                "str",
                "float",
                "Tuple[str, str]"
            ],
            "arguments": {}
        },
        "page_link": {
            "name": "page_link",
            "location": 110,
            "return": [
                "Iterable[str]",
                "str",
                "IO[str]",
                "Callable"
            ],
            "arguments": {}
        },
        "pagination": {
            "name": "pagination",
            "location": 131,
            "return": [
                "int",
                "bool",
                "Mapping[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/popovers.py": {
        "popover": {
            "name": "popover",
            "location": 46,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "content": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/progress.py": {
        "progress": {
            "name": "progress",
            "location": 16,
            "return": [
                "str",
                "bool",
                "Exception",
                "int",
                "Optional[str]"
            ],
            "arguments": {}
        },
        "progress_base": {
            "name": "progress_base",
            "location": 55,
            "return": [
                "dict",
                "Tuple[str, str]",
                "str"
            ],
            "arguments": {}
        },
        "progressbar": {
            "name": "progressbar",
            "location": 76,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/scrollspy.py": {
        "spied_by": {
            "name": "spied_by",
            "location": 13,
            "return": [
                "Dict[(str, Union[(int, str, _T0)])]"
            ],
            "arguments": {
                "spy": [
                    "str",
                    "int",
                    "Callable"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/tabs.py": {
        "tab_content": {
            "name": "tab_content",
            "location": 21,
            "return": [
                "str",
                "Callable",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "tab_pane": {
            "name": "tab_pane",
            "location": 36,
            "return": [
                "BaseException",
                "Type",
                "float",
                "Iterable",
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/tooltips.py": {
        "tooltip": {
            "name": "tooltip",
            "location": 38,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "title": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/markyp_bootstrap4/__init__.py": {
        "__BootstrapRequirements.all_js": {
            "name": "all_js",
            "location": 148,
            "return": [
                "Tuple",
                "int",
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "__BootstrapRequirements.bootstrap_css": {
            "name": "bootstrap_css",
            "location": 161,
            "return": [
                "str",
                "bool",
                "Iterable[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "__BootstrapRequirements.bootstrap_js": {
            "name": "bootstrap_js",
            "location": 168,
            "return": [
                "str",
                "Iterable[str]",
                "Dict[str, int]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "__BootstrapRequirements.jquery": {
            "name": "jquery",
            "location": 175,
            "return": [
                "str",
                "\"PerceptionGraphPattern\"",
                "List[str]",
                "Tuple[bytes, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "__BootstrapRequirements.popper_js": {
            "name": "popper_js",
            "location": 182,
            "return": [
                "str",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CDNs.Bootstrap.cdn_url_with_version": {
            "name": "cdn_url_with_version",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.Bootstrap]"
                ]
            }
        },
        "CDNs.Bootstrap.css_url": {
            "name": "css_url",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.Bootstrap]"
                ]
            }
        },
        "CDNs.Bootstrap.js_url": {
            "name": "js_url",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.Bootstrap]"
                ]
            }
        },
        "CDNs.Bootstrap.js_bundle_url": {
            "name": "js_bundle_url",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.Bootstrap]"
                ]
            }
        },
        "CDNs.jQuery.minified_url": {
            "name": "minified_url",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.jQuery]"
                ]
            }
        },
        "CDNs.jQuery.uncompressed_url": {
            "name": "uncompressed_url",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.jQuery]"
                ]
            }
        },
        "CDNs.jQuery.slim_minified_url": {
            "name": "slim_minified_url",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.jQuery]"
                ]
            }
        },
        "CDNs.jQuery.slim_url": {
            "name": "slim_url",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.jQuery]"
                ]
            }
        },
        "CDNs.PopperJS.cdn_url_with_version": {
            "name": "cdn_url_with_version",
            "location": 124,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.PopperJS]"
                ]
            }
        },
        "CDNs.PopperJS.js_url": {
            "name": "js_url",
            "location": 131,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "Type[CDNs.PopperJS]"
                ]
            }
        }
    },
    "markyp-bootstrap4-master/test/test_alerts.py": {
        "test_alert": {
            "name": "test_alert",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dismissable": {
            "name": "test_dismissable",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_badges.py": {
        "test_BadgeFactory": {
            "name": "test_BadgeFactory",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_a_badge": {
            "name": "test_a_badge",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_span_badge": {
            "name": "test_span_badge",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_BadgeFactory.e.inline_children": {
            "name": "inline_children",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "markyp-bootstrap4-master/test/test_breadcrumbs.py": {
        "test_custom_breadcrumb": {
            "name": "test_custom_breadcrumb",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_breadcrumb": {
            "name": "test_breadcrumb",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_breadcrumb_item": {
            "name": "test_breadcrumb_item",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_buttons.py": {
        "test_ButtonContext": {
            "name": "test_ButtonContext",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ButtonStyle": {
            "name": "test_ButtonStyle",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_BaseButtonFactory": {
            "name": "test_BaseButtonFactory",
            "location": 35,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_BaseToggleButtonFactory": {
            "name": "test_BaseToggleButtonFactory",
            "location": 61,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_ElementButtonFactory": {
            "name": "test_ElementButtonFactory",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ElementToggleButtonFactory": {
            "name": "test_ElementToggleButtonFactory",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_StandaloneElementButtonFactory": {
            "name": "test_StandaloneElementButtonFactory",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_StandaloneElementToggleButtonFactory": {
            "name": "test_StandaloneElementToggleButtonFactory",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_a_button": {
            "name": "test_a_button",
            "location": 182,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_a_toggle": {
            "name": "test_a_toggle",
            "location": 228,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_b_button": {
            "name": "test_b_button",
            "location": 274,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_b_toggle": {
            "name": "test_b_toggle",
            "location": 320,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_i_button": {
            "name": "test_i_button",
            "location": 366,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_i_toggle": {
            "name": "test_i_toggle",
            "location": 412,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_l_button": {
            "name": "test_l_button",
            "location": 458,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_l_toggle": {
            "name": "test_l_toggle",
            "location": 504,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_button_groups.py": {
        "test_BGSize": {
            "name": "test_BGSize",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_button_group": {
            "name": "test_button_group",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_toggle_button_group": {
            "name": "test_toggle_button_group",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_cards.py": {
        "test_title": {
            "name": "test_title",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_subtitle": {
            "name": "test_subtitle",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_text": {
            "name": "test_text",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_header": {
            "name": "test_header",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_footer": {
            "name": "test_footer",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_TextAlign": {
            "name": "test_TextAlign",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_Image": {
            "name": "test_Image",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_card": {
            "name": "test_card",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_body": {
            "name": "test_body",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_footer_div": {
            "name": "test_footer_div",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_header_div": {
            "name": "test_header_div",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_link": {
            "name": "test_link",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_carousels.py": {
        "test_carousel": {
            "name": "test_carousel",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_controls": {
            "name": "test_controls",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_indicators": {
            "name": "test_indicators",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_inner": {
            "name": "test_inner",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_item": {
            "name": "test_item",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_item_caption": {
            "name": "test_item_caption",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_slide": {
            "name": "test_slide",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_collapses.py": {
        "test_a_args_for": {
            "name": "test_a_args_for",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_button_args_for": {
            "name": "test_button_args_for",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_collapse": {
            "name": "test_collapse",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_colors.py": {
        "test_bg": {
            "name": "test_bg",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_text": {
            "name": "test_text",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_dropdowns.py": {
        "test_DropdownButtonFactory": {
            "name": "test_DropdownButtonFactory",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dropdown_button": {
            "name": "test_dropdown_button",
            "location": 20,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_menu_header": {
            "name": "test_menu_header",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dropdown": {
            "name": "test_dropdown",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_menu": {
            "name": "test_menu",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_menu_divider": {
            "name": "test_menu_divider",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_menu_item": {
            "name": "test_menu_item",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_elements.py": {
        "test_close_icon": {
            "name": "test_close_icon",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_forms.py": {
        "test_muted_text": {
            "name": "test_muted_text",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_text": {
            "name": "test_text",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_SubmitButtonFactory": {
            "name": "test_SubmitButtonFactory",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_submit_button": {
            "name": "test_submit_button",
            "location": 64,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_FormStyle": {
            "name": "test_FormStyle",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_input_": {
            "name": "test_input_",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_select": {
            "name": "test_select",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_textarea": {
            "name": "test_textarea",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_form_check": {
            "name": "test_form_check",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_label": {
            "name": "test_check_label",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_form_label": {
            "name": "test_form_label",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_form_group": {
            "name": "test_form_group",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_form_row": {
            "name": "test_form_row",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_inline_form": {
            "name": "test_inline_form",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_init.py": {
        "test_cdns": {
            "name": "test_cdns",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_req": {
            "name": "test_req",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_input_groups.py": {
        "test_text": {
            "name": "test_text",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_InputGroupStyle": {
            "name": "test_InputGroupStyle",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_input_group": {
            "name": "test_input_group",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pre_group": {
            "name": "test_pre_group",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_post_group": {
            "name": "test_post_group",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_jumbotrons.py": {
        "test_jumbotron": {
            "name": "test_jumbotron",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rectangular_jumbotron": {
            "name": "test_rectangular_jumbotron",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_layout.py": {
        "test_size_names": {
            "name": "test_size_names",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_container": {
            "name": "test_container",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_container_fluid": {
            "name": "test_container_fluid",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_row": {
            "name": "test_row",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_one": {
            "name": "test_one",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_two": {
            "name": "test_two",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_three": {
            "name": "test_three",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_row_break": {
            "name": "test_row_break",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_row_item": {
            "name": "test_row_item",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_PercentSize": {
            "name": "test_PercentSize",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_autocol": {
            "name": "test_autocol",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_col": {
            "name": "test_col",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_margin": {
            "name": "test_margin",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_offset": {
            "name": "test_offset",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_padding": {
            "name": "test_padding",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_list_groups.py": {
        "test_ItemContext": {
            "name": "test_ItemContext",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_list_group": {
            "name": "test_list_group",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_list_group_item": {
            "name": "test_list_group_item",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_modals.py": {
        "test_title": {
            "name": "test_title",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_CloseButtonFactory": {
            "name": "test_CloseButtonFactory",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ModalToggleButtonFactory": {
            "name": "test_ModalToggleButtonFactory",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_close_button": {
            "name": "test_close_button",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_toggle_button": {
            "name": "test_toggle_button",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal": {
            "name": "test_modal",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal_element": {
            "name": "test_modal_element",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal_dialog_base": {
            "name": "test_modal_dialog_base",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal_content": {
            "name": "test_modal_content",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal_header": {
            "name": "test_modal_header",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal_body": {
            "name": "test_modal_body",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_modal_footer": {
            "name": "test_modal_footer",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_navbars.py": {
        "test_navbar_text": {
            "name": "test_navbar_text",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ExpandPoint": {
            "name": "test_ExpandPoint",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_Theme": {
            "name": "test_Theme",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_brand": {
            "name": "test_brand",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_collapse": {
            "name": "test_collapse",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_navbar": {
            "name": "test_navbar",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_navbar_nav": {
            "name": "test_navbar_nav",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_navbar_toggler": {
            "name": "test_navbar_toggler",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_navs.py": {
        "test_NavPosition": {
            "name": "test_NavPosition",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_NavStyle": {
            "name": "test_NavStyle",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nav": {
            "name": "test_nav",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nav_item": {
            "name": "test_nav_item",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nav_link": {
            "name": "test_nav_link",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tab_link": {
            "name": "test_tab_link",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_navigated_tabs": {
            "name": "test_navigated_tabs",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_pagination.py": {
        "test_PaginationPosition": {
            "name": "test_PaginationPosition",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_PaginationSize": {
            "name": "test_PaginationSize",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_base_page_item": {
            "name": "test_base_page_item",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_page_item": {
            "name": "test_page_item",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_page_link": {
            "name": "test_page_link",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pagination": {
            "name": "test_pagination",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_popovers.py": {
        "test_enable_auto_dismiss": {
            "name": "test_enable_auto_dismiss",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_enable_popovers": {
            "name": "test_enable_popovers",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_Placement": {
            "name": "test_Placement",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_popover": {
            "name": "test_popover",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_progress.py": {
        "test_progress": {
            "name": "test_progress",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_progress_base": {
            "name": "test_progress_base",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_progressbar": {
            "name": "test_progressbar",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_scrollspy.py": {
        "test_spied_by": {
            "name": "test_spied_by",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_tabs.py": {
        "test_tab_content": {
            "name": "test_tab_content",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tab_pane": {
            "name": "test_tab_pane",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/test_tooltips.py": {
        "test_enable_tooltips": {
            "name": "test_enable_tooltips",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_Placement": {
            "name": "test_Placement",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_tooltip": {
            "name": "test_tooltip",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "markyp-bootstrap4-master/test/__init__.py": {}
}
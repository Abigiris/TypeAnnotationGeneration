{
    "moving-fast-backend-master/manage.py": {},
    "moving-fast-backend-master/apps/__init__.py": {},
    "moving-fast-backend-master/apps/authentication/admin.py": {},
    "moving-fast-backend-master/apps/authentication/backends.py": {
        "decode": {
            "name": "decode",
            "location": 14,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "jwt_token": [
                    "str"
                ]
            }
        },
        "JwtAuthBackend.get_user": {
            "name": "get_user",
            "location": 22,
            "return": [
                "Optional[apps.authentication.models.User]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int"
                ]
            }
        },
        "JwtAuthBackend.authenticate": {
            "name": "authenticate",
            "location": 28,
            "return": [
                "Optional[apps.authentication.models.User]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "django.http.HttpRequest",
                    "list[]",
                    "list"
                ],
                "jwt_token": [
                    "str"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/authentication/middlewares.py": {
        "JwtAuthMiddleware.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": [
                    "Callable[([Any], Any)]"
                ]
            }
        },
        "JwtAuthMiddleware.__call__": {
            "name": "__call__",
            "location": 19,
            "return": [
                "str",
                "float",
                "bool",
                "List[float]",
                "Sequence",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "WebSocketJwtAuthMiddleware.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inner": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "WebSocketJwtAuthMiddleware.__call__": {
            "name": "__call__",
            "location": 33,
            "return": [
                "Dict[str, Any]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "scope": [
                    "dict"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/authentication/models.py": {
        "User.token": {
            "name": "token",
            "location": 13,
            "return": [
                "int",
                "str",
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "User._generate_jwt_token": {
            "name": "_generate_jwt_token",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "moving-fast-backend-master/apps/authentication/schema.py": {
        "Query.resolve_all_users": {
            "name": "resolve_all_users",
            "location": 17,
            "return": [
                "tracim.models.auth.User",
                "app.db_models.User",
                "List[zerver.models.UserProfile]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "bool",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "Query.resolve_user": {
            "name": "resolve_user",
            "location": 20,
            "return": [
                "None",
                "zerver.models.Realm",
                "str",
                "Exception",
                "tartare.core.models.Job"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict",
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/authentication/urls.py": {},
    "moving-fast-backend-master/apps/authentication/views.py": {
        "get_token": {
            "name": "get_token",
            "location": 11,
            "return": [
                "JsonResponse",
                "django.http.HttpResponse",
                "HttpResponseBadRequest",
                "HttpResponseNotAllowed",
                "Dict[str, Any]",
                "Dict[str, str]",
                "app.domain.users.User",
                "int"
            ],
            "arguments": {
                "request": [
                    "dict[str, typing.Any]",
                    "django.http.HttpRequest",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "health": {
            "name": "health",
            "location": 35,
            "return": [
                "JsonResponse",
                "dict",
                "Optional[Dict]",
                "apistar.http.QueryParam",
                "str"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/authentication/__init__.py": {},
    "moving-fast-backend-master/apps/authentication/migrations/0001_initial.py": {},
    "moving-fast-backend-master/apps/authentication/migrations/__init__.py": {},
    "moving-fast-backend-master/apps/chat/admin.py": {},
    "moving-fast-backend-master/apps/chat/consumers.py": {
        "ChatConsumer.get_room": {
            "name": "get_room",
            "location": 52,
            "return": [
                "None",
                "Optional[str]",
                "bool",
                "Optional[List[str]]",
                "str"
            ],
            "arguments": {
                "self": [],
                "slug": [
                    "str"
                ]
            }
        },
        "ChatConsumer.create_message": {
            "name": "create_message",
            "location": 59,
            "return": [
                "str",
                "float",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "bool",
                    "zerver.models.Realm",
                    "list[str]",
                    "list[tuple[typing.Union[str,int]]]",
                    "zerver.models.UserProfile",
                    "List[str]",
                    "List[Tuple[str, int]]"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/chat/models.py": {
        "Room.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Room.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "moving-fast-backend-master/apps/chat/routing.py": {},
    "moving-fast-backend-master/apps/chat/schema.py": {
        "Query.resolve_all_rooms": {
            "name": "resolve_all_rooms",
            "location": 25,
            "return": [
                "str",
                "int",
                "List[Tuple[str, str]]",
                "magic.models.Deck",
                "float",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "List[dict]",
                    "list[dict[, ]]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "Query.resolve_room": {
            "name": "resolve_room",
            "location": 28,
            "return": [
                "None",
                "bool",
                "int",
                "exporwiki.types.PrimalEngramEntry",
                "Optional[int]",
                "str"
            ],
            "arguments": {
                "self": [],
                "info": [
                    "bool"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/chat/test_models.py": {
        "RoomTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RoomTestCase.test_unique_slug_fail": {
            "name": "test_unique_slug_fail",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RoomTestCase.test_unique_slug": {
            "name": "test_unique_slug",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "moving-fast-backend-master/apps/chat/urls.py": {},
    "moving-fast-backend-master/apps/chat/views.py": {
        "index": {
            "name": "index",
            "location": 10,
            "return": [
                "JsonResponse",
                "str",
                "Optional[str]",
                "Sequence[Sequence[str]]",
                "Iterator['Vertex']",
                "Dict[str, dict]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.http.requesHttpRequest"
                ]
            }
        },
        "room": {
            "name": "room",
            "location": 14,
            "return": [
                "JsonResponse",
                "str",
                "Optional[str]",
                "Tuple[str, Optional[int]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "int",
                    "django.http.HttpRequest",
                    "django.http.HttpResponse"
                ],
                "room_name": [
                    "str"
                ]
            }
        }
    },
    "moving-fast-backend-master/apps/chat/__init__.py": {},
    "moving-fast-backend-master/apps/chat/migrations/0001_initial.py": {},
    "moving-fast-backend-master/apps/chat/migrations/0002_auto_20180919_0558.py": {},
    "moving-fast-backend-master/apps/chat/migrations/__init__.py": {},
    "moving-fast-backend-master/config/asgi.py": {},
    "moving-fast-backend-master/config/routing.py": {},
    "moving-fast-backend-master/config/schema.py": {},
    "moving-fast-backend-master/config/urls.py": {},
    "moving-fast-backend-master/config/__init__.py": {},
    "moving-fast-backend-master/config/settings/base.py": {},
    "moving-fast-backend-master/config/settings/develop.py": {},
    "moving-fast-backend-master/config/settings/docker.py": {},
    "moving-fast-backend-master/config/settings/test.py": {},
    "moving-fast-backend-master/config/settings/__init__.py": {}
}
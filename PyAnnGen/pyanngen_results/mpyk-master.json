{
    "mpyk-master/setup.py": {},
    "mpyk-master/mpyk/client.py": {
        "MpykClient.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_url": [
                    "str",
                    "List[str]",
                    "Callable[[], bool]"
                ],
                "api_timeout_sec": [
                    "float",
                    "bool",
                    "Optional[Dict[str, Any]]",
                    "Container[int]"
                ],
                "logger": [
                    "getLogger",
                    "str",
                    "logging.Logger"
                ]
            }
        },
        "MpykClient.get_all_positions": {
            "name": "get_all_positions",
            "location": 20,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MpykClient.get_position": {
            "name": "get_position",
            "location": 24,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "bus_lines": [
                    "Dict",
                    "str",
                    "Dict[str,Set[str]]",
                    "Dict[str,set[str]]",
                    "bool",
                    "Optional[str]",
                    "None"
                ],
                "tram_lines": [
                    "Dict",
                    "str",
                    "Dict[str,Set[str]]",
                    "Dict[str,set[str]]",
                    "bool",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "MpykClient.get_all_positions_raw": {
            "name": "get_all_positions_raw",
            "location": 28,
            "return": [
                "datetime.datetime",
                "str",
                "dict",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MpykClient.get_position_raw": {
            "name": "get_position_raw",
            "location": 31,
            "return": [
                "int",
                "dict"
            ],
            "arguments": {
                "self": [],
                "bus_lines": [
                    "Dict",
                    "str",
                    "Optional[Dict]",
                    "bytes",
                    "Hashable",
                    "int"
                ],
                "tram_lines": [
                    "Dict",
                    "str",
                    "Optional[Dict]",
                    "bytes",
                    "Hashable",
                    "int"
                ]
            }
        },
        "MpykClient._make_request": {
            "name": "_make_request",
            "location": 35,
            "return": [
                "dict",
                "Dict[str, Union[int, str]]",
                "Optional[Dict[str, Any]]",
                "Optional[Dict[str, str]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "body": [
                    "str",
                    "bool",
                    "Optional[MutableMapping]",
                    "Sequence[str]",
                    "MutableMapping",
                    "None"
                ]
            }
        },
        "MpykClient._parse_into_obj": {
            "name": "_parse_into_obj",
            "location": 44,
            "return": [
                "List[mpyk.model.MpykTransLoc]"
            ],
            "arguments": {
                "cls": [
                    "Dict",
                    "Optional[dict]",
                    "int",
                    "None"
                ],
                "responses": [
                    "str",
                    "Dict[str,Any]",
                    "Optional[str]"
                ],
                "timestamp": [
                    "str",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "mpyk-master/mpyk/const.py": {},
    "mpyk-master/mpyk/model.py": {
        "MpykTransLoc.parse": {
            "name": "parse",
            "location": 20,
            "return": [
                "MpykTransLoc"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMpykTransLoc]"
                ],
                "api_response": [
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, str]",
                    "Type[Any]"
                ],
                "timestamp": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,str]",
                    "Type[Any]",
                    "Type"
                ]
            }
        },
        "MpykTransLoc.as_dict": {
            "name": "as_dict",
            "location": 25,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MpykTransLoc.as_api_dict": {
            "name": "as_api_dict",
            "location": 36,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MpykTransLoc.as_values": {
            "name": "as_values",
            "location": 46,
            "return": [
                "Tuple[(Any, Any, Any, Any, Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mpyk-master/mpyk/__init__.py": {},
    "mpyk-master/test/acceptance/test_api_response.py": {
        "all_units_api_response": {
            "name": "all_units_api_response",
            "location": 13,
            "return": [
                "Dict[str, Any]",
                "bool",
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "test_api_should_return_minimal_amount_of_data": {
            "name": "test_api_should_return_minimal_amount_of_data",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "all_units_api_response": [
                    "int",
                    "str",
                    "List[float]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_api_should_respond_with_known_format": {
            "name": "test_api_should_respond_with_known_format",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "all_units_api_response": [
                    "int",
                    "str"
                ]
            }
        },
        "test_api_should_return_no_unexpected_lines": {
            "name": "test_api_should_return_no_unexpected_lines",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "all_units_api_response": [
                    "str",
                    "int"
                ]
            }
        },
        "test_should_parse_all_raw_responses_into_objects": {
            "name": "test_should_parse_all_raw_responses_into_objects",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "all_units_api_response": [
                    "int",
                    "bytes",
                    "Tuple",
                    "Callable",
                    "float"
                ]
            }
        }
    },
    "mpyk-master/test/unit/test_data_model.py": {
        "test_should_parse_api_resp_into_objects": {
            "name": "test_should_parse_api_resp_into_objects",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_serialize_object": {
            "name": "test_should_serialize_object",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
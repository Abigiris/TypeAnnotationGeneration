{
    "msqlalchemy-master/python/engines_core.py": {
        "get_author_json_str": {
            "name": "get_author_json_str",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_author_json_obj": {
            "name": "get_author_json_obj",
            "location": 31,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {}
        }
    },
    "msqlalchemy-master/python/engines_obj.py": {
        "BookSchema.make_book": {
            "name": "make_book",
            "location": 37,
            "return": [
                "Book",
                "str",
                "Optional[float]",
                "bool",
                "marshmallow.Schema"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[str,Any]"
                ]
            }
        },
        "AuthorSchema.set_author_context": {
            "name": "set_author_context",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "bytes",
                    "Union[bytes,bytearray,memoryview]",
                    "bytearray",
                    "memoryview"
                ]
            }
        },
        "AuthorSchema.make_author": {
            "name": "make_author",
            "location": 53,
            "return": [
                "Author",
                "str",
                "Optional[float]",
                "bool",
                "marshmallow.Schema"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "bytes",
                    "Union[bytes,bytearray,memoryview]",
                    "bytearray",
                    "memoryview"
                ]
            }
        }
    },
    "msqlalchemy-master/python/engines_sql.py": {
        "AuthorDB.__repr__": {
            "name": "__repr__",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthorDB.create": {
            "name": "create",
            "location": 33,
            "return": [
                "AuthorDB"
            ],
            "arguments": {
                "cls": [
                    "Type[_TAuthorDB]"
                ],
                "author": [
                    "Dict[str,str]",
                    "aiopg.sa.connection.SAConnection",
                    "str",
                    "Type"
                ]
            }
        },
        "AuthorDB.to_obj": {
            "name": "to_obj",
            "location": 36,
            "return": [
                "eobj.Author"
            ],
            "arguments": {
                "self": []
            }
        },
        "BookDB.__repr__": {
            "name": "__repr__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BookDB.create": {
            "name": "create",
            "location": 52,
            "return": [
                "BookDB"
            ],
            "arguments": {
                "cls": [
                    "Type[_TBookDB]"
                ],
                "book": [
                    "str",
                    "float",
                    "Callable"
                ],
                "author": [
                    "str",
                    "float",
                    "Callable"
                ]
            }
        },
        "BookDB.to_obj": {
            "name": "to_obj",
            "location": 55,
            "return": [
                "eobj.Book"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "msqlalchemy-master/python/msqlalchemy.py": {
        "load_data_into_db": {
            "name": "load_data_into_db",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "author_obj": [
                    "str",
                    "Dict",
                    "bool",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
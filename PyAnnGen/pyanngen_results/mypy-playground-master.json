{
    "mypy-playground-master/app/mypy_playground/app.py": {
        "make_app": {
            "name": "make_app",
            "location": 64,
            "return": [
                "Application",
                "List[str]",
                "float",
                "bool",
                "Tuple[paradigm.models.Base,tests.utils.Kwargs]",
                "Dict[str,Sequence[Any]]"
            ],
            "arguments": {}
        }
    },
    "mypy-playground-master/app/mypy_playground/gist.py": {},
    "mypy-playground-master/app/mypy_playground/handlers.py": {
        "JsonRequestHandler.prepare": {
            "name": "prepare",
            "location": 46,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "base.ConfigOptions",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "JsonRequestHandler.write_error": {
            "name": "write_error",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int",
                    "bool",
                    "list",
                    "Optional[int]",
                    "Optional[str]"
                ]
            }
        },
        "JsonRequestHandler.parse_json_request_body": {
            "name": "parse_json_request_body",
            "location": 72,
            "return": [
                "Dict[str, Any]",
                "bool",
                "str",
                "Tuple[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TypecheckHandler._get_sandbox": {
            "name": "_get_sandbox",
            "location": 135,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-playground-master/app/mypy_playground/prometheus.py": {
        "PrometheusMixin.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrometheusMixin.log_request": {
            "name": "log_request",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "str",
                    "Dict",
                    "Dict[str,str]",
                    "Dict[str,List[Any]]",
                    "Dict[str,list[Any]]"
                ]
            }
        },
        "PrometheusMixin._update_metrics": {
            "name": "_update_metrics",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [
                    "Optional[Dict]",
                    "Callable",
                    "Dict",
                    "None"
                ]
            }
        }
    },
    "mypy-playground-master/app/mypy_playground/utils.py": {
        "_parse_pair_str": {
            "name": "_parse_pair_str",
            "location": 9,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "_parse_pair_list": {
            "name": "_parse_pair_list",
            "location": 17,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "config": []
            }
        },
        "parse_environment_variables": {
            "name": "parse_environment_variables",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "parse_toml_file": {
            "name": "parse_toml_file",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "DictOption.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "ListPairOption.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        }
    },
    "mypy-playground-master/app/mypy_playground/__init__.py": {},
    "mypy-playground-master/app/mypy_playground/__main__.py": {
        "load_config": {
            "name": "load_config",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mypy-playground-master/app/mypy_playground/sandbox/base.py": {
        "AbstractSandbox.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-playground-master/app/mypy_playground/sandbox/cloud_functions.py": {
        "CloudFunctionsSandbox.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CloudFunctionsSandbox._get_cloud_function_url": {
            "name": "_get_cloud_function_url",
            "location": 106,
            "return": [
                "str",
                "Optional[str]",
                "Sequence[str]",
                "Optional[Dict[str, Any]]",
                "Optional[Dict]"
            ],
            "arguments": {
                "self": [],
                "mypy_version_id": [
                    "int",
                    "str",
                    "dict"
                ]
            }
        },
        "CloudFunctionsSandbox._get_identity_token": {
            "name": "_get_identity_token",
            "location": 117,
            "return": [
                "int",
                "raiden.utils.List[raiden.utils.Tuple[str, raiden.utils.Any]]",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict"
                ]
            }
        }
    },
    "mypy-playground-master/app/mypy_playground/sandbox/docker.py": {
        "DockerSandbox.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DockerSandbox._create_archive": {
            "name": "_create_archive",
            "location": 102,
            "return": [
                "BytesIO",
                "bool",
                "float"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "Union[str,pathlib.Path]",
                    "List[Tuple]",
                    "Dict"
                ]
            }
        },
        "DockerSandbox._get_docker_image": {
            "name": "_get_docker_image",
            "location": 113,
            "return": [
                "str",
                "Dict[str, Any]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "mypy_version_id": [
                    "str"
                ]
            }
        }
    },
    "mypy-playground-master/app/mypy_playground/sandbox/__init__.py": {
        "_get_semaphore": {
            "name": "_get_semaphore",
            "location": 16,
            "return": [
                "None",
                "str",
                "bool"
            ],
            "arguments": {}
        }
    },
    "mypy-playground-master/app/tests/test_app.py": {
        "app": {
            "name": "app",
            "location": 12,
            "return": [
                "routemaster.app.App",
                "app.GrpyApp"
            ],
            "arguments": {}
        },
        "test_index": {
            "name": "test_index",
            "location": 17,
            "return": [
                "Generator[Awaitable[tornado.httpclient.HTTPResponse],tornado.httpclient.HTTPResponse,None]",
                "None"
            ],
            "arguments": {
                "http_client": [],
                "base_url": []
            }
        }
    },
    "mypy-playground-master/app/tests/test_prometheus.py": {
        "app": {
            "name": "app",
            "location": 14,
            "return": [
                "DummyApplication",
                "int",
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "test_log_request_succeeds": {
            "name": "test_log_request_succeeds",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "app": []
            }
        },
        "test_log_request_with_invalid_content_length": {
            "name": "test_log_request_with_invalid_content_length",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "app": []
            }
        }
    },
    "mypy-playground-master/app/tests/test_utils.py": {
        "test_dict_option_succeeds": {
            "name": "test_dict_option_succeeds",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "Optional[str]",
                    "Dict[str,Any]",
                    "str",
                    "None"
                ],
                "expected": [
                    "Optional[str]",
                    "Dict[str,Any]",
                    "str",
                    "None"
                ]
            }
        },
        "test_dict_option_raises_syntax_error": {
            "name": "test_dict_option_raises_syntax_error",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dict_option_raises_type_error": {
            "name": "test_dict_option_raises_type_error",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_list_pair_option_succeeds": {
            "name": "test_list_pair_option_succeeds",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "Dict[str,Any]",
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "expected": [
                    "Dict[str,Any]",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_list_pair_option_raises_syntax_error": {
            "name": "test_list_pair_option_raises_syntax_error",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_list_pair_option_raises_type_error": {
            "name": "test_list_pair_option_raises_type_error",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_options": {
            "name": "test_options",
            "location": 76,
            "return": [
                "Generator[None,None,None]",
                "Generator"
            ],
            "arguments": {}
        },
        "test_parse_environment_variables": {
            "name": "test_parse_environment_variables",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_parse_toml_file": {
            "name": "test_parse_toml_file",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [
                    "pytest_mock.plugin.MockFixture"
                ],
                "monkeypatch": [
                    "Generator",
                    "pytest_mock.plugin.MockFixture"
                ]
            }
        }
    },
    "mypy-playground-master/app/tests/__init__.py": {},
    "mypy-playground-master/app/tests/sandbox/test_docker.py": {},
    "mypy-playground-master/app/tests/sandbox/test_init.py": {},
    "mypy-playground-master/sandbox/cloud_functions/main.py": {
        "run_typecheck": {
            "name": "run_typecheck",
            "location": 15,
            "return": [
                "Coroutine",
                "int",
                "bool"
            ],
            "arguments": {
                "request": [
                    "str",
                    "Dict[str, Any]",
                    "starlette.requests.Request",
                    "dict"
                ]
            }
        },
        "run_mypy": {
            "name": "run_mypy",
            "location": 36,
            "return": [
                "Dict[Text,]",
                "str",
                "Union[str,List[str]]",
                "List[int]",
                "int"
            ],
            "arguments": {
                "source": [
                    "str"
                ],
                "options": [
                    "List[str]",
                    "str"
                ]
            }
        },
        "abort_api": {
            "name": "abort_api",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "status": [
                    "str"
                ],
                "message": [
                    "str"
                ]
            }
        }
    },
    "mypy-playground-master/sandbox/cloud_functions/0.620/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.630/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.641/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.650/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.660/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.670/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.700/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.710/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.711/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.720/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.730/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.740/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.750/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.760/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.761/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.770/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.780/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.790/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.800/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.812/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.902/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.910/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.920/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.921/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.930/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.931/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.940/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.941/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.942/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.950/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.960/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/0.961/main.py": {},
    "mypy-playground-master/sandbox/cloud_functions/master/main.py": {}
}
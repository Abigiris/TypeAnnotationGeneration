{
    "mypy_test-master/runit.py": {},
    "mypy_test-master/namespace_package/package1/module_a.py": {
        "add_stuff": {
            "name": "add_stuff",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "part1": [
                    "int"
                ],
                "part2": [
                    "int"
                ]
            }
        }
    },
    "mypy_test-master/namespace_package/package1/module_b.py": {},
    "mypy_test-master/namespace_package/package1/__init__.py": {
        "add_stuff": {
            "name": "add_stuff",
            "location": 5,
            "return": [
                "int"
            ],
            "arguments": {
                "part1": [
                    "int"
                ],
                "part2": [
                    "int"
                ]
            }
        }
    },
    "mypy_test-master/namespace_package/package1/subpackage1/__init__.py": {
        "add_stuff": {
            "name": "add_stuff",
            "location": 1,
            "return": [
                "float",
                "int",
                "str",
                "bool",
                "list[typing.Union[Exception,Exception]]",
                "Dict[str, Callable[[], Any]]"
            ],
            "arguments": {
                "part1": [
                    "int",
                    "float",
                    "str",
                    "List[Exception]",
                    "list[Exception]"
                ],
                "part2": [
                    "int",
                    "float",
                    "str",
                    "List[Exception]",
                    "list[Exception]"
                ]
            }
        }
    },
    "mypy_test-master/namespace_package/package2/__init__.py": {
        "doit": {
            "name": "doit",
            "location": 7,
            "return": [
                "bool",
                "Tuple[int, int]",
                "str"
            ],
            "arguments": {}
        }
    }
}
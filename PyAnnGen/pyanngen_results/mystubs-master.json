{
    "mystubs-master/setup.py": {
        "load_requirements": {
            "name": "load_requirements",
            "location": 5,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "mystubs-master/mystubs/update.py": {
        "mypy_version": {
            "name": "mypy_version",
            "location": 45,
            "return": [
                "str",
                "Optional[str]",
                "bool"
            ],
            "arguments": {}
        },
        "auto_versions_from_requirements_file": {
            "name": "auto_versions_from_requirements_file",
            "location": 51,
            "return": [
                "Dict",
                "mypy.options.Options",
                "str",
                "List[str]",
                "Union[str,List[str]]",
                "Tuple[str,str]"
            ],
            "arguments": {}
        },
        "auto_versions_from_pipfile": {
            "name": "auto_versions_from_pipfile",
            "location": 68,
            "return": [
                "Dict",
                "List[float]",
                "float",
                "str",
                "Tuple[int]"
            ],
            "arguments": {}
        },
        "auto_versions": {
            "name": "auto_versions",
            "location": 85,
            "return": [
                "Dict",
                "List[str]",
                "List[Optional[str]]",
                "bool",
                "int",
                "str",
                "MutableMapping[str,int]",
                "denite.util.Candidates"
            ],
            "arguments": {}
        },
        "auto_version": {
            "name": "auto_version",
            "location": 92,
            "return": [
                "str",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {
                "package_name": [
                    "str"
                ]
            }
        },
        "gather_submodules": {
            "name": "gather_submodules",
            "location": 146,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "mod_paths": [
                    "str",
                    "List[pypi2nix.path.Path]",
                    "pypi2nix.path.Path"
                ],
                "prefix": [
                    "str",
                    "List[pypi2nix.path.Path]",
                    "pypi2nix.path.Path"
                ]
            }
        },
        "gather_stubgen_jobs": {
            "name": "gather_stubgen_jobs",
            "location": 152,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "module_name": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "gather_modules_to_build": {
            "name": "gather_modules_to_build",
            "location": 166,
            "return": [
                "Generator[(Mod, Any, None)]"
            ],
            "arguments": {}
        },
        "kill": {
            "name": "kill",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "kill_path": [
                    "str",
                    "waterbutler.core.path.WaterButlerPath"
                ]
            }
        },
        "ensure_dir": {
            "name": "ensure_dir",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "dir_path": [
                    "str",
                    "bool"
                ]
            }
        },
        "generate_stubs": {
            "name": "generate_stubs",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "mod": [
                    "str",
                    "List[str]",
                    "Callable[[str],str]",
                    "Callable[str,str]"
                ],
                "target_dir": [
                    "bool",
                    "str",
                    "Union[str,bytes]",
                    "bytes"
                ]
            }
        },
        "hash_file": {
            "name": "hash_file",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "hasher": [
                    "str"
                ],
                "file_to_hash": [
                    "str",
                    "Union[str,List[str]]",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "hash_dir": {
            "name": "hash_dir",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "hasher": [
                    "Callable",
                    "str",
                    "int",
                    "List[int]",
                    "bytes"
                ],
                "dir": [
                    "str",
                    "Callable",
                    "bytes",
                    "Dict",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "is_built_version": {
            "name": "is_built_version",
            "location": 247,
            "return": [
                "bool"
            ],
            "arguments": {
                "mod": [
                    "str",
                    "Optional[Callable]",
                    "Callable",
                    "None"
                ],
                "target": [
                    "str",
                    "None",
                    "Optional[str]",
                    "List[dict[str,Any]]",
                    "List[Dict[str,Any]]",
                    "Optional[Directory]"
                ]
            }
        },
        "record_build_state": {
            "name": "record_build_state",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "mod": [
                    "str",
                    "Iterable[T]",
                    "IO",
                    "Dict[str,Any]"
                ]
            }
        },
        "copy_stubs_into_place": {
            "name": "copy_stubs_into_place",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "from_dir": [
                    "str",
                    "Dict[str,str]"
                ]
            }
        },
        "update_if_required": {
            "name": "update_if_required",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "mod": [
                    "int",
                    "bool"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "clean": {
            "name": "clean",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "mod_name": [
                    "str",
                    "None",
                    "Optional[str]",
                    "Callable[[Any],bool]",
                    "Callable[Any,bool]"
                ]
            }
        },
        "Mod.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "List[str]",
                    "Dict"
                ],
                "config": [
                    "Dict[str,str]",
                    "bool",
                    "Dict",
                    "Dict[str,list]",
                    "str"
                ],
                "stub_root_dir": [
                    "str",
                    "Dict",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "Mod.package_name": {
            "name": "package_name",
            "location": 103,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mod.target_version": {
            "name": "target_version",
            "location": 107,
            "return": [
                "str",
                "List[mypy.modulefinder.BuildSource]",
                "List[dict[str,Any]]",
                "int",
                "Dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mod.prev_build_record_path": {
            "name": "prev_build_record_path",
            "location": 114,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mod.project_local_stubs_overrides": {
            "name": "project_local_stubs_overrides",
            "location": 118,
            "return": [
                "str",
                "cerulean.path.AbstractPath"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mod.user_local_stubs_override_dirs": {
            "name": "user_local_stubs_override_dirs",
            "location": 122,
            "return": [
                "List",
                "py.path.local",
                "path.Path",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mod.hash_current_state": {
            "name": "hash_current_state",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hasher": [
                    "str",
                    "BinaryIO"
                ]
            }
        }
    },
    "mystubs-master/mystubs/__init__.py": {}
}
{
    "namadgram-master/nomadgram/manage.py": {},
    "namadgram-master/nomadgram/config/urls.py": {},
    "namadgram-master/nomadgram/config/wsgi.py": {},
    "namadgram-master/nomadgram/config/__init__.py": {},
    "namadgram-master/nomadgram/config/settings/base.py": {},
    "namadgram-master/nomadgram/config/settings/local.py": {},
    "namadgram-master/nomadgram/config/settings/production.py": {},
    "namadgram-master/nomadgram/config/settings/test.py": {},
    "namadgram-master/nomadgram/config/settings/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None"
                ],
                "tmpdir": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory",
                "int",
                "List[Dict[str,Any]]",
                "bool",
                "List"
            ],
            "arguments": {}
        }
    },
    "namadgram-master/nomadgram/Nomadgram/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/contrib/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/contrib/sites/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/contrib/sites/migrations/0001_initial.py": {},
    "namadgram-master/nomadgram/Nomadgram/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "namadgram-master/nomadgram/Nomadgram/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/contrib/sites/migrations/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/admin.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/apps.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/models.py": {
        "Image.like_count": {
            "name": "like_count",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.comment_count": {
            "name": "comment_count",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.__str__": {
            "name": "__str__",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.__str__": {
            "name": "__str__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Like.__str__": {
            "name": "__str__",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/images/serializers.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/tests.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/urls.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/views.py": {
        "Images.get": {
            "name": "get",
            "location": 13,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "Images.post": {
            "name": "post",
            "location": 44,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "LikeImage.get": {
            "name": "get",
            "location": 64,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "LikeImage.post": {
            "name": "post",
            "location": 76,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UnlikeImage.delete": {
            "name": "delete",
            "location": 111,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "CommentOnImage.post": {
            "name": "post",
            "location": 136,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "Comment.delete": {
            "name": "delete",
            "location": 164,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "comment_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "Search.get": {
            "name": "get",
            "location": 179,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "ModerateComments.delete": {
            "name": "delete",
            "location": 199,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "comment_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "ImageDetail.find_own_image": {
            "name": "find_own_image",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_id": [],
                "user": []
            }
        },
        "ImageDetail.get": {
            "name": "get",
            "location": 222,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "ImageDetail.put": {
            "name": "put",
            "location": 235,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "ImageDetail.delete": {
            "name": "delete",
            "location": 257,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/images/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/migrations/0001_initial.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/migrations/0002_auto_20190309_0127.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/migrations/0003_auto_20190311_1600.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/migrations/0004_auto_20190312_0032.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/migrations/0005_image_tags.py": {},
    "namadgram-master/nomadgram/Nomadgram/images/migrations/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/admin.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/apps.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/models.py": {
        "Notification.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [
                "str",
                "cmk.utils.type_defs.UserId",
                "Dict",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/notifications/serializers.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/tests.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/urls.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/views.py": {
        "create_notification": {
            "name": "create_notification",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "creator": [
                    "bool",
                    "Dict[str,Any]",
                    "str"
                ],
                "to": [
                    "bool",
                    "Dict[str,Any]",
                    "str"
                ],
                "notification_type": [
                    "bool",
                    "Dict[str,Any]",
                    "str"
                ],
                "image": [
                    "bool",
                    "Dict[str,Any]",
                    "None",
                    "str"
                ],
                "comment": [
                    "bool",
                    "Dict[str,Any]",
                    "None",
                    "str"
                ]
            }
        },
        "Notifications.get": {
            "name": "get",
            "location": 9,
            "return": [
                "Response",
                "bool",
                "str",
                "models.Dashboard",
                "contests.models.User",
                "int",
                "List[recidiviz.persistence.entity.state.entities.StateSupervisionViolation.Response]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "Optional[str]",
                    "None",
                    "zerver.models.UserProfile"
                ],
                "format": [
                    "None",
                    "bool",
                    "rest_framework.requesRequest",
                    "str",
                    "float",
                    "List",
                    "Optional[int]"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/notifications/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/migrations/0001_initial.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/migrations/0002_notification_comment.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/migrations/0003_auto_20190330_1600.py": {},
    "namadgram-master/nomadgram/Nomadgram/notifications/migrations/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict",
                    "django.http.HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict",
                    "django.http.HttpRequest"
                ],
                "sociallogin": [
                    "Dict",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/admin.py": {
        "MyUserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 41,
            "return": [
                "int",
                "Callable",
                "models.Question",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.post_count": {
            "name": "post_count",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.followers_count": {
            "name": "followers_count",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.following_count": {
            "name": "following_count",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/serializers.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/urls.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/views.py": {
        "ExploreUsers.get": {
            "name": "get",
            "location": 13,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "FollowUser.post": {
            "name": "post",
            "location": 25,
            "return": [
                "Response"
            ],
            "arguments": {
                "selfe": [],
                "request": [],
                "user_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UnFollowUser.post": {
            "name": "post",
            "location": 48,
            "return": [
                "Response"
            ],
            "arguments": {
                "selfe": [],
                "request": [],
                "user_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UserProfile.get_user": {
            "name": "get_user",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "UserProfile.get": {
            "name": "get",
            "location": 76,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "UserProfile.put": {
            "name": "put",
            "location": 88,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "UserFollowers.get": {
            "name": "get",
            "location": 119,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "UserFollowing.get": {
            "name": "get",
            "location": 135,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "Search.get": {
            "name": "get",
            "location": 151,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "ChangePassword.put": {
            "name": "put",
            "location": 169,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/0001_initial.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/0002_auto_20190309_0010.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/0003_auto_20190309_0133.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/0004_user_profile_image.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/0005_auto_20190325_0042.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/0006_auto_20190325_0519.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/migrations/__init__.py": {},
    "namadgram-master/nomadgram/Nomadgram/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "bool",
                    "Callable[Any,T]",
                    "Callable[[Any],T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "bool",
                    "Callable[Any,T]",
                    "Callable[[Any],T]"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "django.conf.settings.AUTH_USER_MODEL",
                    "bool"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        }
    },
    "namadgram-master/nomadgram/Nomadgram/users/tests/__init__.py": {}
}
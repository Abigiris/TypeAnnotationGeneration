{
    "notes_backend-master/manage.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "notes_backend-master/docs/conf.py": {},
    "notes_backend-master/server/urls.py": {},
    "notes_backend-master/server/wsgi.py": {},
    "notes_backend-master/server/__init__.py": {},
    "notes_backend-master/server/main_app/admin.py": {},
    "notes_backend-master/server/main_app/apps.py": {},
    "notes_backend-master/server/main_app/models.py": {},
    "notes_backend-master/server/main_app/views.py": {},
    "notes_backend-master/server/notes/admin.py": {},
    "notes_backend-master/server/notes/apps.py": {},
    "notes_backend-master/server/notes/models.py": {
        "Category.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note.__str__": {
            "name": "__str__",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "notes_backend-master/server/notes/permissions.py": {
        "NotePermission.has_object_permission": {
            "name": "has_object_permission",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str",
                    "rest_framework.requesRequest"
                ],
                "view": [
                    "Dict"
                ],
                "obj": [
                    "str",
                    "rest_framework.requesRequest"
                ]
            }
        }
    },
    "notes_backend-master/server/notes/serializers.py": {},
    "notes_backend-master/server/notes/urls.py": {},
    "notes_backend-master/server/notes/views.py": {
        "NoteViewSet.perform_create": {
            "name": "perform_create",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": [
                    "str",
                    "Callable",
                    "Dict[str,Any]"
                ]
            }
        }
    },
    "notes_backend-master/server/notes/__init__.py": {},
    "notes_backend-master/server/notes/migrations/0001_initial.py": {},
    "notes_backend-master/server/notes/migrations/0002_auto_20180113_1314.py": {},
    "notes_backend-master/server/notes/migrations/0003_auto_20180117_2109.py": {},
    "notes_backend-master/server/notes/migrations/__init__.py": {},
    "notes_backend-master/server/notes/tests/test_category_api.py": {
        "CategoryListTestCase.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryListTestCase.test_category_get": {
            "name": "test_category_get",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryListTestCase.test_category_create": {
            "name": "test_category_create",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryDetailTestCase.setUp": {
            "name": "setUp",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryDetailTestCase.test_category_get": {
            "name": "test_category_get",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryDetailTestCase.test_category_put": {
            "name": "test_category_put",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryDetailTestCase.test_category_patch": {
            "name": "test_category_patch",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CategoryDetailTestCase.test_category_delete": {
            "name": "test_category_delete",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "notes_backend-master/server/notes/tests/test_note_api.py": {
        "NoteListTestCase.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteListTestCase.test_note_get": {
            "name": "test_note_get",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteListTestCase.test_note_create": {
            "name": "test_note_create",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteDetailTestCase.setUp": {
            "name": "setUp",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteDetailTestCase.test_note_get": {
            "name": "test_note_get",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteDetailTestCase.test_note_put": {
            "name": "test_note_put",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteDetailTestCase.test_note_patch": {
            "name": "test_note_patch",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteDetailTestCase.test_note_delete": {
            "name": "test_note_delete",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteDetailTestCase.test_note_access": {
            "name": "test_note_access",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteReadOnlyFieldsTestCase.setUp": {
            "name": "setUp",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteReadOnlyFieldsTestCase.test_uuid_field": {
            "name": "test_uuid_field",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoteReadOnlyFieldsTestCase.test_user_field": {
            "name": "test_user_field",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "notes_backend-master/server/notes/tests/__init__.py": {},
    "notes_backend-master/server/settings/__init__.py": {},
    "notes_backend-master/server/settings/components/common.py": {},
    "notes_backend-master/server/settings/components/csp.py": {},
    "notes_backend-master/server/settings/components/logging.py": {},
    "notes_backend-master/server/settings/components/__init__.py": {
        "GlobalIPList.__contains__": {
            "name": "__contains__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "float"
                ]
            }
        }
    },
    "notes_backend-master/server/settings/environments/development.py": {},
    "notes_backend-master/server/settings/environments/production.py": {},
    "notes_backend-master/server/settings/environments/__init__.py": {},
    "notes_backend-master/server/users/admin.py": {},
    "notes_backend-master/server/users/apps.py": {},
    "notes_backend-master/server/users/models.py": {},
    "notes_backend-master/server/users/serializers.py": {
        "UserSerializer.create": {
            "name": "create",
            "location": 23,
            "return": [
                "aiolambda.Maybe[auth.user.User]"
            ],
            "arguments": {
                "self": [],
                "validated_data": [
                    "bytes",
                    "Dict[str,Any]",
                    "Dict",
                    "Optional[Dict]",
                    "Optional[Dict[str,Any]]"
                ]
            }
        }
    },
    "notes_backend-master/server/users/urls.py": {},
    "notes_backend-master/server/users/views.py": {},
    "notes_backend-master/server/users/__init__.py": {},
    "notes_backend-master/server/users/migrations/__init__.py": {}
}
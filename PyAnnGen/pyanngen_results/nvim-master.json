{
    "nvim-master/ycm_extra_conf.py": {
        "DirectoryOfThisScript": {
            "name": "DirectoryOfThisScript",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "MakeRelativePathsInFlagsAbsolute": {
            "name": "MakeRelativePathsInFlagsAbsolute",
            "location": 78,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "working_directory": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "NormalizePath": {
            "name": "NormalizePath",
            "location": 128,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "IsHeaderFile": {
            "name": "IsHeaderFile",
            "location": 132,
            "return": [
                "bool"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "GetCompilationInfoForFile": {
            "name": "GetCompilationInfoForFile",
            "location": 137,
            "return": [
                "None",
                "str",
                "bool",
                "Dict[str, Any]",
                "List[str]",
                "Tuple[Optional[str], Optional[str]]",
                "Callable",
                "Optional[str]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "PathToPythonUsedDuringBuild": {
            "name": "PathToPythonUsedDuringBuild",
            "location": 154,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Settings": {
            "name": "Settings",
            "location": 162,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {}
        },
        "FlagsForFile": {
            "name": "FlagsForFile",
            "location": 223,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        }
    },
    "nvim-master/skeletons/skeleton.py": {
        "createLogger": {
            "name": "createLogger",
            "location": 155,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "stdout_level": [
                    "int"
                ],
                "file_level": [
                    "int"
                ],
                "color": [
                    "bool"
                ],
                "filename": [
                    "Optional[str]"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "_str_to_logging": {
            "name": "_str_to_logging",
            "location": 271,
            "return": [
                "int"
            ],
            "arguments": {
                "level": [
                    "Union[(int, str)]"
                ]
            }
        },
        "_parseArgs": {
            "name": "_parseArgs",
            "location": 310,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 403,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Job.head": {
            "name": "head",
            "location": 75,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "Job.tail": {
            "name": "tail",
            "location": 88,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "Job.execute": {
            "name": "execute",
            "location": 101,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "background": [
                    "bool"
                ],
                "cwd": [
                    "Optional[str]"
                ]
            }
        },
        "_parseArgs.NegateAction.__call__": {
            "name": "__call__",
            "location": 319,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "int",
                    "list",
                    "str",
                    "Type[Exception]"
                ],
                "ns": [
                    "int",
                    "Dict[str, float]",
                    "argparse.Namespace",
                    "List[Type]",
                    "bool"
                ],
                "values": [
                    "int",
                    "list",
                    "str",
                    "Type[Exception]"
                ],
                "option": [
                    "str",
                    "list",
                    "Mapping[str, str]",
                    "bool",
                    "Match",
                    "Iterable[T_co]"
                ]
            }
        },
        "_parseArgs.ChangeLogFile.__call__": {
            "name": "__call__",
            "location": 327,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "int",
                    "list",
                    "str",
                    "Type[Exception]"
                ],
                "ns": [
                    "Union[int, float]",
                    "Optional[List[int]]",
                    "Dict[str, float]",
                    "bool",
                    "int",
                    "Optional[str]"
                ],
                "values": [
                    "int",
                    "Union[int, List[int]]",
                    "Union[int, float]"
                ],
                "option": [
                    "int",
                    "list",
                    "str",
                    "Type[Exception]"
                ]
            }
        },
        "createLogger.PrimitiveFormatter.__init__": {
            "name": "__init__",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fmt": [
                    "str",
                    "Optional[logging.Logger]",
                    "logging.Logger"
                ],
                "log_colors": [
                    "None",
                    "int",
                    "Optional[bytes]",
                    "Optional[Dict[str, Any]]",
                    "Optional[Any]"
                ]
            }
        },
        "createLogger.PrimitiveFormatter.format": {
            "name": "format",
            "location": 221,
            "return": [
                "str",
                "Tuple[Tuple[int, ...]]"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "int",
                    "tuple"
                ]
            }
        }
    }
}
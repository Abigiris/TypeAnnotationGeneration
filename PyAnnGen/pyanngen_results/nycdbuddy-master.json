{
    "nycdbuddy-master/bud.py": {},
    "nycdbuddy-master/nycdbuddy/cli.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "bool",
                    "int"
                ],
                "image": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "ensure_name": {
            "name": "ensure_name",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "List[str]",
                    "None",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "nycdbuddy-master/nycdbuddy/docker_util.py": {
        "run_and_remove": {
            "name": "run_and_remove",
            "location": 6,
            "return": [
                "str",
                "Sequence[str]",
                "int",
                "BinaryIO"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient",
                    "List[str]",
                    "Union[str,List[str]]"
                ],
                "image": [
                    "str",
                    "List[str]",
                    "Union[str,List[str]]",
                    "docker.DockerClient"
                ],
                "cmd": [
                    "str",
                    "List[str]",
                    "Union[str,List[str]]",
                    "docker.DockerClient"
                ]
            }
        },
        "exists": {
            "name": "exists",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "collection": [
                    "str",
                    "bytes",
                    "List",
                    "Callable",
                    "Optional[str]",
                    "None"
                ],
                "name": [
                    "str",
                    "bytes",
                    "List",
                    "Callable",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "container_exists": {
            "name": "container_exists",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "client": [
                    "str",
                    "None",
                    "docker.DockerClient",
                    "Optional[str]"
                ],
                "name": [
                    "str",
                    "None",
                    "docker.DockerClient",
                    "Optional[str]"
                ]
            }
        },
        "remove_volume": {
            "name": "remove_volume",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "None",
                    "docker.DockerClient",
                    "Optional[str]"
                ],
                "name": [
                    "str"
                ]
            }
        }
    },
    "nycdbuddy-master/nycdbuddy/image.py": {
        "build_context_tarfile": {
            "name": "build_context_tarfile",
            "location": 55,
            "return": [
                "io.BytesIO"
            ],
            "arguments": {
                "dockerfile": [
                    "str",
                    "bool",
                    "int",
                    "slice"
                ]
            }
        },
        "get_latest_rev": {
            "name": "get_latest_rev",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "repo": [
                    "str"
                ],
                "branch": [
                    "str",
                    "Text"
                ]
            }
        },
        "get_lines_from_events": {
            "name": "get_lines_from_events",
            "location": 74,
            "return": [
                "list"
            ],
            "arguments": {
                "events": [
                    "str",
                    "List[str]",
                    "Mapping[str,Any]",
                    "List[dict[str,Any]]",
                    "Dict[str,Any]",
                    "List[Dict[str,Any]]"
                ]
            }
        },
        "show_build_log": {
            "name": "show_build_log",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "events": [
                    "Mapping[str,Any]",
                    "Mapping"
                ],
                "stderr": [
                    "TextIO",
                    "IO"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 85,
            "return": [
                "str",
                "Union[Literal,str]",
                "List[str]",
                "Dict",
                "List",
                "int"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "build_args": [
                    "str",
                    "None",
                    "bool",
                    "Dict[str,Any]",
                    "int"
                ],
                "stderr": [
                    "TextIO",
                    "str",
                    "Callable",
                    "List[str]"
                ]
            }
        },
        "BuildArgs.short_rev": {
            "name": "short_rev",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildArgs.to_dockerfile_buildargs": {
            "name": "to_dockerfile_buildargs",
            "location": 48,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdbuddy-master/nycdbuddy/machine.py": {
        "run_docker_machine": {
            "name": "run_docker_machine",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "aws_create": {
            "name": "aws_create",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "rm": {
            "name": "rm",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "get_client_env": {
            "name": "get_client_env",
            "location": 50,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "name": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_client": {
            "name": "get_client",
            "location": 68,
            "return": [
                "Callable",
                "Generator[Union[Any,None,None]]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "shell": {
            "name": "shell",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "Type",
                    "Sequence[type]",
                    "Sequence[Type]",
                    "Optional[Any]",
                    "Any",
                    "None"
                ]
            }
        }
    },
    "nycdbuddy-master/nycdbuddy/populate.py": {
        "get_datasets_yml": {
            "name": "get_datasets_yml",
            "location": 48,
            "return": [
                "bool",
                "Union[int, float, complex]",
                "bytes",
                "dict",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "image": [
                    "str",
                    "docker.DockerClient"
                ]
            }
        },
        "get_dataset_tables": {
            "name": "get_dataset_tables",
            "location": 56,
            "return": [
                "list"
            ],
            "arguments": {
                "yml": [
                    "Dict[str,Any]",
                    "Dict",
                    "Dict[str,float]",
                    "Dict[str,bool]",
                    "Mapping[str,Any]"
                ]
            }
        },
        "get_datasets": {
            "name": "get_datasets",
            "location": 69,
            "return": [
                "str",
                "bool",
                "dict",
                "set",
                "List[str]"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "image": [
                    "str"
                ]
            }
        },
        "get_or_create_network": {
            "name": "get_or_create_network",
            "location": 77,
            "return": [
                "str",
                "docker.DockerClient",
                "Optional[str]"
            ],
            "arguments": {
                "client": [
                    "str",
                    "List[str]",
                    "docker.DockerClient"
                ]
            }
        },
        "get_logs": {
            "name": "get_logs",
            "location": 83,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "container": [
                    "str",
                    "Optional[str]",
                    "List",
                    "None",
                    "Callable[[str],None]",
                    "Callable[str,None]"
                ]
            }
        },
        "does_table_exist": {
            "name": "does_table_exist",
            "location": 87,
            "return": [
                "bool",
                "int",
                "Dict[str, bool]"
            ],
            "arguments": {
                "cursor": [
                    "str",
                    "List[str]"
                ],
                "table": [
                    "Callable",
                    "Type",
                    "List[List[str]]",
                    "List[list[str]]"
                ]
            }
        },
        "show_rowcounts": {
            "name": "show_rowcounts",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "cinfo": [
                    "postgres.ConnectInfo",
                    "str"
                ],
                "nycdb_image": [
                    "str",
                    "postgres.ConnectInfo"
                ]
            }
        },
        "status": {
            "name": "status",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient",
                    "Dict[str,Any]",
                    "List[str]",
                    "Union[str,List[str]]"
                ],
                "container_name": [
                    "Text",
                    "str",
                    "docker.DockerClient",
                    "Dict[str,Any]"
                ],
                "nycdb_image": [
                    "str",
                    "postgres.ConnectInfo"
                ],
                "cinfo": [
                    "str",
                    "postgres.ConnectInfo"
                ]
            }
        },
        "stop": {
            "name": "stop",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "container_name": [
                    "Text",
                    "str",
                    "docker.DockerClient"
                ]
            }
        },
        "ensure_container_is_not_running": {
            "name": "ensure_container_is_not_running",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "None",
                    "docker.DockerClient",
                    "Optional[str]"
                ],
                "name": [
                    "str",
                    "None",
                    "docker.DockerClient",
                    "Optional[str]"
                ]
            }
        },
        "populate": {
            "name": "populate",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "List[str]",
                    "docker.DockerClient"
                ],
                "use_test_data": [
                    "bool",
                    "str",
                    "Optional[str]"
                ],
                "nycdb_image": [
                    "docker.DockerClient",
                    "str"
                ],
                "container_name": [
                    "Text",
                    "str",
                    "docker.DockerClient"
                ],
                "volume_name": [
                    "Text",
                    "str",
                    "List[str]"
                ],
                "postgres_container_name": [
                    "str",
                    "List[str]"
                ],
                "cinfo": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "wipe": {
            "name": "wipe",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "name": [
                    "Text",
                    "str",
                    "Dict"
                ],
                "volume_name": [
                    "str",
                    "Text"
                ]
            }
        },
        "TableInfo.with_rows": {
            "name": "with_rows",
            "location": 30,
            "return": [
                "TableInfo"
            ],
            "arguments": {
                "self": [
                    "_TTableInfo@@TableInfo@@"
                ],
                "cursor": [
                    "dict"
                ]
            }
        },
        "TableInfo.describe": {
            "name": "describe",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdbuddy-master/nycdbuddy/postgres.py": {
        "retry_connection": {
            "name": "retry_connection",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "List[str]",
                    "bool",
                    "docker.DockerClient"
                ],
                "cinfo": [
                    "List[str]",
                    "bool",
                    "docker.DockerClient"
                ],
                "retries": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "get_connection": {
            "name": "get_connection",
            "location": 62,
            "return": [
                "psycopg2._psycopg.connection"
            ],
            "arguments": {
                "client": [
                    "str",
                    "Iterable[str]",
                    "Callable"
                ],
                "cinfo": [
                    "float"
                ]
            }
        },
        "hello_world": {
            "name": "hello_world",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "List[str]",
                    "bool",
                    "docker.DockerClient"
                ],
                "cinfo": [
                    "ConnectInfo",
                    "docker.DockerClient",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "stop": {
            "name": "stop",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "List[str]",
                    "docker.DockerClient"
                ],
                "name": [
                    "Text",
                    "str",
                    "Optional[str]",
                    "Optional[List[str]]"
                ]
            }
        },
        "start": {
            "name": "start",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "cinfo": [
                    "ConnectInfo",
                    "docker.DockerClient",
                    "str"
                ],
                "name": [
                    "Text",
                    "str",
                    "docker.DockerClient",
                    "Optional[str]"
                ],
                "volume_name": [
                    "Text",
                    "str",
                    "docker.DockerClient"
                ]
            }
        },
        "wipe": {
            "name": "wipe",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "str",
                    "docker.DockerClient"
                ],
                "name": [
                    "Text",
                    "str",
                    "Optional[str]",
                    "BinaryIO"
                ],
                "volume_name": [
                    "str",
                    "Text"
                ]
            }
        },
        "show_info": {
            "name": "show_info",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "cinfo": [
                    "ConnectInfo"
                ]
            }
        },
        "ConnectInfo.with_docker_host": {
            "name": "with_docker_host",
            "location": 25,
            "return": [
                "ConnectInfo"
            ],
            "arguments": {
                "self": [
                    "_TConnectInfo@@ConnectInfo@@"
                ],
                "client": [
                    "str",
                    "List[dict[str,Any]]",
                    "docker.DockerClient",
                    "None",
                    "List[Dict[str,Any]]",
                    "Optional[str]"
                ]
            }
        },
        "ConnectInfo.to_postgres_environment": {
            "name": "to_postgres_environment",
            "location": 30,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConnectInfo.to_psycopg2_kwargs": {
            "name": "to_psycopg2_kwargs",
            "location": 37,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdbuddy-master/nycdbuddy/__init__.py": {},
    "nycdbuddy-master/tests/test_cli.py": {
        "test_help_exits_without_error": {
            "name": "test_help_exits_without_error",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unrecognized_options_exit_with_error": {
            "name": "test_unrecognized_options_exit_with_error",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nycdbuddy-master/tests/__init__.py": {}
}
{
    "oatmeal-protocol-master/examples/ArduinoIDEExample/ide_example.py": {
        "main": {
            "name": "main",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MyDevice.set_led_state": {
            "name": "set_led_state",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "led_state": [
                    "typing.Callable[, ]",
                    "Callable",
                    "dict[, ]",
                    "str",
                    "dict",
                    "list[typing.Callable[, ]]",
                    "bool",
                    "Iterable[Any]",
                    "Iterable[float]",
                    "List[Callable]"
                ]
            }
        },
        "MyDevice.get_adc_values": {
            "name": "get_adc_values",
            "location": 37,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oatmeal-protocol-master/examples/SimpleMemoryGetSet/getset_example.py": {
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MyDevice.set_val": {
            "name": "set_val",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "val": [
                    "str"
                ]
            }
        },
        "MyDevice.get_val": {
            "name": "get_val",
            "location": 41,
            "return": [
                "int",
                "Dict[str, str]",
                "str",
                "Optional[Callable]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "MyDevice.get_all_vals": {
            "name": "get_all_vals",
            "location": 45,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyDevice.handle_heartbeat": {
            "name": "handle_heartbeat",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "oatmeal.protocol.OatmealMsg"
                ]
            }
        }
    },
    "oatmeal-protocol-master/examples/SmallHardwareExample/example_hardware.py": {
        "main": {
            "name": "main",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MyDevice.set_led_state": {
            "name": "set_led_state",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "led_state": [
                    "typing.Callable[, ]",
                    "Callable",
                    "dict[, ]",
                    "str",
                    "dict",
                    "list[typing.Callable[, ]]",
                    "bool",
                    "Iterable[Any]",
                    "Iterable[float]",
                    "List[Callable]"
                ]
            }
        },
        "MyDevice.get_adc_values": {
            "name": "get_adc_values",
            "location": 35,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oatmeal-protocol-master/python/setup.py": {},
    "oatmeal-protocol-master/python/docs/conf.py": {},
    "oatmeal-protocol-master/python/oatmeal/device.py": {
        "open_device": {
            "name": "open_device",
            "location": 233,
            "return": [
                "Optional[OatmealDevice_T]"
            ],
            "arguments": {
                "uart_path": [
                    "str"
                ],
                "device_map": [
                    "Dict[(str, Type[OatmealDevice_T])]"
                ]
            }
        },
        "_prioritise_serial_path": {
            "name": "_prioritise_serial_path",
            "location": 292,
            "return": [
                "int"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "_device_list_to_map": {
            "name": "_device_list_to_map",
            "location": 305,
            "return": [
                "Dict[(str, Type[OatmealDevice_T])]"
            ],
            "arguments": {
                "device_list": [
                    "List[Type[OatmealDevice_T]]"
                ]
            }
        },
        "detect_all_devices": {
            "name": "detect_all_devices",
            "location": 319,
            "return": [
                "Dict[(str, List[OatmealDevice_T])]"
            ],
            "arguments": {
                "device_list": [
                    "List[Type[OatmealDevice_T]]"
                ]
            }
        },
        "find_devices": {
            "name": "find_devices",
            "location": 384,
            "return": [
                "Dict[(str, OatmealDevice_T)]"
            ],
            "arguments": {
                "device_list": [
                    "List[Type[OatmealDevice_T]]"
                ]
            }
        },
        "close_devices": {
            "name": "close_devices",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "OatmealDevice.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDevice.create": {
            "name": "create",
            "location": 64,
            "return": [
                "OatmealDevice_T"
            ],
            "arguments": {
                "cls": [
                    "Type[OatmealDevice_T]"
                ],
                "uart_path": [
                    "str"
                ],
                "details": [
                    "oatmeal.protocol.OatmealDeviceDetails"
                ]
            }
        },
        "OatmealDevice.get_path": {
            "name": "get_path",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDevice.get_name": {
            "name": "get_name",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDevice.send": {
            "name": "send",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "oatmeal.protocol.OatmealMsg"
                ]
            }
        },
        "OatmealDevice.send_and_ack": {
            "name": "send_and_ack",
            "location": 98,
            "return": [
                "oatmeal.protocol.OatmealMsg"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "oatmeal.protocol.OatmealMsg"
                ],
                "ackcode": [
                    "str"
                ],
                "timeout": [
                    "float"
                ],
                "n_retries": [
                    "int"
                ]
            }
        },
        "OatmealDevice.send_and_done": {
            "name": "send_and_done",
            "location": 108,
            "return": [
                "Tuple[(oatmeal.protocol.OatmealMsg, oatmeal.protocol.OatmealMsg)]"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "oatmeal.protocol.OatmealMsg"
                ],
                "ackcode": [
                    "str"
                ],
                "donecode": [
                    "str"
                ],
                "ack_timeout": [
                    "float"
                ],
                "done_timeout": [
                    "float"
                ],
                "n_ack_retries": [
                    "int"
                ]
            }
        },
        "OatmealDevice.read": {
            "name": "read",
            "location": 119,
            "return": [
                "oatmeal.protocol.OatmealMsg"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "OatmealDevice.try_read": {
            "name": "try_read",
            "location": 123,
            "return": [
                "Optional[oatmeal.protocol.OatmealMsg]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "OatmealDevice.flush": {
            "name": "flush",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDevice.stop": {
            "name": "stop",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDevice.ask_who": {
            "name": "ask_who",
            "location": 136,
            "return": [
                "oatmeal.protocol.OatmealDeviceDetails"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ],
                "n_retries": [
                    "int"
                ]
            }
        },
        "OatmealDevice.halt": {
            "name": "halt",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDevice.toggle_heartbeats": {
            "name": "toggle_heartbeats",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "send_heartbeats": [
                    "bool"
                ]
            }
        },
        "OatmealDevice.haltable": {
            "name": "haltable",
            "location": 168,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "OatmealDevice.find": {
            "name": "find",
            "location": 183,
            "return": [
                "Optional[OatmealDevice_T]"
            ],
            "arguments": {
                "cls": [
                    "Type[OatmealDevice_T]"
                ]
            }
        },
        "OatmealDevice.find_all": {
            "name": "find_all",
            "location": 208,
            "return": [
                "List[OatmealDevice_T]"
            ],
            "arguments": {
                "cls": [
                    "Type[OatmealDevice_T]"
                ]
            }
        },
        "OatmealDevice.haltable.haltable_func": {
            "name": "haltable_func",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "oatmeal-protocol-master/python/oatmeal/protocol.py": {
        "_rand_choices": {
            "name": "_rand_choices",
            "location": 68,
            "return": [
                "list"
            ],
            "arguments": {
                "arr": [
                    "Sequence"
                ],
                "k": [
                    "int"
                ]
            }
        },
        "_max_frame_hard_limit": {
            "name": "_max_frame_hard_limit",
            "location": 73,
            "return": [
                "int"
            ],
            "arguments": {
                "max_frame_len": [
                    "int"
                ]
            }
        },
        "OatmealMsg.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "opcode": [
                    "str"
                ]
            }
        },
        "OatmealMsg._traverse_args": {
            "name": "_traverse_args",
            "location": 153,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "args": [
                    "Iterable"
                ]
            }
        },
        "OatmealMsg.traverse_args": {
            "name": "traverse_args",
            "location": 162,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.validate": {
            "name": "validate",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.command": {
            "name": "command",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.flag": {
            "name": "flag",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.is_background_msg": {
            "name": "is_background_msg",
            "location": 193,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg._parse_heartbeat": {
            "name": "_parse_heartbeat",
            "location": 198,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealMsg.checkbyte_uint16_to_ascii": {
            "name": "checkbyte_uint16_to_ascii",
            "location": 216,
            "return": [
                "int"
            ],
            "arguments": {
                "checksum": [
                    "int"
                ]
            }
        },
        "OatmealMsg.length_checksum": {
            "name": "length_checksum",
            "location": 227,
            "return": [
                "int"
            ],
            "arguments": {
                "frame_len": [
                    "int"
                ]
            }
        },
        "OatmealMsg.calc_checksum": {
            "name": "calc_checksum",
            "location": 242,
            "return": [
                "int"
            ],
            "arguments": {
                "frame": [
                    "Sequence[int]"
                ]
            }
        },
        "OatmealMsg.is_valid_token": {
            "name": "is_valid_token",
            "location": 258,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "OatmealMsg.is_valid_opcode": {
            "name": "is_valid_opcode",
            "location": 271,
            "return": [
                "bool"
            ],
            "arguments": {
                "opcode": [
                    "str"
                ]
            }
        },
        "OatmealMsg.is_valid_dict_key": {
            "name": "is_valid_dict_key",
            "location": 284,
            "return": [
                "bool"
            ],
            "arguments": {
                "key": [
                    "str"
                ]
            }
        },
        "OatmealMsg._encode_bytes": {
            "name": "_encode_bytes",
            "location": 296,
            "return": [
                "bytes"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg._decode_bytes": {
            "name": "_decode_bytes",
            "location": 305,
            "return": [
                "Tuple[(bytearray, int)]"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg._decode_str": {
            "name": "_decode_str",
            "location": 334,
            "return": [
                "int",
                "float",
                "bool",
                "None"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "OatmealMsg._parse_single_item": {
            "name": "_parse_single_item",
            "location": 366,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg._parse_dict": {
            "name": "_parse_dict",
            "location": 397,
            "return": [
                "Tuple[(Dict[(str, Any)], int)]"
            ],
            "arguments": {
                "b": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg._parse_list": {
            "name": "_parse_list",
            "location": 441,
            "return": [
                "Tuple[(list, int)]"
            ],
            "arguments": {
                "b": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg._parse_arg": {
            "name": "_parse_arg",
            "location": 474,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg._parse_args": {
            "name": "_parse_args",
            "location": 496,
            "return": [
                "list"
            ],
            "arguments": {
                "buf": [
                    "bytes"
                ]
            }
        },
        "OatmealMsg.decode": {
            "name": "decode",
            "location": 516,
            "return": [
                "S"
            ],
            "arguments": {
                "cls": [
                    "Type[S]"
                ],
                "frame": [
                    "bytearray"
                ],
                "has_checksums": [
                    "bool"
                ]
            }
        },
        "OatmealMsg._encode_val": {
            "name": "_encode_val",
            "location": 541,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "OatmealMsg.encode": {
            "name": "encode",
            "location": 569,
            "return": [
                "bytearray"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.checksums": {
            "name": "checksums",
            "location": 588,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.__repr__": {
            "name": "__repr__",
            "location": 599,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealMsg.__eq__": {
            "name": "__eq__",
            "location": 607,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "OatmealMsg.__lt__": {
            "name": "__lt__",
            "location": 615,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str",
                    "int"
                ]
            }
        },
        "OatmealStats.__init__": {
            "name": "__init__",
            "location": 635,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealStats.log_stats": {
            "name": "log_stats",
            "location": 645,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": [
                    "int"
                ]
            }
        },
        "OatmealDataMirror.incoming_data": {
            "name": "incoming_data",
            "location": 667,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "OatmealDataMirror.outgoing_data": {
            "name": "outgoing_data",
            "location": 672,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "OatmealDataMirror.close": {
            "name": "close",
            "location": 677,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealUDPMirror.__init__": {
            "name": "__init__",
            "location": 692,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "udp_addr_in": [
                    "Optional[Tuple[(str, int)]]"
                ],
                "udp_addr_out": [
                    "Optional[Tuple[(str, int)]]"
                ]
            }
        },
        "OatmealUDPMirror.incoming_data": {
            "name": "incoming_data",
            "location": 706,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "OatmealUDPMirror.outgoing_data": {
            "name": "outgoing_data",
            "location": 711,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes"
                ]
            }
        },
        "OatmealUDPMirror.close": {
            "name": "close",
            "location": 716,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealProtocol.convert_frame": {
            "name": "convert_frame",
            "location": 748,
            "return": [
                "Optional[OatmealMsg]"
            ],
            "arguments": {
                "frame": [
                    "bytearray"
                ],
                "stats": [
                    "OatmealStats"
                ],
                "max_frame_len": [
                    "int"
                ]
            }
        },
        "OatmealProtocol.read_frame_loop": {
            "name": "read_frame_loop",
            "location": 807,
            "return": [
                "Iterator[OatmealMsg]"
            ],
            "arguments": {
                "serial_port": [
                    "float",
                    "bytes"
                ],
                "exit_token": [
                    "threading.Event"
                ],
                "outgoing_msg_pipe": [
                    "multiprocessing.connection.Connection"
                ],
                "data_mirror": [
                    "OatmealDataMirror"
                ],
                "stats": [
                    "OatmealStats"
                ],
                "max_frame_len": [
                    "int"
                ]
            }
        },
        "_OatmealPortThread.__init__": {
            "name": "__init__",
            "location": 920,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serial_port": [
                    "int"
                ]
            }
        },
        "_OatmealPortThread._read_msgs_loop": {
            "name": "_read_msgs_loop",
            "location": 951,
            "return": [
                "None"
            ],
            "arguments": {
                "serial_port": [],
                "exit_token": [
                    "threading.Event"
                ],
                "msg_pipe": [
                    "multiprocessing.connection.Connection"
                ]
            }
        },
        "_OatmealPortThread.start": {
            "name": "start",
            "location": 993,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_OatmealPortThread.stop": {
            "name": "stop",
            "location": 1000,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_OatmealPortThread.read_background_msg": {
            "name": "read_background_msg",
            "location": 1010,
            "return": [
                "Optional[OatmealMsg]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "_OatmealPortThread.read_msg": {
            "name": "read_msg",
            "location": 1037,
            "return": [
                "Optional[OatmealMsg]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "_OatmealPortThread.send_msg": {
            "name": "send_msg",
            "location": 1049,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealBgMsgHandlerBase.MAX_HEARTBEAT_GAP_SEC": {
            "name": "MAX_HEARTBEAT_GAP_SEC",
            "location": 1064,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealBgMsgHandlerBase.handle_heartbeat": {
            "name": "handle_heartbeat",
            "location": 1074,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealBgMsgHandlerBase.handle_log_msg": {
            "name": "handle_log_msg",
            "location": 1081,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealBgMsgHandlerBase.handle_misc_update": {
            "name": "handle_misc_update",
            "location": 1088,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealBgMsgHandlerBase.missing_heartbeat": {
            "name": "missing_heartbeat",
            "location": 1096,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_passed_sec": [
                    "float"
                ]
            }
        },
        "OatmealBgMsgHandler.__init__": {
            "name": "__init__",
            "location": 1119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealBgMsgHandler.handle_heartbeat": {
            "name": "handle_heartbeat",
            "location": 1126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealBgMsgHandler.missing_heartbeat": {
            "name": "missing_heartbeat",
            "location": 1130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_passed_sec": [
                    "float"
                ]
            }
        },
        "OatmealBgMsgHandler.handle_log_msg": {
            "name": "handle_log_msg",
            "location": 1135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealBgMsgHandler.handle_misc_update": {
            "name": "handle_misc_update",
            "location": 1150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealDeviceDetails.__init__": {
            "name": "__init__",
            "location": 1159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "role": [
                    "str"
                ],
                "instance_idx": [
                    "int"
                ],
                "hardware_id": [
                    "str"
                ],
                "version": [
                    "str"
                ]
            }
        },
        "OatmealDeviceDetails.items": {
            "name": "items",
            "location": 1166,
            "return": [
                "ItemsView[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDeviceDetails.shorten_id": {
            "name": "shorten_id",
            "location": 1173,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "OatmealDeviceDetails.short_hardware_id": {
            "name": "short_hardware_id",
            "location": 1179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OatmealDeviceDetails.name": {
            "name": "name",
            "location": 1185,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealDeviceDetails.__repr__": {
            "name": "__repr__",
            "location": 1188,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealPort.__init__": {
            "name": "__init__",
            "location": 1216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serial_port": [
                    "int",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Any"
                ]
            }
        },
        "OatmealPort.get_path": {
            "name": "get_path",
            "location": 1301,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealPort._start": {
            "name": "_start",
            "location": 1305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealPort.stop": {
            "name": "stop",
            "location": 1314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealPort._read_background_msgs": {
            "name": "_read_background_msgs",
            "location": 1327,
            "return": [
                "None"
            ],
            "arguments": {
                "stop_token": [
                    "threading.Event"
                ],
                "uart_port": [
                    "_OatmealPortThread"
                ],
                "expect_heartbeats_token": [
                    "threading.Event"
                ],
                "bg_msg_handler": [
                    "OatmealBgMsgHandler"
                ]
            }
        },
        "OatmealPort.send": {
            "name": "send",
            "location": 1373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ]
            }
        },
        "OatmealPort.send_and_ack": {
            "name": "send_and_ack",
            "location": 1385,
            "return": [
                "OatmealMsg"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ],
                "ackcode": [
                    "str"
                ],
                "timeout": [
                    "float"
                ],
                "n_retries": [
                    "int"
                ]
            }
        },
        "OatmealPort.send_and_done": {
            "name": "send_and_done",
            "location": 1430,
            "return": [
                "Tuple[(OatmealMsg, OatmealMsg)]"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "OatmealMsg"
                ],
                "ackcode": [
                    "str"
                ],
                "donecode": [
                    "str"
                ],
                "ack_timeout": [
                    "float"
                ],
                "done_timeout": [
                    "float"
                ],
                "n_ack_retries": [
                    "int"
                ]
            }
        },
        "OatmealPort.read": {
            "name": "read",
            "location": 1471,
            "return": [
                "OatmealMsg"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "OatmealPort.try_read": {
            "name": "try_read",
            "location": 1487,
            "return": [
                "Optional[OatmealMsg]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "OatmealPort.read_bg_msg": {
            "name": "read_bg_msg",
            "location": 1496,
            "return": [
                "Optional[OatmealMsg]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ]
            }
        },
        "OatmealPort.flush": {
            "name": "flush",
            "location": 1508,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OatmealPort.expect": {
            "name": "expect",
            "location": 1517,
            "return": [
                "OatmealMsg"
            ],
            "arguments": {
                "self": [],
                "opcode": [
                    "str"
                ],
                "error_dict": [
                    "Dict[(str, Exception)]"
                ],
                "timeout": [
                    "float"
                ]
            }
        },
        "OatmealPort.next_token": {
            "name": "next_token",
            "location": 1536,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "OatmealPort.ask_who": {
            "name": "ask_who",
            "location": 1549,
            "return": [
                "OatmealDeviceDetails"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "float"
                ],
                "n_retries": [
                    "int"
                ]
            }
        }
    },
    "oatmeal-protocol-master/python/oatmeal/__init__.py": {},
    "oatmeal-protocol-master/python/tests/run_tests.py": {
        "random_unicode_string": {
            "name": "random_unicode_string",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "random_bytearray": {
            "name": "random_bytearray",
            "location": 23,
            "return": [
                "bytearray"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "TestOatmealProtocol._assert_valid_frame": {
            "name": "_assert_valid_frame",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "frame": [
                    "bytes"
                ]
            }
        },
        "TestOatmealProtocol._test_encode_decode": {
            "name": "_test_encode_decode",
            "location": 33,
            "return": [
                "oatmeal.protocol.OatmealMsg"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "oatmeal.protocol.OatmealMsg"
                ]
            }
        },
        "TestOatmealProtocol._test_args": {
            "name": "_test_args",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_properties": {
            "name": "test_properties",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_comparison": {
            "name": "test_comparison",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_encode_decode_mixed": {
            "name": "test_encode_decode_mixed",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_encode_decode_empty": {
            "name": "test_encode_decode_empty",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_encode_decode_nested": {
            "name": "test_encode_decode_nested",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_encode_decode_none": {
            "name": "test_encode_decode_none",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_args_empty_str": {
            "name": "test_args_empty_str",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_unicode_strs": {
            "name": "test_unicode_strs",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_all_unicode_codepoints": {
            "name": "test_all_unicode_codepoints",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_str_args": {
            "name": "test_str_args",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_raw_bytes": {
            "name": "test_raw_bytes",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol._test_parse_args": {
            "name": "_test_parse_args",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "str"
                ],
                "expected_res": [
                    "list"
                ]
            }
        },
        "TestOatmealProtocol._test_parse_args_fails": {
            "name": "_test_parse_args_fails",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "str"
                ]
            }
        },
        "TestOatmealProtocol.test_arg_decoding": {
            "name": "test_arg_decoding",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_dicts": {
            "name": "test_dicts",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_checksum": {
            "name": "test_checksum",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOatmealProtocol.test_repr": {
            "name": "test_repr",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
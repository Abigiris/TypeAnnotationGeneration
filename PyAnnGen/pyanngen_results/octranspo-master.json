{
    "octranspo-master/run.py": {},
    "octranspo-master/setup.py": {},
    "octranspo-master/octranspo/bigquery.py": {
        "Table.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.create_dataset": {
            "name": "create_dataset",
            "location": 27,
            "return": [
                "Callable",
                "Optional[\"Frame\"]"
            ],
            "arguments": {
                "client": [
                    "str"
                ],
                "dataset_ref": [
                    "str",
                    "float"
                ]
            }
        },
        "Table.create_table": {
            "name": "create_table",
            "location": 32,
            "return": [
                "bool",
                "List[dict]",
                "int",
                "str",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "client": [
                    "str",
                    "bool",
                    "Exception"
                ],
                "table_ref": [
                    "str"
                ],
                "schema": [
                    "dict[, ]",
                    "dict",
                    "dict[str, str]",
                    "set",
                    "Dict[str, str]"
                ]
            }
        },
        "Table.insert_rows": {
            "name": "insert_rows",
            "location": 38,
            "return": [
                "bool",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "rows": [
                    "List[dict]",
                    "list[dict[, ]]",
                    "int",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Dict[Any, Dict[str, Any]]",
                    "dict[typing.Any, dict[str, typing.Any]]"
                ]
            }
        }
    },
    "octranspo-master/octranspo/oc_api.py": {
        "route_summary_for_stop": {
            "name": "route_summary_for_stop",
            "location": 14,
            "return": [
                "dict"
            ],
            "arguments": {
                "stop_no": [
                    "int"
                ]
            }
        },
        "next_trips_all_routes": {
            "name": "next_trips_all_routes",
            "location": 28,
            "return": [
                "dict"
            ],
            "arguments": {
                "stop_no": [
                    "int"
                ]
            }
        },
        "next_trips_for_stop": {
            "name": "next_trips_for_stop",
            "location": 42,
            "return": [
                "dict"
            ],
            "arguments": {
                "stop_no": [
                    "int"
                ],
                "route_no": [
                    "int"
                ]
            }
        },
        "gtfs": {
            "name": "gtfs",
            "location": 57,
            "return": [
                "dict"
            ],
            "arguments": {
                "table": [
                    "str"
                ],
                "id_": [
                    "dict",
                    "None",
                    "Dict[str, str]",
                    "dict[, ]",
                    "int",
                    "Dict[str, Set[str]]",
                    "dict[str, str]",
                    "Optional[Tuple[str, str]]",
                    "dict[str, set[str]]",
                    "tuple[typing.Union[str,str]]"
                ],
                "column": [
                    "dict",
                    "None",
                    "Dict[str, str]",
                    "dict[, ]",
                    "int",
                    "Dict[str, Set[str]]",
                    "dict[str, str]",
                    "Optional[Tuple[str, str]]",
                    "dict[str, set[str]]",
                    "tuple[typing.Union[str,str]]"
                ],
                "value": [
                    "dict",
                    "None",
                    "Dict[str, str]",
                    "dict[, ]",
                    "int",
                    "Dict[str, Set[str]]",
                    "dict[str, str]",
                    "Optional[Tuple[str, str]]",
                    "dict[str, set[str]]",
                    "tuple[typing.Union[str,str]]"
                ],
                "limit": [
                    "dict",
                    "None",
                    "Dict[str, str]",
                    "dict[, ]",
                    "int",
                    "Dict[str, Set[str]]",
                    "dict[str, str]",
                    "Optional[Tuple[str, str]]",
                    "dict[str, set[str]]",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        }
    },
    "octranspo-master/octranspo/__init__.py": {},
    "octranspo-master/octranspo/models/next_trips.py": {
        "NextTrips.to_time": {
            "name": "to_time",
            "location": 29,
            "return": [
                "dt.time"
            ],
            "arguments": {
                "t": [
                    "list",
                    "Iterable[str]",
                    "int"
                ]
            }
        },
        "NextTrips.gen_row": {
            "name": "gen_row",
            "location": 36,
            "return": [
                "Optional[Tuple[(dt.time, dt.time, Any, Any, float, Any, float, float, dt.datetime, Any, str, Any, Any, Any, dt.time)]]"
            ],
            "arguments": {
                "stop_no": [
                    "int",
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "dict",
                    "dict[, ]"
                ],
                "route_no": [
                    "int",
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "NextTrips.run": {
            "name": "run",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stops": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "octranspo-master/octranspo/models/__init__.py": {},
    "octranspo-master/pylint_custom/multiple_import_checker.py": {
        "register_checkers": {
            "name": "register_checkers",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "linter": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "MultipleImportChecker.visit_importfrom": {
            "name": "visit_importfrom",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "octranspo-master/pylint_custom/__init__.py": {
        "register": {
            "name": "register",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "linter": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "octranspo-master/tests/__init__.py": {},
    "octranspo-master/tests/pylint_custom/test_multiple_import_checker.py": {
        "TestMultipleImportChecker.test_multiple_imports_raises_linter_error": {
            "name": "test_multiple_imports_raises_linter_error",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMultipleImportChecker.test_no_multiple_imports_doesnt_raise_linter_error": {
            "name": "test_no_multiple_imports_doesnt_raise_linter_error",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "octranspo-master/tests/pylint_custom/__init__.py": {},
    "octranspo-master/tests/python_template/test_my_module.py": {
        "TestMyClass.my_object": {
            "name": "my_object",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyClass.test_adds_constant": {
            "name": "test_adds_constant",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "my_object": [
                    "Dict[str, Sequence[str]]",
                    "dict[str, typing.Sequence[str]]"
                ]
            }
        },
        "TestMySubClass.my_other_object": {
            "name": "my_other_object",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMySubClass.test_adds_both_values": {
            "name": "test_adds_both_values",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "my_other_object": [
                    "str"
                ]
            }
        },
        "TestMySubClass.test_adds_constant": {
            "name": "test_adds_constant",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "my_other_object": [
                    "str"
                ]
            }
        }
    },
    "octranspo-master/tests/python_template/__init__.py": {}
}
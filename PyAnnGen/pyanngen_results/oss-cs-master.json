{
    "oss-cs-master/django-2-by-example/bookmarks/manage.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/admin.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/apps.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/authentication.py": {
        "EmailAuthBackend.authenticate": {
            "name": "authenticate",
            "location": 8,
            "return": [
                "None",
                "Optional[str]",
                "bool",
                "Optional[List[Any]]",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "None",
                    "str",
                    "Optional[django.http.HttpRequest]",
                    "bool",
                    "django.http.requesHttpRequest"
                ],
                "username": [
                    "str",
                    "None",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "password": [
                    "str",
                    "None"
                ]
            }
        },
        "EmailAuthBackend.get_usery": {
            "name": "get_usery",
            "location": 17,
            "return": [
                "None",
                "bool",
                "Optional[bool]",
                "List[str]",
                "django.contrib.auth.models.AbstractBaseUser",
                "Optional[zerver.models.UserProfile]",
                "int"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int"
                ]
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/account/forms.py": {
        "UserRegistrationForm.clean_password2": {
            "name": "clean_password2",
            "location": 22,
            "return": [
                "str",
                "audiopyle.lib.models.file_meta.CompressedAudioFileMeta",
                "type",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/account/models.py": {
        "Profile.__str__": {
            "name": "__str__",
            "location": 11,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/account/tests.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/urls.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/views.py": {
        "user_login": {
            "name": "user_login",
            "location": 10,
            "return": [
                "HttpResponse",
                "int",
                "bool"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "dashboard": {
            "name": "dashboard",
            "location": 34,
            "return": [
                "str",
                "Optional[str]",
                "int",
                "List[str]",
                "Dict[str, Any]",
                "bytes",
                "\"MutableRangeSet[T]\""
            ],
            "arguments": {
                "request": [
                    "typing.Callable[, ]",
                    "django.http.HttpRequest",
                    "Callable"
                ]
            }
        },
        "register": {
            "name": "register",
            "location": 39,
            "return": [
                "str",
                "Optional[str]",
                "int",
                "List[str]",
                "bytes",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "edit": {
            "name": "edit",
            "location": 56,
            "return": [
                "str",
                "dict",
                "List[str]",
                "Dict[str, Any]",
                "int",
                "bytes"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/account/__init__.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/migrations/0001_initial.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/account/migrations/__init__.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/bookmarks/settings.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/bookmarks/urls.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/bookmarks/wsgi.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/bookmarks/__init__.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/admin.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/apps.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/forms.py": {
        "ImageCreateForm.clean_url": {
            "name": "clean_url",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImageCreateForm.save": {
            "name": "save",
            "location": 26,
            "return": [
                "int",
                "tuple",
                "str"
            ],
            "arguments": {
                "self": [],
                "force_insert": [
                    "bool",
                    "float",
                    "Dict[str, Dict[str, Any]]",
                    "Callable",
                    "int"
                ],
                "force_update": [
                    "bool",
                    "float",
                    "Dict[str, Dict[str, Any]]",
                    "Callable",
                    "int"
                ],
                "commit": [
                    "bool",
                    "str",
                    "Type",
                    "Mapping",
                    "int"
                ]
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/images/models.py": {
        "Image.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 27,
            "return": [
                "str",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.save": {
            "name": "save",
            "location": 30,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/images/tests.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/urls.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/views.py": {
        "image_create": {
            "name": "image_create",
            "location": 12,
            "return": [
                "bool",
                "apistar.http.QueryParam",
                "zerver.models.UserProfile",
                "models.Dashboard",
                "apistar.http.Header",
                "dict",
                "str"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "image_detail": {
            "name": "image_detail",
            "location": 32,
            "return": [
                "str",
                "Tuple[int, int]",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": [
                    "int",
                    "str",
                    "django.core.handlers.wsgi.WSGIRequest",
                    "django.http.HttpRequest",
                    "Union[zerver.models.UserProfile, zilencer.models.RemoteZulipServer]"
                ],
                "id": [
                    "int",
                    "str",
                    "bytes",
                    "Union[int, str]"
                ],
                "slug": [
                    "int",
                    "str",
                    "bytes",
                    "Union[int, str]"
                ]
            }
        },
        "image_like": {
            "name": "image_like",
            "location": 39,
            "return": [
                "JsonResponse",
                "str",
                "models.Dashboard",
                "dict",
                "bool",
                "Optional[Dict]"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        }
    },
    "oss-cs-master/django-2-by-example/bookmarks/images/__init__.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/migrations/0001_initial.py": {},
    "oss-cs-master/django-2-by-example/bookmarks/images/migrations/__init__.py": {},
    "oss-cs-master/twoscoops/manage.py": {},
    "oss-cs-master/twoscoops/config/urls.py": {},
    "oss-cs-master/twoscoops/config/wsgi.py": {},
    "oss-cs-master/twoscoops/config/__init__.py": {},
    "oss-cs-master/twoscoops/config/settings/base.py": {},
    "oss-cs-master/twoscoops/config/settings/local.py": {},
    "oss-cs-master/twoscoops/config/settings/production.py": {},
    "oss-cs-master/twoscoops/config/settings/test.py": {},
    "oss-cs-master/twoscoops/config/settings/__init__.py": {},
    "oss-cs-master/twoscoops/docs/conf.py": {},
    "oss-cs-master/twoscoops/docs/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory",
                "int",
                "List[Dict[str, Any]]",
                "bool",
                "list"
            ],
            "arguments": {}
        }
    },
    "oss-cs-master/twoscoops/twoscoops/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/contrib/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/contrib/sites/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/contrib/sites/migrations/0001_initial.py": {},
    "oss-cs-master/twoscoops/twoscoops/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "oss-cs-master/twoscoops/twoscoops/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/contrib/sites/migrations/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ],
                "sociallogin": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/admin.py": {},
    "oss-cs-master/twoscoops/twoscoops/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/urls.py": {},
    "oss-cs-master/twoscoops/twoscoops/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [
                "bool",
                "Dict[int, dict]",
                "Optional[Iterable[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/users/migrations/0001_initial.py": {},
    "oss-cs-master/twoscoops/twoscoops/users/migrations/__init__.py": {},
    "oss-cs-master/twoscoops/twoscoops/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ]
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "django.conf.settings.AUTH_USER_MODEL",
                    "bool"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        }
    },
    "oss-cs-master/twoscoops/twoscoops/users/tests/__init__.py": {}
}
{
    "pautomate-master/setup.py": {},
    "pautomate-master/docs/conf.py": {},
    "pautomate-master/pautomate/main.py": {
        "_add_target_option": {
            "name": "_add_target_option",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "bool",
                    "argparse.ArgumentParser"
                ]
            }
        },
        "_add_reset_flag": {
            "name": "_add_reset_flag",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "argparse.ArgumentParser",
                    "bool"
                ]
            }
        },
        "_add_develop_flag": {
            "name": "_add_develop_flag",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "argparse.ArgumentParser",
                    "bool"
                ]
            }
        },
        "_add_watch_flag": {
            "name": "_add_watch_flag",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "argparse.ArgumentParser",
                    "bool"
                ]
            }
        },
        "_add_command_option": {
            "name": "_add_command_option",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "argparse.ArgumentParser",
                    "bool"
                ]
            }
        },
        "_add_pros_option": {
            "name": "_add_pros_option",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "argparse.ArgumentParser",
                    "bool"
                ]
            }
        },
        "releases": {
            "name": "releases",
            "location": 74,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {}
        },
        "branches": {
            "name": "branches",
            "location": 96,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "fetch": {
            "name": "fetch",
            "location": 122,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "dotnet": {
            "name": "dotnet",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "str",
                    "None",
                    "List[str]",
                    "Callable(os.path.join)[...,Any][[[Named(a,Union[_PathLike[str],str]),Variable(Union[_PathLike[str],str])],str][Any,Any]]"
                ]
            }
        }
    },
    "pautomate-master/pautomate/__init__.py": {},
    "pautomate-master/pautomate/common/get_repos.py": {
        "get_repos": {
            "name": "get_repos",
            "location": 11,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "working_directory": [
                    "str",
                    "bytes",
                    "float",
                    "int"
                ]
            }
        },
        "filter_list": {
            "name": "filter_list",
            "location": 28,
            "return": [
                "set"
            ],
            "arguments": {
                "source": [
                    "str",
                    "Optional[str]",
                    "Sequence[str]",
                    "Optional[Sequence[str]]",
                    "Iterable[str]",
                    "Iterable[object]",
                    "Tuple[()]"
                ],
                "filter_args": [
                    "str",
                    "Optional[str]",
                    "Sequence[str]",
                    "Optional[Sequence[str]]",
                    "Iterable[str]",
                    "Iterable[object]",
                    "Tuple[()]"
                ]
            }
        }
    },
    "pautomate-master/pautomate/common/git.py": {
        "shell": {
            "name": "shell",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "command": [
                    "str",
                    "bool"
                ]
            }
        },
        "shell_first": {
            "name": "shell_first",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "command": [
                    "str",
                    "bool"
                ]
            }
        },
        "hard_reset": {
            "name": "hard_reset",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "repo_path": [
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        },
        "reset_to_origin_develop": {
            "name": "reset_to_origin_develop",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "repo_path": [
                    "str",
                    "int",
                    "Callable"
                ]
            }
        },
        "get_branches_info": {
            "name": "get_branches_info",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "repo_path": [
                    "str",
                    "List[str]",
                    "int"
                ]
            }
        },
        "get_lastest_stable_release": {
            "name": "get_lastest_stable_release",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "repo_path": [
                    "bool",
                    "str",
                    "Tuple",
                    "Optional[str]",
                    "None"
                ],
                "summery_info": [
                    "str"
                ]
            }
        },
        "fetch_repo": {
            "name": "fetch_repo",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "working_directory": [
                    "str"
                ],
                "repo_path": [],
                "url": [
                    "str"
                ],
                "summery_info": [
                    "Dict[str,str]",
                    "Dict",
                    "Dict[str,Any]",
                    "Optional[str]"
                ]
            }
        }
    },
    "pautomate-master/pautomate/common/printing.py": {
        "with_color": {
            "name": "with_color",
            "location": 7,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "color_code": [
                    "str",
                    "bool",
                    "Callable",
                    "int",
                    "None",
                    "Optional[str]"
                ]
            }
        },
        "with_color.wrapper": {
            "name": "wrapper",
            "location": 13,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "with_color.wrapper.inner": {
            "name": "inner",
            "location": 15,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "pautomate-master/pautomate/common/read.py": {
        "read_configs": {
            "name": "read_configs",
            "location": 10,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "config_path": [
                    "str"
                ]
            }
        }
    },
    "pautomate-master/pautomate/common/services.py": {
        "run": {
            "name": "run",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "project": [
                    "str"
                ],
                "command_type": [
                    "str"
                ],
                "watch_mode": [
                    "bool",
                    "str",
                    "List",
                    "Dict[str,Any]",
                    "Type[list]",
                    "Type"
                ]
            }
        },
        "start_service": {
            "name": "start_service",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "working_directory": [
                    "str",
                    "bool"
                ],
                "service_name": [
                    "str",
                    "bool"
                ],
                "command": [
                    "List[str]",
                    "bool",
                    "str",
                    "None",
                    "int",
                    "Optional[str]"
                ],
                "watch_mode": [
                    "List[str]",
                    "bool",
                    "str",
                    "None",
                    "int",
                    "Optional[str]"
                ]
            }
        }
    },
    "pautomate-master/pautomate/common/timeit.py": {
        "timeit": {
            "name": "timeit",
            "location": 8,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "print_func": [
                    "Callable",
                    "bool",
                    "Callable[...,Dict]"
                ]
            }
        },
        "timeit.wrapper": {
            "name": "wrapper",
            "location": 14,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "timeit.wrapper.inner": {
            "name": "inner",
            "location": 16,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {}
        }
    },
    "pautomate-master/pautomate/common/__init__.py": {},
    "pautomate-master/pautomate/git_repos/branches.py": {
        "get_branches": {
            "name": "get_branches",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "working_directory": [
                    "Callable[T,bool]",
                    "int",
                    "Callable[[T],bool]",
                    "str",
                    "Dict[str,int]",
                    "Callable[[str,str],None]",
                    "bool"
                ],
                "reset_mode": [
                    "bool",
                    "str",
                    "int",
                    "List[str]",
                    "Optional[List[str]]",
                    "None"
                ],
                "develop": [
                    "bool",
                    "str",
                    "int",
                    "List[str]",
                    "Optional[List[str]]",
                    "None"
                ],
                "args": []
            }
        }
    },
    "pautomate-master/pautomate/git_repos/fetch_gitlab.py": {
        "cache_repos": {
            "name": "cache_repos",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "all_projects": [
                    "MutableMapping[str, str]",
                    "Union[str, None]",
                    "bool",
                    "Optional[Type[Any]]",
                    "str"
                ]
            }
        },
        "get_repos_from_gitlab": {
            "name": "get_repos_from_gitlab",
            "location": 40,
            "return": [
                "Dict[str, bool]",
                "dict",
                "Dict[str, Any]",
                "str",
                "int",
                "Dict[str, Union[str, int]]"
            ],
            "arguments": {
                "working_directoy": [
                    "str",
                    "bytes",
                    "int"
                ],
                "args": []
            }
        },
        "fetch_gitlab": {
            "name": "fetch_gitlab",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "working_directoy": [
                    "str",
                    "Callable[[str], None]",
                    "Dict[str, Any]",
                    "Sequence[str]",
                    "Exception",
                    "Callable"
                ],
                "args": []
            }
        }
    },
    "pautomate-master/pautomate/git_repos/releases.py": {
        "get_releases": {
            "name": "get_releases",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "working_directory": [
                    "str",
                    "int"
                ],
                "filter_args": [
                    "bytes",
                    "int",
                    "str",
                    "List",
                    "List[int]",
                    "List[dict[str,Any]]",
                    "List[Dict[str,Any]]",
                    "bool"
                ]
            }
        }
    },
    "pautomate-master/pautomate/git_repos/__init__.py": {},
    "pautomate-master/pautomate/multi_dotnet/dotnet_exec.py": {
        "dotnet_exec": {
            "name": "dotnet_exec",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "working_directory": [
                    "str",
                    "Optional[str]",
                    "int",
                    "None",
                    "bytes",
                    "Optional[int]",
                    "bool"
                ],
                "command": [
                    "bool",
                    "str",
                    "None",
                    "Optional[Union[int,str]]",
                    "Optional[int]"
                ],
                "watch_mode": [
                    "bool",
                    "str",
                    "None",
                    "Optional[Union[int,str]]",
                    "Optional[int]"
                ],
                "args": []
            }
        }
    },
    "pautomate-master/pautomate/multi_dotnet/__init__.py": {},
    "pautomate-master/tests/test_automate.py": {
        "test_dump": {
            "name": "test_dump",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
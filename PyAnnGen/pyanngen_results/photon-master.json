{
    "photon-master/photon.py": {
        "cli": {
            "name": "cli",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "effect": {
            "name": "effect",
            "location": 35,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ]
            }
        },
        "match": {
            "name": "match",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "from_dir": [
                    "str",
                    "List[str]",
                    "Optional[str]",
                    "None"
                ],
                "to_dir": [
                    "str",
                    "List[str]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "dedupe": {
            "name": "dedupe",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "from_dir": [
                    "str"
                ],
                "to_dir": [
                    "str"
                ]
            }
        },
        "_match": {
            "name": "_match",
            "location": 62,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "from_path": [
                    "str",
                    "Set[str]",
                    "Dict",
                    "Dict[str,str]",
                    "pathlib.Path",
                    "Dict[str,Any]"
                ],
                "to_path": [
                    "str",
                    "Set[str]",
                    "int",
                    "List[str]"
                ]
            }
        },
        "_group_by": {
            "name": "_group_by",
            "location": 78,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "xs": [
                    "List[T]",
                    "str",
                    "Hashable",
                    "Optional[int]",
                    "bool"
                ],
                "key": [
                    "int",
                    "bytes",
                    "Sequence[T]",
                    "str",
                    "Dict",
                    "float",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "_split": {
            "name": "_split",
            "location": 86,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "xs": [
                    "bool",
                    "Match",
                    "T"
                ],
                "p": [
                    "bool",
                    "Match",
                    "T"
                ]
            }
        },
        "_hash": {
            "name": "_hash",
            "location": 92,
            "return": [
                "str"
            ],
            "arguments": {
                "file": [
                    "BinaryIO",
                    "Union[str, IO[bytes]]",
                    "pathlib.Path"
                ]
            }
        },
        "_is_ancestor": {
            "name": "_is_ancestor",
            "location": 97,
            "return": [
                "bool"
            ],
            "arguments": {
                "d": [
                    "str",
                    "IO[bytes]"
                ],
                "f": [
                    "str",
                    "IO[bytes]"
                ]
            }
        },
        "_relative": {
            "name": "_relative",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {
                "from_file": [
                    "str",
                    "None",
                    "pathlib.Path",
                    "Optional[str]"
                ],
                "to_file": [
                    "str",
                    "None",
                    "pathlib.Path",
                    "Optional[str]"
                ]
            }
        },
        "_scan_dir": {
            "name": "_scan_dir",
            "location": 108,
            "return": [
                "Generator",
                "List[str]",
                "List[pathlib.Path]",
                "bool",
                "Sequence[str]"
            ],
            "arguments": {
                "d": [
                    "Tuple[Union[int, slice], Union[int, slice]]",
                    "str",
                    "Tuple[int, int, bytearray]",
                    "bytes"
                ]
            }
        },
        "_atomic_link": {
            "name": "_atomic_link",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "from_file": [
                    "str",
                    "pathlib.Path",
                    "Union[pathlib.Path,str]",
                    "Union[str,pathlib.Path]",
                    "paradigm.catalog.Path",
                    "path.Path"
                ],
                "to_file": [
                    "str",
                    "List[str]",
                    "Dict",
                    "pathlib.Path",
                    "os.PathLike"
                ]
            }
        },
        "_random_str": {
            "name": "_random_str",
            "location": 122,
            "return": [
                "str"
            ],
            "arguments": {
                "n": [
                    "int",
                    "str"
                ]
            }
        },
        "effect.wrapped": {
            "name": "wrapped",
            "location": 38,
            "return": [
                "str",
                "Iterable[str]"
            ],
            "arguments": {}
        }
    },
    "photon-master/setup.py": {}
}
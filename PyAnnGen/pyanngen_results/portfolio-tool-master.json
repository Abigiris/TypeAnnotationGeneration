{
    "portfolio-tool-master/setup.py": {},
    "portfolio-tool-master/portfolio/app.py": {
        "run": {
            "name": "run",
            "location": 31,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "data_api_key": [
                    "list[str]",
                    "str",
                    "List[str]",
                    "int",
                    "bytes",
                    "torch.utils.data.DataLoader"
                ],
                "enable_api_rate_control": [
                    "list[str]",
                    "str",
                    "List[str]",
                    "int",
                    "bytes",
                    "torch.utils.data.DataLoader"
                ],
                "csv_filepath": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "int",
                    "None"
                ],
                "to_currency": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "int",
                    "None"
                ],
                "start_day": [
                    "Optional[int]",
                    "int",
                    "float",
                    "Optional[float]",
                    "str",
                    "None"
                ],
                "num_days": [
                    "Optional[int]",
                    "int",
                    "float",
                    "Optional[float]",
                    "str",
                    "None"
                ],
                "fig_filepath": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int,int,int]]",
                    "Tuple[int, int, int, int]",
                    "Tuple[int, int, int]"
                ],
                "price_scaling": [
                    "int",
                    "str",
                    "list[]",
                    "bool",
                    "list",
                    "typing.Callable[, ]",
                    "Callable"
                ]
            }
        }
    },
    "portfolio-tool-master/portfolio/calculator.py": {
        "Calculator.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stock_data_src": [],
                "forex_data_src": [],
                "csv_filepath": [
                    "bool",
                    "list",
                    "str",
                    "list[]",
                    "bytes",
                    "dict",
                    "dict[, ]"
                ],
                "to_currency": [
                    "bool",
                    "list",
                    "str",
                    "list[]",
                    "bytes",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "Calculator.get_portfolio_price": {
            "name": "get_portfolio_price",
            "location": 24,
            "return": [
                "str",
                "Iterable[Tuple[str, str]]"
            ],
            "arguments": {
                "self": [],
                "start_day": [
                    "typing.Text",
                    "datetime.datetime",
                    "datetime.timedelta",
                    "datetime.datetime.timedelta",
                    "datetime.datetime.datetime"
                ],
                "num_days": [
                    "int",
                    "datetime.datetime"
                ]
            }
        },
        "Calculator._read_portfolio": {
            "name": "_read_portfolio",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Calculator._get_price_data": {
            "name": "_get_price_data",
            "location": 73,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "num_days": [
                    "int",
                    "str",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "Calculator._get_currency_exchange_data": {
            "name": "_get_currency_exchange_data",
            "location": 83,
            "return": [
                "Dict[(nothing, Any)]"
            ],
            "arguments": {
                "self": [],
                "num_days": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "Calculator._compute_portfolio_price_with_cc_impact": {
            "name": "_compute_portfolio_price_with_cc_impact",
            "location": 101,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "price_data_list": [
                    "str",
                    "dict",
                    "bytes",
                    "dict[, ]",
                    "Optional[Tuple[str]]",
                    "tuple[str]",
                    "None"
                ],
                "cc_data_dict": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Dict[str, Any]]",
                    "dict[str, dict[str, typing.Any]]"
                ]
            }
        }
    },
    "portfolio-tool-master/portfolio/plotter.py": {
        "Plotter.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "figure_size": [
                    "tuple[int]",
                    "int",
                    "bool"
                ],
                "dpi": [
                    "int",
                    "str",
                    "float"
                ],
                "marker": [
                    "typing.Text",
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "Plotter.plot_time_series_data": {
            "name": "plot_time_series_data",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "list[tuple[typing.Union[int,int]]]",
                    "float",
                    "List[Tuple[int, int]]",
                    "None",
                    "Optional[List[Any]]",
                    "dict[str, list[float]]",
                    "bool",
                    "Dict[str, List[float]]"
                ],
                "fig_filepath": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "portfolio-tool-master/portfolio/version.py": {},
    "portfolio-tool-master/portfolio/__init__.py": {},
    "portfolio-tool-master/portfolio/data/alpha_vantage.py": {
        "AlphaVantageData.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "api_key": [
                    "List[str]",
                    "str",
                    "list[str]",
                    "Sequence[str]",
                    "typing.Sequence[str]",
                    "dict",
                    "dict[, ]"
                ],
                "enable_api_rate_control": [
                    "Mapping[str, Any]",
                    "int",
                    "typing.Mapping",
                    "str"
                ]
            }
        },
        "AlphaVantageData._check_api_rate_limit": {
            "name": "_check_api_rate_limit",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlphaVantageData._rename_columns": {
            "name": "_rename_columns",
            "location": 27,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "List[Tuple[int, int]]",
                    "Optional[List[Any]]",
                    "float",
                    "bool",
                    "Dict[str, List[float]]"
                ]
            }
        },
        "AlphaVantageData.get_price_daily": {
            "name": "get_price_daily",
            "location": 37,
            "return": [
                "str",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "symbol": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None",
                    "dict",
                    "dict[, ]"
                ],
                "num_days": [
                    "int",
                    "str",
                    "Callable",
                    "Optional[str]",
                    "Optional[Dict[str, str]]",
                    "Dict[int, dict]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "AlphaVantageData.get_forex_daily": {
            "name": "get_forex_daily",
            "location": 48,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "from_currency": [
                    "str",
                    "int",
                    "bool"
                ],
                "to_currency": [
                    "str",
                    "int",
                    "bool"
                ],
                "num_days": [
                    "bool",
                    "float",
                    "Optional[float]",
                    "int",
                    "Optional[int]"
                ]
            }
        }
    },
    "portfolio-tool-master/portfolio/data/interface.py": {
        "IDataStock.get_price_daily": {
            "name": "get_price_daily",
            "location": 6,
            "return": [
                "pandas.DataFrame",
                "None"
            ],
            "arguments": {
                "symbol": [
                    "str"
                ],
                "num_days": [
                    "int"
                ]
            }
        },
        "IDataForex.get_forex_daily": {
            "name": "get_forex_daily",
            "location": 11,
            "return": [
                "pandas.DataFrame",
                "None"
            ],
            "arguments": {
                "from_currency": [
                    "str"
                ],
                "to_currency": [
                    "str"
                ],
                "num_days": [
                    "int"
                ]
            }
        }
    },
    "portfolio-tool-master/portfolio/data/__init__.py": {}
}
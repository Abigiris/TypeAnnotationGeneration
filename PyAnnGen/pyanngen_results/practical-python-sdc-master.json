{
    "practical-python-sdc-master/Week 1/mypy/test_typed_python.py": {
        "fib": {
            "name": "fib",
            "location": 5,
            "return": [
                "typing.Iterator[builtins.int]",
                "typing.Generator[int]"
            ],
            "arguments": {
                "n": [
                    "int",
                    "Optional[int]"
                ]
            }
        }
    },
    "practical-python-sdc-master/Week 1/notes/testing.py": {
        "f": {
            "name": "f",
            "location": 60,
            "return": [
                "tuple[int]",
                "float",
                "str",
                "T"
            ],
            "arguments": {
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "float",
                    "int"
                ]
            }
        },
        "f.z": {
            "name": "z",
            "location": 61,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "List[float]"
                ],
                "y": [
                    "int",
                    "float",
                    "List[float]"
                ]
            }
        }
    },
    "practical-python-sdc-master/Week 1/notes/pizza/setup.py": {},
    "practical-python-sdc-master/Week 1/notes/pizza/build/lib/src/pizza_file.py": {
        "pizza_file_function": {
            "name": "pizza_file_function",
            "location": 5,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "x": [
                    "float",
                    "str",
                    "Union[str, int]",
                    "bytes",
                    "int",
                    "FrozenSet[int]",
                    "frozenset",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "practical-python-sdc-master/Week 1/notes/pizza/build/lib/src/__init__.py": {},
    "practical-python-sdc-master/Week 1/notes/pizza/src/pizza_file.py": {
        "_pizza_file_function": {
            "name": "_pizza_file_function",
            "location": 5,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "x": [
                    "float",
                    "str",
                    "Union[str, int]",
                    "bytes",
                    "int",
                    "FrozenSet[int]",
                    "frozenset",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "practical-python-sdc-master/Week 1/notes/pizza/src/__init__.py": {},
    "practical-python-sdc-master/Week 4/db.py": {
        "MongoConnector.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MongoConnector.insert_user": {
            "name": "insert_user",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "List[str]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "MongoConnector.get_user": {
            "name": "get_user",
            "location": 18,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "practical-python-sdc-master/Week 5/setup.py": {},
    "practical-python-sdc-master/Week 5/login_project/db.py": {
        "MongoConnector.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "MongoConnector.insert_user": {
            "name": "insert_user",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "List[str]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "MongoConnector.get_user": {
            "name": "get_user",
            "location": 17,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "practical-python-sdc-master/Week 5/login_project/main.py": {
        "load_user": {
            "name": "load_user",
            "location": 25,
            "return": [
                "User",
                "str",
                "zerver.models.Realm",
                "models.User",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "email": [
                    "str",
                    "bool",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 31,
            "return": [
                "str",
                "Optional[Any]"
            ],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 36,
            "return": [
                "typing.Text",
                "str",
                "int",
                "Dict[str, Any]",
                "List[str]",
                "Tuple[List[Any], List[int]]"
            ],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 52,
            "return": [
                "bool",
                "typing.Text"
            ],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 58,
            "return": [
                "str",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {}
        }
    },
    "practical-python-sdc-master/Week 5/login_project/__init__.py": {},
    "practical-python-sdc-master/Week 5/login_project/models/forms.py": {},
    "practical-python-sdc-master/Week 5/login_project/models/user.py": {
        "User.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int",
                    "None",
                    "Optional[str]",
                    "bool"
                ],
                "email": [
                    "bool",
                    "int",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "User.get_id": {
            "name": "get_id",
            "location": 11,
            "return": [
                "str",
                "Union[str, int]",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "practical-python-sdc-master/Week 5/login_project/models/__init__.py": {}
}
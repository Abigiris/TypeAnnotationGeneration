{
    "precision-farming-ph-master/api/farm_health/manage.py": {},
    "precision-farming-ph-master/api/farm_health/config/urls.py": {},
    "precision-farming-ph-master/api/farm_health/config/wsgi.py": {},
    "precision-farming-ph-master/api/farm_health/config/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/config/settings/base.py": {},
    "precision-farming-ph-master/api/farm_health/config/settings/local.py": {},
    "precision-farming-ph-master/api/farm_health/config/settings/production.py": {},
    "precision-farming-ph-master/api/farm_health/config/settings/test.py": {},
    "precision-farming-ph-master/api/farm_health/config/settings/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/docs/conf.py": {},
    "precision-farming-ph-master/api/farm_health/docs/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory",
                "str",
                "int"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory",
                "int",
                "List[Dict[str, Any]]",
                "bool",
                "list"
            ],
            "arguments": {}
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/admin.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/apps.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/models.py": {
        "SingletonModel.save": {
            "name": "save",
            "location": 15,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingletonModel.delete": {
            "name": "delete",
            "location": 19,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingletonModel.load": {
            "name": "load",
            "location": 23,
            "return": [
                "str",
                "bool",
                "dict[, ]",
                "set[str]"
            ],
            "arguments": {
                "cls": [
                    "Type[T]",
                    "int",
                    "typing.Type",
                    "str"
                ]
            }
        },
        "Barn.__str__": {
            "name": "__str__",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Barn.get_aggregated_sensor_data": {
            "name": "get_aggregated_sensor_data",
            "location": 45,
            "return": [
                "str",
                "int",
                "bool",
                "List[str]",
                "set",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Barn.get_pig_count": {
            "name": "get_pig_count",
            "location": 52,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Barn.get_death_today_count": {
            "name": "get_death_today_count",
            "location": 55,
            "return": [
                "str",
                "Set[str]",
                "Mapping[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PigQuerySet.alive_in_barn": {
            "name": "alive_in_barn",
            "location": 60,
            "return": [
                "int",
                "Optional[cmk.utils.type_defs.HostAddress]"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "Optional[int]",
                    "int",
                    "bytes",
                    "None",
                    "str",
                    "Optional[str]",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "PigQuerySet.dead_in_barn": {
            "name": "dead_in_barn",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "float",
                    "int",
                    "str",
                    "Optional[cmk.utils.type_defs.HostAddress]",
                    "None"
                ]
            }
        },
        "PigQuerySet.dead_today": {
            "name": "dead_today",
            "location": 66,
            "return": [
                "str",
                "dict",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "int",
                    "models.User",
                    "str",
                    "Union[str, int]",
                    "datetime.datetime"
                ]
            }
        },
        "PigQuerySet.alive": {
            "name": "alive",
            "location": 71,
            "return": [
                "Optional[int]",
                "bool",
                "Optional[List[Callable]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PigQuerySet.dead": {
            "name": "dead",
            "location": 74,
            "return": [
                "bool",
                "Optional[bool]",
                "Optional[str]",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PigQuerySet.in_barn": {
            "name": "in_barn",
            "location": 77,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "int",
                    "Callable[[Mapping], T]",
                    "typing.Callable[typing.Mapping, T]",
                    "Dict[str, str]",
                    "dict[str, str]"
                ]
            }
        },
        "Sensor.__str__": {
            "name": "__str__",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SensorDataPoint.__str__": {
            "name": "__str__",
            "location": 105,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/barns/serializers.py": {
        "BarnDataSerializer.get_status": {
            "name": "get_status",
            "location": 48,
            "return": [
                "typing.Text",
                "bool",
                "Optional[Exception]",
                "models.Channel",
                "str"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "str",
                    "bytes",
                    "Optional[Dict]"
                ]
            }
        },
        "BarnDataSerializer.get_aggregate_temperature": {
            "name": "get_aggregate_temperature",
            "location": 82,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "BarnDataSerializer.get_aggregate_humidity": {
            "name": "get_aggregate_humidity",
            "location": 85,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "str",
                    "Optional[int]"
                ]
            }
        },
        "BarnDataSerializer.get_aggregate_air_quality": {
            "name": "get_aggregate_air_quality",
            "location": 88,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "barn": [
                    "str",
                    "Optional[int]"
                ]
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/barns/tests.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/urls.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/views.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/management/commands/load_sensor_data.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "django.core.managemenbase.CommandParser",
                    "bokeh.models.Plot"
                ]
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/0001_initial.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/0002_auto_20181110_2359.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/0003_pig.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/0004_auto_20181111_0014.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/0005_sensordatapoint_barn.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/0006_thresholds.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/barns/migrations/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/contrib/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/contrib/sites/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/contrib/sites/migrations/0001_initial.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/contrib/sites/migrations/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ],
                "sociallogin": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/admin.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/urls.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [
                "bool",
                "Dict[int, dict]",
                "Optional[Iterable[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/users/migrations/0001_initial.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/users/migrations/__init__.py": {},
    "precision-farming-ph-master/api/farm_health/farm_health/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "bool",
                    "typing.Callable[typing.Any, T]",
                    "Callable[[Any], T]"
                ]
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ]
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "django.conf.settings.AUTH_USER_MODEL"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int",
                    "django.conf.settings.AUTH_USER_MODEL",
                    "bool"
                ],
                "request_factory": [
                    "django.tesRequestFactory"
                ]
            }
        }
    },
    "precision-farming-ph-master/api/farm_health/farm_health/users/tests/__init__.py": {}
}
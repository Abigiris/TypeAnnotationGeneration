{
    "project_x-master/docs/conf.py": {},
    "project_x-master/nasdaq_analytics/common.py": {
        "canonize_symbol": {
            "name": "canonize_symbol",
            "location": 8,
            "return": [],
            "arguments": {
                "symbol": []
            }
        },
        "load_tickers_file": {
            "name": "load_tickers_file",
            "location": 17,
            "return": [
                "list"
            ],
            "arguments": {}
        }
    },
    "project_x-master/nasdaq_analytics/config.py": {},
    "project_x-master/nasdaq_analytics/historical_prices.py": {
        "get_historical_prices": {
            "name": "get_historical_prices",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_file": []
            }
        },
        "save_historical_prices": {
            "name": "save_historical_prices",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_file": []
            }
        }
    },
    "project_x-master/nasdaq_analytics/insider_trades.py": {
        "get_insider_trades": {
            "name": "get_insider_trades",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_file": []
            }
        },
        "save_insider_trades": {
            "name": "save_insider_trades",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_file": []
            }
        }
    },
    "project_x-master/nasdaq_analytics/web.py": {
        "remove_session": {
            "name": "remove_session",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "_": []
            }
        }
    },
    "project_x-master/nasdaq_analytics/db/models.py": {
        "Ticker.insert_tickers": {
            "name": "insert_tickers",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "symbols": [
                    "Iterable[str]"
                ]
            }
        },
        "Ticker.get_uuids_by_symbol": {
            "name": "get_uuids_by_symbol",
            "location": 41,
            "return": [
                "Dict[(str, uuid.UUID)]"
            ],
            "arguments": {}
        },
        "HistoricalPrice.bulk_insert": {
            "name": "bulk_insert",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "historical_prices": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        },
        "HistoricalPrice.get_intervals": {
            "name": "get_intervals",
            "location": 69,
            "return": [],
            "arguments": {
                "ticker": [
                    "Ticker"
                ],
                "attribute_name": [
                    "str"
                ],
                "min_delta": [
                    "float"
                ]
            }
        },
        "Insider.insert_insiders": {
            "name": "insert_insiders",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "insiders": [
                    "Iterable[InsiderTuple]"
                ]
            }
        },
        "InsiderTrade.bulk_insert": {
            "name": "bulk_insert",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "insider_trades": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        }
    },
    "project_x-master/nasdaq_analytics/db/__init__.py": {},
    "project_x-master/nasdaq_analytics/spiders/base.py": {
        "BaseSpider.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "symbols": [
                    "List[str]"
                ]
            }
        }
    },
    "project_x-master/nasdaq_analytics/spiders/common.py": {},
    "project_x-master/nasdaq_analytics/spiders/historical_prices.py": {
        "RawRow.from_selector": {
            "name": "from_selector",
            "location": 25,
            "return": [
                "RawRow"
            ],
            "arguments": {
                "selector": []
            }
        },
        "ParsedRow.from_raw": {
            "name": "from_raw",
            "location": 46,
            "return": [
                "ParsedRow"
            ],
            "arguments": {
                "raw_row": [],
                "symbol": []
            }
        },
        "ParsedRow.as_dict": {
            "name": "as_dict",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HistoricalPricesSpider.start_requests": {
            "name": "start_requests",
            "location": 76,
            "return": [
                "typing.Generator[Request]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HistoricalPricesSpider.parse": {
            "name": "parse",
            "location": 84,
            "return": [
                "typing.Generator"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "project_x-master/nasdaq_analytics/spiders/insider_trades.py": {
        "RawRow.from_selector": {
            "name": "from_selector",
            "location": 35,
            "return": [
                "RawRow"
            ],
            "arguments": {
                "selector": [],
                "symbol": []
            }
        },
        "ParsedRow.from_raw_row": {
            "name": "from_raw_row",
            "location": 76,
            "return": [
                "ParsedRow"
            ],
            "arguments": {
                "raw_row": []
            }
        },
        "ParsedRow.as_dict": {
            "name": "as_dict",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InsiderTradesSpider.start_requests": {
            "name": "start_requests",
            "location": 111,
            "return": [
                "typing.Generator[Request]"
            ],
            "arguments": {
                "self": []
            }
        },
        "InsiderTradesSpider.parse": {
            "name": "parse",
            "location": 119,
            "return": [
                "typing.Generator[Request]",
                "typing.Generator"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "project_x-master/nasdaq_analytics/spiders/__init__.py": {},
    "project_x-master/nasdaq_analytics/views/helpers.py": {
        "_convert_werkzeug_rule_to_openapi_url_template": {
            "name": "_convert_werkzeug_rule_to_openapi_url_template",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "rule": []
            }
        },
        "ViewsHelper.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewsHelper.init_app": {
            "name": "init_app",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "ViewsHelper._add_path_to_spec": {
            "name": "_add_path_to_spec",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rule": [],
                "schema": [
                    "Dict[(str, Any)]"
                ],
                "parameters": [
                    "List[dict]"
                ],
                "description": [
                    "str"
                ]
            }
        },
        "ViewsHelper.route": {
            "name": "route",
            "location": 107,
            "return": [
                "Callable[([Callable[(..., dict)]], Callable[(..., dict)])]"
            ],
            "arguments": {
                "self": [],
                "rule": [],
                "template_name": [
                    "str"
                ],
                "schema": [
                    "Dict[(str, Any)]"
                ],
                "parameters": [
                    "List[dict]"
                ],
                "description": [
                    "str"
                ]
            }
        },
        "ViewsHelper.init_app.swagger_ui": {
            "name": "swagger_ui",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "ViewsHelper.init_app.swagger_json": {
            "name": "swagger_json",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "ViewsHelper.route.decorator": {
            "name": "decorator",
            "location": 130,
            "return": [],
            "arguments": {
                "view_func": []
            }
        },
        "ViewsHelper.route.decorator.web_view_func": {
            "name": "web_view_func",
            "location": 138,
            "return": [],
            "arguments": {}
        },
        "ViewsHelper.route.decorator.api_view_func": {
            "name": "api_view_func",
            "location": 151,
            "return": [],
            "arguments": {}
        }
    },
    "project_x-master/nasdaq_analytics/views/routes.py": {
        "index": {
            "name": "index",
            "location": 26,
            "return": [
                "dict[typing.Text, list]"
            ],
            "arguments": {}
        },
        "historical_prices": {
            "name": "historical_prices",
            "location": 55,
            "return": [
                "dict[typing.Text, list[dict[typing.Text, ]]]"
            ],
            "arguments": {
                "symbol": []
            }
        },
        "insider_trades": {
            "name": "insider_trades",
            "location": 106,
            "return": [
                "dict[typing.Text, list[dict[typing.Text, ]]]"
            ],
            "arguments": {
                "symbol": []
            }
        },
        "insider_trades_by_insider_name": {
            "name": "insider_trades_by_insider_name",
            "location": 164,
            "return": [
                "dict[typing.Text, list[dict[typing.Text, ]]]"
            ],
            "arguments": {
                "symbol": [],
                "insider_name": []
            }
        },
        "analytics": {
            "name": "analytics",
            "location": 242,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "symbol": []
            }
        },
        "delta": {
            "name": "delta",
            "location": 363,
            "return": [
                "dict[typing.Text, typing.Union[None,float]]",
                "dict[typing.Text, typing.Union[None,float,list[dict[typing.Text, ]]]]"
            ],
            "arguments": {
                "symbol": []
            }
        }
    },
    "project_x-master/nasdaq_analytics/views/schemas.py": {},
    "project_x-master/nasdaq_analytics/views/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    }
}
{
    "ptr-main/ci.py": {
        "check_ptr_stats_json": {
            "name": "check_ptr_stats_json",
            "location": 21,
            "return": [
                "int"
            ],
            "arguments": {
                "stats_file": []
            }
        },
        "integration_test": {
            "name": "integration_test",
            "location": 65,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "ci": {
            "name": "ci",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "show_env": [
                    "bool"
                ]
            }
        }
    },
    "ptr-main/fuzz.py": {
        "TestNamedTuples.test_fuzz_coverage_line": {
            "name": "test_fuzz_coverage_line",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stmts": [],
                "miss": [],
                "cover": [],
                "missing": []
            }
        },
        "TestNamedTuples.test_fuzz_find_py_files": {
            "name": "test_fuzz_find_py_files",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "py_files": [],
                "base_dir": []
            }
        },
        "TestNamedTuples.test_fuzz_step": {
            "name": "test_fuzz_step",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "step_name": [],
                "run_condition": [],
                "cmds": [],
                "log_message": [],
                "timeout": []
            }
        },
        "TestNamedTuples.test_fuzz_test_result": {
            "name": "test_fuzz_test_result",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "setup_py_path": [],
                "returncode": [],
                "output": [],
                "runtime": [],
                "timeout": []
            }
        },
        "TestPtrUtilities.test_fuzz_find_setup_pys": {
            "name": "test_fuzz_find_setup_pys",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_path": [],
                "exclude_patterns": [],
                "follow_symlinks": []
            }
        },
        "TestPtrUtilities.test_fuzz_parse_setup_cfg": {
            "name": "test_fuzz_parse_setup_cfg",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "setup_py": []
            }
        },
        "TestPtrUtilities.test_fuzz_print_non_configured_modules": {
            "name": "test_fuzz_print_non_configured_modules",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": [],
                "modules": []
            }
        },
        "TestPtrRunners.test_fuzz_async_main": {
            "name": "test_fuzz_async_main",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "atonce": [],
                "base_path": [],
                "mirror": [],
                "progress_interval": [],
                "venv": [],
                "venv_keep": [],
                "print_cov": [],
                "print_non_configured": [],
                "run_disabled": [],
                "stats_file": [],
                "venv_timeout": [],
                "error_on_warnings": [],
                "system_site_packages": []
            }
        },
        "TestPtrRunners.test_fuzz_create_venv": {
            "name": "test_fuzz_create_venv",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mirror": [],
                "py_exe": [],
                "install_pkgs": [],
                "timeout": [],
                "system_site_packages": []
            }
        },
        "TestPtrRunners.test_fuzz_run_tests": {
            "name": "test_fuzz_run_tests",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "atonce": [],
                "mirror": [],
                "tests_to_run": [],
                "progress_interval": [],
                "venv_path": [],
                "venv_keep": [],
                "print_cov": [],
                "stats": [],
                "stats_file": [],
                "venv_timeout": [],
                "error_on_warnings": [],
                "system_site_packages": []
            }
        }
    },
    "ptr-main/ptr.py": {
        "_config_default": {
            "name": "_config_default",
            "location": 45,
            "return": [
                "ConfigParser"
            ],
            "arguments": {}
        },
        "_config_read": {
            "name": "_config_read",
            "location": 61,
            "return": [],
            "arguments": {
                "cwd": [],
                "conf_name": [],
                "cp": [
                    "None"
                ]
            }
        },
        "_get_site_packages_path": {
            "name": "_get_site_packages_path",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "venv_path": []
            }
        },
        "_remove_pct_symbol": {
            "name": "_remove_pct_symbol",
            "location": 144,
            "return": [],
            "arguments": {
                "pct_str": []
            }
        },
        "_analyze_coverage": {
            "name": "_analyze_coverage",
            "location": 148,
            "return": [
                "None",
                "test_result"
            ],
            "arguments": {
                "venv_path": [],
                "setup_py_path": [],
                "required_cov": [],
                "coverage_report": [],
                "stats": [],
                "test_run_start_time": []
            }
        },
        "_max_osx_private_handle": {
            "name": "_max_osx_private_handle",
            "location": 258,
            "return": [
                "Path"
            ],
            "arguments": {
                "potenital_path": [],
                "site_packages_path": []
            }
        },
        "_write_stats_file": {
            "name": "_write_stats_file",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "stats_file": [],
                "stats": []
            }
        },
        "_generate_black_cmd": {
            "name": "_generate_black_cmd",
            "location": 291,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "module_dir": [],
                "black_exe": []
            }
        },
        "_generate_install_cmd": {
            "name": "_generate_install_cmd",
            "location": 295,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {
                "pip_exe": [],
                "module_dir": [],
                "config": []
            }
        },
        "_generate_test_suite_cmd": {
            "name": "_generate_test_suite_cmd",
            "location": 306,
            "return": [
                "tuple[str]",
                "tuple"
            ],
            "arguments": {
                "coverage_exe": [],
                "config": []
            }
        },
        "_generate_mypy_cmd": {
            "name": "_generate_mypy_cmd",
            "location": 312,
            "return": [
                "tuple",
                "tuple[str]"
            ],
            "arguments": {
                "module_dir": [],
                "mypy_exe": [],
                "config": []
            }
        },
        "_generate_flake8_cmd": {
            "name": "_generate_flake8_cmd",
            "location": 328,
            "return": [
                "tuple",
                "tuple[str]"
            ],
            "arguments": {
                "module_dir": [],
                "flake8_exe": [],
                "config": []
            }
        },
        "_generate_pylint_cmd": {
            "name": "_generate_pylint_cmd",
            "location": 341,
            "return": [
                "tuple",
                "tuple[list[str]]"
            ],
            "arguments": {
                "module_dir": [],
                "pylint_exe": [],
                "config": []
            }
        },
        "_generate_pyre_cmd": {
            "name": "_generate_pyre_cmd",
            "location": 357,
            "return": [
                "tuple",
                "tuple[str]"
            ],
            "arguments": {
                "module_dir": [],
                "pyre_exe": [],
                "config": []
            }
        },
        "_generate_usort_cmd": {
            "name": "_generate_usort_cmd",
            "location": 366,
            "return": [
                "tuple",
                "tuple[typing.Union[str,list]]"
            ],
            "arguments": {
                "module_dir": [],
                "usort_exe": [],
                "config": []
            }
        },
        "_parse_setup_params": {
            "name": "_parse_setup_params",
            "location": 378,
            "return": [
                "dict"
            ],
            "arguments": {
                "setup_py": []
            }
        },
        "_get_test_modules": {
            "name": "_get_test_modules",
            "location": 396,
            "return": [
                "dict"
            ],
            "arguments": {
                "base_path": [],
                "stats": [],
                "run_disabled": [],
                "print_non_configured": []
            }
        },
        "_handle_debug": {
            "name": "_handle_debug",
            "location": 439,
            "return": [],
            "arguments": {
                "debug": []
            }
        },
        "_validate_base_dir": {
            "name": "_validate_base_dir",
            "location": 449,
            "return": [
                "Path"
            ],
            "arguments": {
                "base_dir": []
            }
        },
        "_set_build_env": {
            "name": "_set_build_env",
            "location": 502,
            "return": [],
            "arguments": {
                "build_base_path": []
            }
        },
        "_set_pip_mirror": {
            "name": "_set_pip_mirror",
            "location": 538,
            "return": [
                "None"
            ],
            "arguments": {
                "venv_path": [],
                "mirror": [],
                "timeout": [
                    "int"
                ]
            }
        },
        "find_py_files": {
            "name": "find_py_files",
            "location": 814,
            "return": [
                "None"
            ],
            "arguments": {
                "py_files": [],
                "base_dir": []
            }
        },
        "_recursive_find_files": {
            "name": "_recursive_find_files",
            "location": 823,
            "return": [
                "None"
            ],
            "arguments": {
                "files": [],
                "base_dir": [],
                "exclude_patterns": [],
                "follow_symlinks": []
            }
        },
        "find_setup_pys": {
            "name": "find_setup_pys",
            "location": 851,
            "return": [
                "set"
            ],
            "arguments": {
                "base_path": [],
                "exclude_patterns": [],
                "follow_symlinks": [
                    "bool"
                ]
            }
        },
        "parse_setup_cfg": {
            "name": "parse_setup_cfg",
            "location": 859,
            "return": [
                "dict",
                "dict[typing.Text, dict[, int]]"
            ],
            "arguments": {
                "setup_py": []
            }
        },
        "print_non_configured_modules": {
            "name": "print_non_configured_modules",
            "location": 889,
            "return": [
                "None"
            ],
            "arguments": {
                "modules": []
            }
        },
        "print_test_results": {
            "name": "print_test_results",
            "location": 895,
            "return": [],
            "arguments": {
                "test_results": [],
                "stats": []
            }
        },
        "main": {
            "name": "main",
            "location": 1078,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ptr-main/ptr_tests.py": {
        "fake_get_event_loop": {
            "name": "fake_get_event_loop",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "return_specific_pid": {
            "name": "return_specific_pid",
            "location": 61,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "return_zero": {
            "name": "return_zero",
            "location": 65,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "touch_files": {
            "name": "touch_files",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestPtr.setUp": {
            "name": "setUp",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.tearDown": {
            "name": "tearDown",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_analyze_coverage_errors": {
            "name": "test_analyze_coverage_errors",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_path": []
            }
        },
        "TestPtr.test_analyze_coverage": {
            "name": "test_analyze_coverage",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_log": [],
                "mock_time": []
            }
        },
        "TestPtr.test_mac_osx_slash_private": {
            "name": "test_mac_osx_slash_private",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_async_main": {
            "name": "test_async_main",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_gtm": []
            }
        },
        "TestPtr.test_config": {
            "name": "test_config",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_create_venv": {
            "name": "test_create_venv",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_pip_mirror": []
            }
        },
        "TestPtr.test_create_venv_site_packages": {
            "name": "test_create_venv_site_packages",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_pip_mirror": []
            }
        },
        "TestPtr.test_find_setup_py": {
            "name": "test_find_setup_py",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_find_setup_py_exclude_default": {
            "name": "test_find_setup_py_exclude_default",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_black_command": {
            "name": "test_generate_black_command",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_install_cmd": {
            "name": "test_generate_install_cmd",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_test_suite_cmd": {
            "name": "test_generate_test_suite_cmd",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_mypy_cmd": {
            "name": "test_generate_mypy_cmd",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_flake8_command": {
            "name": "test_generate_flake8_command",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_pylint_command": {
            "name": "test_generate_pylint_command",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_generate_pyre_cmd": {
            "name": "test_generate_pyre_cmd",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_get_site_packages_path_error": {
            "name": "test_get_site_packages_path_error",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_get_test_modules": {
            "name": "test_get_test_modules",
            "location": 378,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestPtr.test_gen_output": {
            "name": "test_gen_output",
            "location": 392,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_handle_debug": {
            "name": "test_handle_debug",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_main": {
            "name": "test_main",
            "location": 418,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_args": [],
                "mock_validate": []
            }
        },
        "TestPtr.test_parse_setup_cfg": {
            "name": "test_parse_setup_cfg",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_print_non_configured_modules": {
            "name": "test_print_non_configured_modules",
            "location": 441,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestPtr.test_print_test_results": {
            "name": "test_print_test_results",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestPtr.test_process_reporter": {
            "name": "test_process_reporter",
            "location": 456,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_log": []
            }
        },
        "TestPtr.test_set_build_env": {
            "name": "test_set_build_env",
            "location": 469,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_set_pip_mirror": {
            "name": "test_set_pip_mirror",
            "location": 479,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_test_runner": {
            "name": "test_test_runner",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_test_steps_runner": {
            "name": "test_test_steps_runner",
            "location": 513,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_print": []
            }
        },
        "TestPtr.test_validate_base_dir": {
            "name": "test_validate_base_dir",
            "location": 583,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_validate_base_dir_fail": {
            "name": "test_validate_base_dir_fail",
            "location": 589,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_exit": []
            }
        },
        "TestPtr.test_write_stats_file": {
            "name": "test_write_stats_file",
            "location": 593,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPtr.test_write_stats_file_raise": {
            "name": "test_write_stats_file_raise",
            "location": 602,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_log": []
            }
        },
        "TestPtr.test_process_reporter.qsize": {
            "name": "qsize",
            "location": 457,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "ptr-main/ptr_tests_fixtures.py": {
        "FakeEventLoop.close": {
            "name": "close",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeEventLoop.run_until_complete": {
            "name": "run_until_complete",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ptr-main/setup.py": {
        "get_long_desc": {
            "name": "get_long_desc",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    }
}
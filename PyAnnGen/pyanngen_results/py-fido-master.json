{
    "py-fido-master/setup.py": {},
    "py-fido-master/docs/source/conf.py": {
        "setup": {
            "name": "setup",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "Tuple[Callable, Callable]"
                ]
            }
        }
    },
    "py-fido-master/fido_u2f/constants.py": {},
    "py-fido-master/fido_u2f/device.py": {
        "device_as_client_dict": {
            "name": "device_as_client_dict",
            "location": 16,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "device": [
                    "str",
                    "int"
                ]
            }
        },
        "filter_devices_by_app_id": {
            "name": "filter_devices_by_app_id",
            "location": 33,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "registered_devices": [
                    "str",
                    "int"
                ],
                "app_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "py-fido-master/fido_u2f/enums.py": {
        "U2FTransport.value": {
            "name": "value",
            "location": 19,
            "return": [
                "str",
                "int",
                "dict",
                "tuple",
                "Callable[[Mapping], T]"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FTransport.internal_name": {
            "name": "internal_name",
            "location": 23,
            "return": [
                "bool",
                "tuple",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FTransport.from_byte": {
            "name": "from_byte",
            "location": 27,
            "return": [
                "List[U2FTransport]"
            ],
            "arguments": {
                "byte": [
                    "int",
                    "float",
                    "Optional[bool]",
                    "str",
                    "None"
                ]
            }
        },
        "U2FTransport.to_byte": {
            "name": "to_byte",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "transports": [
                    "bytes",
                    "Dict",
                    "List[str]",
                    "bool",
                    "int",
                    "IO",
                    "Iterator[Dict[str,str]]"
                ]
            }
        },
        "U2FTransport._to_internal_int": {
            "name": "_to_internal_int",
            "location": 38,
            "return": [
                "int",
                "str",
                "bytes"
            ],
            "arguments": {
                "transports": [
                    "int",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "U2FTransport._from_internal_int": {
            "name": "_from_internal_int",
            "location": 47,
            "return": [
                "None",
                "str",
                "Optional[dict]",
                "Iterable[T]",
                "Union[str,None]",
                "Dict"
            ],
            "arguments": {
                "transports": [
                    "int",
                    "str",
                    "bytes",
                    "bool",
                    "List[int]",
                    "bytearray"
                ]
            }
        }
    },
    "py-fido-master/fido_u2f/exceptions.py": {},
    "py-fido-master/fido_u2f/registration.py": {
        "U2FRegistrationManager.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_id": [
                    "Optional[str]",
                    "str",
                    "Optional[int]",
                    "None",
                    "int"
                ]
            }
        },
        "U2FRegistrationManager.create_device_registration_model": {
            "name": "create_device_registration_model",
            "location": 33,
            "return": [
                "device.DeviceRegistration",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FRegistrationManager.filter_devices_by_app_id": {
            "name": "filter_devices_by_app_id",
            "location": 44,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "registered_devices": [
                    "bytes",
                    "Callable",
                    "List[str]",
                    "str",
                    "Dict"
                ]
            }
        },
        "U2FRegistrationManager.create_registration_challenge": {
            "name": "create_registration_challenge",
            "location": 49,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "session": [
                    "str",
                    "Callable",
                    "Dict",
                    "int",
                    "eth.abc.DatabaseAPI",
                    "None",
                    "eth.abc.BlockHeaderAPI",
                    "Optional[str]"
                ],
                "registered_devices": [
                    "Tuple",
                    "Dict",
                    "str",
                    "Mapping[str,List[Any]]",
                    "bytes"
                ]
            }
        },
        "U2FRegistrationManager.process_registration_response": {
            "name": "process_registration_response",
            "location": 72,
            "return": [
                "bool",
                "List[str]",
                "Tuple[int, int]",
                "int",
                "str",
                "Dict[int, dict]"
            ],
            "arguments": {
                "self": [],
                "session": [
                    "str",
                    "eth.abc.DatabaseAPI",
                    "None",
                    "Any",
                    "Optional[Response]",
                    "eth.abc.BlockHeaderAPI",
                    "Optional[Any]"
                ],
                "response_dict": [
                    "Dict",
                    "Dict[str,Any]"
                ]
            }
        },
        "U2FRegistrationManager.verify_registration_data": {
            "name": "verify_registration_data",
            "location": 93,
            "return": [
                "RegistrationData"
            ],
            "arguments": {
                "self": [],
                "response_dict": [
                    "purplship.core.utils.xml.Element",
                    "bool"
                ],
                "challenge": [
                    "Dict[str,Any]",
                    "Dict",
                    "Callable"
                ]
            }
        },
        "RegistrationData.from_base64": {
            "name": "from_base64",
            "location": 119,
            "return": [
                "RegistrationData"
            ],
            "arguments": {
                "cls": [
                    "Type[_TRegistrationData]"
                ],
                "base64_data": [
                    "Dict",
                    "Dict[str,Any]",
                    "bytes",
                    "MutableMapping",
                    "raiden.utils.Dict[str,raiden.utils.Any]"
                ]
            }
        },
        "RegistrationData.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "str",
                    "bytes"
                ]
            }
        },
        "RegistrationData.get_x509_certificate": {
            "name": "get_x509_certificate",
            "location": 133,
            "return": [
                "x509.Certificate"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationData.verify": {
            "name": "verify",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_param": [
                    "dict"
                ],
                "chal_param": [
                    "Dict"
                ]
            }
        },
        "RegistrationData.get_supported_transports": {
            "name": "get_supported_transports",
            "location": 154,
            "return": [
                "None",
                "Optional[str]",
                "Optional[int]",
                "Optional[Dict]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py-fido-master/fido_u2f/utils.py": {
        "get_random_challenge": {
            "name": "get_random_challenge",
            "location": 18,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "standardise_client_data": {
            "name": "standardise_client_data",
            "location": 22,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "raw_client_data": [
                    "str",
                    "Dict[str,Any]",
                    "bool",
                    "Optional[Mapping[str,Any]]"
                ]
            }
        },
        "load_client_data": {
            "name": "load_client_data",
            "location": 34,
            "return": [
                "str",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "raw_client_data": [
                    "str",
                    "Dict"
                ]
            }
        },
        "validate_client_data": {
            "name": "validate_client_data",
            "location": 46,
            "return": [
                "str",
                "Dict[str,Union[Any,Any,Any,Any]]",
                "List[dict[str,str]]",
                "Dict[Any,list[Any]]",
                "List"
            ],
            "arguments": {
                "raw_client_data": [
                    "str",
                    "int"
                ],
                "request_type": [
                    "str",
                    "Dict[str,Any]",
                    "Optional[Mapping[str,Any]]",
                    "Mapping",
                    "None"
                ],
                "app_id": [
                    "str",
                    "Optional[dict]",
                    "Dict",
                    "None"
                ],
                "expected_challenge": [
                    "str",
                    "List[dict]",
                    "Dict",
                    "Dict[str,List[bytes]]",
                    "Dict[str,list[bytes]]"
                ]
            }
        },
        "sha_256": {
            "name": "sha_256",
            "location": 65,
            "return": [
                "bytes"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "Dict",
                    "Dict[str,str]",
                    "List[str]"
                ]
            }
        },
        "pop_bytes": {
            "name": "pop_bytes",
            "location": 71,
            "return": [
                "bytes"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "int"
                ],
                "l": [
                    "int",
                    "bytes"
                ]
            }
        },
        "fix_invalid_yubico_certs": {
            "name": "fix_invalid_yubico_certs",
            "location": 77,
            "return": [
                "int",
                "str",
                "Callable",
                "Dict",
                "List[int]",
                "List[list[int]]"
            ],
            "arguments": {
                "der": [
                    "str",
                    "int",
                    "Callable"
                ]
            }
        },
        "parse_tlv_encoded_length": {
            "name": "parse_tlv_encoded_length",
            "location": 85,
            "return": [
                "bool",
                "int"
            ],
            "arguments": {
                "data": [
                    "List[str]",
                    "Tuple[Union[str,str]]",
                    "str",
                    "Type",
                    "Dict[str,Any]",
                    "Tuple[str,str]"
                ]
            }
        },
        "websafe_decode": {
            "name": "websafe_decode",
            "location": 107,
            "return": [
                "bytes"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "Dict",
                    "str",
                    "int",
                    "Iterable[bytes]"
                ]
            }
        },
        "websafe_encode": {
            "name": "websafe_encode",
            "location": 117,
            "return": [
                "str"
            ],
            "arguments": {
                "data": [
                    "int",
                    "float",
                    "str",
                    "bytes",
                    "bool"
                ]
            }
        },
        "abstract_attribute": {
            "name": "abstract_attribute",
            "location": 146,
            "return": [
                "_AbstractAttribute"
            ],
            "arguments": {}
        },
        "_AbstractAttribute.__get__": {
            "name": "__get__",
            "location": 125,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "float"
                ],
                "type": []
            }
        }
    },
    "py-fido-master/fido_u2f/verification.py": {
        "U2FSigningManager.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_id": [
                    "Optional[str]",
                    "str",
                    "Optional[int]",
                    "None",
                    "int"
                ]
            }
        },
        "U2FSigningManager.update_device_registration_counter": {
            "name": "update_device_registration_counter",
            "location": 48,
            "return": [
                "device.DeviceRegistration",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FSigningManager.filter_devices_by_app_id": {
            "name": "filter_devices_by_app_id",
            "location": 53,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "registered_devices": [
                    "bytes",
                    "Callable",
                    "List[str]",
                    "str",
                    "Dict"
                ]
            }
        },
        "U2FSigningManager.create_signing_challenge": {
            "name": "create_signing_challenge",
            "location": 58,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "session": [
                    "str",
                    "Callable",
                    "Dict",
                    "int",
                    "eth.abc.DatabaseAPI",
                    "None",
                    "eth.abc.BlockHeaderAPI",
                    "Optional[str]"
                ],
                "registered_devices": [
                    "Optional[Dict[str,Any]]",
                    "Dict[str,Any]",
                    "str",
                    "Mapping[str,List[Any]]",
                    "Dict",
                    "None",
                    "Mapping"
                ]
            }
        },
        "U2FSigningManager.process_signing_response": {
            "name": "process_signing_response",
            "location": 71,
            "return": [
                "int",
                "\"Env\"",
                "dict",
                "\"State\""
            ],
            "arguments": {
                "self": [],
                "session": [
                    "eth.abc.BlockHeaderAPI",
                    "Any",
                    "Dict[str,str]",
                    "Optional[Any]",
                    "int",
                    "None"
                ],
                "response_dict": [
                    "Dict",
                    "Dict[str,Any]"
                ],
                "registered_devices": [
                    "Tuple",
                    "Dict[str,Any]",
                    "eth.abc.BlockHeaderAPI",
                    "Dict[str,float]",
                    "Tuple[str,dict,int,Any]"
                ]
            }
        },
        "U2FSigningManager.get_key_by_handle": {
            "name": "get_key_by_handle",
            "location": 88,
            "return": [
                "Text",
                "str",
                "Dict",
                "int"
            ],
            "arguments": {
                "self": [],
                "registered_keys": [
                    "str",
                    "List[str]",
                    "typ.Collection[DeviceRegistration]",
                    "int",
                    "bool"
                ],
                "key_handle": [
                    "str",
                    "Union[str,None]",
                    "None"
                ]
            }
        },
        "U2FSigningManager.verify_signature_data": {
            "name": "verify_signature_data",
            "location": 96,
            "return": [
                "SignatureData"
            ],
            "arguments": {
                "self": [],
                "response_dict": [
                    "Dict",
                    "bool"
                ],
                "challenge": [
                    "Dict[str,Any]",
                    "Dict"
                ],
                "device": [
                    "bytes",
                    "device.DeviceRegistration",
                    "Sequence",
                    "str",
                    "Dict"
                ]
            }
        },
        "SignatureData.from_base64": {
            "name": "from_base64",
            "location": 125,
            "return": [
                "SignatureData"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSignatureData]"
                ],
                "base64_data": [
                    "Dict",
                    "Dict[str,Any]",
                    "bytes",
                    "MutableMapping",
                    "raiden.utils.Dict[str,raiden.utils.Any]"
                ]
            }
        },
        "SignatureData.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "str",
                    "bytes"
                ]
            }
        },
        "SignatureData.verify": {
            "name": "verify",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_param": [
                    "purplship.core.utils.xml.Element"
                ],
                "chal_param": [
                    "purplship.core.utils.xml.Element"
                ],
                "der_pubkey": [
                    "Dict[str,Sequence[Any]]",
                    "bytes",
                    "Tuple[paradigm.models.Base,tests.utils.Kwargs]",
                    "bool",
                    "Tuple[Union[paradigm.models.Base,tests.utils.Kwargs]]"
                ]
            }
        }
    },
    "py-fido-master/fido_u2f/_typing.py": {},
    "py-fido-master/fido_u2f/__init__.py": {},
    "py-fido-master/fido_u2f/sample/flask.py": {
        "_": {
            "name": "_",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "hello": {
            "name": "hello",
            "location": 45,
            "return": [
                "bool",
                "Text"
            ],
            "arguments": {}
        },
        "get_register_js": {
            "name": "get_register_js",
            "location": 79,
            "return": [
                "pathlib.Path",
                "bool",
                "str"
            ],
            "arguments": {}
        },
        "do_register_start": {
            "name": "do_register_start",
            "location": 84,
            "return": [
                "Text",
                "int",
                "float",
                "str",
                "Tuple[str,str]"
            ],
            "arguments": {}
        },
        "do_register_verify": {
            "name": "do_register_verify",
            "location": 118,
            "return": [
                "Text",
                "str",
                "int",
                "bytes"
            ],
            "arguments": {}
        },
        "get_login_js": {
            "name": "get_login_js",
            "location": 131,
            "return": [
                "pathlib.Path",
                "bool",
                "str"
            ],
            "arguments": {}
        },
        "do_login_start": {
            "name": "do_login_start",
            "location": 136,
            "return": [
                "Text",
                "str",
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "do_login_verify": {
            "name": "do_login_verify",
            "location": 171,
            "return": [
                "Text",
                "str",
                "int",
                "bytes"
            ],
            "arguments": {}
        },
        "U2FManager.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FManager.create_device_registration_model": {
            "name": "create_device_registration_model",
            "location": 27,
            "return": [
                "fido_u2f.sample.tables.Device"
            ],
            "arguments": {
                "self": []
            }
        },
        "U2FManager.update_device_registration_counter": {
            "name": "update_device_registration_counter",
            "location": 36,
            "return": [
                "float",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": [],
                "device": [
                    "float",
                    "str",
                    "int",
                    "bool"
                ],
                "counter": [
                    "float",
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "py-fido-master/fido_u2f/sample/tables.py": {
        "User.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None",
                    "Dict[str,Any]",
                    "List[str]",
                    "Dict"
                ]
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Device.u2f_transports": {
            "name": "u2f_transports",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transports": [
                    "bool"
                ]
            }
        }
    },
    "py-fido-master/fido_u2f/sample/__init__.py": {},
    "py-fido-master/fido_u2f/tests/test_response_parse_validate.py": {},
    "py-fido-master/fido_u2f/tests/test_utils.py": {
        "test_sha_256": {
            "name": "test_sha_256",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pop_bytes": {
            "name": "test_pop_bytes",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Test_parse_tlv_encoded_length.test_zero_length": {
            "name": "test_zero_length",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_parse_tlv_encoded_length.test_zero_length_with_flag": {
            "name": "test_zero_length_with_flag",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_parse_tlv_encoded_length.test_length_short_form": {
            "name": "test_length_short_form",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_parse_tlv_encoded_length.test_length_long_form": {
            "name": "test_length_long_form",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_parse_tlv_encoded_length.test_length_really_long_form": {
            "name": "test_length_really_long_form",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py-fido-master/fido_u2f/tests/__init__.py": {}
}
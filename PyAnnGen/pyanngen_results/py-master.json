{
    "py-master/ecies/utils.py": {
        "remove_0x": {
            "name": "remove_0x",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str",
                    "int"
                ]
            }
        },
        "decode_hex": {
            "name": "decode_hex",
            "location": 31,
            "return": [
                "bytes"
            ],
            "arguments": {
                "s": [
                    "str",
                    "Type[T]",
                    "Type"
                ]
            }
        },
        "sha256": {
            "name": "sha256",
            "location": 35,
            "return": [
                "bytes"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "List[str]",
                    "bytes",
                    "hackathon.utils.utils.DataMessage"
                ]
            }
        },
        "generate_key": {
            "name": "generate_key",
            "location": 55,
            "return": [
                "PrivateKey",
                "bool",
                "int",
                "Dict[str,str]",
                "str",
                "Optional[cmk.utils.type_defs.HostAddress]",
                "Dict"
            ],
            "arguments": {}
        },
        "generate_eth_key": {
            "name": "generate_eth_key",
            "location": 69,
            "return": [
                "PrivateKey",
                "Dict",
                "Mapping[str,Any]",
                "Optional[Dict[str,Any]]",
                "Dict[str,Union[str,int]]",
                "bool",
                "Union[utils.CWLObjectType,MutableSequence[utils.CWLObjectType],None]"
            ],
            "arguments": {}
        },
        "hex2pub": {
            "name": "hex2pub",
            "location": 83,
            "return": [
                "PublicKey",
                "str",
                "List[int]"
            ],
            "arguments": {
                "pub_hex": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "hex2prv": {
            "name": "hex2prv",
            "location": 117,
            "return": [
                "PrivateKey",
                "str",
                "List[int]"
            ],
            "arguments": {
                "prv_hex": [
                    "str",
                    "int",
                    "Dict[str,str]",
                    "bool",
                    "Dict[str,Any]"
                ]
            }
        },
        "encapsulate": {
            "name": "encapsulate",
            "location": 141,
            "return": [
                "HKDF",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "private_key": [
                    "str",
                    "AnyStr",
                    "raiden_contracts.utils.type_aliases.PrivateKey"
                ],
                "peer_public_key": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "decapsulate": {
            "name": "decapsulate",
            "location": 150,
            "return": [
                "HKDF",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "public_key": [
                    "str",
                    "int",
                    "raiden_contracts.utils.type_aliases.PrivateKey"
                ],
                "peer_private_key": [
                    "bytes",
                    "str",
                    "coincurve.PublicKey",
                    "coincurve.PrivateKey"
                ]
            }
        },
        "aes_encrypt": {
            "name": "aes_encrypt",
            "location": 157,
            "return": [
                "bytes"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Set[str]",
                    "Optional[Callable]",
                    "List[str]",
                    "Callable",
                    "bool",
                    "None"
                ],
                "plain_text": [
                    "bytes",
                    "List[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "aes_decrypt": {
            "name": "aes_decrypt",
            "location": 183,
            "return": [
                "bytearray",
                "float",
                "str"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Union[str,int]",
                    "Dict",
                    "int",
                    "Optional[Sequence[str]]",
                    "Sequence[str]",
                    "None"
                ],
                "cipher_text": [
                    "str",
                    "Optional[str]",
                    "int"
                ]
            }
        }
    },
    "py-master/ecies/__init__.py": {
        "encrypt": {
            "name": "encrypt",
            "location": 9,
            "return": [
                "dict",
                "Dict[str, Any]",
                "str",
                "Set[cmk.utils.type_defs.HostName]",
                "List[str]",
                "Dict[int, str]"
            ],
            "arguments": {
                "receiver_pk": [
                    "str",
                    "Union[str,bytes]",
                    "int",
                    "bytes",
                    "bytearray",
                    "Union[int,List[int]]",
                    "List[int]"
                ],
                "msg": [
                    "bool",
                    "bytes",
                    "str",
                    "int"
                ]
            }
        },
        "decrypt": {
            "name": "decrypt",
            "location": 38,
            "return": [
                "float",
                "int",
                "outcome.Outcome[str, utils.typeshed.pathlike]"
            ],
            "arguments": {
                "receiver_sk": [
                    "str",
                    "bytes",
                    "Union[str,bytes]"
                ],
                "msg": [
                    "str"
                ]
            }
        }
    },
    "py-master/ecies/__main__.py": {
        "readablize": {
            "name": "readablize",
            "location": 21,
            "return": [
                "int",
                "Union[bytes, bytearray]",
                "bytes",
                "str"
            ],
            "arguments": {
                "b": [
                    "bytes",
                    "Union[bytes, bytearray, memoryview]",
                    "bool",
                    "Union[dict, list]",
                    "str",
                    "T",
                    "list"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "py-master/tests/test_crypt.py": {
        "TestCrypt.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCrypt.test_hash": {
            "name": "test_hash",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCrypt.test_hdkf": {
            "name": "test_hdkf",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCrypt.test_elliptic": {
            "name": "test_elliptic",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCrypt.test_aes": {
            "name": "test_aes",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py-master/tests/__init__.py": {}
}
{
    "pyf-master/pyf.py": {
        "partial": {
            "name": "partial",
            "location": 14,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ]
            }
        },
        "identity": {
            "name": "identity",
            "location": 25,
            "return": [
                "str",
                "bool",
                "float",
                "Iterable[Iterable[float]]",
                "bytes"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "Iterable[Iterable[float]]",
                    "str",
                    "bytes",
                    "List",
                    "T"
                ]
            }
        },
        "always": {
            "name": "always",
            "location": 29,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "Iterable[Iterable[float]]",
                    "str",
                    "bytes",
                    "List",
                    "T"
                ]
            }
        },
        "as_str": {
            "name": "as_str",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "int",
                    "str",
                    "Optional[Any]",
                    "Any",
                    "None"
                ]
            }
        },
        "as_int": {
            "name": "as_int",
            "location": 39,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "Dict[str, Any]"
                ]
            }
        },
        "equals": {
            "name": "equals",
            "location": 44,
            "return": [
                "functools.partial"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "str",
                    "Union[float,int]"
                ],
                "y": [
                    "int",
                    "float",
                    "str",
                    "Union[float,int]"
                ]
            }
        },
        "prop_eq": {
            "name": "prop_eq",
            "location": 49,
            "return": [
                "functools.partial"
            ],
            "arguments": {
                "k": [
                    "int",
                    "str",
                    "float",
                    "bool",
                    "List[list]"
                ],
                "v": [
                    "int",
                    "str",
                    "float",
                    "List[list]",
                    "bool"
                ],
                "dct": [
                    "str",
                    "List[list]",
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "prop": {
            "name": "prop",
            "location": 54,
            "return": [
                "bool",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "dct": [
                    "Dict",
                    "Dict[str,Any]",
                    "str",
                    "Dict[str,tuple]",
                    "List"
                ],
                "k": [
                    "str",
                    "Dict",
                    "List",
                    "Dict[str,Any]",
                    "Dict[str,tuple]"
                ],
                "default": [
                    "str",
                    "None",
                    "Dict",
                    "List",
                    "Dict[str,Any]",
                    "Dict[str,tuple]"
                ]
            }
        },
        "values": {
            "name": "values",
            "location": 59,
            "return": [
                "List[list]",
                "List",
                "str",
                "List[T]",
                "List[Frame]",
                "Dict"
            ],
            "arguments": {
                "dct": [
                    "Dict",
                    "List[str]",
                    "str"
                ]
            }
        },
        "prepend": {
            "name": "prepend",
            "location": 64,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "lst": [
                    "int",
                    "Callable",
                    "str"
                ],
                "elm": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "merge": {
            "name": "merge",
            "location": 69,
            "return": [
                "Dict[Union[dict,int,dict[int,tuple[Union[int,int]]]],Union[dict,int,dict[int,tuple[Union[int,int]]]]]",
                "str",
                "bool",
                "Set[str]"
            ],
            "arguments": {
                "l_dct": [
                    "Dict",
                    "int",
                    "Dict[int,Tuple[int,int]]",
                    "Dict[int,tuple[Union[int,int]]]"
                ],
                "r_dct": [
                    "Dict",
                    "int",
                    "Dict[int,Tuple[int,int]]",
                    "Dict[int,tuple[Union[int,int]]]"
                ]
            }
        },
        "path": {
            "name": "path",
            "location": 74,
            "return": [
                "bool",
                "str",
                "None",
                "Dict",
                "Dict[str,Any]"
            ],
            "arguments": {
                "dct": [
                    "str",
                    "Dict[str,str]",
                    "List[str]",
                    "Exception",
                    "Optional[Dict]",
                    "Dict[str,Union[str,int]]",
                    "Dict",
                    "None"
                ],
                "steps": [
                    "List[str]",
                    "str",
                    "bool",
                    "Set",
                    "int",
                    "Optional[str]"
                ],
                "default": [
                    "str",
                    "Dict",
                    "None",
                    "Dict[str,Any]"
                ]
            }
        },
        "map": {
            "name": "map",
            "location": 83,
            "return": [
                "int",
                "str",
                "dict"
            ],
            "arguments": {
                "lst": [
                    "Callable",
                    "List"
                ],
                "f": [
                    "Callable",
                    "List"
                ]
            }
        },
        "filter": {
            "name": "filter",
            "location": 88,
            "return": [
                "bool",
                "Optional[Any]"
            ],
            "arguments": {
                "lst": [
                    "Callable",
                    "int",
                    "Sequence",
                    "List[Block]",
                    "Optional[str]",
                    "str",
                    "None"
                ],
                "f": [
                    "Callable",
                    "int",
                    "Sequence",
                    "List[Block]",
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        },
        "reduce": {
            "name": "reduce",
            "location": 93,
            "return": [
                "str",
                "int",
                "dict"
            ],
            "arguments": {
                "lst": [
                    "List",
                    "Type",
                    "float",
                    "Dict[str,Any]",
                    "int"
                ],
                "f": [
                    "Callable",
                    "List"
                ],
                "init": [
                    "Optional[str]",
                    "None",
                    "Callable[...,T]",
                    "List[Block]",
                    "str",
                    "Callable"
                ]
            }
        },
        "pick": {
            "name": "pick",
            "location": 101,
            "return": [
                "Dict[tuple[Union[str,Any]],tuple[Union[str,Any]]]",
                "Dict",
                "Set[str]",
                "Dict[int,Dict[int,Any]]",
                "str",
                "Dict[str,str]",
                "Dict[str,Any]"
            ],
            "arguments": {
                "dct": [
                    "Dict",
                    "Dict[str,Any]",
                    "List",
                    "Iterable[Tuple[str,str]]",
                    "Union[bytes,str]",
                    "MutableMapping[str,str]",
                    "List[str]"
                ],
                "names": [
                    "Dict",
                    "List",
                    "Dict[str,Any]",
                    "List[str]",
                    "Iterable[Tuple[str,str]]",
                    "bytes",
                    "str",
                    "Union[bytes,str]",
                    "MutableMapping[str,str]"
                ]
            }
        },
        "omit": {
            "name": "omit",
            "location": 106,
            "return": [
                "Dict[tuple[Union[str,Any]],tuple[Union[str,Any]]]",
                "Dict",
                "Set[str]",
                "Dict[int,Dict[int,Any]]",
                "str",
                "Dict[str,str]",
                "Dict[str,Any]"
            ],
            "arguments": {
                "dct": [
                    "Dict",
                    "Dict[str,Any]",
                    "List",
                    "Iterable[Tuple[str,str]]",
                    "Union[bytes,str]",
                    "MutableMapping[str,str]",
                    "List[str]"
                ],
                "names": [
                    "Dict",
                    "List",
                    "Dict[str,Any]",
                    "List[str]",
                    "Iterable[Tuple[str,str]]",
                    "bytes",
                    "str",
                    "Union[bytes,str]",
                    "MutableMapping[str,str]"
                ]
            }
        },
        "find": {
            "name": "find",
            "location": 111,
            "return": [
                "None",
                "Optional[int]",
                "str",
                "Optional[str]",
                "List",
                "Optional[Dict]",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "lst": [
                    "str",
                    "Optional[str]",
                    "bytes",
                    "List[bytes]",
                    "Tuple[Union[str,str]]",
                    "bool",
                    "Tuple[str,str]"
                ],
                "f": [
                    "Callable",
                    "Set[str]",
                    "List[dict]",
                    "str",
                    "int"
                ]
            }
        },
        "find_index": {
            "name": "find_index",
            "location": 123,
            "return": [
                "int",
                "Optional[str]",
                "Callable",
                "str"
            ],
            "arguments": {
                "lst": [
                    "List",
                    "str",
                    "Callable",
                    "List[dict]",
                    "List[Dict]"
                ],
                "f": [
                    "List",
                    "Callable",
                    "str",
                    "List[Dict]",
                    "List[dict]"
                ]
            }
        },
        "partial.wrapped": {
            "name": "wrapped",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "pyf-master/setup.py": {}
}
{
    "pylnd-master/setup.py": {
        "readme": {
            "name": "readme",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "pylnd-master/docs/source/conf.py": {},
    "pylnd-master/lnd/utils.py": {
        "encode_macaroon": {
            "name": "encode_macaroon",
            "location": 3,
            "return": [
                "bytes"
            ],
            "arguments": {
                "macaroon": [
                    "str"
                ]
            }
        },
        "read_file": {
            "name": "read_file",
            "location": 8,
            "return": [
                "bytes"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        }
    },
    "pylnd-master/lnd/__init__.py": {},
    "pylnd-master/lnd/client/abstraction.py": {
        "LNDClientAbstraction.address_new": {
            "name": "address_new",
            "location": 13,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "address_type": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.channel_close": {
            "name": "channel_close",
            "location": 17,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "funding_txid": [
                    "str"
                ],
                "output_index": [
                    "int"
                ]
            }
        },
        "LNDClientAbstraction.channel_open": {
            "name": "channel_open",
            "location": 21,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "spend_unconfirmed": [
                    "bool"
                ],
                "push_sat": [
                    "str"
                ],
                "remote_csv_delay": [
                    "int"
                ],
                "private": [
                    "bool"
                ],
                "node_pubkey": [
                    "bytes"
                ],
                "minimum_confirmations": [
                    "int"
                ],
                "node_pubkey_string": [
                    "str"
                ],
                "local_funding_amount": [
                    "str"
                ],
                "sat_per_byte": [
                    "str"
                ],
                "min_htlc_msat": [
                    "str"
                ],
                "target_confirmations": [
                    "int"
                ]
            }
        },
        "LNDClientAbstraction.channel_policy_update": {
            "name": "channel_policy_update",
            "location": 36,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "chan_point": [
                    "dict"
                ],
                "time_lock_delta": [
                    "int"
                ],
                "base_fee_msat": [
                    "str"
                ],
                "fee_rate": [
                    "float"
                ],
                "is_global": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.channels_balance": {
            "name": "channels_balance",
            "location": 45,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.channels_closed": {
            "name": "channels_closed",
            "location": 49,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "cooperative": [
                    "bool"
                ],
                "local_force": [
                    "bool"
                ],
                "remote_force": [
                    "bool"
                ],
                "breach": [
                    "bool"
                ],
                "funding_canceled": [
                    "bool"
                ],
                "abandoned": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.channels_list": {
            "name": "channels_list",
            "location": 59,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "active_only": [
                    "bool"
                ],
                "inactive_only": [
                    "bool"
                ],
                "public_only": [
                    "bool"
                ],
                "private_only": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.channels_open": {
            "name": "channels_open",
            "location": 67,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.channels_pending": {
            "name": "channels_pending",
            "location": 71,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.fee_estimate": {
            "name": "fee_estimate",
            "location": 75,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "target_confirmations": [
                    "int"
                ]
            }
        },
        "LNDClientAbstraction.fee_report": {
            "name": "fee_report",
            "location": 79,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.generate_seed": {
            "name": "generate_seed",
            "location": 83,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "aezeed_passphrase": [
                    "str"
                ],
                "seed_entropy": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.graph_describe": {
            "name": "graph_describe",
            "location": 89,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "include_unannounced": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.graph_info": {
            "name": "graph_info",
            "location": 93,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.graph_channel_info": {
            "name": "graph_channel_info",
            "location": 97,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "channel_id": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.graph_node_info": {
            "name": "graph_node_info",
            "location": 101,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ],
                "include_channels": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.graph_query_routes": {
            "name": "graph_query_routes",
            "location": 105,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ],
                "amount": [
                    "str"
                ],
                "final_cltv_delta": [
                    "int"
                ],
                "fee_fixed_limit": [
                    "str"
                ],
                "fee_percent_limit": [
                    "str"
                ],
                "ignored_nodes": [
                    "list"
                ],
                "source_pub_key": [
                    "str"
                ],
                "use_mission_control": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.info": {
            "name": "info",
            "location": 117,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.invoice_add": {
            "name": "invoice_add",
            "location": 121,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "amount_paid_must": [
                    "str"
                ],
                "settle_date": [
                    "str"
                ],
                "add_index": [
                    "str"
                ],
                "description_hash": [
                    "bytes"
                ],
                "r_preimage": [
                    "bytes"
                ],
                "state": [
                    "int"
                ],
                "cltv_expiry": [
                    "str"
                ],
                "route_hints": [
                    "list"
                ],
                "r_hash": [
                    "bytes"
                ],
                "creation_date": [
                    "str"
                ],
                "settle_index": [
                    "str"
                ],
                "memo": [
                    "str"
                ],
                "private": [
                    "bool"
                ],
                "expiry": [
                    "str"
                ],
                "fallback_address": [
                    "str"
                ],
                "settled": [
                    "bool"
                ],
                "amount_paid": [
                    "str"
                ],
                "payment_request": [
                    "str"
                ],
                "amount_paid_sat": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.invoice_lookup": {
            "name": "invoice_lookup",
            "location": 145,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "r_hash_string": [
                    "str"
                ],
                "r_hash": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.invoices_list": {
            "name": "invoices_list",
            "location": 149,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "pending_only": [
                    "bool"
                ],
                "index_offset": [
                    "str"
                ],
                "num_max_invoices": [
                    "str"
                ],
                "reverse": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.invoices_subscribe": {
            "name": "invoices_subscribe",
            "location": 157,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "add_index": [
                    "str"
                ],
                "settle_index": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.message_sign": {
            "name": "message_sign",
            "location": 161,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes"
                ]
            }
        },
        "LNDClientAbstraction.message_verify": {
            "name": "message_verify",
            "location": 165,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes"
                ],
                "signiture": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.payment_send": {
            "name": "payment_send",
            "location": 169,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "outgoing_channel_id": [
                    "str"
                ],
                "dest": [
                    "bytes"
                ],
                "fee_limit": [
                    "dict"
                ],
                "payment_hash_string": [
                    "str"
                ],
                "dest_string": [
                    "str"
                ],
                "final_cltv_delta": [
                    "int"
                ],
                "payment_hash": [
                    "bytes"
                ],
                "payment_request": [
                    "str"
                ],
                "cltv_limit": [
                    "int"
                ],
                "amount": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.payment_route": {
            "name": "payment_route",
            "location": 183,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "route": [
                    "dict"
                ],
                "payment_hash": [
                    "bytes"
                ],
                "payment_hash_string": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.payments_list": {
            "name": "payments_list",
            "location": 190,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "include_incomplete": [
                    "bool"
                ]
            }
        },
        "LNDClientAbstraction.payments_delete_all": {
            "name": "payments_delete_all",
            "location": 194,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.peers_list": {
            "name": "peers_list",
            "location": 198,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.peer_disconnect": {
            "name": "peer_disconnect",
            "location": 202,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.peer_connect": {
            "name": "peer_connect",
            "location": 206,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "perm": [
                    "bool"
                ],
                "address": [
                    "Tuple[(str, str)]"
                ]
            }
        },
        "LNDClientAbstraction.transaction_send": {
            "name": "transaction_send",
            "location": 210,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "send_all": [
                    "bool"
                ],
                "target_confirmations": [
                    "int"
                ],
                "amount": [
                    "str"
                ],
                "sat_per_byte": [
                    "str"
                ],
                "address": [
                    "str"
                ]
            }
        },
        "LNDClientAbstraction.transactions_list": {
            "name": "transactions_list",
            "location": 219,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.unspent_list": {
            "name": "unspent_list",
            "location": 223,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "minimum_confirmations": [
                    "int"
                ],
                "maximum_confirmations": [
                    "int"
                ]
            }
        },
        "LNDClientAbstraction.wallet_balance": {
            "name": "wallet_balance",
            "location": 229,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientAbstraction.wallet_init": {
            "name": "wallet_init",
            "location": 233,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "wallet_password": [
                    "bytes"
                ],
                "cipher_seed_mnemonic": [
                    "List[str]"
                ],
                "aezeed_passphrase": [
                    "bytes"
                ],
                "recovery_window": [
                    "int"
                ],
                "channel_backups": [
                    "object"
                ]
            }
        },
        "LNDClientAbstraction.wallet_unlock": {
            "name": "wallet_unlock",
            "location": 242,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "wallet_password": [
                    "bytes"
                ],
                "recovery_window": [
                    "int"
                ],
                "channel_backups": [
                    "object"
                ]
            }
        }
    },
    "pylnd-master/lnd/client/__init__.py": {
        "LNDClientBase.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "implementor": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "LNDClientBase.address_new": {
            "name": "address_new",
            "location": 16,
            "return": [
                "str",
                "dict[str, str]",
                "bytes",
                "Dict[str, Any]",
                "dict",
                "Sequence"
            ],
            "arguments": {
                "self": [],
                "address_type": [
                    "str"
                ]
            }
        },
        "LNDClientBase.channel_close": {
            "name": "channel_close",
            "location": 21,
            "return": [
                "int",
                "bytes",
                "dict",
                "Optional[Dict[str, Any]]",
                "str"
            ],
            "arguments": {
                "self": [],
                "funding_txid": [
                    "str"
                ],
                "output_index": [
                    "int"
                ]
            }
        },
        "LNDClientBase.channel_open": {
            "name": "channel_open",
            "location": 26,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "spend_unconfirmed": [
                    "bool"
                ],
                "push_sat": [
                    "str"
                ],
                "remote_csv_delay": [
                    "int"
                ],
                "private": [
                    "bool"
                ],
                "node_pubkey": [
                    "bytes"
                ],
                "minimum_confirmations": [
                    "int"
                ],
                "node_pubkey_string": [
                    "str"
                ],
                "local_funding_amount": [
                    "str"
                ],
                "sat_per_byte": [
                    "str"
                ],
                "min_htlc_msat": [
                    "str"
                ],
                "target_confirmations": [
                    "int"
                ]
            }
        },
        "LNDClientBase.channel_policy_update": {
            "name": "channel_policy_update",
            "location": 40,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "chan_point": [
                    "dict"
                ],
                "time_lock_delta": [
                    "int"
                ],
                "base_fee_msat": [
                    "str"
                ],
                "fee_rate": [
                    "float"
                ],
                "is_global": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.channels_balance": {
            "name": "channels_balance",
            "location": 48,
            "return": [
                "bytes",
                "int",
                "dict[str, str]",
                "Optional[Dict[str, Any]]",
                "str",
                "dict",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.channels_closed": {
            "name": "channels_closed",
            "location": 53,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "cooperative": [
                    "bool"
                ],
                "local_force": [
                    "bool"
                ],
                "remote_force": [
                    "bool"
                ],
                "breach": [
                    "bool"
                ],
                "funding_canceled": [
                    "bool"
                ],
                "abandoned": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.channels_list": {
            "name": "channels_list",
            "location": 62,
            "return": [
                "int",
                "bytes",
                "dict[str, int]",
                "dict",
                "typing.Mapping",
                "str",
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "active_only": [
                    "bool"
                ],
                "inactive_only": [
                    "bool"
                ],
                "public_only": [
                    "bool"
                ],
                "private_only": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.channels_open": {
            "name": "channels_open",
            "location": 72,
            "return": [
                "bytes",
                "int",
                "dict",
                "dict[str, str]",
                "Optional[Dict[str, Any]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.channels_pending": {
            "name": "channels_pending",
            "location": 77,
            "return": [
                "bytes",
                "int",
                "dict",
                "dict[str, str]",
                "Optional[Dict[str, Any]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.fee_estimate": {
            "name": "fee_estimate",
            "location": 82,
            "return": [
                "int",
                "bytes",
                "dict"
            ],
            "arguments": {
                "self": [],
                "target_confirmations": [
                    "int"
                ]
            }
        },
        "LNDClientBase.fee_report": {
            "name": "fee_report",
            "location": 87,
            "return": [
                "bytes",
                "dict",
                "int",
                "list[int]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.generate_seed": {
            "name": "generate_seed",
            "location": 92,
            "return": [
                "bytes",
                "dict",
                "int",
                "dict[int, str]",
                "dict[, ]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "aezeed_passphrase": [
                    "str"
                ],
                "seed_entropy": [
                    "str"
                ]
            }
        },
        "LNDClientBase.graph_describe": {
            "name": "graph_describe",
            "location": 100,
            "return": [
                "bytes",
                "dict",
                "int",
                "list[int]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "include_unannounced": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.graph_info": {
            "name": "graph_info",
            "location": 105,
            "return": [
                "int",
                "List[str]",
                "list[int]",
                "bytes",
                "dict",
                "dict[str, str]",
                "Optional[Dict[str, Any]]",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.graph_channel_info": {
            "name": "graph_channel_info",
            "location": 110,
            "return": [
                "bytes",
                "dict[str, typing.Union[typing.Any,typing.Any,str]]",
                "Optional[Dict[str, Any]]",
                "dict[str, int]",
                "str",
                "dict[, ]",
                "dict",
                "dict[int, typing.Union[typing.Any,typing.Any]]",
                "dict[str, typing.Union[str,None]]"
            ],
            "arguments": {
                "self": [],
                "channel_id": [
                    "str"
                ]
            }
        },
        "LNDClientBase.graph_node_info": {
            "name": "graph_node_info",
            "location": 115,
            "return": [
                "bytes",
                "dict[int, bytes]",
                "List[str]",
                "dict[int, str]",
                "int",
                "dict[, ]",
                "str",
                "list[list[str]]",
                "Optional[Dict[str, Any]]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ],
                "include_channels": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.graph_query_routes": {
            "name": "graph_query_routes",
            "location": 122,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ],
                "amount": [
                    "str"
                ],
                "final_cltv_delta": [
                    "int"
                ],
                "fee_fixed_limit": [
                    "str"
                ],
                "fee_percent_limit": [
                    "str"
                ],
                "ignored_nodes": [
                    "list"
                ],
                "source_pub_key": [
                    "str"
                ],
                "use_mission_control": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.info": {
            "name": "info",
            "location": 133,
            "return": [
                "int",
                "list[int]",
                "List[str]",
                "bytes",
                "dict[str, str]",
                "Optional[str]",
                "dict",
                "Dict[str, str]",
                "Dict[str, float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.invoice_add": {
            "name": "invoice_add",
            "location": 138,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "amount_paid_must": [
                    "str"
                ],
                "settle_date": [
                    "str"
                ],
                "add_index": [
                    "str"
                ],
                "description_hash": [
                    "bytes"
                ],
                "r_preimage": [
                    "bytes"
                ],
                "state": [
                    "int"
                ],
                "cltv_expiry": [
                    "str"
                ],
                "route_hints": [
                    "list"
                ],
                "r_hash": [
                    "bytes"
                ],
                "creation_date": [
                    "str"
                ],
                "settle_index": [
                    "str"
                ],
                "memo": [
                    "str"
                ],
                "private": [
                    "bool"
                ],
                "expiry": [
                    "str"
                ],
                "fallback_address": [
                    "str"
                ],
                "settled": [
                    "bool"
                ],
                "amount_paid": [
                    "str"
                ],
                "payment_request": [
                    "str"
                ],
                "amount_paid_sat": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "LNDClientBase.invoice_lookup": {
            "name": "invoice_lookup",
            "location": 161,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "r_hash_string": [
                    "str"
                ],
                "r_hash": [
                    "str"
                ]
            }
        },
        "LNDClientBase.invoices_list": {
            "name": "invoices_list",
            "location": 164,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "pending_only": [
                    "bool"
                ],
                "index_offset": [
                    "str"
                ],
                "reverse": [
                    "bool"
                ],
                "num_max_invoices": [
                    "str"
                ]
            }
        },
        "LNDClientBase.invoices_subscribe": {
            "name": "invoices_subscribe",
            "location": 171,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "add_index": [
                    "str"
                ],
                "settle_index": [
                    "str"
                ]
            }
        },
        "LNDClientBase.message_sign": {
            "name": "message_sign",
            "location": 174,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes"
                ]
            }
        },
        "LNDClientBase.message_verify": {
            "name": "message_verify",
            "location": 177,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes"
                ],
                "signiture": [
                    "str"
                ]
            }
        },
        "LNDClientBase.payment_send": {
            "name": "payment_send",
            "location": 180,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "outgoing_channel_id": [
                    "str"
                ],
                "dest": [
                    "bytes"
                ],
                "fee_limit": [
                    "dict"
                ],
                "payment_hash_string": [
                    "str"
                ],
                "dest_string": [
                    "str"
                ],
                "final_cltv_delta": [
                    "int"
                ],
                "payment_hash": [
                    "bytes"
                ],
                "payment_request": [
                    "str"
                ],
                "cltv_limit": [
                    "int"
                ],
                "amount": [
                    "str"
                ]
            }
        },
        "LNDClientBase.payment_route": {
            "name": "payment_route",
            "location": 193,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "route": [
                    "dict"
                ],
                "payment_hash": [
                    "bytes"
                ],
                "payment_hash_string": [
                    "str"
                ]
            }
        },
        "LNDClientBase.payments_list": {
            "name": "payments_list",
            "location": 199,
            "return": [
                "bytes",
                "set[str]",
                "Dict[str, Any]",
                "int",
                "dict",
                "list[dict[str, str]]",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "include_incomplete": [
                    "bool"
                ]
            }
        },
        "LNDClientBase.payments_delete_all": {
            "name": "payments_delete_all",
            "location": 204,
            "return": [
                "int",
                "Dict[str, Any]",
                "list[int]",
                "Optional[Dict[str, Any]]",
                "bytes",
                "dict[str, str]",
                "bool",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.peers_list": {
            "name": "peers_list",
            "location": 209,
            "return": [
                "bytes",
                "int",
                "Dict[str, Any]",
                "list[int]",
                "dict",
                "bool",
                "dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.peer_disconnect": {
            "name": "peer_disconnect",
            "location": 214,
            "return": [
                "int",
                "bytes",
                "dict"
            ],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ]
            }
        },
        "LNDClientBase.peer_connect": {
            "name": "peer_connect",
            "location": 219,
            "return": [
                "bytes",
                "dict",
                "int",
                "list[int]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "perm": [
                    "bool"
                ],
                "address": [
                    "Tuple[(str, str)]"
                ]
            }
        },
        "LNDClientBase.transaction_send": {
            "name": "transaction_send",
            "location": 224,
            "return": [
                "builtins.object",
                "None"
            ],
            "arguments": {
                "self": [],
                "send_all": [
                    "bool"
                ],
                "target_confirmations": [
                    "int"
                ],
                "amount": [
                    "str"
                ],
                "sat_per_byte": [
                    "str"
                ],
                "address": [
                    "str"
                ]
            }
        },
        "LNDClientBase.transactions_list": {
            "name": "transactions_list",
            "location": 232,
            "return": [
                "int",
                "dict",
                "list[int]",
                "Dict[str, Any]",
                "bytes",
                "dict[str, str]",
                "Optional[str]",
                "bool",
                "object"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.unspent_list": {
            "name": "unspent_list",
            "location": 237,
            "return": [
                "bytes",
                "set[str]",
                "Dict[str, Any]",
                "int",
                "dict",
                "list[dict[str, str]]",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "minimum_confirmations": [
                    "int"
                ],
                "maximum_confirmations": [
                    "int"
                ]
            }
        },
        "LNDClientBase.wallet_balance": {
            "name": "wallet_balance",
            "location": 245,
            "return": [
                "int",
                "List[str]",
                "list[int]",
                "bytes",
                "dict[str, str]",
                "Optional[Dict[str, Any]]",
                "Dict[str, str]",
                "dict",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LNDClientBase.wallet_init": {
            "name": "wallet_init",
            "location": 250,
            "return": [
                "int",
                "str",
                "float",
                "dict",
                "List[str]",
                "bytes",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "wallet_password": [
                    "bytes"
                ],
                "cipher_seed_mnemonic": [
                    "List[str]"
                ],
                "aezeed_passphrase": [
                    "bytes"
                ],
                "recovery_window": [
                    "int"
                ],
                "channel_backups": [
                    "object"
                ]
            }
        },
        "LNDClientBase.wallet_unlock": {
            "name": "wallet_unlock",
            "location": 264,
            "return": [
                "int",
                "bytes",
                "dict"
            ],
            "arguments": {
                "self": [],
                "wallet_password": [
                    "bytes"
                ],
                "recovery_window": [
                    "int"
                ],
                "channel_backups": [
                    "object"
                ]
            }
        }
    },
    "pylnd-master/lnd/client/rest/__init__.py": {
        "requires_macaroon_authentication": {
            "name": "requires_macaroon_authentication",
            "location": 13,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "requires_macaroon_authentication.wrapper": {
            "name": "wrapper",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "certificate_path": [],
                "macaroon_path": [],
                "ssl_verify": []
            }
        },
        "LNDRESTClient.address_new": {
            "name": "address_new",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "address_type": []
            }
        },
        "LNDRESTClient.channel_close": {
            "name": "channel_close",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "funding_txid": [
                    "str"
                ],
                "output_index": [
                    "int"
                ]
            }
        },
        "LNDRESTClient.channel_open": {
            "name": "channel_open",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "spend_unconfirmed": [
                    "bool"
                ],
                "push_sat": [
                    "str"
                ],
                "remote_csv_delay": [
                    "int"
                ],
                "private": [
                    "bool"
                ],
                "node_pubkey": [
                    "bytes"
                ],
                "minimum_confirmations": [
                    "int"
                ],
                "node_pubkey_string": [
                    "str"
                ],
                "local_funding_amount": [
                    "str"
                ],
                "sat_per_byte": [
                    "str"
                ],
                "min_htlc_msat": [
                    "str"
                ],
                "target_confirmations": [
                    "int"
                ]
            }
        },
        "LNDRESTClient.channel_policy_update": {
            "name": "channel_policy_update",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "chan_point": [
                    "dict"
                ],
                "time_lock_delta": [
                    "int"
                ],
                "base_fee_msat": [
                    "str"
                ],
                "fee_rate": [
                    "float"
                ],
                "is_global": [
                    "bool"
                ]
            }
        },
        "LNDRESTClient.channels_balance": {
            "name": "channels_balance",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.channels_closed": {
            "name": "channels_closed",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "cooperative": [
                    "bool"
                ],
                "local_force": [
                    "bool"
                ],
                "remote_force": [
                    "bool"
                ],
                "breach": [
                    "bool"
                ],
                "funding_canceled": [
                    "bool"
                ],
                "abandoned": [
                    "bool"
                ]
            }
        },
        "LNDRESTClient.channels_list": {
            "name": "channels_list",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "active_only": [],
                "inactive_only": [],
                "public_only": [],
                "private_only": []
            }
        },
        "LNDRESTClient.channels_open": {
            "name": "channels_open",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.channels_pending": {
            "name": "channels_pending",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.fee_estimate": {
            "name": "fee_estimate",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "target_confirmations": []
            }
        },
        "LNDRESTClient.fee_report": {
            "name": "fee_report",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.graph_describe": {
            "name": "graph_describe",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "include_unannounced": []
            }
        },
        "LNDRESTClient.graph_info": {
            "name": "graph_info",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.graph_channel_info": {
            "name": "graph_channel_info",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "channel_id": []
            }
        },
        "LNDRESTClient.graph_node_info": {
            "name": "graph_node_info",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "pub_key": [],
                "include_channels": []
            }
        },
        "LNDRESTClient.graph_query_routes": {
            "name": "graph_query_routes",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ],
                "amount": [
                    "str"
                ],
                "final_cltv_delta": [
                    "int"
                ],
                "fee_fixed_limit": [
                    "str"
                ],
                "fee_percent_limit": [
                    "str"
                ],
                "ignored_nodes": [
                    "list"
                ],
                "source_pub_key": [
                    "str"
                ],
                "use_mission_control": [
                    "bool"
                ]
            }
        },
        "LNDRESTClient.generate_seed": {
            "name": "generate_seed",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "aezeed_passphrase": [
                    "str"
                ],
                "seed_entropy": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.info": {
            "name": "info",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.invoice_add": {
            "name": "invoice_add",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "amount_paid_must": [
                    "str"
                ],
                "settle_date": [
                    "str"
                ],
                "add_index": [
                    "str"
                ],
                "description_hash": [
                    "bytes"
                ],
                "r_preimage": [
                    "bytes"
                ],
                "state": [
                    "int"
                ],
                "cltv_expiry": [
                    "str"
                ],
                "route_hints": [
                    "list"
                ],
                "r_hash": [
                    "bytes"
                ],
                "creation_date": [
                    "str"
                ],
                "settle_index": [
                    "str"
                ],
                "memo": [
                    "str"
                ],
                "private": [
                    "bool"
                ],
                "expiry": [
                    "str"
                ],
                "fallback_address": [
                    "str"
                ],
                "settled": [
                    "bool"
                ],
                "amount_paid": [
                    "str"
                ],
                "payment_request": [
                    "str"
                ],
                "amount_paid_sat": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.invoice_lookup": {
            "name": "invoice_lookup",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "r_hash_string": [
                    "str"
                ],
                "r_hash": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.invoices_list": {
            "name": "invoices_list",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "pending_only": [],
                "index_offset": [],
                "reverse": [],
                "num_max_invoices": []
            }
        },
        "LNDRESTClient.invoices_subscribe": {
            "name": "invoices_subscribe",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "add_index": [],
                "settle_index": []
            }
        },
        "LNDRESTClient.message_sign": {
            "name": "message_sign",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes"
                ]
            }
        },
        "LNDRESTClient.message_verify": {
            "name": "message_verify",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [
                    "bytes"
                ],
                "signiture": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.payment_send": {
            "name": "payment_send",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "outgoing_channel_id": [
                    "str"
                ],
                "dest": [
                    "bytes"
                ],
                "fee_limit": [
                    "dict"
                ],
                "payment_hash_string": [
                    "str"
                ],
                "dest_string": [
                    "str"
                ],
                "final_cltv_delta": [
                    "int"
                ],
                "payment_hash": [
                    "bytes"
                ],
                "payment_request": [
                    "str"
                ],
                "cltv_limit": [
                    "int"
                ],
                "amount": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.payment_route": {
            "name": "payment_route",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "route": [
                    "dict"
                ],
                "payment_hash": [
                    "bytes"
                ],
                "payment_hash_string": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.payments_list": {
            "name": "payments_list",
            "location": 294,
            "return": [],
            "arguments": {
                "self": [],
                "include_incomplete": []
            }
        },
        "LNDRESTClient.payments_delete_all": {
            "name": "payments_delete_all",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.peers_list": {
            "name": "peers_list",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.peer_disconnect": {
            "name": "peer_disconnect",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "pub_key": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.peer_connect": {
            "name": "peer_connect",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "perm": [
                    "bool"
                ],
                "address": [
                    "Tuple[(str, str)]"
                ]
            }
        },
        "LNDRESTClient.transaction_send": {
            "name": "transaction_send",
            "location": 317,
            "return": [],
            "arguments": {
                "self": [],
                "send_all": [
                    "bool"
                ],
                "target_confirmations": [
                    "int"
                ],
                "amount": [
                    "str"
                ],
                "sat_per_byte": [
                    "str"
                ],
                "address": [
                    "str"
                ]
            }
        },
        "LNDRESTClient.transactions_list": {
            "name": "transactions_list",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.unspent_list": {
            "name": "unspent_list",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "minimum_confirmations": [],
                "maximum_confirmations": []
            }
        },
        "LNDRESTClient.wallet_balance": {
            "name": "wallet_balance",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LNDRESTClient.wallet_init": {
            "name": "wallet_init",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "wallet_password": [
                    "bytes"
                ],
                "cipher_seed_mnemonic": [
                    "List[str]"
                ],
                "aezeed_passphrase": [
                    "bytes"
                ],
                "recovery_window": [
                    "int"
                ],
                "channel_backups": [
                    "object"
                ]
            }
        },
        "LNDRESTClient.wallet_unlock": {
            "name": "wallet_unlock",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "wallet_password": [
                    "bytes"
                ],
                "recovery_window": [
                    "int"
                ],
                "channel_backups": [
                    "object"
                ]
            }
        },
        "LNDRESTClient._endpoint": {
            "name": "_endpoint",
            "location": 388,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "route": []
            }
        },
        "LNDRESTClient._get_request": {
            "name": "_get_request",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "route": [
                    "str"
                ],
                "params": [
                    "Dict[(str, Any)]"
                ],
                "stream": [
                    "bool"
                ]
            }
        },
        "LNDRESTClient._post_request": {
            "name": "_post_request",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "route": [],
                "data": []
            }
        },
        "LNDRESTClient._handle_error": {
            "name": "_handle_error",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "response": []
            }
        },
        "LNDRESTClient._init_macaroon": {
            "name": "_init_macaroon",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LND.__init__": {
            "name": "__init__",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "certificate_path": [],
                "macaroon_path": [],
                "ssl_verify": []
            }
        }
    },
    "pylnd-master/tests/test_lnd_client_base.py": {
        "dummy_implementor": {
            "name": "dummy_implementor",
            "location": 7,
            "return": [
                "type"
            ],
            "arguments": {
                "Cls": [
                    "memoryview",
                    "bool",
                    "str"
                ]
            }
        },
        "client": {
            "name": "client",
            "location": 26,
            "return": [
                "DummyClient"
            ],
            "arguments": {}
        },
        "test_implements_address_new": {
            "name": "test_implements_address_new",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_implements_channel_close": {
            "name": "test_implements_channel_close",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_channels_balance": {
            "name": "test_channels_balance",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_channels_list": {
            "name": "test_channels_list",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_channels_open": {
            "name": "test_channels_open",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_channels_pending": {
            "name": "test_channels_pending",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_fee_estimate": {
            "name": "test_fee_estimate",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_fee_report": {
            "name": "test_fee_report",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_generate_seed": {
            "name": "test_generate_seed",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_graph_describe": {
            "name": "test_graph_describe",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_graph_info": {
            "name": "test_graph_info",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_graph_channel_info": {
            "name": "test_graph_channel_info",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_graph_node_info": {
            "name": "test_graph_node_info",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_info": {
            "name": "test_info",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_payments_list": {
            "name": "test_payments_list",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_payments_delete_all": {
            "name": "test_payments_delete_all",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_peers_list": {
            "name": "test_peers_list",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_peer_disconnect": {
            "name": "test_peer_disconnect",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_peer_connect": {
            "name": "test_peer_connect",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_transactions_list": {
            "name": "test_transactions_list",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_unspent_list": {
            "name": "test_unspent_list",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_wallet_balance": {
            "name": "test_wallet_balance",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_wallet_init": {
            "name": "test_wallet_init",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_wallet_unlock": {
            "name": "test_wallet_unlock",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "dummy_implementor.NewCls.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dummy_implementor.NewCls.__init__.fake_method": {
            "name": "fake_method",
            "location": 10,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        }
    },
    "pylnd-master/tests/test_rest_client.py": {
        "lnd_rest_client": {
            "name": "lnd_rest_client",
            "location": 17,
            "return": [
                "LNDRESTClient",
                "str",
                "bool",
                "dict"
            ],
            "arguments": {
                "monkeypatch": [
                    "List[str]",
                    "int",
                    "list[str]"
                ]
            }
        },
        "test_rest_client_initialize": {
            "name": "test_rest_client_initialize",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": [
                    "str"
                ]
            }
        },
        "test_client_implements_rest": {
            "name": "test_client_implements_rest",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_client_endpoint_method": {
            "name": "test_client_endpoint_method",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_client_get_request": {
            "name": "test_client_get_request",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_client_handle_error": {
            "name": "test_client_handle_error",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": [
                    "str"
                ]
            }
        },
        "test_client_post_request": {
            "name": "test_client_post_request",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_info": {
            "name": "test_info",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_generate_seed": {
            "name": "test_generate_seed",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_address_new": {
            "name": "test_address_new",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": [
                    "dict"
                ]
            }
        },
        "test_channels_balance": {
            "name": "test_channels_balance",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_channels_list": {
            "name": "test_channels_list",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_fee_estimate": {
            "name": "test_fee_estimate",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_fee_report": {
            "name": "test_fee_report",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_graph_describe": {
            "name": "test_graph_describe",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_graph_info": {
            "name": "test_graph_info",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_graph_channel_info": {
            "name": "test_graph_channel_info",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_graph_node_info": {
            "name": "test_graph_node_info",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_invoices_list": {
            "name": "test_invoices_list",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_invoices_subsribe": {
            "name": "test_invoices_subsribe",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_payments_list": {
            "name": "test_payments_list",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_peers_list": {
            "name": "test_peers_list",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_transactions_list": {
            "name": "test_transactions_list",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_unspent_list": {
            "name": "test_unspent_list",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_wallet_balance": {
            "name": "test_wallet_balance",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_lnd_wallet_init": {
            "name": "test_lnd_wallet_init",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_lnd_wallet_unlock": {
            "name": "test_lnd_wallet_unlock",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "lnd_rest_client": []
            }
        },
        "test_lnd_client_initialize": {
            "name": "test_lnd_client_initialize",
            "location": 178,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "MockResponse.json": {
            "name": "json",
            "location": 12,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {}
        },
        "lnd_rest_client.mock_get": {
            "name": "mock_get",
            "location": 20,
            "return": [
                "MockResponse",
                "str",
                "Optional[Dict[str, Any]]",
                "bool"
            ],
            "arguments": {}
        },
        "lnd_rest_client.mock_post": {
            "name": "mock_post",
            "location": 23,
            "return": [
                "MockResponse",
                "Optional[Dict[str, Any]]",
                "int",
                "Optional[List[Type]]"
            ],
            "arguments": {}
        },
        "test_client_handle_error.json_error": {
            "name": "json_error",
            "location": 53,
            "return": [
                "dict[typing.Text, typing.Text]",
                "str",
                "Exception",
                "List[str]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        }
    },
    "pylnd-master/tests/test_rest_client_int.py": {
        "state": {
            "name": "state",
            "location": 20,
            "return": [
                "dict[, ]",
                "int",
                "Sequence[Tuple[float, float]]",
                "Dict[str, str]",
                "bytes",
                "str"
            ],
            "arguments": {}
        },
        "lnd": {
            "name": "lnd",
            "location": 24,
            "return": [
                "LND",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "test_generate_seed": {
            "name": "test_generate_seed",
            "location": 30,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "str"
                ],
                "lnd": [
                    "int",
                    "str",
                    "Sequence[str]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "test_wallet_init": {
            "name": "test_wallet_init",
            "location": 42,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "str"
                ],
                "lnd": [
                    "dict",
                    "str"
                ]
            }
        },
        "test_info": {
            "name": "test_info",
            "location": 57,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]",
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "str"
                ]
            }
        },
        "test_address_new": {
            "name": "test_address_new",
            "location": 63,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "test_channels_balance": {
            "name": "test_channels_balance",
            "location": 69,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "list",
                    "list[]",
                    "str",
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]"
                ],
                "lnd": [
                    "str"
                ]
            }
        },
        "test_channels_list": {
            "name": "test_channels_list",
            "location": 75,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "int"
                ]
            }
        },
        "test_fee_report": {
            "name": "test_fee_report",
            "location": 87,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "bool",
                    "list[dict[str, typing.Any]]",
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "dict",
                    "str"
                ]
            }
        },
        "test_graph_describe": {
            "name": "test_graph_describe",
            "location": 93,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "bool",
                    "list[dict[str, typing.Any]]",
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "dict",
                    "str"
                ]
            }
        },
        "test_graph_info": {
            "name": "test_graph_info",
            "location": 99,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "str"
                ]
            }
        },
        "test_payments_list": {
            "name": "test_payments_list",
            "location": 105,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "str",
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]",
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "lnd": [
                    "str"
                ]
            }
        },
        "test_peers_list": {
            "name": "test_peers_list",
            "location": 111,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "str",
                    "List[Dict[str, Any]]",
                    "list[dict[str, typing.Any]]",
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "lnd": [
                    "str"
                ]
            }
        },
        "test_wallet_balance": {
            "name": "test_wallet_balance",
            "location": 117,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "state": [
                    "List[Dict[str, Any]]",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "dict",
                    "dict[, ]"
                ],
                "lnd": [
                    "Sequence[str]",
                    "str"
                ]
            }
        }
    },
    "pylnd-master/tests/test_utils.py": {
        "test_macaroon_encoding": {
            "name": "test_macaroon_encoding",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
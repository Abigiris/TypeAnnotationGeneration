{
    "pytest-jobserver-master/conftest.py": {},
    "pytest-jobserver-master/setup.py": {
        "read": {
            "name": "read",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "fname": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pytest-jobserver-master/integrate/test_integrate.py": {
        "jobserver_path": {
            "name": "jobserver_path",
            "location": 12,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "name": [
                    "str",
                    "List[str]",
                    "list[str]"
                ],
                "tokens": [
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "jobserver_path_1": {
            "name": "jobserver_path_1",
            "location": 18,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "jobserver_path_4": {
            "name": "jobserver_path_4",
            "location": 23,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "time_subprocesses": {
            "name": "time_subprocesses",
            "location": 27,
            "return": [
                "float"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "subprocesses_args": [
                    "Iterable[Sequence[str]]"
                ]
            }
        },
        "pytest_xdist_jobserver_args": {
            "name": "pytest_xdist_jobserver_args",
            "location": 51,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "test_xdist_single": {
            "name": "test_xdist_single",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "jobserver_path_1": [],
                "jobserver_path_4": []
            }
        },
        "test_xdist_double": {
            "name": "test_xdist_double",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "jobserver_path_1": [
                    "str",
                    "Optional[List[str]]",
                    "list[str]",
                    "None"
                ],
                "jobserver_path_4": [
                    "str",
                    "Optional[List[str]]",
                    "list[str]",
                    "None"
                ]
            }
        },
        "test_make": {
            "name": "test_make",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pytest-jobserver-master/integrate/test_long.py": {
        "pause": {
            "name": "pause",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_0": {
            "name": "test_0",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "request": []
            }
        },
        "test_1": {
            "name": "test_1",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/configure.py": {
        "path_to_file_descriptors": {
            "name": "path_to_file_descriptors",
            "location": 20,
            "return": [
                "Optional[Tuple[(pytest_jobserver.system.FileDescriptor, pytest_jobserver.system.FileDescriptor)]]"
            ],
            "arguments": {
                "jobserver_path": [
                    "str"
                ]
            }
        },
        "jobserver_from_options": {
            "name": "jobserver_from_options",
            "location": 36,
            "return": [
                "Optional[Tuple[(pytest_jobserver.system.FileDescriptor, pytest_jobserver.system.FileDescriptor)]]"
            ],
            "arguments": {
                "config": [
                    "_pytesconfig.Config",
                    "pyramid.config.Configurator",
                    "bool",
                    "sphinx.config.Config",
                    "opentrons.config.robot_configs.robot_config",
                    "str"
                ]
            }
        },
        "jobserver_from_env_pytest": {
            "name": "jobserver_from_env_pytest",
            "location": 41,
            "return": [
                "Optional[Tuple[(pytest_jobserver.system.FileDescriptor, pytest_jobserver.system.FileDescriptor)]]"
            ],
            "arguments": {}
        },
        "jobserver_from_env_make": {
            "name": "jobserver_from_env_make",
            "location": 46,
            "return": [
                "Optional[Tuple[(pytest_jobserver.system.FileDescriptor, pytest_jobserver.system.FileDescriptor)]]"
            ],
            "arguments": {
                "config": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "_pytesconfig.Config",
                    "sphinx.config.Config",
                    "Callable",
                    "model.Config",
                    "virgene.config.Config",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/metadata.py": {},
    "pytest-jobserver-master/pytest_jobserver/plugin.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "_pytesconfig.argparsing.Parser",
                    "Parser",
                    "parser.Parser"
                ]
            }
        },
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "_pytesconfig.Config",
                    "pyramid.config.Configurator",
                    "config.Config",
                    "sphinx.config.Config"
                ]
            }
        },
        "JobserverPlugin.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fds": [
                    "Tuple[(pytest_jobserver.system.FileDescriptor, pytest_jobserver.system.FileDescriptor)]"
                ]
            }
        },
        "JobserverPlugin.pytest_runtest_protocol": {
            "name": "pytest_runtest_protocol",
            "location": 27,
            "return": [
                "typing.Iterator[typing.Any]",
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "int",
                    "dict[str, typing.Any]",
                    "T",
                    "None",
                    "Item",
                    "list[str]",
                    "Optional[Dict[str, Any]]",
                    "List[str]"
                ]
            }
        },
        "JobserverPlugin.jobserver_token": {
            "name": "jobserver_token",
            "location": 34,
            "return": [
                "str",
                "int",
                "list"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "JobserverPlugin.pytest_report_header": {
            "name": "pytest_report_header",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[, ]",
                    "_pytesconfig.Config",
                    "typing.Mapping",
                    "bool",
                    "dict",
                    "dict[str, typing.Any]",
                    "Mapping[str, Any]",
                    "Dict[str, Any]",
                    "Config"
                ]
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/system.py": {
        "environ_get_first": {
            "name": "environ_get_first",
            "location": 10,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "keys": [
                    "Iterable[str]"
                ]
            }
        },
        "is_fifo": {
            "name": "is_fifo",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "is_rw_ok": {
            "name": "is_rw_ok",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/__init__.py": {},
    "pytest-jobserver-master/pytest_jobserver/test/jobserver.py": {
        "make_jobserver": {
            "name": "make_jobserver",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {
                "dir_": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "size": [
                    "int"
                ]
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/test/test_plugin.py": {
        "test_help_message": {
            "name": "test_help_message",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "Callable"
                ]
            }
        },
        "test_noop": {
            "name": "test_noop",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "test_config_options": {
            "name": "test_config_options",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": []
            }
        },
        "test_config_env_pytest": {
            "name": "test_config_env_pytest",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "float"
                ]
            }
        },
        "test_jobserver_token_fixture": {
            "name": "test_jobserver_token_fixture",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "float",
                    "str",
                    "slice"
                ]
            }
        },
        "test_xdist_makeflags_fails": {
            "name": "test_xdist_makeflags_fails",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": []
            }
        },
        "test_server_xdist": {
            "name": "test_server_xdist",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "float",
                    "str"
                ]
            }
        },
        "test_server_not_found": {
            "name": "test_server_not_found",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "bool",
                    "Dict[str, Any]"
                ]
            }
        },
        "test_server_not_fifo": {
            "name": "test_server_not_fifo",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": []
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/test/test_system.py": {
        "test_environ_get_first": {
            "name": "test_environ_get_first",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "bool",
                    "int",
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "env_a": [
                    "str",
                    "bool",
                    "list[str]",
                    "int",
                    "typing.Callable[, ]",
                    "List[str]",
                    "Callable"
                ],
                "env_b": [
                    "str",
                    "int",
                    "float",
                    "bool"
                ],
                "env_expected": [
                    "str",
                    "Optional[str]",
                    "None",
                    "bool",
                    "set[str]",
                    "Set[str]",
                    "tuple[]",
                    "int",
                    "tuple"
                ]
            }
        },
        "test_is_fifo": {
            "name": "test_is_fifo",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": [
                    "Callable"
                ]
            }
        },
        "test_is_rw_ok": {
            "name": "test_is_rw_ok",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": []
            }
        },
        "test_environ_get_first.setenv_if_not_none": {
            "name": "setenv_if_not_none",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str",
                    "T"
                ],
                "value": [
                    "Optional[str]",
                    "Optional[int]",
                    "str",
                    "Callable",
                    "dict"
                ]
            }
        }
    },
    "pytest-jobserver-master/pytest_jobserver/test/__init__.py": {}
}
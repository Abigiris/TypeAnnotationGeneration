{
    "python-circuit-breaker-master/cb_tests.py": {
        "TestCB.fail_operation": {
            "name": "fail_operation",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCB.success_operation": {
            "name": "success_operation",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCB.test_basic_functionality": {
            "name": "test_basic_functionality",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-circuit-breaker-master/circuitBreaker.py": {
        "CircuitBreaker.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "failure_threshold": [
                    "int",
                    "List[int]"
                ],
                "recovery_time": [
                    "int"
                ],
                "failure_exception_type": [
                    "Exception",
                    "float",
                    "str",
                    "bool",
                    "Callable",
                    "Iterator[str]"
                ]
            }
        },
        "CircuitBreaker.__call__": {
            "name": "__call__",
            "location": 28,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "target_fn": [
                    "int",
                    "Iterable[Any]",
                    "str",
                    "Set"
                ]
            }
        },
        "CircuitBreaker.decorate": {
            "name": "decorate",
            "location": 31,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "target_fn": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "CircuitBreaker.__apply": {
            "name": "__apply",
            "location": 38,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "target_fn": [
                    "str",
                    "int"
                ]
            }
        },
        "CircuitBreaker.__is_open_state_expired": {
            "name": "__is_open_state_expired",
            "location": 53,
            "return": [
                "bool",
                "Optional[str]",
                "datetime.datetime",
                "str",
                "datetime.date"
            ],
            "arguments": {
                "self": []
            }
        },
        "CircuitBreaker.__success_procedure": {
            "name": "__success_procedure",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CircuitBreaker.__failure_procedure": {
            "name": "__failure_procedure",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CircuitBreaker.__change_state": {
            "name": "__change_state",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_state": [
                    "bool"
                ]
            }
        },
        "CircuitBreaker.__increment_failures": {
            "name": "__increment_failures",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CircuitBreaker.__reset_failure_count": {
            "name": "__reset_failure_count",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CircuitBreaker.decorate.wrapper": {
            "name": "wrapper",
            "location": 33,
            "return": [
                "List[str]",
                "int",
                "List[List[str]]",
                "bool"
            ],
            "arguments": {}
        }
    }
}
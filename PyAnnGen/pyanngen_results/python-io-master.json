{
    "python-io-master/src/stdio/helloworld.py": {
        "main": {
            "name": "main",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/src/stdio/helloworld_stdin.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/src/stdio/helloworld_stdout.py": {
        "main": {
            "name": "main",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/canvas.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/checkbutton.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/combobox.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/dialog.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.reg": {
            "name": "reg",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/editer.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.creatMenu": {
            "name": "creatMenu",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.myopen": {
            "name": "myopen",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.new": {
            "name": "new",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.save": {
            "name": "save",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.saveas": {
            "name": "saveas",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.cut": {
            "name": "cut",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.copy": {
            "name": "copy",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.paste": {
            "name": "paste",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.author": {
            "name": "author",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.power": {
            "name": "power",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/entry.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.reg": {
            "name": "reg",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/filedialog.py": {
        "openfile": {
            "name": "openfile",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "savefile": {
            "name": "savefile",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/first.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/firstGUI.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/first_toplevel.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/first_window.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/grid.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/listbox.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/matplotlib_draw.py": {
        "date_to_num": {
            "name": "date_to_num",
            "location": 13,
            "return": [
                "list[]"
            ],
            "arguments": {
                "dates": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 21,
            "return": [],
            "arguments": {
                "mat_wdyx": []
            }
        },
        "main": {
            "name": "main",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.on_key_event": {
            "name": "on_key_event",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        },
        "main._quit": {
            "name": "_quit",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/matplotlib_draw_an.py": {
        "plot": {
            "name": "plot",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "i": []
            }
        },
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.callback": {
            "name": "callback",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.on_key_event": {
            "name": "on_key_event",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        },
        "main._quit": {
            "name": "_quit",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/menu.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.creatMenu": {
            "name": "creatMenu",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/menu_command.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.creatMenu": {
            "name": "creatMenu",
            "location": 17,
            "return": [
                "Menu"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/menu_othercommand.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.creatMenu": {
            "name": "creatMenu",
            "location": 15,
            "return": [
                "Menu"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/message.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/messagebox.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.reg": {
            "name": "reg",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/notebook.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/option_menu.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/pack.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/panewindow.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/progressbar.py": {
        "manu_increment": {
            "name": "manu_increment",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "auto_increment": {
            "name": "auto_increment",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/radiobutton.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application._callback": {
            "name": "_callback",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/scale.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/scrollbar.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/scrolled_text.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/simpledialog.py": {
        "inputStr": {
            "name": "inputStr",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "inputInt": {
            "name": "inputInt",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "inputFloat": {
            "name": "inputFloat",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/spinbox.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/sqlshell.py": {
        "shell": {
            "name": "shell",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": []
            }
        },
        "SqlShell.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "completekey": [
                    "typing.Text"
                ],
                "stdin": [
                    "None"
                ],
                "stdout": [
                    "None"
                ],
                "sql_uri": [
                    "None"
                ]
            }
        },
        "SqlShell._run_sql": {
            "name": "_run_sql",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SqlShell.default": {
            "name": "default",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "SqlShell.do_uri": {
            "name": "do_uri",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_bye": {
            "name": "do_bye",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_exit": {
            "name": "do_exit",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_quit": {
            "name": "do_quit",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_record": {
            "name": "do_record",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_playback": {
            "name": "do_playback",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.precmd": {
            "name": "precmd",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "SqlShell.close": {
            "name": "close",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/table_canvas.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/text.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/tklf.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/toplevel.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "App2.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "App2.createWidgets": {
            "name": "createWidgets",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/treeview.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/ttk.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/ttklf.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/ttk_frame.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "None"
                ]
            }
        },
        "Application.createWidgets": {
            "name": "createWidgets",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/turtleshell.py": {
        "parse": {
            "name": "parse",
            "location": 71,
            "return": [
                "Tuple",
                "Callable",
                "str",
                "Tuple[Any,Any,Any]"
            ],
            "arguments": {
                "arg": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "TurtleShell.do_forward": {
            "name": "do_forward",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_right": {
            "name": "do_right",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_left": {
            "name": "do_left",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_goto": {
            "name": "do_goto",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_home": {
            "name": "do_home",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_circle": {
            "name": "do_circle",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_position": {
            "name": "do_position",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_heading": {
            "name": "do_heading",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_color": {
            "name": "do_color",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "TurtleShell.do_undo": {
            "name": "do_undo",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_reset": {
            "name": "do_reset",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_bye": {
            "name": "do_bye",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_record": {
            "name": "do_record",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "TurtleShell.do_playback": {
            "name": "do_playback",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "int"
                ]
            }
        },
        "TurtleShell.precmd": {
            "name": "precmd",
            "location": 61,
            "return": [
                "str",
                "List",
                "Sequence[str]",
                "List[str]",
                "Set[str]"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "TurtleShell.close": {
            "name": "close",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/python/doc/setup.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/python/doc/sqrt_doc.py": {
        "version": {
            "name": "version",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/python/std/setup.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/python/std/sqrt_std.py": {
        "sqrtarg": {
            "name": "sqrtarg",
            "location": 9,
            "return": [],
            "arguments": {
                "number": []
            }
        },
        "version": {
            "name": "version",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/GUI/src/python/std/sqrt_std_gui.py": {
        "sqrtarg": {
            "name": "sqrtarg",
            "location": 9,
            "return": [],
            "arguments": {
                "number": []
            }
        },
        "version": {
            "name": "version",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/sqlshell.py": {
        "shell": {
            "name": "shell",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": []
            }
        },
        "SqlShell.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "completekey": [
                    "typing.Text"
                ],
                "stdin": [
                    "None"
                ],
                "stdout": [
                    "None"
                ],
                "sql_uri": [
                    "None"
                ]
            }
        },
        "SqlShell._run_sql": {
            "name": "_run_sql",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SqlShell.default": {
            "name": "default",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "SqlShell.do_uri": {
            "name": "do_uri",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_bye": {
            "name": "do_bye",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_exit": {
            "name": "do_exit",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_quit": {
            "name": "do_quit",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_record": {
            "name": "do_record",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.do_playback": {
            "name": "do_playback",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SqlShell.precmd": {
            "name": "precmd",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "SqlShell.close": {
            "name": "close",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/turtleshell.py": {
        "parse": {
            "name": "parse",
            "location": 71,
            "return": [
                "Tuple",
                "Callable",
                "str",
                "Tuple[Any,Any,Any]"
            ],
            "arguments": {
                "arg": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "TurtleShell.do_forward": {
            "name": "do_forward",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_right": {
            "name": "do_right",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_left": {
            "name": "do_left",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_goto": {
            "name": "do_goto",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_home": {
            "name": "do_home",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_circle": {
            "name": "do_circle",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "bytes",
                    "List"
                ]
            }
        },
        "TurtleShell.do_position": {
            "name": "do_position",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_heading": {
            "name": "do_heading",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_color": {
            "name": "do_color",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "TurtleShell.do_undo": {
            "name": "do_undo",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_reset": {
            "name": "do_reset",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_bye": {
            "name": "do_bye",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "bool",
                    "Set",
                    "int"
                ]
            }
        },
        "TurtleShell.do_record": {
            "name": "do_record",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "TurtleShell.do_playback": {
            "name": "do_playback",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": [
                    "int"
                ]
            }
        },
        "TurtleShell.precmd": {
            "name": "precmd",
            "location": 61,
            "return": [
                "str",
                "List",
                "Sequence[str]",
                "List[str]",
                "Set[str]"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "List[str]",
                    "Optional[str]"
                ]
            }
        },
        "TurtleShell.close": {
            "name": "close",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/python/doc/setup.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/python/doc/sqrt_doc.py": {
        "version": {
            "name": "version",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/python/std/setup.py": {},
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/python/std/sqrt_std.py": {
        "sqrtarg": {
            "name": "sqrtarg",
            "location": 9,
            "return": [],
            "arguments": {
                "number": []
            }
        },
        "version": {
            "name": "version",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u4eba\u673a\u4ea4\u4e92/src/python/std/sqrt_std_gui.py": {
        "sqrtarg": {
            "name": "sqrtarg",
            "location": 9,
            "return": [],
            "arguments": {
                "number": []
            }
        },
        "version": {
            "name": "version",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u5f02\u6b65socket\u7f16\u7a0b/broker.py": {
        "Exchange.error_hander": {
            "name": "error_hander",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,object]"
                ],
                "msg": [
                    "Dict",
                    "Dict[str,Any]",
                    "Dict[str,object]"
                ]
            }
        },
        "Exchange.run": {
            "name": "run",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "Text",
                    "str",
                    "int",
                    "float"
                ],
                "port": [
                    "int",
                    "str",
                    "float"
                ],
                "loop": [
                    "int",
                    "str",
                    "float"
                ]
            }
        }
    },
    "python-io-master/\u5f02\u6b65socket\u7f16\u7a0b/long_server.py": {
        "LongServer._calcul": {
            "name": "_calcul",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "str",
                    "Dict",
                    "Dict[str,Any]"
                ],
                "remote": [
                    "bytes",
                    "str",
                    "Dict",
                    "Dict[str,Any]"
                ]
            }
        },
        "LongServer.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream_reader": [
                    "List[Tuple[str,Any]]",
                    "bool",
                    "List[tuple[Union[str,Any]]]",
                    "str"
                ],
                "client_connected_cb": [
                    "List[Tuple[str,Any]]",
                    "bool",
                    "None",
                    "str",
                    "List[tuple[Union[str,Any]]]"
                ],
                "loop": [
                    "List[Tuple[str,Any]]",
                    "bool",
                    "None",
                    "str",
                    "List[tuple[Union[str,Any]]]"
                ]
            }
        },
        "LongServer.connection_made": {
            "name": "connection_made",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "List[dict[str,Any]]",
                    "List[Dict[str,Any]]",
                    "Dict",
                    "int",
                    "str",
                    "asyncio.StreamWriter"
                ]
            }
        },
        "LongServer.connection_lost": {
            "name": "connection_lost",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str",
                    "bool",
                    "asyncio.Transport"
                ]
            }
        }
    },
    "python-io-master/\u5f02\u6b65socket\u7f16\u7a0b/short_server.py": {
        "MyServerProtocol.connection_made": {
            "name": "connection_made",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "int"
                ]
            }
        },
        "MyServerProtocol._decoder": {
            "name": "_decoder",
            "location": 16,
            "return": [
                "bool",
                "Optional[Union[str,Any]]",
                "Dict",
                "Dict[str,str]",
                "Dict[int,str]",
                "List",
                "Dict[Any,dict[str,float]]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "int"
                ]
            }
        },
        "MyServerProtocol._encoder": {
            "name": "_encoder",
            "location": 21,
            "return": [
                "bytes",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "asyncio.AbstractEventLoop",
                    "int"
                ],
                "num": [
                    "str",
                    "int",
                    "asyncio.AbstractEventLoop"
                ]
            }
        },
        "MyServerProtocol.data_received": {
            "name": "data_received",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict",
                    "str",
                    "Dict[str,Any]",
                    "Optional[Dict]",
                    "None"
                ]
            }
        },
        "MyServerProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C0/app.py": {
        "UserIndexAPI.get": {
            "name": "get",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 62,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 82,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 102,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 126,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C1/app.py": {
        "UserIndexAPI.get": {
            "name": "get",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 62,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 82,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 102,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 126,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C1/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C2/app.py": {
        "UserIndexAPI.get": {
            "name": "get",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 64,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 84,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 104,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 128,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C2/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C3/app.py": {
        "print_time": {
            "name": "print_time",
            "location": 7,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_before_first_request": {
            "name": "_before_first_request",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_before_request": {
            "name": "_before_request",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_after_request": {
            "name": "_after_request",
            "location": 180,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "_teardown_request": {
            "name": "_teardown_request",
            "location": 186,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "_bp_before_request": {
            "name": "_bp_before_request",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_bp_teardown_request": {
            "name": "_bp_teardown_request",
            "location": 197,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "_bp_after_request": {
            "name": "_bp_after_request",
            "location": 203,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "print_time.decorated_function": {
            "name": "decorated_function",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "UserIndexAPI.get": {
            "name": "get",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 81,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 101,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 121,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 145,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserIndexAPI.get._after_this_request": {
            "name": "_after_this_request",
            "location": 48,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C3/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C4/app.py": {
        "_before_request": {
            "name": "_before_request",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_after_request": {
            "name": "_after_request",
            "location": 160,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "UserIndexAPI.get": {
            "name": "get",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 66,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 86,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 106,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 130,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C4/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C5/app.py": {
        "_before_request": {
            "name": "_before_request",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_after_request": {
            "name": "_after_request",
            "location": 162,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "UserIndexAPI.get": {
            "name": "get",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 68,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 88,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 108,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 132,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C5/logger.py": {
        "init_app": {
            "name": "init_app",
            "location": 24,
            "return": [],
            "arguments": {
                "app": [],
                "flask_log_level": [],
                "werkzeug_log_level": []
            }
        },
        "RequestFormatter.format": {
            "name": "format",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C5/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C6/app.py": {
        "_before_request": {
            "name": "_before_request",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_after_request": {
            "name": "_after_request",
            "location": 162,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "UserIndexAPI.get": {
            "name": "get",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 68,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 88,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 108,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 132,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C6/flask_jsonifylog.py": {
        "RequestFormatter.format": {
            "name": "format",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "JsonLogger.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "None"
                ]
            }
        },
        "JsonLogger.init_app": {
            "name": "init_app",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C6/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C7/app.py": {
        "handle_bad_request": {
            "name": "handle_bad_request",
            "location": 166,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "e": []
            }
        },
        "UserIndexAPI.get": {
            "name": "get",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 70,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 90,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 110,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 134,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C7/flask_jsonifylog.py": {
        "RequestFormatter.format": {
            "name": "format",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "JsonLogger.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "None"
                ]
            }
        },
        "JsonLogger.init_app": {
            "name": "init_app",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C7/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C8/app.py": {
        "handle_bad_request": {
            "name": "handle_bad_request",
            "location": 166,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "e": []
            }
        },
        "UserIndexAPI.get": {
            "name": "get",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserIndexAPI.post": {
            "name": "post",
            "location": 70,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserAPI.get": {
            "name": "get",
            "location": 90,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.put": {
            "name": "put",
            "location": 110,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "UserAPI.delete": {
            "name": "delete",
            "location": 134,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C8/flask_jsonifylog.py": {
        "RequestFormatter.format": {
            "name": "format",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "JsonLogger.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "None"
                ]
            }
        },
        "JsonLogger.init_app": {
            "name": "init_app",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C8/gevent_server.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/flask-server/C8/test.py": {
        "FlaskrTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskrTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C0/app.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C1/app.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C1/test.py": {
        "SanicTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C2/app.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C2/test.py": {
        "SanicTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C3/app.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C3/test.py": {
        "SanicTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C4/app.py": {
        "print_time": {
            "name": "print_time",
            "location": 10,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C4/test.py": {
        "SanicTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C5/app.py": {
        "print_time": {
            "name": "print_time",
            "location": 12,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C5/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C5/test.py": {
        "SanicTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C6/app.py": {
        "print_time": {
            "name": "print_time",
            "location": 13,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C6/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/Http\u63a5\u53e3\u670d\u52a1/code/sanic-server/C6/test.py": {
        "SanicTestCase.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.tearDown": {
            "name": "tearDown",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SanicTestCase.test_user": {
            "name": "test_user",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/cli_async.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/cli_sync.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/cli_sync_ssl.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/data_pb2.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/data_pb2_grpc.py": {
        "add_SquareServiceServicer_to_server": {
            "name": "add_SquareServiceServicer_to_server",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "servicer": [
                    "Optional[models.LTI1p3Provider]",
                    "Dict",
                    "None"
                ],
                "server": [
                    "str",
                    "int"
                ]
            }
        },
        "SquareServiceStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str"
                ]
            }
        },
        "SquareServiceServicer.square": {
            "name": "square",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool",
                    "grpc.ServicerContext"
                ],
                "context": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/server.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.square": {
            "name": "square",
            "location": 14,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/server_mp.py": {
        "square": {
            "name": "square",
            "location": 14,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "n": [
                    "int",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.square": {
            "name": "square",
            "location": 19,
            "return": [
                "int",
                "str",
                "List[str]",
                "List[dict]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C0/server_ssl.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.square": {
            "name": "square",
            "location": 14,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C1/cli_async.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C1/cli_sync.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C1/data_pb2.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C1/data_pb2_grpc.py": {
        "add_SquareServiceServicer_to_server": {
            "name": "add_SquareServiceServicer_to_server",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "servicer": [
                    "Dict[str,Any]",
                    "Dict",
                    "Optional[models.LTI1p3Provider]",
                    "None"
                ],
                "server": [
                    "str",
                    "int"
                ]
            }
        },
        "SquareServiceStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str"
                ]
            }
        },
        "SquareServiceServicer.rangeSquare": {
            "name": "rangeSquare",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "context": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C1/grpccall_wrapper.py": {
        "FutureWrapper.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ],
                "loop": [
                    "bool",
                    "None",
                    "int"
                ]
            }
        },
        "FutureWrapper._fwrap": {
            "name": "_fwrap",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "str",
                    "bytes",
                    "Type[Any]"
                ],
                "grpc_future": [
                    "Callable[[Any], bool]",
                    "List[Dict[str, Any]]",
                    "str",
                    "float",
                    "Dict[str, List[str]]"
                ]
            }
        },
        "FutureWrapper.__call__": {
            "name": "__call__",
            "location": 31,
            "return": [
                "Future",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool"
                ]
            }
        },
        "AsyncStream.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "float",
                    "bool"
                ],
                "loop": [
                    "Optional[float]",
                    "None",
                    "List[str]",
                    "str",
                    "float",
                    "Optional[int]",
                    "int"
                ]
            }
        },
        "AsyncStream.handle_event": {
            "name": "handle_event",
            "location": 67,
            "return": [
                "None",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict",
                    "Dict[str,Any]"
                ],
                "future": [
                    "float",
                    "bool",
                    "Dict[str,Any]",
                    "Step",
                    "int"
                ]
            }
        },
        "AsyncStream._process_future": {
            "name": "_process_future",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "bool",
                    "str",
                    "Set[int]",
                    "int"
                ]
            }
        },
        "AsyncStream._next": {
            "name": "_next",
            "location": 116,
            "return": [
                "Future",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStream.__aiter__": {
            "name": "__aiter__",
            "location": 145,
            "return": [
                "AsyncStream",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStreamer.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ]
            }
        },
        "AsyncStreamer.__call__": {
            "name": "__call__",
            "location": 157,
            "return": [
                "AsyncStream",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "Callable",
                    "Tuple",
                    "List[str]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C1/server.py": {
        "main": {
            "name": "main",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.rangeSquare": {
            "name": "rangeSquare",
            "location": 14,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "context": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C2/cli_async.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C2/cli_sync.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C2/data_pb2.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C2/data_pb2_grpc.py": {
        "add_SquareServiceServicer_to_server": {
            "name": "add_SquareServiceServicer_to_server",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "servicer": [
                    "Dict",
                    "Union[object,type]",
                    "Type"
                ],
                "server": [
                    "str",
                    "int"
                ]
            }
        },
        "SquareServiceStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "SquareServiceServicer.sumSquare": {
            "name": "sumSquare",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request_iterator": [
                    "bool",
                    "grpc.ServicerContext"
                ],
                "context": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C2/grpccall_wrapper.py": {
        "FutureWrapper.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ],
                "loop": [
                    "bool",
                    "None",
                    "int"
                ]
            }
        },
        "FutureWrapper._fwrap": {
            "name": "_fwrap",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "str",
                    "bytes",
                    "Type[Any]"
                ],
                "grpc_future": [
                    "Callable[[Any], bool]",
                    "List[Dict[str, Any]]",
                    "str",
                    "float",
                    "Dict[str, List[str]]"
                ]
            }
        },
        "FutureWrapper.__call__": {
            "name": "__call__",
            "location": 31,
            "return": [
                "Future",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool"
                ]
            }
        },
        "AsyncStream.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "float",
                    "bool"
                ],
                "loop": [
                    "Optional[float]",
                    "None",
                    "List[str]",
                    "str",
                    "float",
                    "Optional[int]",
                    "int"
                ]
            }
        },
        "AsyncStream.handle_event": {
            "name": "handle_event",
            "location": 67,
            "return": [
                "None",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict",
                    "Dict[str,Any]"
                ],
                "future": [
                    "float",
                    "bool",
                    "Dict[str,Any]",
                    "Step",
                    "int"
                ]
            }
        },
        "AsyncStream._process_future": {
            "name": "_process_future",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "bool",
                    "str",
                    "Set[int]",
                    "int"
                ]
            }
        },
        "AsyncStream._next": {
            "name": "_next",
            "location": 116,
            "return": [
                "Future",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStream.__aiter__": {
            "name": "__aiter__",
            "location": 145,
            "return": [
                "AsyncStream",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStreamer.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ]
            }
        },
        "AsyncStreamer.__call__": {
            "name": "__call__",
            "location": 157,
            "return": [
                "AsyncStream",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "Callable",
                    "Tuple",
                    "List[str]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C2/server.py": {
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.sumSquare": {
            "name": "sumSquare",
            "location": 14,
            "return": [
                "int",
                "str",
                "List[str]",
                "List[dict]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request_iterator": [
                    "grpc.ServicerContext",
                    "bool"
                ],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C3/cli_async.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C3/cli_sync.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C3/data_pb2.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C3/data_pb2_grpc.py": {
        "add_SquareServiceServicer_to_server": {
            "name": "add_SquareServiceServicer_to_server",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "servicer": [
                    "Dict",
                    "Union[object,type]",
                    "Type"
                ],
                "server": [
                    "str",
                    "int"
                ]
            }
        },
        "SquareServiceStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "SquareServiceServicer.streamrangeSquare": {
            "name": "streamrangeSquare",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request_iterator": [
                    "bool",
                    "grpc.ServicerContext"
                ],
                "context": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C3/grpccall_wrapper.py": {
        "FutureWrapper.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ],
                "loop": [
                    "bool",
                    "None",
                    "int"
                ]
            }
        },
        "FutureWrapper._fwrap": {
            "name": "_fwrap",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "str",
                    "bytes",
                    "Type[Any]"
                ],
                "grpc_future": [
                    "Callable[[Any], bool]",
                    "List[Dict[str, Any]]",
                    "str",
                    "float",
                    "Dict[str, List[str]]"
                ]
            }
        },
        "FutureWrapper.__call__": {
            "name": "__call__",
            "location": 31,
            "return": [
                "Future",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool"
                ]
            }
        },
        "AsyncStream.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "float",
                    "bool"
                ],
                "loop": [
                    "Optional[float]",
                    "None",
                    "List[str]",
                    "str",
                    "float",
                    "Optional[int]",
                    "int"
                ]
            }
        },
        "AsyncStream.handle_event": {
            "name": "handle_event",
            "location": 67,
            "return": [
                "None",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict",
                    "Dict[str,Any]"
                ],
                "future": [
                    "float",
                    "bool",
                    "Dict[str,Any]",
                    "Step",
                    "int"
                ]
            }
        },
        "AsyncStream._process_future": {
            "name": "_process_future",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "bool",
                    "str",
                    "Set[int]",
                    "int"
                ]
            }
        },
        "AsyncStream._next": {
            "name": "_next",
            "location": 116,
            "return": [
                "Future",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStream.__aiter__": {
            "name": "__aiter__",
            "location": 145,
            "return": [
                "AsyncStream",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStreamer.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ]
            }
        },
        "AsyncStreamer.__call__": {
            "name": "__call__",
            "location": 157,
            "return": [
                "AsyncStream",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "Callable",
                    "Tuple",
                    "List[str]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C3/server.py": {
        "main": {
            "name": "main",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.streamrangeSquare": {
            "name": "streamrangeSquare",
            "location": 14,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "request_iterator": [
                    "grpc.ServicerContext",
                    "bool"
                ],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C4/cli_async.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C4/cli_sync.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C4/data_pb2.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C4/data_pb2_grpc.py": {
        "add_SquareServiceServicer_to_server": {
            "name": "add_SquareServiceServicer_to_server",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "servicer": [
                    "Dict",
                    "Union[object,type]",
                    "Type"
                ],
                "server": [
                    "str",
                    "int"
                ]
            }
        },
        "SquareServiceStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "SquareServiceServicer.streamrangeSquare": {
            "name": "streamrangeSquare",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request_iterator": [
                    "bool",
                    "grpc.ServicerContext"
                ],
                "context": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C4/grpccall_wrapper.py": {
        "FutureWrapper.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ],
                "loop": [
                    "bool",
                    "None",
                    "int"
                ]
            }
        },
        "FutureWrapper._fwrap": {
            "name": "_fwrap",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "str",
                    "bytes",
                    "Type[Any]"
                ],
                "grpc_future": [
                    "Callable[[Any], bool]",
                    "List[Dict[str, Any]]",
                    "str",
                    "float",
                    "Dict[str, List[str]]"
                ]
            }
        },
        "FutureWrapper.__call__": {
            "name": "__call__",
            "location": 31,
            "return": [
                "Future",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool"
                ]
            }
        },
        "AsyncStream.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "float",
                    "bool"
                ],
                "loop": [
                    "Optional[float]",
                    "None",
                    "List[str]",
                    "str",
                    "float",
                    "Optional[int]",
                    "int"
                ]
            }
        },
        "AsyncStream.handle_event": {
            "name": "handle_event",
            "location": 67,
            "return": [
                "None",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Dict",
                    "Dict[str,Any]"
                ],
                "future": [
                    "float",
                    "bool",
                    "Dict[str,Any]",
                    "Step",
                    "int"
                ]
            }
        },
        "AsyncStream._process_future": {
            "name": "_process_future",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "bool",
                    "str",
                    "Set[int]",
                    "int"
                ]
            }
        },
        "AsyncStream._next": {
            "name": "_next",
            "location": 116,
            "return": [
                "Future",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStream.__aiter__": {
            "name": "__aiter__",
            "location": 145,
            "return": [
                "AsyncStream",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncStreamer.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "List[List[T]]",
                    "List[list[T]]"
                ]
            }
        },
        "AsyncStreamer.__call__": {
            "name": "__call__",
            "location": 157,
            "return": [
                "AsyncStream",
                "Callable",
                "Union[concurrenfutures.Future,asyncio.futures.Future]",
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "bool",
                    "Callable",
                    "Tuple",
                    "List[str]"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/GRpc\u63a5\u53e3\u670d\u52a1/C4/server.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SquareServic.streamrangeSquare": {
            "name": "streamrangeSquare",
            "location": 14,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "request_iterator": [
                    "grpc.ServicerContext",
                    "bool"
                ],
                "context": [
                    "bool",
                    "grpc.ServicerContext"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/JSONRPC\u63a5\u53e3\u670d\u52a1/C0/client.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/JSONRPC\u63a5\u53e3\u670d\u52a1/C0/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/JSONRPC\u63a5\u53e3\u670d\u52a1/C0/server.py": {
        "md5_func": {
            "name": "md5_func",
            "location": 40,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "RequestHandler.log_error": {
            "name": "log_error",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "RequestHandler.log_request": {
            "name": "log_request",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "typing.Text"
                ],
                "size": [
                    "typing.Text"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/JSONRPC\u63a5\u53e3\u670d\u52a1/C1/client.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/JSONRPC\u63a5\u53e3\u670d\u52a1/C1/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/JSONRPC\u63a5\u53e3\u670d\u52a1/C1/server.py": {
        "_md5_func": {
            "name": "_md5_func",
            "location": 41,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "RequestHandler.log_error": {
            "name": "log_error",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "RequestHandler.log_request": {
            "name": "log_request",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "typing.Text"
                ],
                "size": [
                    "typing.Text"
                ]
            }
        },
        "main.md5_func": {
            "name": "md5_func",
            "location": 55,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/XMLRPC\u63a5\u53e3\u670d\u52a1/C0/client.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/XMLRPC\u63a5\u53e3\u670d\u52a1/C0/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/XMLRPC\u63a5\u53e3\u670d\u52a1/C0/server.py": {
        "md5_func": {
            "name": "md5_func",
            "location": 42,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "main": {
            "name": "main",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "RequestHandler.log_error": {
            "name": "log_error",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "RequestHandler.log_request": {
            "name": "log_request",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "typing.Text"
                ],
                "size": [
                    "typing.Text"
                ]
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/XMLRPC\u63a5\u53e3\u670d\u52a1/C1/client.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/XMLRPC\u63a5\u53e3\u670d\u52a1/C1/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/XMLRPC\u63a5\u53e3\u670d\u52a1/C1/server.py": {
        "_md5_func": {
            "name": "_md5_func",
            "location": 46,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "RequestHandler.log_error": {
            "name": "log_error",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "RequestHandler.log_request": {
            "name": "log_request",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "typing.Text"
                ],
                "size": [
                    "typing.Text"
                ]
            }
        },
        "main.md5_func": {
            "name": "md5_func",
            "location": 57,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/ZERORPC\u63a5\u53e3\u670d\u52a1/C0/client.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/ZERORPC\u63a5\u53e3\u670d\u52a1/C0/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/ZERORPC\u63a5\u53e3\u670d\u52a1/C0/server.py": {
        "_md5_func": {
            "name": "_md5_func",
            "location": 11,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.HelloRPC.md5_func": {
            "name": "md5_func",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/ZERORPC\u63a5\u53e3\u670d\u52a1/C1/client.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/ZERORPC\u63a5\u53e3\u670d\u52a1/C1/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/RPC\u670d\u52a1/code/ZERORPC\u63a5\u53e3\u670d\u52a1/C1/server.py": {
        "_md5_func": {
            "name": "_md5_func",
            "location": 12,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "main": {
            "name": "main",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.HelloRPC._stream_md5": {
            "name": "_stream_md5",
            "location": 25,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "texts": []
            }
        },
        "main.HelloRPC.streaming_md5": {
            "name": "streaming_md5",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "texts": []
            }
        }
    },
    "python-io-master/\u63a5\u53e3\u670d\u52a1/WebSocket\u63a5\u53e3\u670d\u52a1/code/client_async.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/WebSocket\u63a5\u53e3\u670d\u52a1/code/client_sync.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/WebSocket\u63a5\u53e3\u670d\u52a1/code/logger.py": {},
    "python-io-master/\u63a5\u53e3\u670d\u52a1/WebSocket\u63a5\u53e3\u670d\u52a1/code/server.py": {}
}
{
    "python-life-master/main.py": {
        "World.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "display": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "World.render_frame": {
            "name": "render_frame",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "World.update_cell": {
            "name": "update_cell",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coords": [
                    "float",
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "World.get_adjacent_coords": {
            "name": "get_adjacent_coords",
            "location": 44,
            "return": [
                "List[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "coords": [
                    "Tuple[int,int]",
                    "List",
                    "Tuple[Union[int,int]]",
                    "List[str]",
                    "List[List[int]]",
                    "List[list[int]]",
                    "List[Tuple[str,int,int]]",
                    "List[tuple[Union[str,int,int]]]"
                ]
            }
        },
        "Colony.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "world": [
                    "int",
                    "float",
                    "bool"
                ],
                "color": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Colony.color": {
            "name": "color",
            "location": 69,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Colony.world": {
            "name": "world",
            "location": 74,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Colony.spawn": {
            "name": "spawn",
            "location": 79,
            "return": [
                "Colony",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "world": [
                    "float",
                    "int"
                ],
                "color": [
                    "int",
                    "Callable",
                    "str"
                ],
                "coords": [
                    "float",
                    "bool",
                    "None"
                ],
                "count": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "Creature.__init__": {
            "name": "__init__",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "colony": [
                    "int",
                    "float",
                    "bool"
                ],
                "coords": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Creature.color": {
            "name": "color",
            "location": 113,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Creature.world": {
            "name": "world",
            "location": 118,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Creature.coords": {
            "name": "coords",
            "location": 123,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Creature.colony": {
            "name": "colony",
            "location": 128,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Creature.spawn": {
            "name": "spawn",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "colony": [
                    "Tuple[int,int]",
                    "str",
                    "Tuple[Union[int,int]]"
                ],
                "coords": [
                    "Tuple[int,int]",
                    "str",
                    "Tuple[Union[int,int]]"
                ]
            }
        },
        "Creature.update_activeness": {
            "name": "update_activeness",
            "location": 141,
            "return": [
                "None",
                "str",
                "Set[str]",
                "DefaultDict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Creature.act": {
            "name": "act",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-life-master/settings.py": {}
}
{
    "python-shields-master/setup.py": {},
    "python-shields-master/scripts/sync-requirements.py": {
        "unwrap_key": {
            "name": "unwrap_key",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Key",
                    "typing.Iterable[typing.Hashable]",
                    "None",
                    "Iterable[Hashable]",
                    "Optional[str]"
                ]
            }
        },
        "reorder_container": {
            "name": "reorder_container",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "container": [
                    "str",
                    "IO[str]",
                    "typing.IO"
                ],
                "sort_key": [
                    "Callable[([Tuple[(Any, Any)]], Hashable)]"
                ],
                "reverse": [
                    "bool"
                ],
                "key_type": [
                    "str",
                    "None",
                    "Optional[object]",
                    "typing.Hashable",
                    "Hashable",
                    "Optional[str]"
                ]
            }
        },
        "pipfile_source_key": {
            "name": "pipfile_source_key",
            "location": 71,
            "return": [
                "Tuple[(int, Any)]"
            ],
            "arguments": {
                "pair": [
                    "str",
                    "int"
                ]
            }
        },
        "pipfile_section_key": {
            "name": "pipfile_section_key",
            "location": 87,
            "return": [
                "Tuple[(int, Optional[str], Optional[str])]"
            ],
            "arguments": {
                "pair": [
                    "str",
                    "int"
                ]
            }
        },
        "pipfile_packages_key": {
            "name": "pipfile_packages_key",
            "location": 105,
            "return": [
                "Tuple[(bool, Any)]"
            ],
            "arguments": {
                "pair": [
                    "str"
                ]
            }
        },
        "requirement_sort_key": {
            "name": "requirement_sort_key",
            "location": 111,
            "return": [
                "Hashable"
            ],
            "arguments": {
                "item": [
                    "set[str]",
                    "Exception",
                    "Set[str]",
                    "bool",
                    "typing.Type",
                    "type",
                    "cmk.utils.type_defs.SectionName"
                ]
            }
        },
        "is_default": {
            "name": "is_default",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {
                "source": [
                    "str",
                    "List[str]",
                    "Iterable[str]"
                ]
            }
        },
        "load_pipfile": {
            "name": "load_pipfile",
            "location": 119,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "path": [
                    "Union[(bytes, str, os.PathLike)]"
                ]
            }
        },
        "update_requirements": {
            "name": "update_requirements",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "Union[(bytes, str, os.PathLike)]"
                ],
                "pipfile": [
                    "dict[, ]",
                    "dict[str, str]",
                    "List[str]",
                    "Union[Dict, List]",
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "dict",
                    "type",
                    "str"
                ]
            }
        },
        "dump_pipfile": {
            "name": "dump_pipfile",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "Union[(bytes, str, os.PathLike)]"
                ],
                "pipfile": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 232,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "requirements_file": [
                    "str",
                    "bool",
                    "Optional[Union[str, Any]]",
                    "typing.Any",
                    "None",
                    "int"
                ],
                "skip_requirements_file": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ],
                "pipfile": [
                    "str",
                    "bool",
                    "typing.Sequence[str]",
                    "Sequence[str]",
                    "list[str]",
                    "List[str]",
                    "int"
                ],
                "skip_pipfile": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "python-shields-master/shields/__init__.py": {},
    "python-shields-master/shields/badges/__init__.py": {},
    "python-shields-master/shields/badges/templates/social.py": {},
    "python-shields-master/shields/badges/templates/_base.py": {
        "BadgeTemplate.render": {
            "name": "render",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "badge": [
                    "int",
                    "str",
                    "typing.Iterable['Context']",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "python-shields-master/shields/badges/templates/__init__.py": {},
    "python-shields-master/shields/contrib/click_extensions.py": {},
    "python-shields-master/shields/contrib/__init__.py": {},
    "python-shields-master/tests/__init__.py": {}
}
{
    "python-workshop-master/setup.py": {},
    "python-workshop-master/python_workshop/__init__.py": {},
    "python-workshop-master/python_workshop/__version__.py": {},
    "python-workshop-master/python_workshop/types/t01_functions.py": {
        "stringify": {
            "name": "stringify",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "num": [
                    "int"
                ]
            }
        },
        "f": {
            "name": "f",
            "location": 12,
            "return": [
                "int",
                "float",
                "List[Tuple[int,int]]",
                "Tuple[int,int]",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "float",
                    "bool"
                ],
                "my_float": [
                    "float",
                    "int",
                    "bool"
                ]
            }
        },
        "triplicate": {
            "name": "triplicate",
            "location": 17,
            "return": [
                "List[_T0]"
            ],
            "arguments": {
                "num": [
                    "int",
                    "float"
                ]
            }
        },
        "triplicate2": {
            "name": "triplicate2",
            "location": 22,
            "return": [
                "List[_T0]"
            ],
            "arguments": {
                "num": [
                    "int",
                    "Optional[int]",
                    "List[float]",
                    "float",
                    "None"
                ]
            }
        },
        "get_first": {
            "name": "get_first",
            "location": 26,
            "return": [
                "str",
                "int",
                "Dict"
            ],
            "arguments": {
                "values": [
                    "List[int]",
                    "str",
                    "int",
                    "List[dict]",
                    "Optional[Any]",
                    "bool"
                ]
            }
        },
        "splice": {
            "name": "splice",
            "location": 31,
            "return": [
                "dict"
            ],
            "arguments": {
                "keys": [
                    "List[str]",
                    "List[int]",
                    "Sequence[str]",
                    "str",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ],
                "values": [
                    "List[str]",
                    "List[int]",
                    "Sequence[str]",
                    "str",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "fooify": {
            "name": "fooify",
            "location": 43,
            "return": [
                "Foo"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "Foo.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str,Any]",
                    "List[str]",
                    "Dict"
                ]
            }
        }
    },
    "python-workshop-master/python_workshop/types/t02_builtins.py": {
        "f": {
            "name": "f",
            "location": 43,
            "return": [
                "int",
                "float",
                "List[Tuple[int,int]]",
                "Tuple[int,int]",
                "List[str]",
                "bool"
            ],
            "arguments": {
                "num1": [
                    "int",
                    "float",
                    "bool"
                ],
                "my_float": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "f1": {
            "name": "f1",
            "location": 48,
            "return": [
                "float",
                "int",
                "str"
            ],
            "arguments": {
                "g": [
                    "float",
                    "int",
                    "str"
                ],
                "my_float": [
                    "float",
                    "int",
                    "str"
                ]
            }
        }
    },
    "python-workshop-master/python_workshop/types/t03_ducktypes.py": {
        "as_strings": {
            "name": "as_strings",
            "location": 15,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "ints": [
                    "str",
                    "Iterable[int]",
                    "int",
                    "Tuple[FrozenSet[int]]",
                    "bool",
                    "Dict",
                    "List",
                    "List[str]"
                ]
            }
        },
        "get_keys": {
            "name": "get_keys",
            "location": 28,
            "return": [
                "Set[list[int]]",
                "Dict[str,str]",
                "Set[list[str]]",
                "str",
                "Dict",
                "int"
            ],
            "arguments": {
                "my_mapping": [
                    "Dict[int,str]",
                    "Dict[str,Any]",
                    "Mapping[int,str]"
                ]
            }
        },
        "g": {
            "name": "g",
            "location": 39,
            "return": [
                "Generator[(int, Any, None)]"
            ],
            "arguments": {
                "n": [
                    "int",
                    "Optional[int]"
                ]
            }
        }
    },
    "python-workshop-master/python_workshop/types/t04_dataclasses.py": {
        "InventoryItem.total_cost": {
            "name": "total_cost",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-workshop-master/python_workshop/types/t05_typevar.py": {
        "get_first": {
            "name": "get_first",
            "location": 14,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "seq": [
                    "str",
                    "bool",
                    "T",
                    "Dict"
                ]
            }
        },
        "repeat": {
            "name": "repeat",
            "location": 18,
            "return": [
                "List[_T0]"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "T"
                ],
                "n": [
                    "int",
                    "float",
                    "T"
                ]
            }
        }
    },
    "python-workshop-master/python_workshop/types/t06_generics.py": {
        "Stack.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stack.push": {
            "name": "push",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "int",
                    "str",
                    "List[Deque]",
                    "Callable",
                    "T",
                    "List[deque]"
                ]
            }
        },
        "Stack.pop": {
            "name": "pop",
            "location": 19,
            "return": [
                "Dict[str, Any]",
                "Dict[str, Dict[str, int]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stack.empty": {
            "name": "empty",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-workshop-master/python_workshop/types/t07_newtype.py": {
        "get_username": {
            "name": "get_username",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "user_id": [
                    "str",
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "python-workshop-master/python_workshop/types/t08_overload.py": {
        "NamedSequence.__getitem__": {
            "name": "__getitem__",
            "location": 23,
            "return": [
                "None",
                "str",
                "int",
                "Dict[str,Any]"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "Iterable[T]",
                    "str",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "python-workshop-master/python_workshop/types/__init__.py": {}
}
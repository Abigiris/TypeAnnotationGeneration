{
    "python3-new-feature-master/dict_change.py": {},
    "python3-new-feature-master/pep237.py": {},
    "python3-new-feature-master/pep238.py": {},
    "python3-new-feature-master/pep3101.py": {},
    "python3-new-feature-master/pep3102.py": {},
    "python3-new-feature-master/pep3105.py": {},
    "python3-new-feature-master/pep3109.py": {},
    "python3-new-feature-master/pep3110.py": {
        "compute": {
            "name": "compute",
            "location": 9,
            "return": [
                "float",
                "Tuple[Any, Any, Any]",
                "bytearray",
                "int",
                "str"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ]
            }
        }
    },
    "python3-new-feature-master/pep3111.py": {},
    "python3-new-feature-master/pep3134.py": {
        "compute": {
            "name": "compute",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ]
            }
        },
        "log": {
            "name": "log",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "error": [
                    "int",
                    "Exception",
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        }
    },
    "python3-new-feature-master/pep428.py": {},
    "python3-new-feature-master/pep435.py": {},
    "python3-new-feature-master/pep450.py": {
        "my_mean": {
            "name": "my_mean",
            "location": 8,
            "return": [
                "float",
                "str",
                "Optional[float]",
                "bool",
                "Awaitable"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "List[Union[int, float]]",
                    "str",
                    "dict"
                ]
            }
        },
        "my_variance": {
            "name": "my_variance",
            "location": 12,
            "return": [
                "float",
                "Tuple[int]",
                "Sequence['cirq.Qid']",
                "List[List[Any]]",
                "Optional[int]",
                "List[Dict]"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "str",
                    "int",
                    "List[int]"
                ]
            }
        },
        "my_standard_deviation": {
            "name": "my_standard_deviation",
            "location": 17,
            "return": [
                "float"
            ],
            "arguments": {
                "data": [
                    "dict",
                    "str",
                    "dict[, ]",
                    "bytes"
                ]
            }
        }
    },
    "python3-new-feature-master/annotations/ide_auto_complete.py": {
        "foo": {
            "name": "foo",
            "location": 20,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "a": [
                    "List[int]"
                ],
                "b": [
                    "Dict[(str, int)]"
                ]
            }
        }
    },
    "python3-new-feature-master/annotations/mypy_demo1.py": {
        "sum": {
            "name": "sum",
            "location": 5,
            "return": [
                "int"
            ],
            "arguments": {
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ]
            }
        }
    },
    "python3-new-feature-master/annotations/mypy_demo2.py": {
        "Photo.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ]
            }
        },
        "Photo.get_dimensions": {
            "name": "get_dimensions",
            "location": 9,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python3-new-feature-master/annotations/mypy_demo3.py": {
        "get_foo": {
            "name": "get_foo",
            "location": 8,
            "return": [
                "Optional[Foo]"
            ],
            "arguments": {
                "foo_id": [
                    "Optional[int]"
                ]
            }
        },
        "Foo.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "foo_id": [
                    "int"
                ]
            }
        }
    },
    "python3-new-feature-master/annotations/pep3107.py": {
        "sum": {
            "name": "sum",
            "location": 12,
            "return": [
                "int"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "str",
                    "Union[float, int]"
                ],
                "y": [
                    "int"
                ]
            }
        }
    },
    "python3-new-feature-master/annotations/pep484.py": {},
    "python3-new-feature-master/annotations/pep526.py": {},
    "python3-new-feature-master/annotations/typing_libary.py": {},
    "python3-new-feature-master/asyncio/async_main.py": {},
    "python3-new-feature-master/asyncio/async_print.py": {
        "print_message_periodical": {
            "name": "print_message_periodical",
            "location": 5,
            "return": [
                "Generator[(None, Any, Any)]"
            ],
            "arguments": {
                "interval_seconds": [
                    "float",
                    "int",
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "message": [
                    "typing.Text",
                    "int",
                    "str",
                    "bool",
                    "datetime.timezone",
                    "Optional[datetime.tzinfo]",
                    "datetime.timedelta",
                    "float"
                ]
            }
        }
    },
    "python3-new-feature-master/asyncio/async_search.py": {
        "async_search": {
            "name": "async_search",
            "location": 1,
            "return": [
                "Generator[(None, Any, int)]"
            ],
            "arguments": {
                "n": [
                    "int",
                    "str",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "longer": {
            "name": "longer",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": [
                    "float",
                    "int",
                    "str",
                    "Union[float, int]"
                ],
                "n": [
                    "float",
                    "int",
                    "str",
                    "Union[float, int]"
                ]
            }
        }
    },
    "python3-new-feature-master/asyncio/async_search_prime.py": {
        "async_search_prime": {
            "name": "async_search_prime",
            "location": 3,
            "return": [
                "Generator[(nothing, Any, nothing)]"
            ],
            "arguments": {}
        },
        "is_prime": {
            "name": "is_prime",
            "location": 12,
            "return": [
                "Generator[(None, Any, bool)]"
            ],
            "arguments": {
                "x": [
                    "int",
                    "List[T]"
                ]
            }
        }
    },
    "python3-new-feature-master/asyncio/main.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python3-new-feature-master/asyncio/search.py": {
        "search": {
            "name": "search",
            "location": 2,
            "return": [
                "int"
            ],
            "arguments": {
                "n": [
                    "int",
                    "str",
                    "Optional[int]",
                    "float",
                    "None"
                ]
            }
        },
        "longer": {
            "name": "longer",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": [
                    "float",
                    "int",
                    "str",
                    "Union[float, int]"
                ],
                "n": [
                    "float",
                    "int",
                    "str",
                    "Union[float, int]"
                ]
            }
        }
    },
    "python3-new-feature-master/asyncio/task.py": {
        "Task.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "routine": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Scheduler.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.add": {
            "name": "add",
            "location": 21,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "routine": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "Scheduler.run_to_completion": {
            "name": "run_to_completion",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python3-new-feature-master/asyncio/__init__.py": {},
    "python3-new-feature-master/asyncio/benchmarks/asyncio_http.py": {
        "abort": {
            "name": "abort",
            "location": 114,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "httptools_server": {
            "name": "httptools_server",
            "location": 119,
            "return": [
                "int",
                "Iterable[int]",
                "str"
            ],
            "arguments": {
                "loop": [
                    "int",
                    "str",
                    "dict",
                    "Tuple[str, int]"
                ],
                "addr": [
                    "int",
                    "str",
                    "dict",
                    "dict[, ]",
                    "Tuple[str, int]",
                    "tuple[typing.Union[str,int]]"
                ]
            }
        },
        "HttpRequest.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "str",
                    "float",
                    "bool",
                    "Optional[dict]",
                    "dict[, ]",
                    "None",
                    "Optional[str]"
                ],
                "url": [
                    "str",
                    "float",
                    "bool",
                    "Optional[dict]",
                    "dict[, ]",
                    "None",
                    "Optional[str]"
                ],
                "headers": [
                    "str",
                    "Optional[int]",
                    "int",
                    "List[str]",
                    "None",
                    "list[str]"
                ],
                "version": [
                    "str",
                    "float",
                    "bool",
                    "Optional[dict]",
                    "dict[, ]",
                    "None",
                    "Optional[str]"
                ]
            }
        },
        "HttpResponse.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "protocol": [
                    "str",
                    "int",
                    "List[str]",
                    "float",
                    "list[str]"
                ],
                "request": [
                    "str",
                    "int",
                    "List[str]",
                    "float",
                    "list[str]"
                ]
            }
        },
        "HttpResponse.write": {
            "name": "write",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "bytearray"
                ]
            }
        },
        "HttpProtocol.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpProtocol.on_url": {
            "name": "on_url",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "HttpProtocol.on_header": {
            "name": "on_header",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int",
                    "List[str]",
                    "list[str]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "value": [
                    "str",
                    "int",
                    "List[str]",
                    "list[str]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "HttpProtocol.on_headers_complete": {
            "name": "on_headers_complete",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpProtocol.connection_made": {
            "name": "connection_made",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "str",
                    "dict",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "HttpProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "int",
                    "str",
                    "typing.Iterable['Context']",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "HttpProtocol.data_received": {
            "name": "data_received",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "int",
                    "dict[, ]",
                    "str",
                    "TextIO",
                    "typing.TextIO",
                    "Tuple[int, int]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "HttpProtocol.handle": {
            "name": "handle",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "response": [
                    "Dict[str, Any]",
                    "dict",
                    "asyncio.StreamWriter",
                    "bytes"
                ]
            }
        }
    },
    "python3-new-feature-master/asyncio/benchmarks/bentchmark.py": {
        "timeit": {
            "name": "timeit",
            "location": 7,
            "return": [
                "Callable"
            ],
            "arguments": {
                "method": [
                    "typing.Callable[, ]",
                    "Callable",
                    "list[str]",
                    "str",
                    "Callable[..., Optional[Any]]",
                    "list[]",
                    "List[str]",
                    "list"
                ]
            }
        },
        "synchronous": {
            "name": "synchronous",
            "location": 26,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "multi_process": {
            "name": "multi_process",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "timeit.timed": {
            "name": "timed",
            "location": 8,
            "return": [
                "int",
                "Match",
                "str",
                "datetime.datetime",
                "Optional[int]"
            ],
            "arguments": {}
        }
    },
    "python3-new-feature-master/asyncio/benchmarks/flask_http.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 10,
            "return": [
                "int",
                "typing.Text"
            ],
            "arguments": {
                "payload_size": [
                    "int",
                    "Iterable",
                    "str",
                    "Tuple[int, int]"
                ]
            }
        }
    },
    "python3-new-feature-master/asyncio/benchmarks/tornado_http.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MainHandler.get": {
            "name": "get",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload_size": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "python3-new-feature-master/unicode/python2.py": {},
    "python3-new-feature-master/unicode/python3.py": {},
    "python3-new-feature-master/unicode/unicode_variable.py": {
        "\u601d\u79d1": {
            "name": "\u601d\u79d1",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "redash-ui-tests-master/models/user.py": {
        "UserFactory.__iter__": {
            "name": "__iter__",
            "location": 26,
            "return": [
                "Generator[(User, None, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserFactory.__contains__": {
            "name": "__contains__",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "User"
                ]
            }
        },
        "UserFactory.create_user": {
            "name": "create_user",
            "location": 33,
            "return": [
                "User"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "redash-ui-tests-master/models/__init__.py": {},
    "redash-ui-tests-master/pages/home.py": {
        "HomePage.loaded": {
            "name": "loaded",
            "location": 27,
            "return": [
                "HomePage",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "HomePage.title": {
            "name": "title",
            "location": 36,
            "return": [
                "Callable",
                "str",
                "list",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "HomePage.profile_dropdown": {
            "name": "profile_dropdown",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HomePage.log_out": {
            "name": "log_out",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HomePage.search": {
            "name": "search",
            "location": 56,
            "return": [
                "str",
                "int",
                "bool",
                "Dict[str, str]",
                "List[Dict[str, Any]]",
                "Dict[str, Type[Any]]"
            ],
            "arguments": {
                "self": [],
                "term": [
                    "str"
                ]
            }
        }
    },
    "redash-ui-tests-master/pages/login.py": {
        "LoginPage.title": {
            "name": "title",
            "location": 27,
            "return": [
                "Callable",
                "str",
                "list",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginPage.alert": {
            "name": "alert",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginPage.enter_email": {
            "name": "enter_email",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str"
                ]
            }
        },
        "LoginPage.enter_password": {
            "name": "enter_password",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "LoginPage.click_login": {
            "name": "click_login",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoginPage.login": {
            "name": "login",
            "location": 54,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        }
    },
    "redash-ui-tests-master/pages/queries.py": {
        "QueryDetailPage.description": {
            "name": "description",
            "location": 61,
            "return": [
                "dict",
                "int",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryDetailPage.click_dropdown_menu": {
            "name": "click_dropdown_menu",
            "location": 67,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "None",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "QueryDetailPage.edit_description": {
            "name": "edit_description",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "description": [
                    "str"
                ]
            }
        },
        "QueryDetailPage.edit_source_button": {
            "name": "edit_source_button",
            "location": 93,
            "return": [
                "str",
                "Tuple[int, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryDetailPage.edit_title": {
            "name": "edit_title",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "str"
                ]
            }
        },
        "QueryDetailPage.publish": {
            "name": "publish",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryDetailPage.query_tag": {
            "name": "query_tag",
            "location": 110,
            "return": [
                "str",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryDetailPage.title": {
            "name": "title",
            "location": 114,
            "return": [
                "Type",
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryRow.link": {
            "name": "link",
            "location": 126,
            "return": [
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryRow.click": {
            "name": "click",
            "location": 129,
            "return": [
                "QueryDetailPage"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryPage.wait_for_page_to_load": {
            "name": "wait_for_page_to_load",
            "location": 141,
            "return": [
                "QueryPage",
                "int",
                "List[int]",
                "str",
                "Type"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueryPage.queries": {
            "name": "queries",
            "location": 146,
            "return": [
                "list[QueryRow]",
                "List[str]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "redash-ui-tests-master/pages/__init__.py": {},
    "redash-ui-tests-master/tests/conftest.py": {
        "fixture_user_factory": {
            "name": "fixture_user_factory",
            "location": 18,
            "return": [
                "UserFactory",
                "lms.lmsdb.models.User",
                "lms.lmsdb.models.Solution",
                "discord.User",
                "zam_repondeur.models.Lecture",
                "asgard.models.user.User"
            ],
            "arguments": {}
        },
        "_verify_url": {
            "name": "_verify_url",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [
                    "str",
                    "dict[, ]",
                    "dict",
                    "starlette.requests.Request"
                ],
                "server_url": [
                    "dict",
                    "str",
                    "dict[, ]"
                ],
                "user": [
                    "int",
                    "str",
                    "bool",
                    "starlette.requests.Request"
                ],
                "org": [
                    "int",
                    "str",
                    "bool",
                    "starlette.requests.Request"
                ]
            }
        },
        "fixture_server_url": {
            "name": "fixture_server_url",
            "location": 37,
            "return": [
                "dict",
                "Dict[str, Dict[str, Any]]",
                "bytes",
                "salon.models.Stylist",
                "Dict[str, Any]"
            ],
            "arguments": {
                "request": []
            }
        },
        "fixture_org": {
            "name": "fixture_org",
            "location": 43,
            "return": [
                "typing.Text",
                "list",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "fixture_unknown_user": {
            "name": "fixture_unknown_user",
            "location": 49,
            "return": [
                "User",
                "bool",
                "str",
                "dep_check.models.Rules",
                "Optional[bool]"
            ],
            "arguments": {
                "variables": [
                    "accounts.models.AccountPermissionType",
                    "Callable"
                ],
                "org": [
                    "typing.Callable[, ]",
                    "accounts.models.AccountPermissionType",
                    "Callable"
                ]
            }
        },
        "fixture_user": {
            "name": "fixture_user",
            "location": 55,
            "return": [
                "str",
                "models.User",
                "abilian.core.models.subjects.User",
                "app.models.GameMember"
            ],
            "arguments": {
                "create_user": [
                    "dict[str, typing.Any]",
                    "str",
                    "zerver.models.UserProfile",
                    "auth.user.User",
                    "bob_emploi.frontend.api.user_pb2.User",
                    "Dict[str, Any]",
                    "django.contrib.auth.models.AbstractUser"
                ],
                "variables": [
                    "bool",
                    "User",
                    "Type[T]",
                    "zerver.models.UserProfile",
                    "server.models.User"
                ],
                "org": [
                    "bool",
                    "typing.Type",
                    "User",
                    "Type[T]",
                    "zerver.models.UserProfile",
                    "server.models.User"
                ],
                "user_factory": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool",
                    "Dict[str, Any]",
                    "Iterable[str]",
                    "models.User",
                    "Optional[Dict[str, Any]]",
                    "User",
                    "Optional[str]"
                ]
            }
        },
        "fixture_users": {
            "name": "fixture_users",
            "location": 73,
            "return": [
                "int",
                "models.User",
                "abilian.core.models.subjects.User",
                "discord.User",
                "lms.lmsdb.models.User"
            ],
            "arguments": {
                "variables": [
                    "str",
                    "bool",
                    "float",
                    "Callable[[str], bool]",
                    "dict",
                    "Callable"
                ],
                "org": [
                    "bool",
                    "str",
                    "float",
                    "Callable[[str], bool]",
                    "dict",
                    "Callable"
                ],
                "root_session": [
                    "Optional[bytes]",
                    "str",
                    "int",
                    "Callable"
                ],
                "server_url": [
                    "Optional[bytes]",
                    "bytes",
                    "str",
                    "int",
                    "None",
                    "Callable",
                    "typing.Callable[, ]"
                ],
                "user_factory": [
                    "str",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "zerver.models.UserProfile",
                    "List[str]",
                    "users.models.JustfixUser",
                    "Dict[str, Any]"
                ]
            }
        },
        "fixture_root_user": {
            "name": "fixture_root_user",
            "location": 100,
            "return": [
                "User",
                "Callable[..., None]",
                "Optional[Any]",
                "bool"
            ],
            "arguments": {
                "variables": [
                    "str",
                    "list[str]",
                    "Callable",
                    "accounts.models.AccountPermissionType",
                    "bool",
                    "List[str]"
                ],
                "org": [
                    "bool",
                    "str",
                    "Callable",
                    "accounts.models.AccountPermissionType",
                    "List[str]"
                ]
            }
        },
        "fixture_login_page": {
            "name": "fixture_login_page",
            "location": 106,
            "return": [],
            "arguments": {
                "selenium": [
                    "str",
                    "int"
                ],
                "server_url": [
                    "str",
                    "int"
                ],
                "org": [
                    "str",
                    "int"
                ]
            }
        },
        "fixture_create_user": {
            "name": "fixture_create_user",
            "location": 113,
            "return": [
                "arxiv.users.domain.User",
                "Optional[str]",
                "Type"
            ],
            "arguments": {
                "root_session": [
                    "bool",
                    "Set[str]",
                    "set[str]",
                    "Pattern",
                    "typing.Pattern",
                    "List[str]",
                    "list[str]"
                ],
                "server_url": [
                    "bool",
                    "Set[str]",
                    "set[str]",
                    "Pattern",
                    "typing.Pattern",
                    "List[str]",
                    "list[str]"
                ],
                "user_factory": [
                    "bool",
                    "Set[str]",
                    "set[str]",
                    "Pattern",
                    "typing.Pattern",
                    "List[str]",
                    "list[str]"
                ]
            }
        },
        "fixture_root_session": {
            "name": "fixture_root_session",
            "location": 166,
            "return": [
                "Session",
                "allennlp.common.util.JsonDict",
                "str",
                "Optional[List[str]]"
            ],
            "arguments": {
                "server_url": [
                    "str",
                    "int"
                ],
                "root_user": [
                    "sqlalchemy.orm.session.Session",
                    "sqlalchemy.orm.Session",
                    "django.contrib.auth.models.User",
                    "models.User"
                ]
            }
        },
        "fixture_create_queries": {
            "name": "fixture_create_queries",
            "location": 195,
            "return": [
                "None",
                "int",
                "Iterator[object]",
                "Union[tuple, list]",
                "Optional[bool]"
            ],
            "arguments": {
                "root_session": [
                    "Optional[str]",
                    "str",
                    "bool",
                    "BinaryIO"
                ],
                "server_url": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "BinaryIO",
                    "typing.BinaryIO"
                ],
                "variables": [
                    "str",
                    "Iterable[object]",
                    "Callable",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "fixture_create_user.create_user": {
            "name": "create_user",
            "location": 118,
            "return": [
                "dict",
                "str",
                "zerver.models.Realm",
                "int"
            ],
            "arguments": {
                "name": [
                    "typing.Text",
                    "str",
                    "Optional[str]",
                    "List[str]"
                ],
                "email": [
                    "typing.Text",
                    "str",
                    "Optional[Dict[str, Any]]",
                    "Optional[zerver.models.UserProfile]",
                    "zerver.models.Realm"
                ],
                "password": [
                    "typing.Text",
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        }
    },
    "redash-ui-tests-master/tests/test_login.py": {
        "test_login_wrong_user_credentials": {
            "name": "test_login_wrong_user_credentials",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "login_page": [
                    "pages.login.LoginPage",
                    "models.user.User"
                ],
                "unknown_user": [
                    "bool",
                    "models.user.User",
                    "typing.Callable[L, None]",
                    "pages.login.LoginPage",
                    "Callable[[List, bool], None]"
                ]
            }
        },
        "test_login": {
            "name": "test_login",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "login_page": [],
                "user": [
                    "bool"
                ]
            }
        }
    },
    "redash-ui-tests-master/tests/test_queries.py": {
        "test_query_by_username": {
            "name": "test_query_by_username",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "int"
                ],
                "login_page": [],
                "search_term": [
                    "str",
                    "Optional[int]",
                    "int",
                    "Tuple[type]",
                    "None",
                    "tuple[typing.Type]"
                ],
                "description": [
                    "str",
                    "int",
                    "type",
                    "typing.Type"
                ],
                "user": []
            }
        },
        "test_query_by_description": {
            "name": "test_query_by_description",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "dict",
                    "dict[, ]"
                ],
                "login_page": [
                    "Dict[str, Set[str]]",
                    "str",
                    "dict[str, set[str]]"
                ],
                "search_term": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "dict",
                    "dict[, ]"
                ],
                "description": [
                    "str",
                    "int",
                    "Callable",
                    "typing.Callable[, ]",
                    "dict",
                    "dict[, ]"
                ],
                "user": [
                    "Dict[str, Set[str]]",
                    "str",
                    "dict[str, set[str]]"
                ]
            }
        },
        "test_query_by_weird_capitalization": {
            "name": "test_query_by_weird_capitalization",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "org": [
                    "str"
                ],
                "user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_query_by_number": {
            "name": "test_query_by_number",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "org": [
                    "str"
                ],
                "user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_query_by_special_char": {
            "name": "test_query_by_special_char",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "org": [
                    "str"
                ],
                "user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_search_for_unpublished_query": {
            "name": "test_search_for_unpublished_query",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "str",
                    "int",
                    "bool"
                ],
                "root_user": [
                    "models.user.User"
                ]
            }
        },
        "test_search_for_query_by_id": {
            "name": "test_search_for_query_by_id",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "typing.Callable[..., None]",
                    "str",
                    "Callable[..., None]",
                    "dict[, ]",
                    "dict",
                    "core.models.Recipe"
                ],
                "user": [
                    "models.user.User"
                ]
            }
        },
        "test_search_for_query_only_includes_search_result": {
            "name": "test_search_for_query_only_includes_search_result",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]"
                ],
                "user": [
                    "models.user.User"
                ]
            }
        },
        "test_change_query_title": {
            "name": "test_change_query_title",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "dict",
                    "dict[, ]"
                ],
                "root_user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_change_query_description": {
            "name": "test_change_query_description",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "dict",
                    "dict[, ]"
                ],
                "root_user": [
                    "models.user.User"
                ]
            }
        },
        "test_edit_query_description": {
            "name": "test_edit_query_description",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "dict",
                    "dict[, ]"
                ],
                "root_user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_edit_query_source": {
            "name": "test_edit_query_source",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "projects.models.Project"
                ],
                "root_user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_query_fork": {
            "name": "test_query_fork",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "bool",
                    "list[str]",
                    "List[str]",
                    "Iterable[bytes]"
                ],
                "root_user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        },
        "test_query_archive": {
            "name": "test_query_archive",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "create_queries": [
                    "Callable[(..., None)]"
                ],
                "login_page": [
                    "pages.login.LoginPage"
                ],
                "server_url": [
                    "str"
                ],
                "selenium": [
                    "Callable[..., None]",
                    "str",
                    "typing.Callable[..., None]",
                    "dict",
                    "dict[, ]"
                ],
                "root_user": [
                    "models.user.User"
                ],
                "variables": [
                    "dict"
                ]
            }
        }
    },
    "redash-ui-tests-master/tests/__init__.py": {}
}
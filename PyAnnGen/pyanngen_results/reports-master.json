{
    "reports-master/setup.py": {},
    "reports-master/reports/exceptions.py": {
        "ReportsError.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "description": [
                    "str",
                    "Dict[str, Dict[str, str]]",
                    "dict[str, dict[str, str]]"
                ]
            }
        }
    },
    "reports-master/reports/formats.py": {
        "to_html": {
            "name": "to_html",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "report": [
                    "report_collector.Report"
                ],
                "since": [
                    "datetime.date"
                ],
                "until": [
                    "datetime.date"
                ]
            }
        }
    },
    "reports-master/reports/lambda.py": {
        "lambda_handler": {
            "name": "lambda_handler",
            "location": 12,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "Optional[Callable]",
                    "typing.Callable[, ]",
                    "None"
                ],
                "context": [
                    "str"
                ]
            }
        }
    },
    "reports-master/reports/mail.py": {
        "send": {
            "name": "send",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "html": [
                    "str"
                ],
                "params": [
                    "MailParams"
                ]
            }
        },
        "MailParams.to_emails_list": {
            "name": "to_emails_list",
            "location": 24,
            "return": [
                "list[]",
                "dict",
                "int",
                "List[str]",
                "Exception",
                "Optional[Dict[str, Any]]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailParams.cc_list": {
            "name": "cc_list",
            "location": 31,
            "return": [
                "list[]",
                "List[int]",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailParams.from_env": {
            "name": "from_env",
            "location": 38,
            "return": [
                "MailParams"
            ],
            "arguments": {}
        }
    },
    "reports-master/reports/report_collector.py": {
        "_to_human_time": {
            "name": "_to_human_time",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "millis": [
                    "str",
                    "float",
                    "int",
                    "typing.Type",
                    "Type",
                    "datetime.datetime"
                ]
            }
        },
        "fetch": {
            "name": "fetch",
            "location": 157,
            "return": [
                "Report"
            ],
            "arguments": {
                "since": [
                    "datetime.date"
                ],
                "until": [
                    "datetime.date"
                ],
                "toggl_params": [
                    "TogglParams"
                ]
            }
        },
        "TogglParams.client_ids_list": {
            "name": "client_ids_list",
            "location": 23,
            "return": [
                "list[]",
                "bool",
                "list[int]",
                "str",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TogglParams.from_env": {
            "name": "from_env",
            "location": 30,
            "return": [
                "TogglParams"
            ],
            "arguments": {}
        },
        "Entry.time_human": {
            "name": "time_human",
            "location": 58,
            "return": [
                "bool",
                "str",
                "int",
                "float",
                "Tuple[int, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Report.time_human": {
            "name": "time_human",
            "location": 77,
            "return": [
                "bool",
                "str",
                "int",
                "float",
                "Tuple[int, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ReportCollector.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "toggl_params": [
                    "TogglParams"
                ]
            }
        },
        "_ReportCollector.fetch": {
            "name": "fetch",
            "location": 92,
            "return": [
                "Report"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "datetime.date"
                ],
                "until": [
                    "datetime.date"
                ]
            }
        },
        "_ReportCollector._projects": {
            "name": "_projects",
            "location": 132,
            "return": [
                "List[str]",
                "Sequence",
                "Dict[str, Any]",
                "\"Flow\""
            ],
            "arguments": {
                "self": []
            }
        },
        "_ReportCollector._summary": {
            "name": "_summary",
            "location": 136,
            "return": [
                "List[str]",
                "Dict[str, Any]",
                "Dict[str, dict]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "datetime.date"
                ],
                "until": [
                    "datetime.date"
                ]
            }
        },
        "_ReportCollector._json": {
            "name": "_json",
            "location": 149,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "response": [
                    "dict",
                    "bytes"
                ]
            }
        }
    },
    "reports-master/reports/__init__.py": {},
    "reports-master/reports/templates/__init__.py": {}
}
{
    "safe-master/main.py": {},
    "safe-master/safe/app.py": {
        "run": {
            "name": "run",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "safe-master/safe/__init__.py": {},
    "safe-master/safe/common/constants.py": {},
    "safe-master/safe/common/exit_codes.py": {},
    "safe-master/safe/common/store.py": {
        "Store.get": {
            "name": "get",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Dict"
                ]
            }
        },
        "Store.set": {
            "name": "set",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "key": [
                    "str",
                    "List[str]",
                    "bytes"
                ],
                "value": [
                    "str",
                    "bytes",
                    "List[str]"
                ]
            }
        },
        "Store._get_exception": {
            "name": "_get_exception",
            "location": 64,
            "return": [
                "Union[(PasswordNotSetException, UnknownStoreException)]"
            ],
            "arguments": {
                "key": [
                    "str"
                ]
            }
        }
    },
    "safe-master/safe/common/types.py": {
        "StrEnum.__str__": {
            "name": "__str__",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrEnum.__repr__": {
            "name": "__repr__",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "safe-master/safe/common/__init__.py": {},
    "safe-master/safe/core/cmd_config.py": {
        "run": {
            "name": "run",
            "location": 10,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "converter": [
                    "str",
                    "bytes"
                ],
                "data": [
                    "str",
                    "List[str]",
                    "Optional[str]",
                    "Dict",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "safe-master/safe/core/cmd_convert.py": {
        "run": {
            "name": "run",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "converter": [
                    "bool",
                    "safe.core.converter.Converter",
                    "Optional[str]",
                    "Optional[dict]",
                    "MutableMapping"
                ],
                "filepath": [
                    "pathlib.Path",
                    "str",
                    "Optional[str]",
                    "Dict[str, str]"
                ],
                "decrypt": [
                    "bool",
                    "int",
                    "str",
                    "float",
                    "Callable"
                ],
                "overwrite": [
                    "bool",
                    "safe.core.converter.Converter",
                    "Optional[str]",
                    "Optional[dict]",
                    "MutableMapping"
                ],
                "name": [
                    "bool",
                    "safe.core.converter.Converter",
                    "Optional[str]",
                    "Optional[dict]",
                    "MutableMapping"
                ]
            }
        },
        "_run_encryption": {
            "name": "_run_encryption",
            "location": 26,
            "return": [
                "int"
            ],
            "arguments": {
                "converter": [
                    "str",
                    "bool",
                    "Optional[List[Any]]"
                ],
                "filepath": [
                    "Optional[pathlib.Path]",
                    "str",
                    "Optional[str]",
                    "int"
                ],
                "overwrite": [
                    "bool",
                    "str",
                    "pathlib.Path"
                ],
                "name": [
                    "Optional[str]",
                    "str",
                    "Optional[List]"
                ]
            }
        },
        "_run_decryption": {
            "name": "_run_decryption",
            "location": 47,
            "return": [
                "int"
            ],
            "arguments": {
                "converter": [
                    "str",
                    "bool",
                    "Optional[List[Any]]"
                ],
                "filepath": [
                    "str",
                    "bool",
                    "List[Union[str, Any]]"
                ],
                "overwrite": [
                    "bool",
                    "str",
                    "pathlib.Path"
                ],
                "name": [
                    "Optional[str]",
                    "str",
                    "dict",
                    "Type",
                    "Optional[Set[str]]",
                    "Optional[Dict[str, Any]]",
                    "Optional[Pattern]"
                ]
            }
        },
        "_store_content_into_path": {
            "name": "_store_content_into_path",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "decrypted_fpath": [
                    "pathlib.Path",
                    "bool",
                    "str"
                ],
                "content": [
                    "bytes",
                    "str",
                    "BinaryIO",
                    "Union[Dict[str, Any], List[Any]]",
                    "Union[str, bytes]"
                ],
                "overwrite": [
                    "bool",
                    "pathlib.Path",
                    "str",
                    "pypi2nix.path.Path"
                ]
            }
        }
    },
    "safe-master/safe/core/cmd_shell.py": {
        "run": {
            "name": "run",
            "location": 4,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "converter": [
                    "List[str]",
                    "str",
                    "bool"
                ],
                "filepath": [
                    "List[str]",
                    "str",
                    "bool"
                ],
                "command": [
                    "List[str]",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "safe-master/safe/core/converter.py": {
        "Converter.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "Converter.encrypt_lines": {
            "name": "encrypt_lines",
            "location": 14,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "str",
                    "Sequence[str]"
                ]
            }
        },
        "Converter._encrypt": {
            "name": "_encrypt",
            "location": 17,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str",
                    "List[str]",
                    "Dict[str,Dict[str,int]]",
                    "Dict[str,dict[str,int]]"
                ]
            }
        },
        "Converter.decrypt_lines": {
            "name": "decrypt_lines",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "lines": [
                    "str",
                    "Sequence[bytes]",
                    "Optional[str]"
                ]
            }
        },
        "Converter._decrypt": {
            "name": "_decrypt",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "bytes",
                    "int"
                ]
            }
        },
        "Converter._make_key": {
            "name": "_make_key",
            "location": 28,
            "return": [
                "str",
                "list"
            ],
            "arguments": {
                "password": [
                    "str",
                    "bytes"
                ]
            }
        },
        "Converter._extend": {
            "name": "_extend",
            "location": 40,
            "return": [
                "str",
                "List[int]"
            ],
            "arguments": {
                "root": [
                    "Sized"
                ]
            }
        }
    },
    "safe-master/safe/core/parser.py": {
        "_password_action": {
            "name": "_password_action",
            "location": 17,
            "return": [
                "type"
            ],
            "arguments": {
                "prompt": [
                    "Text",
                    "int",
                    "bool",
                    "T",
                    "str",
                    "Union[int,Tuple[int,...]]"
                ]
            }
        },
        "_safe_command_setter_action": {
            "name": "_safe_command_setter_action",
            "location": 79,
            "return": [
                "type"
            ],
            "arguments": {
                "action": [
                    "Set",
                    "int",
                    "bool"
                ]
            }
        },
        "_set_parser_command": {
            "name": "_set_parser_command",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "bool",
                    "argparse.ArgumentParser"
                ],
                "action": [
                    "bool",
                    "argparse.ArgumentParser"
                ]
            }
        },
        "_add_password_argument": {
            "name": "_add_password_argument",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": [
                    "bool",
                    "argparse.ArgumentParser"
                ]
            }
        },
        "_get_parser": {
            "name": "_get_parser",
            "location": 131,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "_has_attribute": {
            "name": "_has_attribute",
            "location": 242,
            "return": [
                "bool"
            ],
            "arguments": {
                "namespace": [
                    "Tuple",
                    "Callable",
                    "str",
                    "bool"
                ],
                "attr": [
                    "str",
                    "Tuple",
                    "Callable",
                    "bool"
                ]
            }
        },
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 250,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {
                "args": []
            }
        },
        "_CommandValidatorAction.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "option_strings": [
                    "str",
                    "bool"
                ],
                "dest": [
                    "str",
                    "bool"
                ],
                "nargs": [
                    "Text",
                    "str",
                    "bool"
                ]
            }
        },
        "_CommandValidatorAction.__call__": {
            "name": "__call__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str"
                ],
                "args": [],
                "values": [
                    "str",
                    "List",
                    "Optional[str]",
                    "int",
                    "Dict[str,List[str]]"
                ],
                "option_string": [
                    "str",
                    "None"
                ]
            }
        },
        "_password_action.PasswordPromptAction.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "option_strings": [
                    "str",
                    "bool"
                ],
                "dest": [
                    "str",
                    "bool"
                ],
                "nargs": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "_password_action.PasswordPromptAction.__call__": {
            "name": "__call__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str"
                ],
                "args": [],
                "values": [
                    "str"
                ],
                "option_string": [
                    "str",
                    "None"
                ]
            }
        },
        "_safe_command_setter_action.SafeActionSetterAction.__call__": {
            "name": "__call__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str"
                ],
                "args": [],
                "values": [
                    "str",
                    "List"
                ],
                "option_string": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "safe-master/safe/core/protection.py": {
        "check_password": {
            "name": "check_password",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "password": [
                    "str",
                    "Optional[str]",
                    "Dict[str,str]",
                    "None",
                    "Dict[str,Dict[str,str]]",
                    "Dict[str,dict[str,str]]"
                ]
            }
        }
    },
    "safe-master/safe/core/__init__.py": {}
}
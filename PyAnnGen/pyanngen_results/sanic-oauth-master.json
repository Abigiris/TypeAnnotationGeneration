{
    "sanic-oauth-master/setup.py": {
        "_read": {
            "name": "_read",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "fname": [
                    "List[Exception]",
                    "bool",
                    "list[Exception]",
                    "str",
                    "List[str]",
                    "list[str]",
                    "list",
                    "list[]"
                ]
            }
        }
    },
    "sanic-oauth-master/examples/legacy_integration.py": {},
    "sanic-oauth-master/examples/multi_providers.py": {},
    "sanic-oauth-master/examples/old_example.py": {
        "login_required": {
            "name": "login_required",
            "location": 70,
            "return": [
                "Callable"
            ],
            "arguments": {
                "fn": [
                    "int",
                    "str",
                    "typing.Iterable['Context']",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "sanic-oauth-master/sanic_oauth/blueprint.py": {
        "login_required": {
            "name": "login_required",
            "location": 141,
            "return": [
                "Union[(functools.partial, Callable)]"
            ],
            "arguments": {
                "async_handler": [
                    "None",
                    "bool",
                    "typing.Sequence[str]"
                ],
                "provider": [
                    "None",
                    "bool",
                    "typing.Sequence[str]"
                ],
                "add_user_info": [
                    "bool"
                ],
                "email_regex": [
                    "None",
                    "bool",
                    "typing.Sequence[str]"
                ],
                "redirect_login": [
                    "bool"
                ]
            }
        },
        "setup_providers": {
            "name": "setup_providers",
            "location": 218,
            "return": [
                "dict"
            ],
            "arguments": {
                "providers_conf": [
                    "dict"
                ],
                "oauth_redirect_uri": [
                    "str"
                ],
                "oauth_scope": [
                    "str"
                ],
                "oauth_endpoint_path": [
                    "str"
                ]
            }
        },
        "legacy_oauth_configuration": {
            "name": "legacy_oauth_configuration",
            "location": 263,
            "return": [
                "Tuple[(dict, Any)]"
            ],
            "arguments": {
                "sanic_app": [
                    "str"
                ],
                "provider_class_link": [
                    "str"
                ],
                "oauth_redirect_uri": [
                    "str"
                ],
                "oauth_scope": [
                    "str"
                ]
            }
        },
        "create_oauth_factory.oauth_factory": {
            "name": "oauth_factory",
            "location": 320,
            "return": [],
            "arguments": {
                "access_token": [
                    "None"
                ],
                "provider": [
                    "None"
                ]
            }
        }
    },
    "sanic-oauth-master/sanic_oauth/config.py": {},
    "sanic-oauth-master/sanic_oauth/core.py": {
        "UserInfo.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Signature._escape": {
            "name": "_escape",
            "location": 49,
            "return": [
                "bytes"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "Signature.sign": {
            "name": "sign",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "consumer_secret": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "url": [
                    "str"
                ],
                "oauth_token_secret": [
                    "str"
                ]
            }
        },
        "HmacSha1Signature.sign": {
            "name": "sign",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "consumer_secret": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "url": [
                    "str"
                ],
                "oauth_token_secret": [
                    "str"
                ]
            }
        },
        "PlaintextSignature.sign": {
            "name": "sign",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "consumer_secret": [
                    "str"
                ],
                "method": [
                    "str"
                ],
                "url": [
                    "str"
                ],
                "oauth_token_secret": [
                    "str"
                ]
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aiohttp_session": [
                    "str"
                ],
                "base_url": [
                    "str"
                ],
                "authorize_url": [
                    "str"
                ],
                "access_token_key": [
                    "str"
                ],
                "access_token_url": [
                    "str"
                ],
                "user_info_url": [
                    "str"
                ]
            }
        },
        "Client._get_url": {
            "name": "_get_url",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "Client.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.__repr__": {
            "name": "__repr__",
            "location": 129,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.user_parse": {
            "name": "user_parse",
            "location": 155,
            "return": [
                "UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ]
            }
        },
        "OAuth1Client.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aiohttp_session": [
                    "str"
                ],
                "consumer_key": [
                    "str"
                ],
                "consumer_secret": [
                    "str"
                ],
                "base_url": [
                    "str"
                ],
                "authorize_url": [
                    "str"
                ],
                "oauth_token": [
                    "str"
                ],
                "oauth_token_secret": [
                    "str"
                ],
                "request_token_url": [
                    "str"
                ],
                "access_token_url": [
                    "str"
                ],
                "access_token_key": [
                    "str"
                ],
                "signature": [
                    "None",
                    "str",
                    "float"
                ],
                "user_info_url": [
                    "str"
                ]
            }
        },
        "OAuth1Client.get_authorize_url": {
            "name": "get_authorize_url",
            "location": 188,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "request_token": [
                    "str"
                ]
            }
        },
        "OAuth2Client.__init__": {
            "name": "__init__",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aiohttp_session": [
                    "str"
                ],
                "client_id": [
                    "str"
                ],
                "client_secret": [
                    "str"
                ],
                "base_url": [
                    "str"
                ],
                "authorize_url": [
                    "str"
                ],
                "access_token": [
                    "str"
                ],
                "access_token_url": [
                    "str"
                ],
                "access_token_key": [
                    "str"
                ],
                "user_info_url": [
                    "str"
                ]
            }
        },
        "OAuth2Client.get_authorize_url": {
            "name": "get_authorize_url",
            "location": 299,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sanic-oauth-master/sanic_oauth/providers.py": {
        "GoogleClient.user_parse": {
            "name": "user_parse",
            "location": 33,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "GitlabClient.user_parse": {
            "name": "user_parse",
            "location": 60,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "BitbucketClient.user_parse": {
            "name": "user_parse",
            "location": 86,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "Bitbucket2Client.user_parse": {
            "name": "user_parse",
            "location": 114,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "Flickr.user_parse": {
            "name": "user_parse",
            "location": 161,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[str, str]",
                    "dict[, ]",
                    "dict[str, typing.Union[str,int]]"
                ]
            }
        },
        "Meetup.user_parse": {
            "name": "user_parse",
            "location": 188,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Plurk.user_parse": {
            "name": "user_parse",
            "location": 213,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "TwitterClient.user_parse": {
            "name": "user_parse",
            "location": 247,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": []
            }
        },
        "TumblrClient.user_parse": {
            "name": "user_parse",
            "location": 280,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[]",
                    "dict[, ]",
                    "bytes"
                ]
            }
        },
        "VimeoClient.user_parse": {
            "name": "user_parse",
            "location": 302,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[]",
                    "dict[, ]",
                    "bytes"
                ]
            }
        },
        "YahooClient.user_parse": {
            "name": "user_parse",
            "location": 331,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "AmazonClient.user_parse": {
            "name": "user_parse",
            "location": 369,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EventbriteClient.user_parse": {
            "name": "user_parse",
            "location": 391,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, float]"
                ]
            }
        },
        "FacebookClient.user_parse": {
            "name": "user_parse",
            "location": 424,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "FoursquareClient.user_parse": {
            "name": "user_parse",
            "location": 464,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[]",
                    "dict[, ]",
                    "bytes"
                ]
            }
        },
        "GithubClient.user_parse": {
            "name": "user_parse",
            "location": 493,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ]
            }
        },
        "VKClient.__init__": {
            "name": "__init__",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VKClient.user_parse": {
            "name": "user_parse",
            "location": 536,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "OdnoklassnikiClient.__init__": {
            "name": "__init__",
            "location": 564,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OdnoklassnikiClient.user_parse": {
            "name": "user_parse",
            "location": 570,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "YandexClient.user_parse": {
            "name": "user_parse",
            "location": 599,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "LinkedinClient.user_parse": {
            "name": "user_parse",
            "location": 630,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "PinterestClient.user_parse": {
            "name": "user_parse",
            "location": 657,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "DiscordClient.__init__": {
            "name": "__init__",
            "location": 681,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DiscordClient.user_parse": {
            "name": "user_parse",
            "location": 698,
            "return": [
                "sanic_oauth.core.UserInfo"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "sanic-oauth-master/sanic_oauth/__init__.py": {},
    "sanic-oauth-master/tests/base_test.py": {},
    "sanic-oauth-master/tests/__init__.py": {}
}
{
    "score-monster-master/main.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "score-monster-master/services/gsheets.py": {
        "Worksheet.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sheet_url": [
                    "str"
                ],
                "tab_name": [
                    "str"
                ],
                "show_stats": [
                    "str",
                    "Dict",
                    "Union[bool,int,str]",
                    "bool"
                ]
            }
        },
        "Worksheet.requests": {
            "name": "requests",
            "location": 39,
            "return": [
                "int",
                "typing.Final",
                "dict[str, str]",
                "bytes",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "str",
                    "Exception",
                    "Deque[int]"
                ]
            }
        },
        "Worksheet.get_hacker_cell": {
            "name": "get_hacker_cell",
            "location": 44,
            "return": [
                "Optional[str]",
                "str",
                "Pattern",
                "Optional[List[str]]",
                "int",
                "None"
            ],
            "arguments": {
                "self": [],
                "hacker": [
                    "str",
                    "bytearray",
                    "int"
                ]
            }
        },
        "Worksheet._add_value": {
            "name": "_add_value",
            "location": 76,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Worksheet.update_score": {
            "name": "update_score",
            "location": 113,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "hacker": [
                    "str",
                    "bool",
                    "Dict",
                    "int"
                ],
                "score": [
                    "int",
                    "List[str]",
                    "str",
                    "Tuple[int]"
                ],
                "column": [
                    "bool",
                    "List[int]",
                    "Tuple[int]",
                    "bytes",
                    "str",
                    "Callable[,None]"
                ]
            }
        },
        "Worksheet.update_scores": {
            "name": "update_scores",
            "location": 161,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "hackers": [
                    "List[dict[str,str]]",
                    "str",
                    "List[Dict[str,str]]",
                    "bool",
                    "int"
                ],
                "column": [
                    "int",
                    "List[str]",
                    "str",
                    "List[Dict[str,str]]",
                    "List[dict[str,str]]"
                ]
            }
        },
        "Worksheet.update_stats": {
            "name": "update_stats",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "score-monster-master/services/hackerrank.py": {
        "HackerrankAPI.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contest": [
                    "int",
                    "Union[str,float]",
                    "str",
                    "float"
                ],
                "username_filter": [
                    "bool",
                    "str",
                    "List",
                    "List[int]",
                    "Optional[List[int]]",
                    "None",
                    "Optional[List[Any]]",
                    "Optional[str]"
                ],
                "start_limit": [
                    "int",
                    "None",
                    "Dict[str,str]",
                    "Dict[int,datetime.datetime]",
                    "str"
                ],
                "end_limit": [
                    "float",
                    "None",
                    "bool",
                    "datetime.datetime",
                    "datetime.date.time",
                    "int"
                ]
            }
        },
        "HackerrankAPI.render_leaderboard_link": {
            "name": "render_leaderboard_link",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "offset": [
                    "Dict[str,Any]",
                    "int",
                    "str"
                ],
                "limit": [
                    "Dict[str,Any]",
                    "int",
                    "str"
                ]
            }
        },
        "HackerrankAPI.contest_link": {
            "name": "contest_link",
            "location": 49,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HackerrankAPI.on_time": {
            "name": "on_time",
            "location": 52,
            "return": [
                "bool",
                "float",
                "int",
                "datetime.datetime",
                "str"
            ],
            "arguments": {
                "self": [],
                "actual": [
                    "int",
                    "str",
                    "datetime.datetime",
                    "None",
                    "Optional[datetime.tzinfo]"
                ]
            }
        },
        "HackerrankAPI.filter_keys": {
            "name": "filter_keys",
            "location": 71,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "hacker": [
                    "str"
                ]
            }
        },
        "HackerrankAPI.parse_new_hackers": {
            "name": "parse_new_hackers",
            "location": 81,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "str",
                    "Dict[str,Any]",
                    "None",
                    "Iterator",
                    "requests.Response",
                    "Optional[Response]",
                    "pyppeteer.network_manager.Response"
                ]
            }
        },
        "HackerrankAPI.epoch_contest_start_time": {
            "name": "epoch_contest_start_time",
            "location": 94,
            "return": [
                "str",
                "int",
                "Dict",
                "float",
                "Final"
            ],
            "arguments": {
                "self": []
            }
        },
        "HackerrankAPI.filter_on_time": {
            "name": "filter_on_time",
            "location": 102,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "hackers": [
                    "int",
                    "float",
                    "None",
                    "bool",
                    "Optional[int]"
                ]
            }
        },
        "HackerrankAPI.get_leadearboard": {
            "name": "get_leadearboard",
            "location": 106,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "score-monster-master/services/mediator.py": {
        "Mediator.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Mediator.begin_collection": {
            "name": "begin_collection",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "score-monster-master/services/__init__.py": {},
    "score-monster-master/services/constants/fixed_numbers.py": {},
    "score-monster-master/services/constants/templates.py": {}
}
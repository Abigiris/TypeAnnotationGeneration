{
    "scraper-TW-hotels-master/scraping.py": {
        "ask_city": {
            "name": "ask_city",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "ask_save_option": {
            "name": "ask_save_option",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "scraper-TW-hotels-master/apps/__init__.py": {},
    "scraper-TW-hotels-master/apps/assembler/hotel.py": {
        "HotelContentRowsAssembler.assemble": {
            "name": "assemble",
            "location": 8,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "hotels": [
                    "str",
                    "int",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "scraper-TW-hotels-master/apps/assembler/__init__.py": {},
    "scraper-TW-hotels-master/apps/dto/hotel.py": {},
    "scraper-TW-hotels-master/apps/dto/__init__.py": {},
    "scraper-TW-hotels-master/apps/services/scraper.py": {
        "TaiwanHotelsScrapingService.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scraping_logger": []
            }
        }
    },
    "scraper-TW-hotels-master/apps/services/storer.py": {
        "HotelStoringExcelService.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "scraping_logger": []
            }
        },
        "HotelStoringExcelService.close": {
            "name": "close",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelStoringJsonService.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scraping_logger": []
            }
        }
    },
    "scraper-TW-hotels-master/apps/services/__init__.py": {},
    "scraper-TW-hotels-master/domain/__init__.py": {},
    "scraper-TW-hotels-master/domain/models/__init__.py": {},
    "scraper-TW-hotels-master/domain/models/hotel/content.py": {
        "HotelContentVO.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "Optional[str]",
                    "None",
                    "Union[list,str]",
                    "List"
                ],
                "name": [
                    "str",
                    "Callable[,int]",
                    "Optional[str]",
                    "None"
                ],
                "phone": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Optional[bool]"
                ],
                "addr": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Optional[bool]"
                ],
                "rooms": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Optional[bool]"
                ],
                "prices": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Optional[bool]"
                ],
                "email": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Optional[bool]"
                ],
                "url": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Optional[bool]"
                ]
            }
        },
        "HotelContentVO.id": {
            "name": "id",
            "location": 25,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.name": {
            "name": "name",
            "location": 29,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.address": {
            "name": "address",
            "location": 33,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.phone": {
            "name": "phone",
            "location": 37,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.url": {
            "name": "url",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.email": {
            "name": "email",
            "location": 45,
            "return": [
                "str",
                "int",
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.rooms": {
            "name": "rooms",
            "location": 49,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.prices": {
            "name": "prices",
            "location": 53,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelContentVO.__repr__": {
            "name": "__repr__",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/hotel/field.py": {},
    "scraper-TW-hotels-master/domain/models/hotel/pages.py": {
        "PagesOfHotelVO.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pages_num": [],
                "hotels_num": []
            }
        },
        "PagesOfHotelVO.total": {
            "name": "total",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PagesOfHotelVO.hotels_num": {
            "name": "hotels_num",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PagesOfHotelVO.__eq__": {
            "name": "__eq__",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PagesOfHotelVO.__repr__": {
            "name": "__repr__",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/hotel/parsers.py": {
        "PagesOfCountyParser.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "params": [],
                "scraping_logger": [],
                "fake_header_generator": [],
                "retryable_requester": []
            }
        },
        "HotelsOfCountyParser.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "params": [],
                "hotel_href_xpath": [],
                "scraping_logger": [],
                "fake_header_generator": [],
                "retryable_requester": []
            }
        },
        "HotelsOfCountyParser._extract_hotels_id": {
            "name": "_extract_hotels_id",
            "location": 71,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "page": [],
                "html": []
            }
        },
        "HotelContentVOParser.__init__": {
            "name": "__init__",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "hotel_content_xpath": [],
                "scraping_logger": [],
                "fake_header_generator": [],
                "retryable_requester": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/hotel/__init__.py": {},
    "scraper-TW-hotels-master/domain/models/region/city.py": {
        "CityVO.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "code": [
                    "str",
                    "List[county.CountyVO]",
                    "List[C]"
                ],
                "counties": [
                    "str",
                    "List[county.CountyVO]",
                    "List[C]"
                ]
            }
        },
        "CityVO._set_name": {
            "name": "_set_name",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "CityVO._set_code": {
            "name": "_set_code",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "CityVO._set_counties": {
            "name": "_set_counties",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "counties": [
                    "bool",
                    "float"
                ]
            }
        },
        "CityVO.name": {
            "name": "name",
            "location": 19,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityVO.code": {
            "name": "code",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityVO.counties": {
            "name": "counties",
            "location": 27,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CityVO.__eq__": {
            "name": "__eq__",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int"
                ]
            }
        },
        "CityVO.__repr__": {
            "name": "__repr__",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/region/county.py": {
        "CountyVO.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ],
                "value": [
                    "Sequence[Any]",
                    "str",
                    "int"
                ]
            }
        },
        "CountyVO._set_name": {
            "name": "_set_name",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "CountyVO._set_value": {
            "name": "_set_value",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "float"
                ]
            }
        },
        "CountyVO.name": {
            "name": "name",
            "location": 17,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountyVO.value": {
            "name": "value",
            "location": 21,
            "return": [
                "str",
                "int",
                "Type[T]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountyVO.__eq__": {
            "name": "__eq__",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Dict[str,float]",
                    "Type",
                    "str"
                ]
            }
        },
        "CountyVO.__repr__": {
            "name": "__repr__",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/region/selector.py": {
        "SeleniumCountiesSelecor.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "city_xpath": [],
                "counties_xpath": [],
                "scraping_logger": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/region/__init__.py": {},
    "scraper-TW-hotels-master/domain/models/store/excel.py": {
        "HotelsExcelStorer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "scraping_logger": []
            }
        },
        "HotelsExcelStorer._format_cell": {
            "name": "_format_cell",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HotelsExcelStorer._retrieve_header": {
            "name": "_retrieve_header",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "parsed_column": []
            }
        },
        "HotelsExcelStorer.add_sheet": {
            "name": "add_sheet",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sheetname": [],
                "parsed_columns": [],
                "column_width": [
                    "int"
                ]
            }
        },
        "HotelsExcelStorer._normializa_url": {
            "name": "_normializa_url",
            "location": 40,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "_T0@@"
                ]
            }
        },
        "HotelsExcelStorer.close": {
            "name": "close",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/store/json.py": {
        "HotelsJsonStorer.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "scraping_logger": []
            }
        },
        "HotelsJsonStorer._check_json_format": {
            "name": "_check_json_format",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "HotelsJsonStorer._dump_hotels": {
            "name": "_dump_hotels",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "county_name": [],
                "stored_hotels": [],
                "hotels": []
            }
        },
        "HotelsJsonStorer._create_empty_json": {
            "name": "_create_empty_json",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "HotelsJsonStorer._check_existed": {
            "name": "_check_existed",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "scraper-TW-hotels-master/domain/models/store/__init__.py": {},
    "scraper-TW-hotels-master/infra/__init__.py": {},
    "scraper-TW-hotels-master/infra/asynchttp/header.py": {
        "FakeHeaderGenerator.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": []
            }
        }
    },
    "scraper-TW-hotels-master/infra/asynchttp/requester.py": {
        "RetryableRequester.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [],
                "abnormal_url": []
            }
        }
    },
    "scraper-TW-hotels-master/infra/asynchttp/resp.py": {},
    "scraper-TW-hotels-master/infra/asynchttp/__init__.py": {},
    "scraper-TW-hotels-master/infra/excepts/types.py": {
        "ReqSysAbnoramlError.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "http_code": [],
                "message": [],
                "req_url": [],
                "req_content": []
            }
        },
        "ReqSysAbnoramlError.http_code": {
            "name": "http_code",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReqSysAbnoramlError.message": {
            "name": "message",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReqSysAbnoramlError.url": {
            "name": "url",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReqSysAbnoramlError.content": {
            "name": "content",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scraper-TW-hotels-master/infra/excepts/__init__.py": {},
    "scraper-TW-hotels-master/infra/logging/factory.py": {
        "LoggerFactory.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggerFactory.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggerFactory.show_loggers": {
            "name": "show_loggers",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoggerFactory._set_formatter": {
            "name": "_set_formatter",
            "location": 31,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "_T0@@"
                ],
                "level": [],
                "format": []
            }
        },
        "LoggerFactory._check_extension": {
            "name": "_check_extension",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "LoggerFactory._check_logging_path_dir": {
            "name": "_check_logging_path_dir",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "LoggerFactory.load_config": {
            "name": "load_config",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "LoggerFactory.get_logger": {
            "name": "get_logger",
            "location": 80,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LoggerFactory.make_console": {
            "name": "make_console",
            "location": 83,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "level": [],
                "format": []
            }
        },
        "LoggerFactory.make_file": {
            "name": "make_file",
            "location": 92,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filepath": [],
                "level": [],
                "format": []
            }
        },
        "LoggerFactory.make_rotating_file": {
            "name": "make_rotating_file",
            "location": 100,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filepath": [],
                "level": [],
                "format": [],
                "max_bytes": [
                    "int"
                ],
                "backup_count": [
                    "int"
                ]
            }
        },
        "LoggerFactory.make_time_rotating_file": {
            "name": "make_time_rotating_file",
            "location": 143,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filepath": [],
                "level": [],
                "format": [],
                "backup_count": [
                    "int"
                ],
                "when": [
                    "typing.Text"
                ],
                "interval": [
                    "int"
                ]
            }
        }
    },
    "scraper-TW-hotels-master/infra/logging/loader.py": {
        "YamlLoader.load": {
            "name": "load",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "JsonLoader.load": {
            "name": "load",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "path": []
            }
        }
    },
    "scraper-TW-hotels-master/infra/logging/__init__.py": {},
    "scraper-TW-hotels-master/settings/config.py": {},
    "scraper-TW-hotels-master/settings/__init__.py": {}
}
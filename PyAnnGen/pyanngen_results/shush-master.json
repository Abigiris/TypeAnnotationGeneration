{
    "shush-master/setup.py": {},
    "shush-master/examples/helloworld.py": {},
    "shush-master/shush/client.py": {
        "Client.kms_key_path": {
            "name": "kms_key_path",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.bucket_name": {
            "name": "bucket_name",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.bucket": {
            "name": "bucket",
            "location": 32,
            "return": [
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "project_id": [
                    "str"
                ],
                "bucket_location": [
                    "str"
                ],
                "keyring_location": [
                    "str"
                ],
                "credentials": [
                    "str",
                    "None"
                ],
                "bucket_name_template": [
                    "str"
                ]
            }
        },
        "Client.initialize": {
            "name": "initialize",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client._get_secret_path": {
            "name": "_get_secret_path",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Client._get_secret_blob": {
            "name": "_get_secret_blob",
            "location": 95,
            "return": [
                "str",
                "float",
                "None",
                "bool",
                "list[str]",
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Client.list_secrets": {
            "name": "list_secrets",
            "location": 105,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.read_secret": {
            "name": "read_secret",
            "location": 109,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "secret_name": [
                    "str"
                ]
            }
        },
        "Client.write_secret": {
            "name": "write_secret",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "plaintext": [
                    "bytes"
                ]
            }
        },
        "Client.write_secret_from_file": {
            "name": "write_secret_from_file",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "plainfile": [
                    "BinaryIO"
                ]
            }
        },
        "Client.destroy_secret": {
            "name": "destroy_secret",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "secret_name": [
                    "str"
                ]
            }
        }
    },
    "shush-master/shush/__init__.py": {},
    "shush-master/tests/test_client.py": {
        "TestInitialise.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInitialise.tearDown": {
            "name": "tearDown",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInitialise.test_creates_key_ring": {
            "name": "test_creates_key_ring",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInitialise.test_creates_default_crypto_key": {
            "name": "test_creates_default_crypto_key",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInitialise.test_creates_bucket": {
            "name": "test_creates_bucket",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWriteSecretMethods.setUp": {
            "name": "setUp",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWriteSecretMethods.tearDown": {
            "name": "tearDown",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWriteSecretMethods.test_opened_file_not_binary_raises_error": {
            "name": "test_opened_file_not_binary_raises_error",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "simple_html-main/bench/current_code.py": {},
    "simple_html-main/bench/jinja_render.py": {},
    "simple_html-main/bench/__init__.py": {},
    "simple_html-main/bench/jinja_example/__init__.py": {},
    "simple_html-main/simple_html/attributes.py": {
        "bool_attr": {
            "name": "bool_attr",
            "location": 7,
            "return": [
                "Tuple[(_T0, _T0)]"
            ],
            "arguments": {
                "attr_name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "int_attr": {
            "name": "int_attr",
            "location": 14,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "attr_name": [
                    "str",
                    "Set[str]"
                ]
            }
        },
        "str_attr": {
            "name": "str_attr",
            "location": 21,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "attr_name": [
                    "str"
                ]
            }
        },
        "style": {
            "name": "style",
            "location": 28,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "props": [
                    "Tuple[Union[str,...]]",
                    "Dict[str,float]",
                    "Mapping",
                    "Optional[Tuple[str,...]]"
                ]
            }
        },
        "no_value": {
            "name": "no_value",
            "location": 32,
            "return": [
                "Tuple[(_T0, None)]"
            ],
            "arguments": {
                "attr_name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "int_attr.closure": {
            "name": "closure",
            "location": 15,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "val": []
            }
        },
        "str_attr.closure": {
            "name": "closure",
            "location": 22,
            "return": [
                "str",
                "Tuple[str]"
            ],
            "arguments": {
                "val": [
                    "str",
                    "int",
                    "dict"
                ]
            }
        }
    },
    "simple_html-main/simple_html/doctype.py": {
        "doctype": {
            "name": "doctype",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "details": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "simple_html-main/simple_html/nodes.py": {
        "FlatGroup.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_base": [
                    "str",
                    "bool",
                    "None",
                    "Optional[str]",
                    "int"
                ],
                "attributes": [
                    "Tuple",
                    "int",
                    "bool",
                    "Mapping[str,Any]",
                    "Optional[str]"
                ],
                "children": [
                    "Tuple",
                    "int",
                    "bool",
                    "Mapping[str,Any]",
                    "Optional[str]"
                ]
            }
        },
        "Tag.__call__": {
            "name": "__call__",
            "location": 39,
            "return": [
                "Tag"
            ],
            "arguments": {
                "self": [
                    "_TTag@@Tag@@"
                ]
            }
        },
        "Tag.attrs": {
            "name": "attrs",
            "location": 44,
            "return": [
                "Tag"
            ],
            "arguments": {
                "self": [
                    "_TTag@@Tag@@"
                ]
            }
        },
        "TagBase.__call__": {
            "name": "__call__",
            "location": 57,
            "return": [
                "Tag"
            ],
            "arguments": {
                "self": []
            }
        },
        "TagBase.attrs": {
            "name": "attrs",
            "location": 61,
            "return": [
                "Tag"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "simple_html-main/simple_html/render.py": {
        "render_tag": {
            "name": "render_tag",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "tag": [
                    "str",
                    "List[str]",
                    "Mapping[str,str]",
                    "Mapping",
                    "Sequence[str]",
                    "Dict",
                    "Optional[str]",
                    "List",
                    "None",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "render": {
            "name": "render",
            "location": 29,
            "return": [
                "str",
                "Text",
                "Dict[str,Any]",
                "Mapping[str,Any]"
            ],
            "arguments": {
                "node": [
                    "Sequence[object]",
                    "mypy.nodes.ClassDef"
                ]
            }
        },
        "render_with_doctype": {
            "name": "render_with_doctype",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "node": [
                    "Type",
                    "Optional[str]",
                    "str",
                    "Type[T]",
                    "None"
                ],
                "doc_type_details": [
                    "Text",
                    "Type",
                    "Optional[str]",
                    "Type[T]"
                ]
            }
        }
    },
    "simple_html-main/simple_html/__init__.py": {},
    "simple_html-main/tests/test_render.py": {
        "test_renders_no_children": {
            "name": "test_renders_no_children",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_renders_children": {
            "name": "test_renders_children",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_hello_world": {
            "name": "test_hello_world",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string_attrs_work_as_expected": {
            "name": "test_string_attrs_work_as_expected",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_escapes_normal_strings": {
            "name": "test_escapes_normal_strings",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_safe_strings_are_not_escaped": {
            "name": "test_safe_strings_are_not_escaped",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_simple_form": {
            "name": "test_simple_form",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_safestring_in_tag": {
            "name": "test_safestring_in_tag",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_script_tag_doesnt_self_close": {
            "name": "test_script_tag_doesnt_self_close",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_kw_attributes": {
            "name": "test_kw_attributes",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_uncalled_tag_renders": {
            "name": "test_uncalled_tag_renders",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_attribute_without_value_rendered_as_expected": {
            "name": "test_attribute_without_value_rendered_as_expected",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_render_with_doctype": {
            "name": "test_render_with_doctype",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_render_flat_group": {
            "name": "test_render_flat_group",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_render_kw_attribute_with_none": {
            "name": "test_render_kw_attribute_with_none",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_can_render_none": {
            "name": "test_can_render_none",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "simple_html-main/tests/__init__.py": {}
}
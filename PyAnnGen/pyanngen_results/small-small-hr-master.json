{
    "small-small-hr-master/manage.py": {},
    "small-small-hr-master/setup.py": {},
    "small-small-hr-master/small_small_hr/admin.py": {},
    "small-small-hr-master/small_small_hr/apps.py": {
        "mptt_callback": {
            "name": "mptt_callback",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "int",
                    "str",
                    "typing.Iterable['Context']",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "SmallSmallHrConfig.ready": {
            "name": "ready",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/small_small_hr/constants.py": {},
    "small-small-hr-master/small_small_hr/emails.py": {
        "send_request_for_leave_review": {
            "name": "send_request_for_leave_review",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "reviewer": [
                    "str",
                    "int"
                ]
            }
        },
        "send_request_for_overtime_review": {
            "name": "send_request_for_overtime_review",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "reviewer": [
                    "str",
                    "int"
                ]
            }
        },
        "send_leave_review_complete_notice": {
            "name": "send_leave_review_complete_notice",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "review_obj": [
                    "bool",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "send_overtime_review_complete_notice": {
            "name": "send_overtime_review_complete_notice",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "review_obj": [
                    "bool",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        }
    },
    "small-small-hr-master/small_small_hr/forms.py": {
        "AnnualLeaveForm.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RoleForm.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FreeDayForm.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OverTimeForm.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OverTimeForm.clean": {
            "name": "clean",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApplyOverTimeForm.__init__": {
            "name": "__init__",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApplyOverTimeForm.save": {
            "name": "save",
            "location": 226,
            "return": [
                "str",
                "list[None]",
                "Dict[str, str]",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "dict",
                    "str",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "LeaveForm.__init__": {
            "name": "__init__",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeaveForm.clean_start": {
            "name": "clean_start",
            "location": 272,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeaveForm.clean_end": {
            "name": "clean_end",
            "location": 282,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeaveForm.clean": {
            "name": "clean",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApplyLeaveForm.__init__": {
            "name": "__init__",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApplyLeaveForm.save": {
            "name": "save",
            "location": 395,
            "return": [
                "str",
                "list[None]",
                "Dict[str, str]",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "dict",
                    "str",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "StaffDocumentForm.__init__": {
            "name": "__init__",
            "location": 416,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserStaffDocumentForm.__init__": {
            "name": "__init__",
            "location": 453,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileAdminForm.__init__": {
            "name": "__init__",
            "location": 532,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileAdminForm.clean_id_number": {
            "name": "clean_id_number",
            "location": 570,
            "return": [
                "str",
                "int",
                "typing.Type",
                "list[str]",
                "dict[str, list[str]]",
                "tuple[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileAdminForm.clean_nssf": {
            "name": "clean_nssf",
            "location": 582,
            "return": [
                "int",
                "str",
                "tuple[typing.Union[int,int]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileAdminForm.clean_nhif": {
            "name": "clean_nhif",
            "location": 595,
            "return": [
                "int",
                "str",
                "tuple[typing.Union[int,int]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileAdminForm.clean_pin_number": {
            "name": "clean_pin_number",
            "location": 608,
            "return": [
                "int",
                "str",
                "tuple[typing.Union[int,int]]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileAdminForm.save": {
            "name": "save",
            "location": 621,
            "return": [
                "str",
                "Dict[str, str]",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "dict",
                    "str",
                    "Tuple[Tuple[str, ...]]"
                ]
            }
        },
        "StaffProfileAdminCreateForm.__init__": {
            "name": "__init__",
            "location": 686,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfileUserForm.__init__": {
            "name": "__init__",
            "location": 750,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/small_small_hr/managers.py": {
        "LeaveManager.get_queryset": {
            "name": "get_queryset",
            "location": 12,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/small_small_hr/models.py": {
        "get_days": {
            "name": "get_days",
            "location": 516,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "start": [
                    "object"
                ],
                "end": [
                    "object"
                ]
            }
        },
        "get_real_leave_duration": {
            "name": "get_real_leave_duration",
            "location": 526,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "leave_obj": [
                    "Leave"
                ]
            }
        },
        "get_taken_leave_days": {
            "name": "get_taken_leave_days",
            "location": 544,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "staffprofile": [
                    "object"
                ],
                "status": [
                    "str"
                ],
                "leave_type": [
                    "str"
                ],
                "start_year": [
                    "int"
                ],
                "end_year": [
                    "int"
                ]
            }
        },
        "Role.__str__": {
            "name": "__str__",
            "location": 55,
            "return": [
                "str",
                "Optional[Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfile.get_name": {
            "name": "get_name",
            "location": 161,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfile._current_year": {
            "name": "_current_year",
            "location": 167,
            "return": [
                "str",
                "datetime.datetime",
                "datetime.date"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffProfile.get_approved_leave_days": {
            "name": "get_approved_leave_days",
            "location": 171,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "Optional[int]"
                ]
            }
        },
        "StaffProfile.get_approved_sick_days": {
            "name": "get_approved_sick_days",
            "location": 182,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "Optional[int]"
                ]
            }
        },
        "StaffProfile.get_available_leave_days": {
            "name": "get_available_leave_days",
            "location": 192,
            "return": [
                "Decimal",
                "str",
                "bool",
                "recidiviz.utils.regions.Region"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "Optional[int]"
                ]
            }
        },
        "StaffProfile.get_available_sick_days": {
            "name": "get_available_sick_days",
            "location": 204,
            "return": [
                "Decimal",
                "str",
                "bool",
                "recidiviz.utils.regions.Region"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "Optional[int]"
                ]
            }
        },
        "StaffProfile.__str__": {
            "name": "__str__",
            "location": 216,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaffDocument.__str__": {
            "name": "__str__",
            "location": 257,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Leave.__str__": {
            "name": "__str__",
            "location": 337,
            "return": [
                "str",
                "zerver.models.Realm",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Leave.get_duration": {
            "name": "get_duration",
            "location": 342,
            "return": [
                "str",
                "int",
                "List[int]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Leave.duration": {
            "name": "duration",
            "location": 347,
            "return": [
                "int",
                "str",
                "bool",
                "Optional[BaseException]",
                "Union[str, Tuple[str, ...]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Leave.day_count": {
            "name": "day_count",
            "location": 352,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "OverTime.__str__": {
            "name": "__str__",
            "location": 389,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OverTime.get_duration": {
            "name": "get_duration",
            "location": 394,
            "return": [
                "_datetime.timedelta"
            ],
            "arguments": {
                "self": []
            }
        },
        "OverTime.duration": {
            "name": "duration",
            "location": 401,
            "return": [
                "int",
                "str",
                "bool",
                "Optional[BaseException]",
                "Union[str, Tuple[str, ...]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnualLeave.__str__": {
            "name": "__str__",
            "location": 452,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnualLeave.get_cumulative_leave_taken": {
            "name": "get_cumulative_leave_taken",
            "location": 459,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnualLeave.get_available_leave_days": {
            "name": "get_available_leave_days",
            "location": 473,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": [],
                "month": [
                    "int"
                ]
            }
        },
        "FreeDay.__str__": {
            "name": "__str__",
            "location": 511,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/small_small_hr/reviews.py": {
        "set_staff_request_review_user": {
            "name": "set_staff_request_review_user",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "review_obj": [
                    "bytes",
                    "django.db.models.Model",
                    "float",
                    "typing.Any",
                    "int",
                    "str",
                    "Any",
                    "typing.Sequence[int]",
                    "Sequence[int]"
                ]
            }
        },
        "set_staff_request_reviewer": {
            "name": "set_staff_request_reviewer",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "review_obj": [
                    "str",
                    "django.db.models.Model",
                    "models.Payment"
                ]
            }
        }
    },
    "small-small-hr-master/small_small_hr/serializers.py": {
        "StaffProfileSerializer.get_id_number": {
            "name": "get_id_number",
            "location": 80,
            "return": [
                "str",
                "Optional[int]",
                "int",
                "dict",
                "socialhome.users.models.Profile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "dict",
                    "int",
                    "dict[, ]",
                    "Optional[float]",
                    "float",
                    "None"
                ]
            }
        },
        "StaffProfileSerializer.get_phone": {
            "name": "get_phone",
            "location": 86,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_sex": {
            "name": "get_sex",
            "location": 92,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_role": {
            "name": "get_role",
            "location": 98,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_nhif": {
            "name": "get_nhif",
            "location": 104,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_nssf": {
            "name": "get_nssf",
            "location": 110,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_pin_number": {
            "name": "get_pin_number",
            "location": 116,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_address": {
            "name": "get_address",
            "location": 122,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_birthday": {
            "name": "get_birthday",
            "location": 128,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_leave_days": {
            "name": "get_leave_days",
            "location": 134,
            "return": [
                "str",
                "bool",
                "Dict[int, dict]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "Optional[str]",
                    "int",
                    "dict",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "StaffProfileSerializer.get_sick_days": {
            "name": "get_sick_days",
            "location": 140,
            "return": [
                "str",
                "bool",
                "Dict[int, dict]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "Optional[str]",
                    "int",
                    "dict",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "StaffProfileSerializer.get_overtime_allowed": {
            "name": "get_overtime_allowed",
            "location": 146,
            "return": [
                "bool",
                "int",
                "str",
                "dict"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "int",
                    "dict",
                    "dict[, ]",
                    "Mapping[str, Any]",
                    "typing.Mapping",
                    "Optional[float]",
                    "float",
                    "None"
                ]
            }
        },
        "StaffProfileSerializer.get_start_date": {
            "name": "get_start_date",
            "location": 152,
            "return": [
                "str",
                "zerver.models.Realm",
                "int",
                "Mapping",
                "Optional[gdpr.models.LegalReason]"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "Optional[str]",
                    "None",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "StaffProfileSerializer.get_end_date": {
            "name": "get_end_date",
            "location": 158,
            "return": [
                "bool",
                "Optional[str]",
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "Optional[str]",
                    "None",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "StaffProfileSerializer.get_emergency_contact_name": {
            "name": "get_emergency_contact_name",
            "location": 164,
            "return": [
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "Optional[str]",
                    "Callable[[Any], bool]",
                    "None",
                    "Dict[str, Any]",
                    "typing.Callable[typing.Any, bool]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "StaffProfileSerializer.get_emergency_contact_number": {
            "name": "get_emergency_contact_number",
            "location": 170,
            "return": [
                "str",
                "Optional[int]",
                "zerver.models.UserProfile"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "small-small-hr-master/small_small_hr/settings.py": {},
    "small-small-hr-master/small_small_hr/signals.py": {
        "create_staffprofile": {
            "name": "create_staffprofile",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "str",
                    "int",
                    "bool"
                ],
                "instance": [
                    "str",
                    "int",
                    "List[int]",
                    "list[int]"
                ],
                "created": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]",
                    "Tuple[str, str, str]",
                    "tuple[typing.Union[str,str,str]]",
                    "Dict[str, Tuple[str, str]]",
                    "dict[str, tuple[typing.Union[str,str]]]"
                ]
            }
        }
    },
    "small-small-hr-master/small_small_hr/utils.py": {
        "get_carry_over": {
            "name": "get_carry_over",
            "location": 12,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "staffprofile": [
                    "small_small_hr.models.StaffProfile"
                ],
                "year": [
                    "int"
                ],
                "leave_type": [
                    "str"
                ]
            }
        },
        "create_annual_leave": {
            "name": "create_annual_leave",
            "location": 32,
            "return": [
                "bool",
                "float",
                "str",
                "int",
                "dict[typing.Any, str]",
                "list[]",
                "dict[int, str]",
                "AnnualLeave"
            ],
            "arguments": {
                "staffprofile": [
                    "small_small_hr.models.StaffProfile"
                ],
                "year": [
                    "int"
                ],
                "leave_type": [
                    "str"
                ]
            }
        },
        "create_free_days": {
            "name": "create_free_days",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "start_year": [
                    "int"
                ],
                "number_of_years": [
                    "int"
                ]
            }
        }
    },
    "small-small-hr-master/small_small_hr/views.py": {},
    "small-small-hr-master/small_small_hr/__init__.py": {},
    "small-small-hr-master/small_small_hr/migrations/0001_initial.py": {},
    "small-small-hr-master/small_small_hr/migrations/0002_auto_20180722_1808.py": {},
    "small-small-hr-master/small_small_hr/migrations/0003_staffdocument_public.py": {},
    "small-small-hr-master/small_small_hr/migrations/0004_auto_20180725_2127.py": {},
    "small-small-hr-master/small_small_hr/migrations/0005_auto_20181115_2112.py": {},
    "small-small-hr-master/small_small_hr/migrations/0006_auto_20181209_0108.py": {},
    "small-small-hr-master/small_small_hr/migrations/0007_auto_20190625_2111.py": {},
    "small-small-hr-master/small_small_hr/migrations/0008_auto_20200607_1537.py": {},
    "small-small-hr-master/small_small_hr/migrations/0009_auto_20200607_2244.py": {},
    "small-small-hr-master/small_small_hr/migrations/0010_auto_20200626_1313.py": {},
    "small-small-hr-master/small_small_hr/migrations/0011_auto_20220131_1640.py": {},
    "small-small-hr-master/small_small_hr/migrations/__init__.py": {},
    "small-small-hr-master/small_small_hr/templatetags/small_small_hr.py": {
        "overtime_duration": {
            "name": "overtime_duration",
            "location": 11,
            "return": [
                "typing.Text",
                "str",
                "Optional[str]",
                "int"
            ],
            "arguments": {
                "time_delta": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "small-small-hr-master/small_small_hr/templatetags/__init__.py": {},
    "small-small-hr-master/tests/settings.py": {},
    "small-small-hr-master/tests/test_emails.py": {
        "TestEmails.setUp": {
            "name": "setUp",
            "location": 28,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEmails.test_leave_emails": {
            "name": "test_leave_emails",
            "location": 50,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEmails.test_overtime_emails": {
            "name": "test_overtime_emails",
            "location": 120,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/tests/test_forms.py": {
        "TestForms.setUp": {
            "name": "setUp",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_annual_leave_form": {
            "name": "test_annual_leave_form",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_annual_leave_form_decimals": {
            "name": "test_annual_leave_form_decimals",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_role_form": {
            "name": "test_role_form",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_freeday_form": {
            "name": "test_freeday_form",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_overtime_form_apply": {
            "name": "test_overtime_form_apply",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_overtime_form_apply_no_overlap": {
            "name": "test_overtime_form_apply_no_overlap",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_overtime_form_process": {
            "name": "test_overtime_form_process",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_overtime_form_process_with_overlap": {
            "name": "test_overtime_form_process_with_overlap",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_overtime_form_start_end": {
            "name": "test_overtime_form_start_end",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_apply": {
            "name": "test_leaveform_apply",
            "location": 365,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leave_oversubscribe": {
            "name": "test_leave_oversubscribe",
            "location": 421,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leave_oversubscribe_off": {
            "name": "test_leave_oversubscribe_off",
            "location": 492,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_one_day_leave": {
            "name": "test_one_day_leave",
            "location": 537,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_no_overlap": {
            "name": "test_leaveform_no_overlap",
            "location": 587,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_admin": {
            "name": "test_leaveform_admin",
            "location": 639,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_process": {
            "name": "test_leaveform_process",
            "location": 684,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_process_with_overlap": {
            "name": "test_leaveform_process_with_overlap",
            "location": 729,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_sickleave_apply": {
            "name": "test_sickleave_apply",
            "location": 784,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_sickleave_process": {
            "name": "test_sickleave_process",
            "location": 828,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_start_end": {
            "name": "test_leaveform_start_end",
            "location": 872,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_max_days": {
            "name": "test_leaveform_max_days",
            "location": 932,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_leaveform_max_sick_days": {
            "name": "test_leaveform_max_sick_days",
            "location": 977,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffdocumentform": {
            "name": "test_staffdocumentform",
            "location": 1022,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_userstaffdocumentform": {
            "name": "test_userstaffdocumentform",
            "location": 1073,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staff_profile_user_form": {
            "name": "test_staff_profile_user_form",
            "location": 1122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffprofile_user_form_no_image": {
            "name": "test_staffprofile_user_form_no_image",
            "location": 1189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staff_profile_admin_create_form": {
            "name": "test_staff_profile_admin_create_form",
            "location": 1245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staff_profile_admin_form": {
            "name": "test_staff_profile_admin_form",
            "location": 1323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffprofile_admin_form_no_image": {
            "name": "test_staffprofile_admin_form_no_image",
            "location": 1400,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffprofile_unique_pin_number": {
            "name": "test_staffprofile_unique_pin_number",
            "location": 1464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffprofile_unique_id_number": {
            "name": "test_staffprofile_unique_id_number",
            "location": 1491,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffprofile_unique_nssf": {
            "name": "test_staffprofile_unique_nssf",
            "location": 1516,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestForms.test_staffprofile_unique_nhif": {
            "name": "test_staffprofile_unique_nhif",
            "location": 1541,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/tests/test_models.py": {
        "TestModels.test_annualleave_str": {
            "name": "test_annualleave_str",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_freedays_str": {
            "name": "test_freedays_str",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_leave_day_count": {
            "name": "test_leave_day_count",
            "location": 57,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_annualleave_get_available_leave_days": {
            "name": "test_annualleave_get_available_leave_days",
            "location": 98,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_annualleave_cumulative_leave_taken": {
            "name": "test_annualleave_cumulative_leave_taken",
            "location": 161,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_available_leave_days": {
            "name": "test_available_leave_days",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_staffprofile_str": {
            "name": "test_staffprofile_str",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_get_approved_leave_days": {
            "name": "test_get_approved_leave_days",
            "location": 288,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_get_approved_sick_days": {
            "name": "test_get_approved_sick_days",
            "location": 325,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_staffprofile_get_available_leave_days": {
            "name": "test_staffprofile_get_available_leave_days",
            "location": 362,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_one_leave_day": {
            "name": "test_one_leave_day",
            "location": 404,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_staffprofile_get_available_sick_days": {
            "name": "test_staffprofile_get_available_sick_days",
            "location": 447,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_role_str": {
            "name": "test_role_str",
            "location": 478,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_staffdocument_str": {
            "name": "test_staffdocument_str",
            "location": 484,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_leave_str": {
            "name": "test_leave_str",
            "location": 495,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_overtime_str": {
            "name": "test_overtime_str",
            "location": 508,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_overtime_duration": {
            "name": "test_overtime_duration",
            "location": 525,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_get_taken_leave_days": {
            "name": "test_get_taken_leave_days",
            "location": 555,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModels.test_get_taken_leave_days_half_saturday": {
            "name": "test_get_taken_leave_days_half_saturday",
            "location": 595,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/tests/test_process.py": {
        "TestProcess.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProcess.test_leave_review_process": {
            "name": "test_leave_review_process",
            "location": 48,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestProcess.test_overtime_review_process": {
            "name": "test_overtime_review_process",
            "location": 172,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": [],
                "mock": []
            }
        }
    },
    "small-small-hr-master/tests/test_serializers.py": {
        "TestSerializers.test_staffprofileserializer_fields": {
            "name": "test_staffprofileserializer_fields",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/tests/test_signals.py": {
        "TestSignals.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignals.test_create_staffprofile": {
            "name": "test_create_staffprofile",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/tests/test_utils.py": {
        "TestUtils.test_get_carry_over": {
            "name": "test_get_carry_over",
            "location": 29,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_create_annual_leave": {
            "name": "test_create_annual_leave",
            "location": 74,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_create_free_days": {
            "name": "test_create_free_days",
            "location": 126,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "small-small-hr-master/tests/urls.py": {
        "homeview": {
            "name": "homeview",
            "location": 6,
            "return": [
                "HttpResponse",
                "List[str]",
                "Dict[str, Any]",
                "Dict[str, dict]",
                "str",
                "bool"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        }
    },
    "small-small-hr-master/tests/__init__.py": {},
    "small-small-hr-master/tests/snapshots/snap_test_emails.py": {},
    "small-small-hr-master/tests/snapshots/__init__.py": {}
}
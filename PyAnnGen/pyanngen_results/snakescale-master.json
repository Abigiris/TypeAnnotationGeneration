{
    "snakescale-master/setup.py": {},
    "snakescale-master/conda-recipe/run_test.py": {},
    "snakescale-master/docs/conf.py": {},
    "snakescale-master/snakescale/formatters.py": {
        "clean_picard_style_value": {
            "name": "clean_picard_style_value",
            "location": 17,
            "return": [
                "Union[(list, str, _T0)]"
            ],
            "arguments": {
                "value": [
                    "List[str]",
                    "Union[List[str],str]",
                    "List",
                    "str",
                    "mypy.types.Type"
                ]
            }
        },
        "format_bed_key": {
            "name": "format_bed_key",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "key": [
                    "str",
                    "int",
                    "Set[str]"
                ]
            }
        },
        "snakecase_to_kebab_case": {
            "name": "snakecase_to_kebab_case",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "key": [
                    "str"
                ]
            }
        },
        "clean_picard_style_key": {
            "name": "clean_picard_style_key",
            "location": 41,
            "return": [
                "str",
                "Dict[str,str]",
                "int"
            ],
            "arguments": {
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "format_bedtools_params": {
            "name": "format_bedtools_params",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "Dict[str,int]",
                    "Dict[str,float]",
                    "Mapping"
                ]
            }
        },
        "format_bwa_params": {
            "name": "format_bwa_params",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "Dict[str,int]",
                    "Dict[str,float]",
                    "Mapping"
                ]
            }
        },
        "format_dwgsim_params": {
            "name": "format_dwgsim_params",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "Dict[str,int]",
                    "Dict[str,float]",
                    "Mapping"
                ]
            }
        },
        "format_fgbio_params": {
            "name": "format_fgbio_params",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "Dict[str,int]",
                    "Dict[str,float]",
                    "Mapping"
                ]
            }
        },
        "format_kraken_params": {
            "name": "format_kraken_params",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "Dict[str,int]",
                    "Dict[str,float]",
                    "Mapping"
                ]
            }
        },
        "format_picard_params": {
            "name": "format_picard_params",
            "location": 137,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "Dict[str,int]",
                    "Dict[str,float]",
                    "Mapping"
                ]
            }
        }
    },
    "snakescale-master/snakescale/resources.py": {
        "collect_jvm_resources": {
            "name": "collect_jvm_resources",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "collect_picard_style_jvm_resources": {
            "name": "collect_picard_style_jvm_resources",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "snakescale-master/snakescale/testing.py": {
        "run_tool_test": {
            "name": "run_tool_test",
            "location": 15,
            "return": [
                "Dict[str,Any]",
                "Set[str]",
                "str",
                "Tuple[Union[str,str,str,str,str]]",
                "Union[tuple,list]",
                "int",
                "Set",
                "List[bytes]",
                "Pattern"
            ],
            "arguments": {
                "tool": [
                    "str",
                    "int",
                    "Union[pathlib.Path,str]",
                    "None",
                    "Optional[int]",
                    "bool"
                ],
                "subtool": [
                    "str",
                    "None",
                    "Union[pathlib.Path,str]",
                    "int",
                    "Optional[int]",
                    "bool"
                ],
                "version": [
                    "Text",
                    "str",
                    "Union[pathlib.Path,str]",
                    "Optional[int]",
                    "bool"
                ]
            }
        }
    },
    "snakescale-master/snakescale/utils.py": {
        "call_snakemake": {
            "name": "call_snakemake",
            "location": 44,
            "return": [
                "ProcessReturn",
                "Callable",
                "int"
            ],
            "arguments": {
                "arguments": [
                    "Callable",
                    "int",
                    "float"
                ]
            }
        },
        "ExitCode.__new__": {
            "name": "__new__",
            "location": 22,
            "return": [
                "ExitCode"
            ],
            "arguments": {
                "cls": [
                    "Type[_TExitCode]"
                ],
                "exit_code": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "ExitCode.is_ok": {
            "name": "is_ok",
            "location": 27,
            "return": [
                "bool",
                "str",
                "Dict[str,str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExitCode.__repr__": {
            "name": "__repr__",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "snakescale-master/snakescale/__init__.py": {
        "available_tools": {
            "name": "available_tools",
            "location": 26,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "version": [
                    "Text",
                    "str",
                    "cmk.utils.type_defs.SectionName"
                ]
            }
        },
        "available_subtools": {
            "name": "available_subtools",
            "location": 33,
            "return": [
                "Optional[List[str]]"
            ],
            "arguments": {
                "tool": [
                    "str",
                    "Dict",
                    "Optional[float]",
                    "float",
                    "None"
                ],
                "version": [
                    "Text",
                    "str",
                    "Optional[float]",
                    "Dict"
                ]
            }
        },
        "scale": {
            "name": "scale",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "tool": [
                    "str",
                    "bool",
                    "int"
                ],
                "subtool": [
                    "None",
                    "bool",
                    "str",
                    "Optional[str]",
                    "List",
                    "Optional[int]",
                    "Optional[pathlib.Path]",
                    "Optional[IO[bytes]]"
                ],
                "version": [
                    "Text",
                    "str",
                    "pathlib.Path",
                    "bool",
                    "Optional[str]"
                ],
                "as_uri": [
                    "bool",
                    "pathlib.Path",
                    "Union[str,pathlib.Path]",
                    "Optional[Union[str,pathlib.Path]]",
                    "List"
                ]
            }
        }
    },
    "snakescale-master/snakescale/wrappers/latest/bedtools/subtract/wrapper.py": {},
    "snakescale-master/tests/test_utils.py": {
        "test_exit_code": {
            "name": "test_exit_code",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "integer": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "snakescale-master/tests/test_wrappers.py": {
        "test_bedtools_subtract": {
            "name": "test_bedtools_subtract",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
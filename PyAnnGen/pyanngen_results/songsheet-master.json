{
    "songsheet-master/setup.py": {},
    "songsheet-master/doc/source/conf.py": {},
    "songsheet-master/songsheet/__init__.py": {
        "compose": {
            "name": "compose",
            "location": 62,
            "return": [
                "int",
                "str",
                "Dict[str, int]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "normalize_line_breaks": {
            "name": "normalize_line_breaks",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str",
                    "bytes",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "is_chord_line": {
            "name": "is_chord_line",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "chord_line": [
                    "List[str]",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "compact_chords": {
            "name": "compact_chords",
            "location": 140,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "line": [
                    "List[str]",
                    "List[List[str]]",
                    "list",
                    "str",
                    "List[dict]",
                    "List[Tuple[int, str]]"
                ]
            }
        },
        "normalize_chord_case": {
            "name": "normalize_chord_case",
            "location": 171,
            "return": [
                "str",
                "Optional[int]",
                "bool",
                "int"
            ],
            "arguments": {
                "word": [
                    "str",
                    "float",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "serialize": {
            "name": "serialize",
            "location": 187,
            "return": [
                "Tuple[(tuple, ...)]"
            ],
            "arguments": {
                "songsheet_str": [
                    "str"
                ]
            }
        },
        "to_json": {
            "name": "to_json",
            "location": 229,
            "return": [
                "str",
                "Optional[str]",
                "float",
                "bool"
            ],
            "arguments": {
                "s": [
                    "Optional[bool]",
                    "bool",
                    "Optional[str]",
                    "None",
                    "str"
                ],
                "indent": [
                    "int",
                    "str",
                    "List"
                ]
            }
        },
        "to_str": {
            "name": "to_str",
            "location": 248,
            "return": [
                "str"
            ],
            "arguments": {
                "lines": [
                    "List[List[str]]",
                    "List[str]",
                    "List[Tuple[int, str]]",
                    "List[Tuple[str, str]]",
                    "List[Tuple[int, int, Any]]"
                ]
            }
        }
    },
    "songsheet-master/test/test_songsheet.py": {
        "test_compose": {
            "name": "test_compose",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_chords": {
            "name": "test_valid_chords",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_wrong_incidentals": {
            "name": "test_no_wrong_incidentals",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_strip_spaces_each_line": {
            "name": "test_strip_spaces_each_line",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_normalize_line_breaks": {
            "name": "test_normalize_line_breaks",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean": {
            "name": "test_clean",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_is_chord_line": {
            "name": "test_is_chord_line",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_normalize_chord_case_one": {
            "name": "test_normalize_chord_case_one",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_normalize_chord_case_two": {
            "name": "test_normalize_chord_case_two",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_normalize_chord_case_rest": {
            "name": "test_normalize_chord_case_rest",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_serialize": {
            "name": "test_serialize",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_serialize_case": {
            "name": "test_serialize_case",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_json": {
            "name": "test_to_json",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_json_indent": {
            "name": "test_to_json_indent",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_compact_chords": {
            "name": "test_compact_chords",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_to_str": {
            "name": "test_to_str",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
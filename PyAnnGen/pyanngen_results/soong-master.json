{
    "soong-master/setup.py": {},
    "soong-master/soong/dml.py": {
        "insert": {
            "name": "insert",
            "location": 13,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "table": [
                    "str"
                ],
                "values": [
                    "Dict[(str, Any)]"
                ],
                "returning": [
                    "Optional[Union[(str, List[str])]]"
                ]
            }
        },
        "update": {
            "name": "update",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "table": [
                    "str"
                ],
                "id": [
                    "str",
                    "set",
                    "bytes",
                    "set[]",
                    "dict",
                    "dict[, ]"
                ],
                "values": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "execute": {
            "name": "execute",
            "location": 80,
            "return": [
                "None",
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "sql": [
                    "str"
                ],
                "params": [
                    "tuple"
                ],
                "returning": [
                    "bool"
                ]
            }
        }
    },
    "soong-master/soong/query.py": {
        "_build_query": {
            "name": "_build_query",
            "location": 14,
            "return": [
                "Tuple[(str, tuple)]"
            ],
            "arguments": {
                "table": [
                    "str",
                    "int",
                    "Optional[List[str]]",
                    "list[str]",
                    "dict",
                    "None",
                    "dict[, ]"
                ],
                "qualifications": [
                    "dict[, ]",
                    "dict",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "Optional[Dict[str, Any]]",
                    "Iterable[Tuple[Hashable, Any]]"
                ],
                "select_list": [
                    "str",
                    "int",
                    "Optional[List[str]]",
                    "list[str]",
                    "dict",
                    "None",
                    "dict[, ]"
                ],
                "limit": [
                    "str",
                    "int",
                    "Tuple[int, int]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "select": {
            "name": "select",
            "location": 46,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "table": [
                    "str"
                ],
                "qualifications": [
                    "dict"
                ],
                "select_list": [
                    "list"
                ],
                "limit": [
                    "Optional[int]"
                ],
                "arraysize": [
                    "int"
                ]
            }
        },
        "select_one": {
            "name": "select_one",
            "location": 79,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "table": [
                    "str"
                ],
                "qualifications": [
                    "dict"
                ],
                "select_list": [
                    "list"
                ]
            }
        },
        "get": {
            "name": "get",
            "location": 103,
            "return": [
                "str"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "table": [
                    "str"
                ],
                "id": [
                    "str",
                    "int",
                    "list[]",
                    "psycopg2.extensions.connection",
                    "list",
                    "list[I]",
                    "typing.Sequence[str]",
                    "List[\"libkol.types.ItemQuantity\"]",
                    "Sequence[str]"
                ],
                "select_list": [
                    "list"
                ]
            }
        },
        "execute": {
            "name": "execute",
            "location": 121,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "conn": [
                    "psycopg2._psycopg.connection"
                ],
                "sql": [
                    "str"
                ],
                "params": [
                    "tuple"
                ],
                "arraysize": [
                    "int"
                ]
            }
        }
    },
    "soong-master/soong/__init__.py": {
        "connection": {
            "name": "connection",
            "location": 26,
            "return": [
                "psycopg2._psycopg.connection"
            ],
            "arguments": {}
        },
        "connect": {
            "name": "connect",
            "location": 45,
            "return": [
                "psycopg2._psycopg.connection"
            ],
            "arguments": {}
        },
        "is_running_in_lambda": {
            "name": "is_running_in_lambda",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_iam_token": {
            "name": "get_iam_token",
            "location": 110,
            "return": [
                "str"
            ],
            "arguments": {
                "dsn": [
                    "dict"
                ]
            }
        }
    },
    "soong-master/tests/conftest.py": {
        "init_schema": {
            "name": "init_schema",
            "location": 12,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "pg": [
                    "pathlib.Path",
                    "bool",
                    "str",
                    "list"
                ]
            }
        },
        "conn": {
            "name": "conn",
            "location": 20,
            "return": [
                "str",
                "Tuple[str, str]",
                "dict",
                "int",
                "list"
            ],
            "arguments": {
                "init_schema": [
                    "str",
                    "Callable",
                    "bool",
                    "typing.Callable[, ]",
                    "Iterable[Any]",
                    "typing.Iterable[typing.Any]"
                ],
                "pg_connect": [
                    "str",
                    "int",
                    "None",
                    "list[int]",
                    "Optional[pathlib.Path]",
                    "Union[str, pathlib.Path]",
                    "List[int]",
                    "pathlib.Path"
                ]
            }
        }
    },
    "soong-master/tests/test_aws_support.py": {
        "test_is_not_running_in_lambda_cloud": {
            "name": "test_is_not_running_in_lambda_cloud",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_is_running_in_mock_lambda_cloud": {
            "name": "test_is_running_in_mock_lambda_cloud",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "Dict[str, Any]"
                ]
            }
        },
        "test_is_running_in_mock_sam_local": {
            "name": "test_is_running_in_mock_sam_local",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "Dict[str, Any]"
                ]
            }
        },
        "test_get_iam_token": {
            "name": "test_get_iam_token",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_connect_in_mock_lambda": {
            "name": "test_connect_in_mock_lambda",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        }
    },
    "soong-master/tests/test_connect.py": {
        "test_connect_args": {
            "name": "test_connect_args",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": [
                    "Dict[str, Any]"
                ]
            }
        },
        "test_connect_temp_pg": {
            "name": "test_connect_temp_pg",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "pg": [
                    "str",
                    "float"
                ]
            }
        },
        "test_new_connection": {
            "name": "test_new_connection",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "pg": [
                    "int",
                    "str",
                    "Tuple[float, float, float, float, float]",
                    "float"
                ]
            }
        },
        "test_connection_reconnects_closed": {
            "name": "test_connection_reconnects_closed",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "pg": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "soong-master/tests/test_dml.py": {
        "test_insert": {
            "name": "test_insert",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_insert_returning_single": {
            "name": "test_insert_returning_single",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_insert_returning_many": {
            "name": "test_insert_returning_many",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_update_one_value": {
            "name": "test_update_one_value",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "str"
                ]
            }
        },
        "test_update_many_values": {
            "name": "test_update_many_values",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "str"
                ]
            }
        },
        "test_execute": {
            "name": "test_execute",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_execute_returning": {
            "name": "test_execute_returning",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "str"
                ]
            }
        }
    },
    "soong-master/tests/test_query.py": {
        "test_build_query": {
            "name": "test_build_query",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_select": {
            "name": "test_select",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_select_one": {
            "name": "test_select_one",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_get": {
            "name": "test_get",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_execute": {
            "name": "test_execute",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [
                    "str",
                    "bytes"
                ]
            }
        }
    }
}
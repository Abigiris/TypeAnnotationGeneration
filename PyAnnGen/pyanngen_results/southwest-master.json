{
    "southwest-master/cli.py": {
        "cli": {
            "name": "cli",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "action": [
                    "str",
                    "bool",
                    "Tuple[str]"
                ],
                "confirmation_num": [
                    "str"
                ],
                "first_name": [
                    "str"
                ],
                "last_name": [
                    "str"
                ]
            }
        }
    },
    "southwest-master/southwest.py": {
        "Southwest.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "confirmation_num": [
                    "str",
                    "Dict[str,Any]"
                ],
                "first_name": [
                    "str",
                    "Dict[str,Any]"
                ],
                "last_name": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "Southwest._enter_configuration": {
            "name": "_enter_configuration",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Southwest._get_element": {
            "name": "_get_element",
            "location": 79,
            "return": [
                "webdriver.remote.webelement.WebElement"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "Southwest._parse_date_strings": {
            "name": "_parse_date_strings",
            "location": 82,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "self": [],
                "date": [
                    "str",
                    "datetime.datetime",
                    "datetime.timedelta"
                ],
                "time": [
                    "str"
                ],
                "period": [
                    "str"
                ]
            }
        },
        "Southwest._schedule_check_in": {
            "name": "_schedule_check_in",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "flight_dt": [
                    "str",
                    "datetime.datetime",
                    "int"
                ]
            }
        },
        "Southwest.schedule": {
            "name": "schedule",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Southwest.check_in": {
            "name": "check_in",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "southwest-master/southwest_api.py": {
        "FlightInfo.from_flight_info_dict": {
            "name": "from_flight_info_dict",
            "location": 22,
            "return": [
                "raiden.utils.Tuple[raiden.utils.Tuple[raiden.utils.TokenAddress, raiden.utils.ProportionalFeeAmount], ...]",
                "dict",
                "Dict[str, Any]",
                "cmk.utils.type_defs.UserId"
            ],
            "arguments": {
                "cls": [
                    "Dict",
                    "Dict[str,str]",
                    "Dict[str,Dict[str,str]]",
                    "str",
                    "Dict[str,dict[str,str]]",
                    "Mapping[str,utils.mssql_counters.Section]",
                    "Mapping"
                ],
                "flight_info_dict": [
                    "str",
                    "Dict[str,Any]",
                    "datetime.datetime",
                    "bool",
                    "Optional[datetime.datetime]",
                    "int"
                ]
            }
        },
        "FlightInfo.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CheckedInFlightInfo.from_checked_in_flight_dict": {
            "name": "from_checked_in_flight_dict",
            "location": 44,
            "return": [
                "Type",
                "datetime.datetime"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "Callable[S,bool]",
                    "str",
                    "Callable[[recidiviz.persistence.database.session.Session],bool]",
                    "None",
                    "Optional[str]",
                    "List[tuple[Union[int,int]]]",
                    "List[Tuple[int,int]]",
                    "Optional[Union[IPUtilityFunction,UtilityDistribution]]",
                    "int"
                ],
                "checked_in_flight_dict": [
                    "str",
                    "bool",
                    "openslides.utils.projector.ProjectorAllDataProvider",
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "CheckedInFlightInfo.__str__": {
            "name": "__str__",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SouthwestAPI.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "confirmation_num": [
                    "str"
                ],
                "first_name": [
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "last_name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "SouthwestAPI.get_reservation_info": {
            "name": "get_reservation_info",
            "location": 96,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "SouthwestAPI.schedule": {
            "name": "schedule",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SouthwestAPI.checkin": {
            "name": "checkin",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SouthwestAPI._checkin_get": {
            "name": "_checkin_get",
            "location": 145,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "self": []
            }
        },
        "SouthwestAPI._checkin_post": {
            "name": "_checkin_post",
            "location": 148,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "self": [],
                "check_in_token": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "southwest-master/southwest_browser.py": {
        "SouthwestBrowser.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "confirmation_num": [
                    "str",
                    "Dict[str,Any]"
                ],
                "first_name": [
                    "str",
                    "Dict[str,Any]"
                ],
                "last_name": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "SouthwestBrowser._get_element": {
            "name": "_get_element",
            "location": 64,
            "return": [
                "Optional[str]",
                "str",
                "set",
                "bool"
            ],
            "arguments": {
                "self": [],
                "field": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "SouthwestBrowser.checkin": {
            "name": "checkin",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SouthwestBrowser.get_browser_headers": {
            "name": "get_browser_headers",
            "location": 89,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "southwest-master/utils.py": {
        "retry": {
            "name": "retry",
            "location": 14,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "exceptions": [
                    "bool",
                    "int"
                ],
                "count": [
                    "int",
                    "bool"
                ],
                "delay_s": [
                    "int",
                    "bool"
                ]
            }
        },
        "retry.decorator": {
            "name": "decorator",
            "location": 17,
            "return": [
                "str",
                "int",
                "dict"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "Callable[..., None]"
                ]
            }
        },
        "retry.decorator.decorated": {
            "name": "decorated",
            "location": 19,
            "return": [
                "Dict[str, int]",
                "Generator",
                "int"
            ],
            "arguments": {}
        }
    }
}
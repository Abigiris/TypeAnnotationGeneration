{
    "sphinx-substitution-extensions-master/setup.py": {
        "_get_dependencies": {
            "name": "_get_dependencies",
            "location": 12,
            "return": [
                "list"
            ],
            "arguments": {
                "requirements_file": [
                    "str",
                    "None",
                    "Optional[str]",
                    "frozenset",
                    "pathlib.Path",
                    "FrozenSet[str]"
                ]
            }
        }
    },
    "sphinx-substitution-extensions-master/sample/source/conf.py": {},
    "sphinx-substitution-extensions-master/src/sphinx_substitution_extensions/extras.py": {
        "SubstitutionPrompt.run": {
            "name": "run",
            "location": 24,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sphinx-substitution-extensions-master/src/sphinx_substitution_extensions/shared.py": {},
    "sphinx-substitution-extensions-master/src/sphinx_substitution_extensions/__init__.py": {
        "_exists_dependency": {
            "name": "_exists_dependency",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "substitution_code_role": {
            "name": "substitution_code_role",
            "location": 67,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "typ": [
                    "Dict",
                    "List[str]",
                    "str",
                    "int",
                    "Mapping",
                    "docutils.parsers.rsstates.Inliner",
                    "Mapping[str,Any]"
                ],
                "rawtext": [
                    "str",
                    "Dict",
                    "Optional[Dict]",
                    "None"
                ],
                "text": [
                    "str",
                    "Dict",
                    "Optional[Dict]",
                    "None"
                ],
                "lineno": [
                    "Dict",
                    "List[str]",
                    "str",
                    "int",
                    "Mapping",
                    "docutils.parsers.rsstates.Inliner",
                    "Mapping[str,Any]"
                ],
                "inliner": [
                    "str",
                    "docutils.parsers.rsstates.Inliner",
                    "None",
                    "Optional[str]"
                ],
                "options": [
                    "Dict",
                    "List[str]",
                    "str",
                    "int",
                    "docutils.parsers.rsstates.Inliner",
                    "Mapping[str,Any]"
                ],
                "content": [
                    "List",
                    "Dict",
                    "List[str]",
                    "str",
                    "int",
                    "docutils.parsers.rsstates.Inliner",
                    "Mapping[str,Any]"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 112,
            "return": [
                "Dict[(str, bool)]"
            ],
            "arguments": {
                "app": [
                    "sphinx.application.Sphinx",
                    "Sphinx"
                ]
            }
        },
        "SubstitutionCodeBlock.run": {
            "name": "run",
            "location": 33,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sphinx-substitution-extensions-master/tests/test_substitution_extensions.py": {
        "test_no_substitution_code_block": {
            "name": "test_no_substitution_code_block",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path"
                ]
            }
        },
        "test_substitution_code_block": {
            "name": "test_substitution_code_block",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Dict[str, cerulean.Path]"
                ]
            }
        },
        "test_substitution_code_block_case_preserving": {
            "name": "test_substitution_code_block_case_preserving",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Dict[str, cerulean.Path]"
                ]
            }
        },
        "test_substitution_inline": {
            "name": "test_substitution_inline",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "path.Path"
                ]
            }
        },
        "test_substitution_inline_case_preserving": {
            "name": "test_substitution_inline_case_preserving",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "path.Path"
                ]
            }
        },
        "test_exists_dependency": {
            "name": "test_exists_dependency",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_does_not_exists_dependency": {
            "name": "test_does_not_exists_dependency",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sphinx-substitution-extensions-master/tests/test_substitution_extensions_extras.py": {
        "test_prompt_specified_late": {
            "name": "test_prompt_specified_late",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "path.Path"
                ]
            }
        },
        "test_prompt_not_specified": {
            "name": "test_prompt_not_specified",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "path.Path"
                ]
            }
        },
        "test_substitution_prompt": {
            "name": "test_substitution_prompt",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "path.Path"
                ]
            }
        },
        "test_substitution_prompt_is_case_preserving": {
            "name": "test_substitution_prompt_is_case_preserving",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Dict[str, cerulean.Path]"
                ]
            }
        },
        "test_no_substitution_prompt": {
            "name": "test_no_substitution_prompt",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "sphinx-substitution-extensions-master/tests/__init__.py": {}
}
{
    "ssrd-master/cli.py": {
        "import_module": {
            "name": "import_module",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "dotted_path": []
            }
        },
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ssrd-master/manage.py": {},
    "ssrd-master/aspect/storage.py": {
        "DropBoxFile.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str,Any]",
                    "List[str]",
                    "Dict"
                ],
                "storage": [
                    "int",
                    "str",
                    "Sequence",
                    "None",
                    "bool",
                    "datetime.datetime",
                    "Optional[str]"
                ]
            }
        },
        "DropBoxFile.file": {
            "name": "file",
            "location": 21,
            "return": [
                "str",
                "List[str]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileBrowserStorage.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root_path": [
                    "bool",
                    "None",
                    "List[str]",
                    "Iterable[str]"
                ]
            }
        },
        "FileBrowserStorage._full_path": {
            "name": "_full_path",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool"
                ]
            }
        },
        "FileBrowserStorage.delete": {
            "name": "delete",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FileBrowserStorage.exists": {
            "name": "exists",
            "location": 44,
            "return": [
                "bool",
                "str",
                "Optional[str]",
                "Tuple[str]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FileBrowserStorage.listdir": {
            "name": "listdir",
            "location": 50,
            "return": [
                "Tuple[list[Text]]",
                "str",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "bool"
                ]
            }
        },
        "FileBrowserStorage.size": {
            "name": "size",
            "location": 61,
            "return": [
                "Dict[str, str]",
                "str",
                "dict",
                "bool",
                "Exception",
                "tartare.core.models.Job",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict"
                ]
            }
        },
        "FileBrowserStorage.modified_time": {
            "name": "modified_time",
            "location": 65,
            "return": [
                "Union[str, List[str]]",
                "bool",
                "dict",
                "Union[None, str, int, float]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict"
                ]
            }
        },
        "FileBrowserStorage.accessed_time": {
            "name": "accessed_time",
            "location": 69,
            "return": [
                "Union[str, List[str]]",
                "bool",
                "dict",
                "Union[None, str, int, float]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict"
                ]
            }
        },
        "FileBrowserStorage.url": {
            "name": "url",
            "location": 73,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "FileBrowserStorage._open": {
            "name": "_open",
            "location": 77,
            "return": [
                "str",
                "bool",
                "TextIO",
                "BinaryIO"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "bool",
                    "str",
                    "Callable",
                    "Optional[Callable]",
                    "None",
                    "Optional[str]",
                    "static_frame.core.util.PathSpecifierOrFileLike"
                ],
                "mode": [
                    "Text",
                    "bool",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "FileBrowserStorage._save": {
            "name": "_save",
            "location": 81,
            "return": [
                "str",
                "int",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int",
                    "List[str]"
                ],
                "content": [
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        }
    },
    "ssrd-master/aspect/__init__.py": {},
    "ssrd-master/aspect/backend/custom.py": {
        "Backend.authenticate": {
            "name": "authenticate",
            "location": 12,
            "return": [
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "account": [
                    "Text",
                    "str",
                    "Dict[bool,str]",
                    "List[str]"
                ],
                "username": [
                    "Text",
                    "str",
                    "annofabapi.models.TaskPhase",
                    "int",
                    "Dict[bool,str]",
                    "Set[int]"
                ],
                "password": [
                    "str",
                    "Text"
                ],
                "mobile": [
                    "Text",
                    "str",
                    "annofabapi.models.TaskPhase",
                    "int",
                    "Dict[bool,str]",
                    "Set[int]"
                ]
            }
        },
        "Backend.get_user": {
            "name": "get_user",
            "location": 33,
            "return": [
                "None",
                "Optional[str]",
                "bool",
                "zerver.models.Realm",
                "int",
                "zerver.models.UserProfile",
                "Dict[str,Dict[str,Any]]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str"
                ]
            }
        }
    },
    "ssrd-master/aspect/backend/__init__.py": {},
    "ssrd-master/config/urls.py": {},
    "ssrd-master/config/wsgi.py": {},
    "ssrd-master/config/__init__.py": {},
    "ssrd-master/config/settings/base.py": {},
    "ssrd-master/config/settings/local.py": {
        "Line_Profiler.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "follow": [
                    "int",
                    "None",
                    "float",
                    "bool"
                ]
            }
        },
        "Line_Profiler.__call__": {
            "name": "__call__",
            "location": 90,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "Callable",
                    "bool"
                ]
            }
        },
        "Line_Profiler.__call__.profiled_func": {
            "name": "profiled_func",
            "location": 91,
            "return": [
                "bool",
                "Dict[str, Tuple[int, int]]",
                "List[object]"
            ],
            "arguments": {}
        }
    },
    "ssrd-master/config/settings/production.py": {},
    "ssrd-master/config/settings/test.py": {},
    "ssrd-master/config/settings/__init__.py": {},
    "ssrd-master/data/crawler/__init__.py": {},
    "ssrd-master/data/crawler/crawler/items.py": {},
    "ssrd-master/data/crawler/crawler/middlewares.py": {
        "CrawlerSpiderMiddleware.from_crawler": {
            "name": "from_crawler",
            "location": 17,
            "return": [
                "CrawlerSpiderMiddleware"
            ],
            "arguments": {
                "cls": [
                    "Type[_TCrawlerSpiderMiddleware]"
                ],
                "crawler": []
            }
        },
        "CrawlerSpiderMiddleware.process_spider_input": {
            "name": "process_spider_input",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [],
                "spider": []
            }
        },
        "CrawlerSpiderMiddleware.process_spider_output": {
            "name": "process_spider_output",
            "location": 30,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "response": [],
                "result": [],
                "spider": []
            }
        },
        "CrawlerSpiderMiddleware.process_spider_exception": {
            "name": "process_spider_exception",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [],
                "exception": [],
                "spider": []
            }
        },
        "CrawlerSpiderMiddleware.process_start_requests": {
            "name": "process_start_requests",
            "location": 46,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "start_requests": [],
                "spider": []
            }
        },
        "CrawlerSpiderMiddleware.spider_opened": {
            "name": "spider_opened",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spider": []
            }
        }
    },
    "ssrd-master/data/crawler/crawler/pipelines.py": {
        "CrawlerPipeline.process_item": {
            "name": "process_item",
            "location": 10,
            "return": [
                "List[str]",
                "Dict[str,Dict[str,int]]",
                "Callable",
                "Union[Sequence,SweepFixedValues]",
                "List",
                "Dict[str,Any]",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "List[str]",
                    "Callable",
                    "List",
                    "T"
                ],
                "spider": [
                    "List[str]",
                    "Callable",
                    "List",
                    "T"
                ]
            }
        }
    },
    "ssrd-master/data/crawler/crawler/settings.py": {},
    "ssrd-master/data/crawler/crawler/__init__.py": {},
    "ssrd-master/data/crawler/crawler/spiders/hk.py": {
        "update_category": {
            "name": "update_category",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "item": []
            }
        },
        "request": {
            "name": "request",
            "location": 132,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "url": []
            }
        },
        "download": {
            "name": "download",
            "location": 140,
            "return": [
                "File"
            ],
            "arguments": {
                "url": []
            }
        },
        "onerror": {
            "name": "onerror",
            "location": 148,
            "return": [
                "Any"
            ],
            "arguments": {
                "tag": []
            }
        },
        "HkSpider.start_requests": {
            "name": "start_requests",
            "location": 172,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HkSpider.parseList": {
            "name": "parseList",
            "location": 177,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "HkSpider.parse": {
            "name": "parse",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "ssrd-master/data/crawler/crawler/spiders/__init__.py": {},
    "ssrd-master/docs/conf.py": {},
    "ssrd-master/docs/__init__.py": {},
    "ssrd-master/ssrd/const.py": {},
    "ssrd-master/ssrd/image.py": {},
    "ssrd-master/ssrd/__init__.py": {},
    "ssrd-master/ssrd/accounts/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/ssrd/accounts/managers.py": {
        "CredentialManager.add_credential": {
            "name": "add_credential",
            "location": 5,
            "return": [
                "int",
                "Type",
                "Optional[str]",
                "Tuple"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "core.models.Recipe"
                ],
                "user": [
                    "str"
                ],
                "Type": [
                    "str"
                ],
                "confirm": [
                    "bool",
                    "Dict[str,Any]"
                ],
                "action": [
                    "None",
                    "django.http.HttpRequest",
                    "core.models.Recipe"
                ]
            }
        }
    },
    "ssrd-master/ssrd/accounts/models.py": {
        "get_random_number": {
            "name": "get_random_number",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Credential.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Credential.credential": {
            "name": "credential",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Credential.captcha": {
            "name": "captcha",
            "location": 52,
            "return": [
                "Captcha"
            ],
            "arguments": {
                "self": []
            }
        },
        "Credential.send_confirmation": {
            "name": "send_confirmation",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "None"
                ],
                "action": [
                    "None"
                ]
            }
        },
        "Credential.change": {
            "name": "change",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "new_credential": [],
                "confirm": [
                    "bool"
                ]
            }
        },
        "Credential.captchas": {
            "name": "captchas",
            "location": 73,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "Captcha.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "action": [
                    "None"
                ]
            }
        },
        "Captcha.fromUser": {
            "name": "fromUser",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "user": [],
                "Type": [],
                "action": [
                    "typing.Text"
                ]
            }
        },
        "Captcha.equal": {
            "name": "equal",
            "location": 110,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "user": [],
                "captcha": []
            }
        },
        "Captcha.__str__": {
            "name": "__str__",
            "location": 113,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Captcha.__eq__": {
            "name": "__eq__",
            "location": 118,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EmailCaptcha.send": {
            "name": "send",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "action": []
            }
        },
        "EmailCaptcha.send_mail": {
            "name": "send_mail",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "template_prefix": [],
                "email": [],
                "context": []
            }
        },
        "EmailCaptcha.render_mail": {
            "name": "render_mail",
            "location": 139,
            "return": [
                "EmailMessage",
                "EmailMultiAlternatives"
            ],
            "arguments": {
                "self": [],
                "template_prefix": [],
                "email": [],
                "context": []
            }
        },
        "EmailCaptcha.format_email_subject": {
            "name": "format_email_subject",
            "location": 170,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "subject": []
            }
        },
        "MobileConfirmation.send": {
            "name": "send",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "action": []
            }
        }
    },
    "ssrd-master/ssrd/accounts/urls.py": {},
    "ssrd-master/ssrd/accounts/views.py": {
        "jsonResponse": {
            "name": "jsonResponse",
            "location": 19,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "response": []
            }
        },
        "_tokenFromUser": {
            "name": "_tokenFromUser",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "user": []
            }
        },
        "tokenFromSession": {
            "name": "tokenFromSession",
            "location": 34,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "LoginView.post": {
            "name": "post",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LoginView.get": {
            "name": "get",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LogoutView.post": {
            "name": "post",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LogoutView.get": {
            "name": "get",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RegisterView.post": {
            "name": "post",
            "location": 117,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [
                    "None"
                ],
                "mobile": [
                    "None"
                ],
                "email": [
                    "typing.Text"
                ],
                "password": [
                    "None"
                ],
                "group": [
                    "None"
                ],
                "role": [
                    "None"
                ],
                "invitation": [
                    "None"
                ]
            }
        },
        "CaptchaView.get": {
            "name": "get",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "email": [
                    "None"
                ],
                "mobile": [
                    "typing.Text"
                ],
                "action": [
                    "typing.Text"
                ]
            }
        },
        "CredentialView.post": {
            "name": "post",
            "location": 187,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "email": [
                    "None"
                ],
                "mobile": [
                    "None"
                ],
                "captcha": [
                    "None"
                ]
            }
        },
        "PasswordChangeView.post": {
            "name": "post",
            "location": 218,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "password": [
                    "None"
                ],
                "password2": [
                    "None"
                ]
            }
        },
        "PasswordResetView.post": {
            "name": "post",
            "location": 237,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "email": [
                    "None"
                ],
                "mobile": [
                    "None"
                ],
                "captcha": [
                    "None"
                ]
            }
        }
    },
    "ssrd-master/ssrd/accounts/__init__.py": {},
    "ssrd-master/ssrd/accounts/migrations/0001_initial.py": {},
    "ssrd-master/ssrd/accounts/migrations/0002_auto_20171205_1716.py": {},
    "ssrd-master/ssrd/accounts/migrations/__init__.py": {},
    "ssrd-master/ssrd/contrib/auth.py": {
        "paraerData": {
            "name": "paraerData",
            "location": 180,
            "return": [
                "dict"
            ],
            "arguments": {
                "request": []
            }
        },
        "Result.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "None"
                ],
                "errors": [
                    "None"
                ],
                "serializer": [
                    "None"
                ],
                "paginator": [
                    "None"
                ]
            }
        },
        "Result.set_cookie": {
            "name": "set_cookie",
            "location": 24,
            "return": [
                "Result"
            ],
            "arguments": {
                "self": [
                    "_TResult@@Result@@"
                ],
                "key": [],
                "value": []
            }
        },
        "Result.response": {
            "name": "response",
            "location": 28,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "status": [],
                "serialize": [
                    "bool"
                ],
                "paginate": [
                    "bool"
                ]
            }
        },
        "Result.redirect": {
            "name": "redirect",
            "location": 57,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Result.__bool__": {
            "name": "__bool__",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PageNumberPager.paginate_queryset": {
            "name": "paginate_queryset",
            "location": 70,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "request": [],
                "view": [
                    "None"
                ],
                "paginate": [
                    "bool"
                ]
            }
        },
        "PageNumberPager.get_schema_fields": {
            "name": "get_schema_fields",
            "location": 93,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "ViewSet.result_class": {
            "name": "result_class",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewSet.paginator": {
            "name": "paginator",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APIView.result_class": {
            "name": "result_class",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIView.paginator": {
            "name": "paginator",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnAuthView.result_class": {
            "name": "result_class",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/ssrd/contrib/serializer.py": {
        "to_repr": {
            "name": "to_repr",
            "location": 15,
            "return": [
                "dict"
            ],
            "arguments": {
                "data": []
            }
        },
        "modelFactory": {
            "name": "modelFactory",
            "location": 65,
            "return": [
                "type"
            ],
            "arguments": {
                "Model": [],
                "extra": [],
                "dep": []
            }
        },
        "Serializer": {
            "name": "Serializer",
            "location": 87,
            "return": [
                "None",
                "factory"
            ],
            "arguments": {
                "Model": [],
                "extra": [
                    "None"
                ],
                "dep": [
                    "None"
                ]
            }
        },
        "ProjectLogSerializer.to_representation": {
            "name": "to_representation",
            "location": 20,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "ProjectSerializer.to_representation": {
            "name": "to_representation",
            "location": 33,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "modelFactory.factory.to_representation": {
            "name": "to_representation",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "instance": []
            }
        }
    },
    "ssrd-master/ssrd/contrib/signals.py": {
        "create_auth_token": {
            "name": "create_auth_token",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": [
                    "None"
                ],
                "created": [
                    "bool"
                ]
            }
        },
        "createDirectory": {
            "name": "createDirectory",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": [
                    "None"
                ],
                "created": [
                    "bool"
                ]
            }
        },
        "_createDirectory": {
            "name": "_createDirectory",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "project": []
            }
        }
    },
    "ssrd-master/ssrd/contrib/utils.py": {
        "send_mail": {
            "name": "send_mail",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "subject": [],
                "message": [],
                "to": []
            }
        },
        "SmsClient.sendCaptcha": {
            "name": "sendCaptcha",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "phoneNumbers": [],
                "param": []
            }
        }
    },
    "ssrd-master/ssrd/contrib/valid.py": {
        "Valid.documents": {
            "name": "documents",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "Valid.directory": {
            "name": "directory",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "Valid.document": {
            "name": "document",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.message": {
            "name": "message",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.news": {
            "name": "news",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.system": {
            "name": "system",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.systemCase": {
            "name": "systemCase",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.industryLink": {
            "name": "industryLink",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.recruitmentCategory": {
            "name": "recruitmentCategory",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.recruitment": {
            "name": "recruitment",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.productCategory": {
            "name": "productCategory",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.aboutus": {
            "name": "aboutus",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.faqs": {
            "name": "faqs",
            "location": 69,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.feedback": {
            "name": "feedback",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.servicenet": {
            "name": "servicenet",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.servicePromise": {
            "name": "servicePromise",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.product": {
            "name": "product",
            "location": 85,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.category": {
            "name": "category",
            "location": 89,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.consultationArticles": {
            "name": "consultationArticles",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.charityActivity": {
            "name": "charityActivity",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.user": {
            "name": "user",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.group": {
            "name": "group",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.projectGroup": {
            "name": "projectGroup",
            "location": 111,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.authorizecode": {
            "name": "authorizecode",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.invitation": {
            "name": "invitation",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "Valid.project": {
            "name": "project",
            "location": 126,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.collect": {
            "name": "collect",
            "location": 131,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pk": []
            }
        },
        "Valid.role": {
            "name": "role",
            "location": 136,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Valid.Status": {
            "name": "Status",
            "location": 140,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Valid.name": {
            "name": "name",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "length": [
                    "int"
                ]
            }
        },
        "Valid.email": {
            "name": "email",
            "location": 159,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "email": []
            }
        },
        "Valid.username": {
            "name": "username",
            "location": 164,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "Valid.password": {
            "name": "password",
            "location": 169,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "_T0@@"
                ]
            }
        },
        "Valid.file": {
            "name": "file",
            "location": 175,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "_T0@@"
                ]
            }
        },
        "Valid.files": {
            "name": "files",
            "location": 180,
            "return": [
                "Optional[Union[(List[_T0], _T0)]]"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "_T0@@"
                ]
            }
        },
        "Valid.url": {
            "name": "url",
            "location": 187,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "_T0@@"
                ]
            }
        },
        "Valid.num": {
            "name": "num",
            "location": 190,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "num": [
                    "_T0@@"
                ],
                "n": [
                    "int"
                ],
                "bit": [
                    "int"
                ],
                "contain_0": [
                    "bool"
                ]
            }
        },
        "Valid.json": {
            "name": "json",
            "location": 198,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Valid.mobile": {
            "name": "mobile",
            "location": 204,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "num": [
                    "_T0@@"
                ]
            }
        },
        "Valid.gender": {
            "name": "gender",
            "location": 210,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0@@"
                ]
            }
        },
        "Valid.date": {
            "name": "date",
            "location": 215,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "format": [
                    "typing.Text"
                ]
            }
        },
        "Valid.address": {
            "name": "address",
            "location": 219,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0@@"
                ]
            }
        },
        "Valid.enum": {
            "name": "enum",
            "location": 224,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "map": []
            }
        },
        "Valid.enum.inner": {
            "name": "inner",
            "location": 228,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "ssrd-master/ssrd/contrib/__init__.py": {},
    "ssrd-master/ssrd/contrib/sites/__init__.py": {},
    "ssrd-master/ssrd/contrib/sites/migrations/0001_initial.py": {},
    "ssrd-master/ssrd/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "ssrd-master/ssrd/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [
                    "django.db.migrations.state.StateApps",
                    "dict",
                    "Optional[str]",
                    "bool",
                    "str"
                ],
                "schema_editor": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        }
    },
    "ssrd-master/ssrd/contrib/sites/migrations/__init__.py": {},
    "ssrd-master/ssrd/home/apps.py": {},
    "ssrd-master/ssrd/home/models.py": {
        "defaultCategory": {
            "name": "defaultCategory",
            "location": 132,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "Images.__str__": {
            "name": "__str__",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentCategory.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutUs.__str__": {
            "name": "__str__",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQs.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBack.__str__": {
            "name": "__str__",
            "location": 77,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNet.__str__": {
            "name": "__str__",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromise.__str__": {
            "name": "__str__",
            "location": 106,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Recruitment.__str__": {
            "name": "__str__",
            "location": 126,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Product.__str__": {
            "name": "__str__",
            "location": 149,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsultationArticles.__str__": {
            "name": "__str__",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLink.__str__": {
            "name": "__str__",
            "location": 175,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "System.__str__": {
            "name": "__str__",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "News.__str__": {
            "name": "__str__",
            "location": 206,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Job.__str__": {
            "name": "__str__",
            "location": 220,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Documents.__str__": {
            "name": "__str__",
            "location": 232,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemCase.__str__": {
            "name": "__str__",
            "location": 254,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Terminal.__str__": {
            "name": "__str__",
            "location": 267,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExhibitionTag.__str__": {
            "name": "__str__",
            "location": 279,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exhibition.__str__": {
            "name": "__str__",
            "location": 301,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/ssrd/home/urls.py": {},
    "ssrd-master/ssrd/home/views.py": {
        "categoryTree": {
            "name": "categoryTree",
            "location": 343,
            "return": [
                "dict"
            ],
            "arguments": {
                "obj": [],
                "action": [],
                "lower": []
            }
        },
        "AboutUsView.create": {
            "name": "create",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "AboutUsView.get": {
            "name": "get",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FeedBackViewSet.list": {
            "name": "list",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FeedBackViewSet.create": {
            "name": "create",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FeedBackViewSet.update": {
            "name": "update",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "FeedBackViewSet.destroy": {
            "name": "destroy",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "FeedBackViewSet.retrieve": {
            "name": "retrieve",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "ServiceNetViewSet.list": {
            "name": "list",
            "location": 115,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ServiceNetViewSet.create": {
            "name": "create",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ServiceNetViewSet.update": {
            "name": "update",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ServiceNetViewSet.destroy": {
            "name": "destroy",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ServiceNetViewSet.retrieve": {
            "name": "retrieve",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "ServicePromiseViewSet.list": {
            "name": "list",
            "location": 184,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ServicePromiseViewSet.create": {
            "name": "create",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ServicePromiseViewSet.update": {
            "name": "update",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ServicePromiseViewSet.destroy": {
            "name": "destroy",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ServicePromiseViewSet.retrieve": {
            "name": "retrieve",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "RecruitmentViewSet.list": {
            "name": "list",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "search": [
                    "None"
                ]
            }
        },
        "RecruitmentViewSet.create": {
            "name": "create",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RecruitmentViewSet.update": {
            "name": "update",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "RecruitmentViewSet.destroy": {
            "name": "destroy",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "RecruitmentViewSet.retrieve": {
            "name": "retrieve",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "CategoryViewSet.list": {
            "name": "list",
            "location": 360,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "search": [
                    "None"
                ],
                "action": [
                    "None"
                ]
            }
        },
        "CategoryViewSet.create": {
            "name": "create",
            "location": 376,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CategoryViewSet.update": {
            "name": "update",
            "location": 389,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CategoryViewSet.destroy": {
            "name": "destroy",
            "location": 397,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CategoryViewSet.retrieve": {
            "name": "retrieve",
            "location": 404,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "ProductViewSet.list": {
            "name": "list",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "search": [
                    "None"
                ],
                "category": []
            }
        },
        "ProductViewSet.create": {
            "name": "create",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ProductViewSet.update": {
            "name": "update",
            "location": 453,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ProductViewSet.destroy": {
            "name": "destroy",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ProductViewSet.retrieve": {
            "name": "retrieve",
            "location": 468,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "IndustryLinkViewSet.list": {
            "name": "list",
            "location": 479,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "IndustryLinkViewSet.create": {
            "name": "create",
            "location": 496,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "IndustryLinkViewSet.update": {
            "name": "update",
            "location": 519,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "IndustryLinkViewSet.destroy": {
            "name": "destroy",
            "location": 534,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "IndustryLinkViewSet.retrieve": {
            "name": "retrieve",
            "location": 548,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "SystemViewSet.list": {
            "name": "list",
            "location": 560,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "pageSize": [
                    "int"
                ]
            }
        },
        "SystemViewSet.create": {
            "name": "create",
            "location": 613,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SystemViewSet.update": {
            "name": "update",
            "location": 658,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "SystemViewSet.destroy": {
            "name": "destroy",
            "location": 666,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "SystemViewSet.retrieve": {
            "name": "retrieve",
            "location": 673,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "FAQsViewSet.list": {
            "name": "list",
            "location": 685,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "search": [
                    "None"
                ]
            }
        },
        "FAQsViewSet.create": {
            "name": "create",
            "location": 698,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FAQsViewSet.update": {
            "name": "update",
            "location": 717,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "FAQsViewSet.destroy": {
            "name": "destroy",
            "location": 728,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "FAQsViewSet.retrieve": {
            "name": "retrieve",
            "location": 738,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "NewsViewSet.list": {
            "name": "list",
            "location": 758,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "type": [],
                "search": [
                    "None"
                ]
            }
        },
        "NewsViewSet.create": {
            "name": "create",
            "location": 774,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NewsViewSet.update": {
            "name": "update",
            "location": 790,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "NewsViewSet.destroy": {
            "name": "destroy",
            "location": 801,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "NewsViewSet.retrieve": {
            "name": "retrieve",
            "location": 811,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "JobViewSet.create": {
            "name": "create",
            "location": 840,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": [
                    "None"
                ],
                "job": [
                    "None"
                ],
                "mobile": [
                    "None"
                ],
                "email": [
                    "None"
                ],
                "attatchment": [
                    "None"
                ]
            }
        },
        "DocumentsViewSet.list": {
            "name": "list",
            "location": 877,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "search": [
                    "None"
                ],
                "source": [
                    "None"
                ]
            }
        },
        "DocumentsViewSet.create": {
            "name": "create",
            "location": 899,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DocumentsViewSet.update": {
            "name": "update",
            "location": 912,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "DocumentsViewSet.destroy": {
            "name": "destroy",
            "location": 921,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "DocumentsViewSet.retrieve": {
            "name": "retrieve",
            "location": 931,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "SystemCaseViewSet.list": {
            "name": "list",
            "location": 946,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SystemCaseViewSet.retrieve": {
            "name": "retrieve",
            "location": 961,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None"
                ]
            }
        },
        "TerminalViewSet.list": {
            "name": "list",
            "location": 975,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ExhibitionViewSet.list": {
            "name": "list",
            "location": 989,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "type": [
                    "None"
                ]
            }
        },
        "EnvView.get": {
            "name": "get",
            "location": 1000,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ssrd-master/ssrd/home/__init__.py": {},
    "ssrd-master/ssrd/home/migrations/0001_initial.py": {},
    "ssrd-master/ssrd/home/migrations/0002_auto_20181020_1050.py": {},
    "ssrd-master/ssrd/home/migrations/__init__.py": {},
    "ssrd-master/ssrd/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 7,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict",
                    "django.http.HttpRequest"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 12,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict",
                    "django.http.HttpRequest"
                ],
                "sociallogin": [
                    "Dict",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "ssrd-master/ssrd/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/ssrd/users/confirmations.py": {},
    "ssrd-master/ssrd/users/filebrowser.py": {
        "get_password": {
            "name": "get_password",
            "location": 15,
            "return": [],
            "arguments": {
                "project": []
            }
        },
        "compose_name": {
            "name": "compose_name",
            "location": 19,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [],
                "type": [],
                "project": []
            }
        },
        "destruct_name": {
            "name": "destruct_name",
            "location": 23,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "name": []
            }
        },
        "get_project": {
            "name": "get_project",
            "location": 30,
            "return": [
                "Project"
            ],
            "arguments": {
                "name": []
            }
        },
        "log_request": {
            "name": "log_request",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "method": [],
                "url": [],
                "kwargs": []
            }
        },
        "log_response": {
            "name": "log_response",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "response": []
            }
        },
        "External.get": {
            "name": "get",
            "location": 54,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "External.post": {
            "name": "post",
            "location": 58,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "External.warpper": {
            "name": "warpper",
            "location": 62,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "method": [],
                "url": []
            }
        },
        "BaseFileBrowser.create": {
            "name": "create",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "BaseFileBrowser.list": {
            "name": "list",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "BaseFileBrowser.auth": {
            "name": "auth",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "project": [
                    "None"
                ],
                "identify": [
                    "None"
                ]
            }
        },
        "BaseFileBrowser.deleteFile": {
            "name": "deleteFile",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "BaseFileBrowser.createUser": {
            "name": "createUser",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "project": []
            }
        },
        "BaseFileBrowser.downloadFile": {
            "name": "downloadFile",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseFileBrowser.getFileUrl": {
            "name": "getFileUrl",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseFileBrowser.getFileMeta": {
            "name": "getFileMeta",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseFileBrowser.createFile": {
            "name": "createFile",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "content": []
            }
        },
        "BaseFileBrowser.createDirectory": {
            "name": "createDirectory",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "project": [],
                "name": []
            }
        },
        "BaseFileBrowser.getFile": {
            "name": "getFile",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "ssrd-master/ssrd/users/steps.py": {
        "getAudits": {
            "name": "getAudits",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "createMessage": {
            "name": "createMessage",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [],
                "status": [],
                "project": []
            }
        },
        "Audit.next": {
            "name": "next",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "user": []
            }
        },
        "Audit.prev": {
            "name": "prev",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "user": []
            }
        },
        "Step.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "step": []
            }
        },
        "Step.ok": {
            "name": "ok",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Step.next": {
            "name": "next",
            "location": 77,
            "return": [
                "Step"
            ],
            "arguments": {
                "self": [
                    "_TStep@@Step@@"
                ],
                "user": [],
                "project": [
                    "None"
                ]
            }
        },
        "Step.prev": {
            "name": "prev",
            "location": 88,
            "return": [
                "Step"
            ],
            "arguments": {
                "self": [
                    "_TStep@@Step@@"
                ],
                "user": [],
                "project": [
                    "None"
                ]
            }
        },
        "Step.__call__": {
            "name": "__call__",
            "location": 98,
            "return": [
                "Step"
            ],
            "arguments": {
                "self": [
                    "_TStep@@Step@@"
                ],
                "user": [],
                "action": [],
                "project": [
                    "None"
                ]
            }
        },
        "Step.steps": {
            "name": "steps",
            "location": 107,
            "return": [
                "List[Step]"
            ],
            "arguments": {
                "cls": [],
                "user": []
            }
        }
    },
    "ssrd-master/ssrd/users/urls.py": {},
    "ssrd-master/ssrd/users/views.py": {
        "post": {
            "name": "post",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "role": [],
                "email": [],
                "password": []
            }
        },
        "_get_directory_from_path": {
            "name": "_get_directory_from_path",
            "location": 631,
            "return": [
                "Any"
            ],
            "arguments": {
                "project": [],
                "path": [],
                "index": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MediaRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MediaRedirectView.dispatch": {
            "name": "dispatch",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.list": {
            "name": "list",
            "location": 107,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "role": [],
                "group": [],
                "search": [],
                "status": []
            }
        },
        "UserViewSet.update": {
            "name": "update",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "user": []
            }
        },
        "UserViewSet.destroy": {
            "name": "destroy",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "user": []
            }
        },
        "UserViewSet.retrieve": {
            "name": "retrieve",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "user": []
            }
        },
        "ProfileView.get": {
            "name": "get",
            "location": 159,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user": []
            }
        },
        "ProfileView.post": {
            "name": "post",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "userId": [],
                "user": []
            }
        },
        "AuthorizeCodeViewSet.list": {
            "name": "list",
            "location": 192,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user": [],
                "status": [],
                "search": []
            }
        },
        "AuthorizeCodeViewSet.create": {
            "name": "create",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": []
            }
        },
        "AuthorizeCodeViewSet.update": {
            "name": "update",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "status": []
            }
        },
        "AuthorizeCodeViewSet.destroy": {
            "name": "destroy",
            "location": 225,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "status": []
            }
        },
        "AuthorizeCodeViewSet.retrieve": {
            "name": "retrieve",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "InvitationViewSet.list": {
            "name": "list",
            "location": 241,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user": []
            }
        },
        "ProjectViewSet.list": {
            "name": "list",
            "location": 262,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "status": [],
                "group": [],
                "search": []
            }
        },
        "ProjectViewSet.create": {
            "name": "create",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "group": [],
                "attatchment": []
            }
        },
        "ProjectViewSet.update": {
            "name": "update",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "group": [],
                "name": [],
                "status": []
            }
        },
        "ProjectViewSet.destroy": {
            "name": "destroy",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "status": []
            }
        },
        "ProjectViewSet.retrieve": {
            "name": "retrieve",
            "location": 351,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ProjectLogViewSet.list": {
            "name": "list",
            "location": 366,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project": [],
                "action": []
            }
        },
        "ProjectLogViewSet.create": {
            "name": "create",
            "location": 386,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "project": [],
                "action": [],
                "attatchment": []
            }
        },
        "CollectViewSet.list": {
            "name": "list",
            "location": 402,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CollectViewSet.create": {
            "name": "create",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CollectViewSet.destroy": {
            "name": "destroy",
            "location": 425,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CollectViewSet.retrieve": {
            "name": "retrieve",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "MessageViewSet.list": {
            "name": "list",
            "location": 445,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "read": []
            }
        },
        "MessageViewSet.create": {
            "name": "create",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "title": [],
                "user": [],
                "content": []
            }
        },
        "MessageViewSet.update": {
            "name": "update",
            "location": 481,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "MessageViewSet.destroy": {
            "name": "destroy",
            "location": 491,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "MessageViewSet.retrieve": {
            "name": "retrieve",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "GroupViewSet.list": {
            "name": "list",
            "location": 512,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "search": []
            }
        },
        "GroupViewSet.create": {
            "name": "create",
            "location": 522,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "GroupViewSet.update": {
            "name": "update",
            "location": 536,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "GroupViewSet.destroy": {
            "name": "destroy",
            "location": 546,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "GroupViewSet.retrieve": {
            "name": "retrieve",
            "location": 555,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "CartView.post": {
            "name": "post",
            "location": 567,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "content": []
            }
        },
        "CartView.get": {
            "name": "get",
            "location": 578,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DocumentsViewSet.list": {
            "name": "list",
            "location": 600,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project": [],
                "search": [],
                "type": []
            }
        },
        "DocumentsViewSet.create": {
            "name": "create",
            "location": 618,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "file": [],
                "type": [],
                "project": []
            }
        },
        "DocumentsViewSet.destroy": {
            "name": "destroy",
            "location": 624,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "MediaDownLoadView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 640,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectGroupViewSet.list": {
            "name": "list",
            "location": 655,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "search": []
            }
        },
        "ProjectGroupViewSet.create": {
            "name": "create",
            "location": 665,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "name": []
            }
        },
        "ProjectGroupViewSet.update": {
            "name": "update",
            "location": 679,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ProjectGroupViewSet.destroy": {
            "name": "destroy",
            "location": 689,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ProjectGroupViewSet.retrieve": {
            "name": "retrieve",
            "location": 698,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        }
    },
    "ssrd-master/ssrd/users/__init__.py": {},
    "ssrd-master/ssrd/users/migrations/0001_initial.py": {},
    "ssrd-master/ssrd/users/migrations/0002_auto_20181031_1555.py": {},
    "ssrd-master/ssrd/users/migrations/__init__.py": {},
    "ssrd-master/ssrd/users/models/project.py": {
        "ProjectGroup.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectLog.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectPermission.__str__": {
            "name": "__str__",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/ssrd/users/models/__init__.py": {
        "isCustom": {
            "name": "isCustom",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "generate_key": {
            "name": "generate_key",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "bit": []
            }
        },
        "avator": {
            "name": "avator",
            "location": 92,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "UserManager.create_user": {
            "name": "create_user",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "email": [],
                "password": []
            }
        },
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.has_permission": {
            "name": "has_permission",
            "location": 73,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "User.create_profile": {
            "name": "create_profile",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Profile.__str__": {
            "name": "__str__",
            "location": 111,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cart.__str__": {
            "name": "__str__",
            "location": 126,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Order.__str__": {
            "name": "__str__",
            "location": 141,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthorizeCode.generateUser": {
            "name": "generateUser",
            "location": 160,
            "return": [
                "AuthorizeCode"
            ],
            "arguments": {
                "self": [
                    "_TAuthorizeCode@@AuthorizeCode@@"
                ]
            }
        },
        "AuthorizeCode.__str__": {
            "name": "__str__",
            "location": 169,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Invitation.__str__": {
            "name": "__str__",
            "location": 185,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Collected.__str__": {
            "name": "__str__",
            "location": 199,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 214,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Directory.__str__": {
            "name": "__str__",
            "location": 226,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Media.__str__": {
            "name": "__str__",
            "location": 242,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Documents.__str__": {
            "name": "__str__",
            "location": 258,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Documents.bulk": {
            "name": "bulk",
            "location": 264,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [
                    "builtins.type[Documents]"
                ],
                "files": []
            }
        }
    },
    "ssrd-master/tests/factories.py": {
        "FileFactory": {
            "name": "FileFactory",
            "location": 242,
            "return": [
                "io.BytesIO"
            ],
            "arguments": {}
        },
        "ProjectFactory._create": {
            "name": "_create",
            "location": 199,
            "return": [
                "Optional[Any]",
                "bool"
            ],
            "arguments": {
                "cls": [],
                "model_class": []
            }
        }
    },
    "ssrd-master/tests/settings.py": {},
    "ssrd-master/tests/utils.py": {
        "methodbyfunc": {
            "name": "methodbyfunc",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "funcname": []
            }
        },
        "get_reason": {
            "name": "get_reason",
            "location": 27,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "response": []
            }
        },
        "TestCase.setUp": {
            "name": "setUp",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCase.asserter": {
            "name": "asserter",
            "location": 56,
            "return": [
                "TestCase"
            ],
            "arguments": {
                "self": [
                    "_TTestCase@@TestCase@@"
                ],
                "status": [
                    "int"
                ]
            }
        },
        "TestCase.assertResource": {
            "name": "assertResource",
            "location": 70,
            "return": [
                "TestCase"
            ],
            "arguments": {
                "self": [
                    "_TTestCase@@TestCase@@"
                ],
                "attrset": [
                    "list[typing.Text]"
                ]
            }
        },
        "TestCase.assertList": {
            "name": "assertList",
            "location": 77,
            "return": [
                "TestCase"
            ],
            "arguments": {
                "self": [
                    "_TTestCase@@TestCase@@"
                ],
                "num": [
                    "int"
                ]
            }
        },
        "TestCase.setBaseUrl": {
            "name": "setBaseUrl",
            "location": 81,
            "return": [
                "TestCase"
            ],
            "arguments": {
                "self": [
                    "_TTestCase@@TestCase@@"
                ],
                "pk": []
            }
        }
    },
    "ssrd-master/tests/__init__.py": {},
    "ssrd-master/tests/home/test_api.py": {
        "AboutUsTestCase.setUp": {
            "name": "setUp",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutUsTestCase.test_list": {
            "name": "test_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutUsTestCase.test_delete": {
            "name": "test_delete",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutUsTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutUsTestCase.test_create": {
            "name": "test_create",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutUsTestCase.test_update": {
            "name": "test_update",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQsTestCase.setUp": {
            "name": "setUp",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQsTestCase.test_list": {
            "name": "test_list",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQsTestCase.test_delete": {
            "name": "test_delete",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQsTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQsTestCase.test_create": {
            "name": "test_create",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FAQsTestCase.test_update": {
            "name": "test_update",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBackTestCase.setUp": {
            "name": "setUp",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBackTestCase.test_list": {
            "name": "test_list",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBackTestCase.test_delete": {
            "name": "test_delete",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBackTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBackTestCase.test_create": {
            "name": "test_create",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedBackTestCase.test_update": {
            "name": "test_update",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNetTestCase.setUp": {
            "name": "setUp",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNetTestCase.test_list": {
            "name": "test_list",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNetTestCase.test_delete": {
            "name": "test_delete",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNetTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNetTestCase.test_create": {
            "name": "test_create",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceNetTestCase.test_update": {
            "name": "test_update",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromiseTestCase.setUp": {
            "name": "setUp",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromiseTestCase.test_list": {
            "name": "test_list",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromiseTestCase.test_delete": {
            "name": "test_delete",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromiseTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromiseTestCase.test_create": {
            "name": "test_create",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServicePromiseTestCase.test_update": {
            "name": "test_update",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentTestCase.setUp": {
            "name": "setUp",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentTestCase.test_list": {
            "name": "test_list",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentTestCase.test_delete": {
            "name": "test_delete",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentTestCase.test_create": {
            "name": "test_create",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RecruitmentTestCase.test_update": {
            "name": "test_update",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductTestCase.setUp": {
            "name": "setUp",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductTestCase.test_list": {
            "name": "test_list",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductTestCase.test_delete": {
            "name": "test_delete",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductTestCase.test_create": {
            "name": "test_create",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProductTestCase.test_update": {
            "name": "test_update",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTestCase.setUp": {
            "name": "setUp",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTestCase.test_list": {
            "name": "test_list",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTestCase.test_delete": {
            "name": "test_delete",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTestCase.test_create": {
            "name": "test_create",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTestCase.test_update": {
            "name": "test_update",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemTestCase.setUp": {
            "name": "setUp",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemTestCase.test_list": {
            "name": "test_list",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemTestCase.test_delete": {
            "name": "test_delete",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemTestCase.test_create": {
            "name": "test_create",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemTestCase.test_update": {
            "name": "test_update",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLinkTestCase.setUp": {
            "name": "setUp",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLinkTestCase.test_list": {
            "name": "test_list",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLinkTestCase.test_delete": {
            "name": "test_delete",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLinkTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLinkTestCase.test_create": {
            "name": "test_create",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IndustryLinkTestCase.test_update": {
            "name": "test_update",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JobTestCase.setUp": {
            "name": "setUp",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JobTestCase.test_create": {
            "name": "test_create",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTestCase.setUp": {
            "name": "setUp",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTestCase.test_create": {
            "name": "test_create",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTestCase.test_list": {
            "name": "test_list",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTestCase.test_delete": {
            "name": "test_delete",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentTestCase.test_update": {
            "name": "test_update",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/tests/home/__init__.py": {},
    "ssrd-master/tests/storage/test_storage.py": {
        "DropBoxTest.setUp": {
            "name": "setUp",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_no_access_token": {
            "name": "test_no_access_token",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_delete": {
            "name": "test_delete",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_exists": {
            "name": "test_exists",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_not_exists": {
            "name": "test_not_exists",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_listdir": {
            "name": "test_listdir",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_size": {
            "name": "test_size",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_modified_time": {
            "name": "test_modified_time",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_accessed_time": {
            "name": "test_accessed_time",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_open": {
            "name": "test_open",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_save": {
            "name": "test_save",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "files_upload": [
                    "str",
                    "float",
                    "BinaryIO"
                ]
            }
        },
        "DropBoxTest.test_chunked_upload": {
            "name": "test_chunked_upload",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "int",
                    "bytes"
                ],
                "append": [
                    "List",
                    "str",
                    "int",
                    "float",
                    "bool"
                ],
                "finish": [
                    "int",
                    "float"
                ],
                "upload": [
                    "int",
                    "float"
                ]
            }
        },
        "DropBoxTest.test_url": {
            "name": "test_url",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DropBoxTest.test_formats": {
            "name": "test_formats",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/tests/storage/__init__.py": {},
    "ssrd-master/tests/users/test_api.py": {
        "UserTestCase.setUp": {
            "name": "setUp",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTestCase.test_list": {
            "name": "test_list",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTestCase.test_create": {
            "name": "test_create",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTestCase.test_update": {
            "name": "test_update",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTestCase.test_delete": {
            "name": "test_delete",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.setUp": {
            "name": "setUp",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.test_list": {
            "name": "test_list",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.test_create": {
            "name": "test_create",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.test_update": {
            "name": "test_update",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.test_update_status": {
            "name": "test_update_status",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.test_retrieve": {
            "name": "test_retrieve",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectTestCase.test_delete": {
            "name": "test_delete",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CollectTestCase.setUp": {
            "name": "setUp",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CollectTestCase.test_list": {
            "name": "test_list",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CollectTestCase.test_create": {
            "name": "test_create",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CollectTestCase.test_delete": {
            "name": "test_delete",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvitationTestCase.setUp": {
            "name": "setUp",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvitationTestCase.test_list": {
            "name": "test_list",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesTestCase.setUp": {
            "name": "setUp",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesTestCase.test_list": {
            "name": "test_list",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesTestCase.test_create": {
            "name": "test_create",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesTestCase.test_delete": {
            "name": "test_delete",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ssrd-master/tests/users/__init__.py": {},
    "ssrd-master/utility/env.py": {
        "parse": {
            "name": "parse",
            "location": 1,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "List[str]",
                    "List[Tuple[int,int]]"
                ]
            }
        },
        "replace": {
            "name": "replace",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "old": [
                    "Text",
                    "str",
                    "float"
                ],
                "new": [
                    "Text",
                    "Type",
                    "Dict",
                    "Optional[Exception]",
                    "Iterable"
                ]
            }
        }
    },
    "ssrd-master/utility/spider.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test": {
            "name": "test",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "picture": {
            "name": "picture",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "download": {
            "name": "download",
            "location": 41,
            "return": [
                "File"
            ],
            "arguments": {
                "url": []
            }
        },
        "request": {
            "name": "request",
            "location": 49,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "url": []
            }
        }
    },
    "ssrd-master/utility/sql.py": {
        "run_query_sql": {
            "name": "run_query_sql",
            "location": 6,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "strSql": [],
                "args": [
                    "None"
                ]
            }
        },
        "source": {
            "name": "source",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ssrd-master/utility/test.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "db": {
            "name": "db",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cache": {
            "name": "cache",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "profile": {
            "name": "profile",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "sms": {
            "name": "sms",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "file": {
            "name": "file",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ssrd-master/utility/tfIdf.py": {
        "test": {
            "name": "test",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TfIdf.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TfIdf.add_document": {
            "name": "add_document",
            "location": 11,
            "return": [
                "TfIdf"
            ],
            "arguments": {
                "self": [
                    "_TTfIdf@@TfIdf@@"
                ],
                "doc_name": [],
                "list_of_words": []
            }
        },
        "TfIdf.similarities": {
            "name": "similarities",
            "location": 27,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "list_of_words": []
            }
        }
    },
    "ssrd-master/utility/__init__.py": {}
}
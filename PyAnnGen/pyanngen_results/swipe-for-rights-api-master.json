{
    "swipe-for-rights-api-master/manage.py": {},
    "swipe-for-rights-api-master/setup.py": {},
    "swipe-for-rights-api-master/accounts/admin.py": {
        "UserAdminCreationForm.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "swipe-for-rights-api-master/accounts/apps.py": {
        "AccountsConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "swipe-for-rights-api-master/accounts/forms.py": {
        "AccountSignUpForm.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountSignUpForm.save": {
            "name": "save",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "bool",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "Dict[str,Any]",
                    "Dict",
                    "zerver.models.Stream",
                    "str"
                ]
            }
        },
        "AccountSignUpForm.clean_username": {
            "name": "clean_username",
            "location": 26,
            "return": [
                "Match",
                "int",
                "None",
                "Callable",
                "Dict[str,list[Any]]",
                "models.Question",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountSignUpForm.clean_email": {
            "name": "clean_email",
            "location": 38,
            "return": [
                "str",
                "Union[str,int]",
                "Text",
                "Set[str]",
                "Dict[str,Union[str,None]]",
                "int",
                "Dict",
                "Pattern",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountUpdateForm.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountUpdateForm.save": {
            "name": "save",
            "location": 62,
            "return": [
                "int",
                "Callable",
                "bool",
                "List[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "commit": [
                    "bool",
                    "Dict[str,Any]",
                    "cmk.utils.type_defs.ServiceName",
                    "qutebrowser.utils.usertypes.Backend",
                    "str"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/accounts/managers.py": {
        "AccountManager.get_by_natural_key": {
            "name": "get_by_natural_key",
            "location": 12,
            "return": [
                "str",
                "Iterable[float]",
                "float"
            ],
            "arguments": {
                "self": [],
                "val": [
                    "str",
                    "bytes",
                    "bool",
                    "Iterable[models.Entry]",
                    "None",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "AccountManager.create_user": {
            "name": "create_user",
            "location": 16,
            "return": [
                "zam_repondeur.models.Lecture",
                "core.models.UserPreferences",
                "set",
                "int",
                "bool",
                "django.db.models.QuerySet"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "bool",
                    "str",
                    "None"
                ],
                "password": [
                    "str",
                    "None",
                    "int",
                    "Optional[str]",
                    "float"
                ]
            }
        },
        "AccountManager.create_superuser": {
            "name": "create_superuser",
            "location": 31,
            "return": [
                "core.models.User",
                "lms.lmsdb.models.User",
                "lms.lmsdb.models.Solution",
                "zam_repondeur.models.Lecture",
                "aiolambda.Maybe[auth.user.User]"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "List",
                    "None",
                    "List[int]",
                    "Optional[str]",
                    "bool",
                    "Optional[bool]",
                    "int"
                ],
                "email": [
                    "str",
                    "bool",
                    "None",
                    "Optional[str]",
                    "Optional[int]"
                ],
                "password": [
                    "str",
                    "None",
                    "Final",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/accounts/models.py": {
        "Account.__str__": {
            "name": "__str__",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Account.get_full_name": {
            "name": "get_full_name",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "swipe-for-rights-api-master/accounts/serializers.py": {
        "AccountSerializer.get_token": {
            "name": "get_token",
            "location": 14,
            "return": [
                "str",
                "tracim.models.data.Content",
                "Optional[str]",
                "bytes",
                "zerver.models.Realm"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "List[str]",
                    "Optional[List[str]]",
                    "Dict[str,Any]",
                    "None"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/accounts/signals.py": {
        "create_auth_token": {
            "name": "create_auth_token",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "List[Dict[str,Any]]",
                    "bool",
                    "List[dict[str,Any]]",
                    "List",
                    "Sequence",
                    "Optional[Any]",
                    "Any",
                    "None"
                ],
                "instance": [
                    "List[str]",
                    "None",
                    "str",
                    "Optional[Set[str]]",
                    "bool",
                    "Set[str]",
                    "models.User"
                ],
                "created": [
                    "bool",
                    "List[Dict[str,Any]]",
                    "List",
                    "Sequence",
                    "Optional[Any]"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/accounts/tests.py": {
        "AccountTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountTest.login": {
            "name": "login",
            "location": 12,
            "return": [
                "dict",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "Dict",
                    "None"
                ],
                "password": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "Dict",
                    "None"
                ],
                "client": [
                    "str",
                    "None",
                    "bool",
                    "Optional[str]",
                    "Dict"
                ]
            }
        },
        "AccountTest.test_login_with_username": {
            "name": "test_login_with_username",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountTest.test_login_fails_for_incorrect_password": {
            "name": "test_login_fails_for_incorrect_password",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountTest.test_login_fails_for_incorrect_username": {
            "name": "test_login_fails_for_incorrect_username",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountTest.test_get_me": {
            "name": "test_get_me",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountTest.test_update_me": {
            "name": "test_update_me",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AccountTest.test_update_me.check_field": {
            "name": "check_field",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "dict"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/accounts/viewsets.py": {
        "AccountViewSet.authed_user": {
            "name": "authed_user",
            "location": 23,
            "return": [
                "cmk.utils.type_defs.UserId",
                "zerver.models.UserProfile",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict",
                    "str",
                    "rest_framework.requesRequest"
                ]
            }
        },
        "AccountViewSet.login": {
            "name": "login",
            "location": 32,
            "return": [
                "bool",
                "Optional[Any]",
                "tuple",
                "cmk.utils.type_defs.HostName"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict"
                ],
                "data": [
                    "Dict",
                    "str",
                    "Mapping"
                ]
            }
        },
        "AccountViewSet.signup": {
            "name": "signup",
            "location": 43,
            "return": [
                "cmk.utils.type_defs.EventRule",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict"
                ],
                "data": [
                    "Dict",
                    "Dict[str,List[Any]]",
                    "Tuple[str,str]",
                    "Dict[str,str]",
                    "Union[int,float]",
                    "Tuple[bool,str]",
                    "bytes",
                    "Dict[str,Any]"
                ]
            }
        },
        "AccountViewSet.me": {
            "name": "me",
            "location": 58,
            "return": [
                "str",
                "Optional[zerver.models.Realm]",
                "Iterable[int]",
                "int"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "float",
                    "Callable[...,Awaitable[dict]]",
                    "Callable[...,collections.abc.Awaitable[dict]]"
                ],
                "data": [
                    "Dict",
                    "str",
                    "Dict[str,Any]"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/accounts/__init__.py": {},
    "swipe-for-rights-api-master/accounts/migrations/0001_initial.py": {},
    "swipe-for-rights-api-master/accounts/migrations/__init__.py": {},
    "swipe-for-rights-api-master/bills/admin.py": {},
    "swipe-for-rights-api-master/bills/apps.py": {},
    "swipe-for-rights-api-master/bills/models.py": {},
    "swipe-for-rights-api-master/bills/serializers.py": {},
    "swipe-for-rights-api-master/bills/tests.py": {
        "BillsTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BillsTest.test_get_bills": {
            "name": "test_get_bills",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "swipe-for-rights-api-master/bills/viewsets.py": {
        "BillViewSet.list": {
            "name": "list",
            "location": 23,
            "return": [
                "str",
                "Iterable[int]",
                "int",
                "Iterable[str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str,str]",
                    "Dict"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/bills/__init__.py": {},
    "swipe-for-rights-api-master/bills/migrations/0001_initial.py": {},
    "swipe-for-rights-api-master/bills/migrations/__init__.py": {},
    "swipe-for-rights-api-master/helpers/models.py": {
        "user_based_path": {
            "name": "user_based_path",
            "location": 67,
            "return": [
                "Union[(str, _T1)]"
            ],
            "arguments": {
                "instance": [
                    "bool",
                    "str",
                    "Optional[Sequence[str]]",
                    "Sequence[str]",
                    "None"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "Choice.data": {
            "name": "data",
            "location": 26,
            "return": [
                "bool",
                "str",
                "float",
                "int"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "Dict",
                    "Optional[Any]",
                    "Any",
                    "None"
                ]
            }
        },
        "Choice.__len__": {
            "name": "__len__",
            "location": 45,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "Dict[str, Any]",
                    "Callable",
                    "\"Track\"",
                    "dict",
                    "int"
                ]
            }
        },
        "Choice.choices": {
            "name": "choices",
            "location": 49,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "Dict[str, Any]",
                    "bool",
                    "type",
                    "IO",
                    "Type[object]",
                    "\"Project\"",
                    "\"RequirementsFile\""
                ]
            }
        },
        "Choice.max_length": {
            "name": "max_length",
            "location": 54,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "T",
                    "Optional[int]",
                    "Optional[str]",
                    "str"
                ]
            }
        },
        "Choice.get_value": {
            "name": "get_value",
            "location": 63,
            "return": [
                "str",
                "Dict[int, str]",
                "Dict[str, Callable]",
                "dict"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Sequence[MutableMapping]",
                    "Set[str]"
                ],
                "key": [
                    "str",
                    "Sequence[MutableMapping]",
                    "Set[str]"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/helpers/serializers.py": {
        "PrimaryKeyRelatedField.to_representation": {
            "name": "to_representation",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "Dict",
                    "List",
                    "Dict[str,Any]",
                    "Dict[str,tuple]",
                    "Union[str]"
                ]
            }
        },
        "BaseSerializer.get_id": {
            "name": "get_id",
            "location": 17,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "Dict",
                    "float",
                    "int",
                    "Sequence[str]",
                    "Iterable[bytes]",
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/helpers/test.py": {
        "APITestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "APITestCase.assertContentEquals": {
            "name": "assertContentEquals",
            "location": 11,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "Dict",
                    "List"
                ],
                "dict": [
                    "Dict",
                    "List"
                ]
            }
        },
        "APITestCase.assertTotalCountEquals": {
            "name": "assertTotalCountEquals",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "Dict[str,Any]"
                ],
                "count": [
                    "Dict",
                    "requests.models.Response"
                ]
            }
        },
        "DefaultSetup.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DefaultSetup.create_user": {
            "name": "create_user",
            "location": 32,
            "return": [
                "int",
                "str",
                "dict"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "Text",
                    "str",
                    "zerver.models.Realm",
                    "Optional[str]",
                    "int"
                ],
                "email": [
                    "Text",
                    "str",
                    "zerver.models.Realm",
                    "Optional[str]",
                    "int"
                ],
                "password": [
                    "Text",
                    "Optional[str]",
                    "Dict",
                    "Optional[Sequence[str]]",
                    "str",
                    "Dict[str,List[str]]",
                    "Tuple",
                    "bool"
                ]
            }
        },
        "DefaultSetup.create_client": {
            "name": "create_client",
            "location": 48,
            "return": [
                "APIClient",
                "app.utils.models.ModelManager",
                "Tuple[Callable,Callable]"
            ],
            "arguments": {
                "self": [],
                "account": [
                    "int",
                    "str",
                    "None"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/helpers/utils.py": {
        "deserialize": {
            "name": "deserialize",
            "location": 5,
            "return": [
                "Callable"
            ],
            "arguments": {
                "fn": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "stringify_all_dates": {
            "name": "stringify_all_dates",
            "location": 14,
            "return": [
                "List[dict]",
                "Union[Dict, List]",
                "str",
                "Type",
                "Dict[str, str]"
            ],
            "arguments": {
                "data": [
                    "Dict[str, Any]",
                    "dict",
                    "Union[Dict, List]"
                ]
            }
        },
        "deserialize.wrap": {
            "name": "wrap",
            "location": 7,
            "return": [
                "Union[str, List[str]]",
                "List[str]",
                "Dict[str, Any]",
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "swipe-for-rights-api-master/helpers/viewsets.py": {
        "BaseViewSet.respond": {
            "name": "respond",
            "location": 12,
            "return": [
                "str",
                "flask.Response",
                "int",
                "dict"
            ],
            "arguments": {
                "self": [],
                "dispatcher": [
                    "bool",
                    "bytes",
                    "Union[str, None]",
                    "Union[float, None]",
                    "Union[bool, None]",
                    "Union[int, None]",
                    "Optional[Dict[str, Any]]"
                ],
                "raw": [
                    "bool",
                    "Optional[str]",
                    "Optional[bool]",
                    "str",
                    "Optional[float]"
                ],
                "data": [
                    "bool",
                    "str",
                    "int",
                    "bytes",
                    "Union[str, dict]"
                ],
                "queryset": [
                    "Optional[Any]",
                    "bool",
                    "Optional[dict]",
                    "Optional[str]",
                    "Optional[List[str]]",
                    "str",
                    "Optional[Callable[[], Any]]",
                    "Optional[float]"
                ],
                "error": [
                    "int",
                    "str",
                    "bytes",
                    "Callable"
                ],
                "status": [
                    "Optional[int]",
                    "int",
                    "Optional[BaseException]",
                    "Optional[str]",
                    "bytes"
                ],
                "obj": [
                    "bool",
                    "List[str]",
                    "int"
                ],
                "form_error": [
                    "str",
                    "int",
                    "bool",
                    "Tuple[str]",
                    "tuple"
                ]
            }
        },
        "BaseViewSet.error_response_from_form": {
            "name": "error_response_from_form",
            "location": 51,
            "return": [
                "Dict[str, Any]",
                "dict",
                "Dict[str, Dict[str, Any]]",
                "Callable"
            ],
            "arguments": {
                "self": [],
                "form": [
                    "str",
                    "Callable[[str], None]",
                    "bytes",
                    "Union[str, List[str], None]"
                ],
                "status_code": [
                    "int",
                    "dict",
                    "Optional[Any]"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/swipe4rights/settings.py": {},
    "swipe-for-rights-api-master/swipe4rights/urls.py": {},
    "swipe-for-rights-api-master/swipe4rights/wsgi.py": {},
    "swipe-for-rights-api-master/swipe4rights/__init__.py": {},
    "swipe-for-rights-api-master/votes/admin.py": {},
    "swipe-for-rights-api-master/votes/apps.py": {},
    "swipe-for-rights-api-master/votes/forms.py": {
        "VoteForm.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "swipe-for-rights-api-master/votes/models.py": {},
    "swipe-for-rights-api-master/votes/serializers.py": {},
    "swipe-for-rights-api-master/votes/tests.py": {
        "VotesTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotesTest.test_submit_vote": {
            "name": "test_submit_vote",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "swipe-for-rights-api-master/votes/viewsets.py": {
        "VoteViewSet.update": {
            "name": "update",
            "location": 15,
            "return": [
                "int",
                "zerver.models.UserProfile",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Dict[str,Any]",
                    "Optional[Dict[str,Any]]",
                    "None"
                ],
                "pk": [
                    "None",
                    "int",
                    "zerver.models.UserProfile",
                    "django.db.models.query.QuerySet"
                ]
            }
        }
    },
    "swipe-for-rights-api-master/votes/__init__.py": {},
    "swipe-for-rights-api-master/votes/migrations/0001_initial.py": {},
    "swipe-for-rights-api-master/votes/migrations/__init__.py": {}
}
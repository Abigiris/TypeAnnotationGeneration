{
    "sync-e2e-cloud-demo-master/cloudsync/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/client/main.py": {
        "client_main": {
            "name": "client_main",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/client/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/master/api.py": {
        "MasterAPI.instance": {
            "name": "instance",
            "location": 8,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/master/main.py": {
        "server_main": {
            "name": "server_main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/master/server.py": {
        "QuartServer.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/master/sync_master.py": {
        "Upload.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int",
                    "bytes"
                ]
            }
        },
        "Upload.update": {
            "name": "update",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packet": [
                    "int",
                    "None",
                    "Dict",
                    "Optional[int]",
                    "str",
                    "bool",
                    "Union[str,int]"
                ]
            }
        },
        "Upload.finish": {
            "name": "finish",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packet": [
                    "str",
                    "Dict"
                ]
            }
        },
        "StorageSlave.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uuid": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "StorageSlave.get_upload": {
            "name": "get_upload",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scope": [
                    "str",
                    "Dict[str,str]"
                ],
                "token": [
                    "str",
                    "Dict[str,str]"
                ]
            }
        },
        "Scope.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sid": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "Scope.serialize": {
            "name": "serialize",
            "location": 50,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scope.update": {
            "name": "update",
            "location": 53,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "packet": [
                    "int",
                    "str",
                    "None",
                    "Optional[bool]",
                    "bool"
                ]
            }
        },
        "SyncMaster.get_storage_slave_by_token": {
            "name": "get_storage_slave_by_token",
            "location": 59,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "int",
                    "None",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "SyncMaster.get_storage_slave": {
            "name": "get_storage_slave",
            "location": 62,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "slave": [
                    "bool",
                    "str",
                    "Dict",
                    "T"
                ]
            }
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/master/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/master/rest/helpers.py": {
        "paginate": {
            "name": "paginate",
            "location": 4,
            "return": [
                "bool",
                "tuple"
            ],
            "arguments": {
                "data": [
                    "int"
                ],
                "start": [
                    "int",
                    "List"
                ],
                "limit": [
                    "int",
                    "Collection[int]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/master/rest/payload.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/master/rest/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/master/rest/api_v1/scope.py": {
        "_get_slave_from_headers": {
            "name": "_get_slave_from_headers",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_get_upload": {
            "name": "_get_upload",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "sid": [
                    "str",
                    "uuid.UUID"
                ],
                "token": [
                    "str",
                    "uuid.UUID"
                ]
            }
        }
    },
    "sync-e2e-cloud-demo-master/cloudsync/master/rest/api_v1/user.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/master/rest/api_v1/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/shared/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/storage/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/storage/api/__init__.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/storage/api/v1/storage.py": {},
    "sync-e2e-cloud-demo-master/cloudsync/storage/api/v1/__init__.py": {},
    "sync-e2e-cloud-demo-master/tests/__init__.py": {},
    "sync-e2e-cloud-demo-master/tests/client/test_main.py": {
        "TestMain.test_asdf": {
            "name": "test_asdf",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sync-e2e-cloud-demo-master/tests/client/__init__.py": {},
    "sync-e2e-cloud-demo-master/tests/server/__init__.py": {},
    "sync-e2e-cloud-demo-master/tests/shared/__init__.py": {}
}
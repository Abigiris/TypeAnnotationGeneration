{
    "syncer-master/setup.py": {},
    "syncer-master/syncer.py": {
        "_is_awaitable": {
            "name": "_is_awaitable",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "co": [
                    "Generator[(Any, None, Any)]"
                ]
            }
        },
        "sync": {
            "name": "sync",
            "location": 24,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "co": [
                    "str",
                    "int"
                ]
            }
        },
        "sync_co": {
            "name": "sync_co",
            "location": 30,
            "return": [
                "Union[str, List[str], Tuple[str, ...]]",
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "co": [
                    "bool",
                    "collections.abc.Awaitable[]",
                    "dict[, ]",
                    "int",
                    "asyncio.AbstractEventLoop",
                    "Awaitable",
                    "dict"
                ]
            }
        },
        "sync_fu": {
            "name": "sync_fu",
            "location": 38,
            "return": [
                "bool",
                "int",
                "Optional[bool]",
                "Optional[int]"
            ],
            "arguments": {
                "f": [
                    "typing.Iterable[str]",
                    "Iterable[str]",
                    "typing.Callable[, ]",
                    "Callable",
                    "T"
                ]
            }
        },
        "sync_fu.run": {
            "name": "run",
            "location": 43,
            "return": [
                "str",
                "int"
            ],
            "arguments": {}
        }
    },
    "syncer-master/docs/conf.py": {},
    "syncer-master/tests/test_py34.py": {
        "TestSyncerPY34.test_wrap_aioco": {
            "name": "test_wrap_aioco",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_wrap_aioco_args": {
            "name": "test_wrap_aioco_args",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_deco_aioco": {
            "name": "test_deco_aioco",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_deco_aioco_args": {
            "name": "test_deco_aioco_args",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_deco_testmethod": {
            "name": "test_deco_testmethod",
            "location": 57,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_failure": {
            "name": "test_failure",
            "location": 68,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_wrap_method": {
            "name": "test_wrap_method",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_wrap_method_args": {
            "name": "test_wrap_method_args",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_deco_method": {
            "name": "test_deco_method",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_deco_method_args": {
            "name": "test_deco_method_args",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_future": {
            "name": "test_future",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_func_error": {
            "name": "test_func_error",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_gen_error": {
            "name": "test_gen_error",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_wrap_aioco.a": {
            "name": "a",
            "location": 22,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {}
        },
        "TestSyncerPY34.test_wrap_aioco_args.a": {
            "name": "a",
            "location": 31,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {
                "b": [],
                "c": [],
                "d": []
            }
        },
        "TestSyncerPY34.test_deco_aioco.a": {
            "name": "a",
            "location": 41,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {}
        },
        "TestSyncerPY34.test_deco_aioco_args.a": {
            "name": "a",
            "location": 49,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {
                "b": [],
                "c": [],
                "d": []
            }
        },
        "TestSyncerPY34.test_deco_testmethod.a": {
            "name": "a",
            "location": 59,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {}
        },
        "TestSyncerPY34.test_func_error.a": {
            "name": "a",
            "location": 122,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {}
        },
        "TestSyncerPY34.test_gen_error.a": {
            "name": "a",
            "location": 130,
            "return": [
                "",
                "typing.Generator[]",
                "int"
            ],
            "arguments": {}
        },
        "TestSyncerPY34.test_wrap_method.A.a": {
            "name": "a",
            "location": 77,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_wrap_method_args.A.a": {
            "name": "a",
            "location": 87,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {
                "self": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "TestSyncerPY34.test_deco_method.A.a": {
            "name": "a",
            "location": 99,
            "return": [
                "typing.Generator[]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY34.test_deco_method_args.A.a": {
            "name": "a",
            "location": 109,
            "return": [
                "typing.Generator[]",
                "int",
                "Exception",
                "Dict[str, bool]",
                "str",
                "Union[Dict, str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "b": [
                    "int",
                    "Optional[List[str]]",
                    "List[int]",
                    "float",
                    "Union[Callable, str]"
                ],
                "c": [
                    "int",
                    "Optional[List[str]]",
                    "List[int]",
                    "float",
                    "Union[Callable, str]"
                ],
                "d": [
                    "int",
                    "Optional[List[str]]",
                    "List[int]",
                    "float",
                    "Union[Callable, str]"
                ]
            }
        }
    },
    "syncer-master/tests/test_py35.py": {
        "TestSyncerPY35.test_wrap_async": {
            "name": "test_wrap_async",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_wrap_async_args": {
            "name": "test_wrap_async_args",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_deco_async": {
            "name": "test_deco_async",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_deco_async_args": {
            "name": "test_deco_async_args",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_wrap_method": {
            "name": "test_wrap_method",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_wrap_method_args": {
            "name": "test_wrap_method_args",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_deco_method": {
            "name": "test_deco_method",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_deco_method_args": {
            "name": "test_deco_method_args",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSyncerPY35.test_future": {
            "name": "test_future",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "syncer-master/tests/__init__.py": {}
}
{
    "tdd-currency-python-master/money/__init__.py": {
        "Expression.reduce": {
            "name": "reduce",
            "location": 10,
            "return": [
                "Money",
                "None"
            ],
            "arguments": {
                "self": [],
                "bank": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "Expression.times": {
            "name": "times",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "multiplier": [
                    "bool",
                    "float",
                    "int"
                ]
            }
        },
        "Money.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": [
                    "int",
                    "bytes"
                ],
                "currency": [
                    "int",
                    "bytes"
                ]
            }
        },
        "Money.__eq__": {
            "name": "__eq__",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Union[int,float]",
                    "int",
                    "float"
                ]
            }
        },
        "Money.dollar": {
            "name": "dollar",
            "location": 32,
            "return": [
                "Money"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMoney]"
                ],
                "amount": [
                    "int"
                ]
            }
        },
        "Money.franc": {
            "name": "franc",
            "location": 36,
            "return": [
                "Money"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMoney]"
                ],
                "amount": [
                    "int"
                ]
            }
        },
        "Money.times": {
            "name": "times",
            "location": 39,
            "return": [
                "Money"
            ],
            "arguments": {
                "self": [
                    "_TMoney@@Money@@"
                ],
                "multiplier": [
                    "int",
                    "Dict",
                    "List[str]",
                    "float",
                    "List"
                ]
            }
        },
        "Money.currency": {
            "name": "currency",
            "location": 42,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Money.plus": {
            "name": "plus",
            "location": 45,
            "return": [
                "SumExpression"
            ],
            "arguments": {
                "self": [],
                "addend": [
                    "int",
                    "abc.BaseConfig",
                    "Callable[list,None]",
                    "Callable[[List],None]"
                ]
            }
        },
        "Money.reduce": {
            "name": "reduce",
            "location": 48,
            "return": [
                "Money"
            ],
            "arguments": {
                "self": [
                    "_TMoney@@Money@@"
                ],
                "bank": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "Bank.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bank.reduce": {
            "name": "reduce",
            "location": 56,
            "return": [
                "Money"
            ],
            "arguments": {
                "self": [],
                "expression": [
                    "str",
                    "float"
                ],
                "currency": [
                    "str",
                    "bool",
                    "None",
                    "Optional[int]",
                    "int"
                ]
            }
        },
        "Bank.add_rate": {
            "name": "add_rate",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_": [
                    "int",
                    "Dict[str,Any]"
                ],
                "to": [
                    "int",
                    "Dict[str,Any]"
                ],
                "rate": [
                    "int",
                    "Dict[str,Any]"
                ]
            }
        },
        "SumExpression.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "augend": [
                    "int",
                    "float",
                    "bool"
                ],
                "addend": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "SumExpression.reduce": {
            "name": "reduce",
            "location": 79,
            "return": [
                "Money"
            ],
            "arguments": {
                "self": [],
                "bank": [
                    "str",
                    "Sequence[str]"
                ]
            }
        },
        "SumExpression.plus": {
            "name": "plus",
            "location": 97,
            "return": [
                "SumExpression"
            ],
            "arguments": {
                "self": [
                    "_TSumExpression@@SumExpression@@"
                ],
                "expression": [
                    "str",
                    "Dict",
                    "Callable"
                ]
            }
        },
        "SumExpression.times": {
            "name": "times",
            "location": 100,
            "return": [
                "SumExpression"
            ],
            "arguments": {
                "self": [
                    "_TSumExpression@@SumExpression@@"
                ],
                "multiplier": [
                    "float",
                    "Optional[float]",
                    "int",
                    "None"
                ]
            }
        }
    },
    "tdd-currency-python-master/tests/test_money.py": {
        "TestMoney.five_dollar": {
            "name": "five_dollar",
            "location": 8,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoney.bank": {
            "name": "bank",
            "location": 12,
            "return": [
                "Bank",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoney.test_currency": {
            "name": "test_currency",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "five_dollar": [
                    "str",
                    "float"
                ]
            }
        },
        "TestMoney.test_multiplication": {
            "name": "test_multiplication",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "five_dollar": [
                    "float",
                    "str"
                ]
            }
        },
        "TestMoney.test_equality": {
            "name": "test_equality",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "five_dollar": [
                    "str",
                    "float"
                ]
            }
        },
        "TestMoney.test_simple_addition": {
            "name": "test_simple_addition",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "five_dollar": []
            }
        },
        "TestMoney.test_plus_returns_sum": {
            "name": "test_plus_returns_sum",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "five_dollar": []
            }
        },
        "TestMoney.test_reduce_sum": {
            "name": "test_reduce_sum",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMoney.test_reduce_to_different_currency": {
            "name": "test_reduce_to_different_currency",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bank": []
            }
        },
        "TestMoney.test_mixed_addition": {
            "name": "test_mixed_addition",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bank": [],
                "five_dollar": []
            }
        },
        "TestMoney.test_sum_plus_money": {
            "name": "test_sum_plus_money",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bank": [],
                "five_dollar": [
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "TestMoney.test_sum_times": {
            "name": "test_sum_times",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bank": [],
                "five_dollar": [
                    "Dict[str,Any]"
                ]
            }
        }
    },
    "tdd-currency-python-master/tests/__init__.py": {}
}
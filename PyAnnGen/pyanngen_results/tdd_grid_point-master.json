{
    "tdd_grid_point-master/gridpoint.py": {
        "GridPoint.__new__": {
            "name": "__new__",
            "location": 19,
            "return": [
                "GridPoint3D"
            ],
            "arguments": {
                "cls": [
                    "Type[GridPoint3D]"
                ]
            }
        },
        "GridPoint.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GridPoint.is_next_to": {
            "name": "is_next_to",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "GridPoints.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GridPoints.connected": {
            "name": "connected",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GridPoints.is_traversable": {
            "name": "is_traversable",
            "location": 70,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GridPoint.is_next_to.is_serial": {
            "name": "is_serial",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "GridPoint.is_next_to.sub": {
            "name": "sub",
            "location": 33,
            "return": [],
            "arguments": {
                "t": [],
                "i": []
            }
        },
        "GridPoints.connected.f": {
            "name": "f",
            "location": 62,
            "return": [
                "bool"
            ],
            "arguments": {
                "point": [],
                "others": []
            }
        },
        "GridPoints.is_traversable.f": {
            "name": "f",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "point": [],
                "others": []
            }
        }
    },
    "tdd_grid_point-master/tests.py": {
        "TestGridPoint2D.test_string_notation": {
            "name": "test_string_notation",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "str",
                    "Tuple[int,int]",
                    "Tuple[Union[int,int]]"
                ],
                "y": [
                    "int",
                    "str",
                    "Tuple[int,int]",
                    "Tuple[Union[int,int]]"
                ],
                "expected": [
                    "int",
                    "str",
                    "Tuple[int,int]",
                    "Tuple[Union[int,int]]"
                ]
            }
        },
        "TestGridPoint2D.test_equality": {
            "name": "test_equality",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "float",
                    "int"
                ]
            }
        },
        "TestGridPoint2D.test_non_equality": {
            "name": "test_non_equality",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "str",
                    "int",
                    "List",
                    "bool"
                ],
                "b": [
                    "str",
                    "int",
                    "List",
                    "bool"
                ]
            }
        },
        "TestGridPoint2D.test_is_next_to": {
            "name": "test_is_next_to",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "str"
                ],
                "b": [
                    "int",
                    "str"
                ]
            }
        },
        "TestGridPoint2D.test_is_not_next_to": {
            "name": "test_is_not_next_to",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "List",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ],
                "b": [
                    "int",
                    "List",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "TestGridPoint3D.test_string_notation": {
            "name": "test_string_notation",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "Tuple[Union[int,int]]",
                    "bool",
                    "Tuple[int,int]",
                    "Tuple[int,int,int]"
                ],
                "y": [
                    "int",
                    "Tuple[Union[int,int]]",
                    "bool",
                    "Tuple[int,int]",
                    "Tuple[int,int,int]"
                ],
                "z": [
                    "int",
                    "Tuple[Union[int,int]]",
                    "bool",
                    "Tuple[int,int]",
                    "Tuple[int,int,int]"
                ],
                "expected": [
                    "int",
                    "Tuple[Union[int,int]]",
                    "bool",
                    "Tuple[int,int]",
                    "Tuple[int,int,int]"
                ]
            }
        },
        "TestGridPoint3D.test_is_next_to": {
            "name": "test_is_next_to",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "str"
                ],
                "b": [
                    "int",
                    "str"
                ]
            }
        },
        "TestGridPoint3D.test_is_not_next_to": {
            "name": "test_is_not_next_to",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "List",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ],
                "b": [
                    "int",
                    "List",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "TestGridPoints2D.test_contains": {
            "name": "test_contains",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "float",
                    "str",
                    "List[int]",
                    "int"
                ],
                "b": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "TestGridPoints2D.test_not_contains": {
            "name": "test_not_contains",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "str",
                    "int",
                    "List[int]",
                    "float"
                ],
                "b": [
                    "int"
                ],
                "c": [
                    "int",
                    "float",
                    "List[float]",
                    "bool"
                ]
            }
        },
        "TestGridPoints2D.test_connected": {
            "name": "test_connected",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "float"
                ]
            }
        },
        "TestGridPoints2D.test_not_connected": {
            "name": "test_not_connected",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "float"
                ]
            }
        },
        "TestGridPoints2D.test_count_gridpoint": {
            "name": "test_count_gridpoint",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "Dict[str,Any]"
                ],
                "expect": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "TestGridPoints2D.test_given_same_gridpoint": {
            "name": "test_given_same_gridpoint",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "float"
                ]
            }
        },
        "TestGridPoints2D.test_is_traversable": {
            "name": "test_is_traversable",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "Dict[str,float]",
                    "bool"
                ]
            }
        },
        "TestGridPoints2D.test_is_not_traversable": {
            "name": "test_is_not_traversable",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "Dict[str,float]",
                    "bool"
                ]
            }
        },
        "TestGridPoints3D.test_contains": {
            "name": "test_contains",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "float",
                    "str",
                    "List[int]",
                    "int"
                ],
                "b": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "TestGridPoints3D.test_not_contains": {
            "name": "test_not_contains",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "str",
                    "int",
                    "List[int]",
                    "float"
                ],
                "b": [
                    "int"
                ],
                "c": [
                    "int",
                    "float",
                    "List[float]",
                    "bool"
                ]
            }
        },
        "TestGridPoints3D.test_connected": {
            "name": "test_connected",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "float"
                ]
            }
        },
        "TestGridPoints3D.test_not_connected": {
            "name": "test_not_connected",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "float"
                ]
            }
        },
        "TestGridPoints3D.test_is_traversable": {
            "name": "test_is_traversable",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "Dict[str,float]",
                    "bool"
                ]
            }
        },
        "TestGridPoints3D.test_is_not_traversable": {
            "name": "test_is_not_traversable",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "points": [
                    "str",
                    "Dict[str,float]",
                    "bool"
                ]
            }
        }
    }
}
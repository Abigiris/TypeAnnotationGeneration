{
    "teamspeak-update-notifier-master/setup.py": {},
    "teamspeak-update-notifier-master/notifier/app.py": {
        "build_config": {
            "name": "build_config",
            "location": 18,
            "return": [
                "configparser.ConfigParser"
            ],
            "arguments": {}
        },
        "get_password": {
            "name": "get_password",
            "location": 29,
            "return": [
                "Optional[str]",
                "str",
                "List[str]",
                "Optional[type]",
                "Dict[str, Any]",
                "configparser.ConfigParser"
            ],
            "arguments": {
                "config_ts3": [
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        },
        "start": {
            "name": "start",
            "location": 40,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "config": [
                    "Dict",
                    "Dict[str,Any]",
                    "Mapping"
                ]
            }
        }
    },
    "teamspeak-update-notifier-master/notifier/client.py": {
        "Client.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue_read": [
                    "str"
                ],
                "queue_write": [
                    "int",
                    "float",
                    "bool",
                    "apistar.types.RouteConfig"
                ]
            }
        },
        "Client.execute": {
            "name": "execute",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "Dict[str,int]",
                    "bool",
                    "str",
                    "Dict",
                    "vimiv.api.commands._Command",
                    "List[str]",
                    "Union[str,List[str]]"
                ]
            }
        },
        "Client.query": {
            "name": "query",
            "location": 32,
            "return": [
                "Dict",
                "Set",
                "str",
                "OrderedDict",
                "Dict[str,Any]",
                "List[Dict[str,Any]]",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "Dict",
                    "Dict[str,Any]"
                ]
            }
        },
        "Client.listen": {
            "name": "listen",
            "location": 41,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "handlers_list": [
                    "List[tuple[Union[str,str]]]",
                    "List",
                    "List[Tuple[str,str]]",
                    "List[str]",
                    "Sequence[dict]",
                    "Iterator[tuple]",
                    "bool"
                ]
            }
        },
        "Client.__enter__": {
            "name": "__enter__",
            "location": 64,
            "return": [
                "Client"
            ],
            "arguments": {
                "self": [
                    "_TClient@@Client@@"
                ]
            }
        },
        "Client.__exit__": {
            "name": "__exit__",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "exception_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exception_value": [
                    "Optional[BaseException]"
                ],
                "traceback": [
                    "Optional[types.TracebackType]",
                    "None",
                    "Optional[Any]",
                    "Any",
                    "Optional[BaseException]",
                    "BaseException",
                    "Optional[Type[BaseException]]",
                    "Type",
                    "Optional[Exception]",
                    "Exception"
                ]
            }
        }
    },
    "teamspeak-update-notifier-master/notifier/commands.py": {
        "Response.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "Counter",
                    "int",
                    "Dict[str,Any]",
                    "str",
                    "List",
                    "bool",
                    "Tuple[Union[int,int]]",
                    "Tuple[int,int]"
                ]
            }
        },
        "Command.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "List[str]"
                ],
                "value_params": [
                    "str",
                    "List[str]",
                    "None"
                ]
            }
        },
        "Command.check_error": {
            "name": "check_error",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "Exception"
                ]
            }
        },
        "QueryCommand.handle": {
            "name": "handle",
            "location": 32,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "Login.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "bytes"
                ],
                "password": [
                    "str",
                    "bytes"
                ]
            }
        },
        "KeepAlive.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NotifyRegister.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Quit.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SendMessage.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str",
                    "bytes",
                    "int"
                ],
                "message": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "Use.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server_id": [
                    "str",
                    "int",
                    "float",
                    "Optional[float]",
                    "None"
                ]
            }
        },
        "Version.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Version.handle": {
            "name": "handle",
            "location": 93,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "bool",
                    "Callable",
                    "int",
                    "faustypes.Message"
                ]
            }
        },
        "Whoami.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Whoami.handle": {
            "name": "handle",
            "location": 106,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "teamspeak-update-notifier-master/notifier/errors.py": {},
    "teamspeak-update-notifier-master/notifier/handlers.py": {
        "Handler.match": {
            "name": "match",
            "location": 14,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "message": [
                    "Dict",
                    "List[int]",
                    "List[str]",
                    "message.Message"
                ]
            }
        },
        "Handler.execute": {
            "name": "execute",
            "location": 18,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str",
                    "Iterable[C]",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "ClientEnter.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server_group_id": [
                    "str",
                    "Set[str]",
                    "int"
                ],
                "current_version": [
                    "str",
                    "None",
                    "int",
                    "Optional[str]",
                    "Optional[Union[str,int]]",
                    "Optional[int]",
                    "Optional[bool]"
                ]
            }
        },
        "ClientEnter.match": {
            "name": "match",
            "location": 28,
            "return": [
                "bool",
                "message.Message",
                "IO[str]",
                "Dict[str,Any]",
                "str"
            ],
            "arguments": {
                "message": [
                    "IO",
                    "message.Message",
                    "Dict[str,Any]",
                    "str",
                    "IO[str]"
                ]
            }
        },
        "ClientEnter.execute": {
            "name": "execute",
            "location": 31,
            "return": [
                "Optional[commands.SendMessage]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "bool",
                    "MutableMapping[str, Any]"
                ]
            }
        },
        "ClientLeft.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client_id": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None"
                ]
            }
        },
        "ClientLeft.match": {
            "name": "match",
            "location": 54,
            "return": [
                "bool",
                "message.Message",
                "IO[str]",
                "Dict[str,Any]",
                "str"
            ],
            "arguments": {
                "message": [
                    "IO",
                    "message.Message",
                    "Dict[str,Any]",
                    "str",
                    "IO[str]"
                ]
            }
        },
        "ClientLeft.execute": {
            "name": "execute",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "int",
                    "List[Callable]",
                    "discord.Message",
                    "Callable[[bytes], bytes]",
                    "bytes"
                ]
            }
        }
    },
    "teamspeak-update-notifier-master/notifier/main.py": {
        "_sigterm_handler": {
            "name": "_sigterm_handler",
            "location": 13,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "_signo": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "_stack_frame": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "_handle_exception": {
            "name": "_handle_exception",
            "location": 17,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "exit_code": [
                    "int",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "teamspeak-update-notifier-master/notifier/message.py": {
        "Message.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "int",
                    "float",
                    "str",
                    "Optional[str]",
                    "None"
                ],
                "value_params": [
                    "Optional[str]",
                    "None",
                    "Optional[float]",
                    "str",
                    "Optional[List[Any]]",
                    "float",
                    "Optional[bool]",
                    "List[Any]",
                    "Optional[Any]",
                    "bool",
                    "Optional[Tuple[float,float]]",
                    "Any",
                    "Tuple[Union[float,float]]"
                ],
                "key_params": [
                    "str",
                    "None",
                    "Callable[,str]",
                    "Optional[str]",
                    "List[str]",
                    "Type[T]",
                    "Type"
                ]
            }
        },
        "Message.build_from_string": {
            "name": "build_from_string",
            "location": 25,
            "return": [
                "Optional[Message]"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "Message.param": {
            "name": "param",
            "location": 47,
            "return": [
                "Optional[str]",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Dict[str,Any]"
                ]
            }
        },
        "Message._decode": {
            "name": "_decode",
            "location": 51,
            "return": [
                "str",
                "float"
            ],
            "arguments": {
                "string": [
                    "str"
                ]
            }
        },
        "Message._encode": {
            "name": "_encode",
            "location": 58,
            "return": [
                "str",
                "bytes",
                "float"
            ],
            "arguments": {
                "string": [
                    "str",
                    "Union[bytes,str]",
                    "bytes"
                ]
            }
        },
        "Message.__repr__": {
            "name": "__repr__",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "teamspeak-update-notifier-master/notifier/socket.py": {
        "init_socket": {
            "name": "init_socket",
            "location": 21,
            "return": [
                "Iterator[socket.socket]",
                "Generator"
            ],
            "arguments": {
                "host": [
                    "str",
                    "int",
                    "bool"
                ],
                "port": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        },
        "SocketThread.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sock": [
                    "int",
                    "float",
                    "bool"
                ],
                "queue_": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "SocketThread.execute": {
            "name": "execute",
            "location": 40,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketThread.kill": {
            "name": "kill",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketThread.run": {
            "name": "run",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketReader.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sock": [
                    "Callable",
                    "bool",
                    "str"
                ],
                "queue_": [
                    "Callable",
                    "bool",
                    "str"
                ]
            }
        },
        "SocketReader.execute": {
            "name": "execute",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketWriter.execute": {
            "name": "execute",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "teamspeak-update-notifier-master/notifier/version_manager.py": {
        "build_message": {
            "name": "build_message",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "need_update": {
            "name": "need_update",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "current_version": [
                    "int",
                    "str"
                ]
            }
        },
        "_recent_version": {
            "name": "_recent_version",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "teamspeak-update-notifier-master/notifier/__init__.py": {},
    "teamspeak-update-notifier-master/notifier/__main__.py": {},
    "teamspeak-update-notifier-master/tests/app_test.py": {
        "test_build_config": {
            "name": "test_build_config",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_argparser": [
                    "unittesmock.Mock",
                    "mock.Mock"
                ],
                "mock_configparser": [
                    "mock.Mock"
                ]
            }
        }
    },
    "teamspeak-update-notifier-master/tests/commands_test.py": {
        "test_login": {
            "name": "test_login",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_notify_register": {
            "name": "test_notify_register",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_keep_alive": {
            "name": "test_keep_alive",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_quit": {
            "name": "test_quit",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_send_command": {
            "name": "test_send_command",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_use": {
            "name": "test_use",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_whoami": {
            "name": "test_whoami",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "teamspeak-update-notifier-master/tests/errors_test.py": {
        "test_error": {
            "name": "test_error",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_socket_connection_error": {
            "name": "test_socket_connection_error",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_message_error": {
            "name": "test_message_error",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_server_disconnect_error": {
            "name": "test_server_disconnect_error",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sig_term_error": {
            "name": "test_sig_term_error",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_argument_error": {
            "name": "test_invalid_argument_error",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_config_error": {
            "name": "test_config_error",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "teamspeak-update-notifier-master/tests/main_test.py": {
        "test_main": {
            "name": "test_main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_basic_config": [
                    "unittesmock.Mock"
                ],
                "mock_build_config": [
                    "unittesmock.Mock",
                    "mock.MagicMock"
                ],
                "mock_signal": [
                    "unittesmock.Mock"
                ],
                "mock_start": [
                    "unittesmock.Mock",
                    "mock.Mock"
                ]
            }
        },
        "test_main_when_keyboard_interrupt": {
            "name": "test_main_when_keyboard_interrupt",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_basic_config": [
                    "unittesmock.Mock"
                ],
                "mock_build_config": [
                    "unittesmock.Mock",
                    "mock.MagicMock"
                ],
                "mock_signal": [
                    "unittesmock.Mock"
                ],
                "mock_start": [
                    "unittesmock.Mock"
                ],
                "mock_exit": [
                    "str",
                    "unittesmock.Mock"
                ],
                "caplog": [
                    "Union[int,float]",
                    "int",
                    "Sequence[Union[int,float]]",
                    "unittesmock.Mock",
                    "float"
                ]
            }
        },
        "test_main_when_error": {
            "name": "test_main_when_error",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_basic_config": [
                    "unittesmock.Mock"
                ],
                "mock_build_config": [
                    "unittesmock.Mock",
                    "mock.MagicMock"
                ],
                "mock_signal": [
                    "unittesmock.Mock"
                ],
                "mock_start": [
                    "unittesmock.Mock",
                    "mock.MagicMock"
                ],
                "mock_exit": [
                    "unittesmock.Mock"
                ],
                "caplog": [
                    "unittesmock.Mock"
                ]
            }
        },
        "test_main_when_other_exception": {
            "name": "test_main_when_other_exception",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_basic_config": [
                    "unittesmock.Mock"
                ],
                "mock_build_config": [
                    "unittesmock.Mock",
                    "mock.MagicMock"
                ],
                "mock_signal": [
                    "unittesmock.Mock"
                ],
                "mock_start": [
                    "unittesmock.Mock"
                ],
                "mock_exit": [
                    "unittesmock.Mock",
                    "mock.Mock"
                ],
                "caplog": []
            }
        },
        "test_sigterm_handler": {
            "name": "test_sigterm_handler",
            "location": 143,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "teamspeak-update-notifier-master/tests/message_test.py": {
        "test_build_from_string": {
            "name": "test_build_from_string",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_build_from_string_with_special_chars": {
            "name": "test_build_from_string_with_special_chars",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_build_from_string_without_command": {
            "name": "test_build_from_string_without_command",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_build_from_string_with_empty_message": {
            "name": "test_build_from_string_with_empty_message",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init": {
            "name": "test_init",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_with_special_chars": {
            "name": "test_init_with_special_chars",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "teamspeak-update-notifier-master/tests/__init__.py": {},
    "teamspeak-update-notifier-master/tests/__main__test.py": {
        "test_main": {
            "name": "test_main",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_main": [
                    "unittesmock.Mock"
                ]
            }
        }
    }
}
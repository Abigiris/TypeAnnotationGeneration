{
    "testing-with-docker-master/setup.py": {
        "relpath": {
            "name": "relpath",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "strpath": [
                    "str"
                ]
            }
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "readme": [
                    "int",
                    "Tuple[int, int]",
                    "tuple[typing.Union[int,int]]",
                    "Optional[str]",
                    "str",
                    "None"
                ]
            }
        },
        "get_packages": {
            "name": "get_packages",
            "location": 54,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "get_version": {
            "name": "get_version",
            "location": 61,
            "return": [
                "str",
                "dict",
                "Optional[str]"
            ],
            "arguments": {
                "version_file": [
                    "str",
                    "None",
                    "Optional[str]",
                    "int",
                    "dict[, ]",
                    "dict",
                    "list[str]",
                    "List[str]",
                    "os.PathLike"
                ]
            }
        }
    },
    "testing-with-docker-master/an_app/app.py": {
        "setenv": {
            "name": "setenv",
            "location": 25,
            "return": [
                "MutableMapping[(str, str)]"
            ],
            "arguments": {
                "dotenv_path": [
                    "str"
                ],
                "env": [
                    "MutableMapping[(str, str)]"
                ]
            }
        }
    },
    "testing-with-docker-master/an_app/db.py": {
        "sql_compile": {
            "name": "sql_compile",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "dialect": [
                    "int",
                    "float"
                ],
                "statement": [
                    "int",
                    "float"
                ],
                "incl_literal_binds": [
                    "bool",
                    "int",
                    "float"
                ]
            }
        },
        "db_url": {
            "name": "db_url",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "env": [
                    "Mapping[(str, str)]"
                ]
            }
        },
        "get_metadata": {
            "name": "get_metadata",
            "location": 44,
            "return": [
                "sqlalchemy.sql.schema.MetaData"
            ],
            "arguments": {}
        },
        "get_tables": {
            "name": "get_tables",
            "location": 62,
            "return": [
                "Iterable[Tuple[(str, sqlalchemy.sql.schema.Table)]]"
            ],
            "arguments": {
                "metadata": [
                    "sqlalchemy.sql.schema.MetaData"
                ]
            }
        }
    },
    "testing-with-docker-master/an_app/_version.py": {},
    "testing-with-docker-master/an_app/__init__.py": {},
    "testing-with-docker-master/an_app/__main__.py": {},
    "testing-with-docker-master/an_app/api/root.py": {
        "endpoints": {
            "name": "endpoints",
            "location": 10,
            "return": [
                "list"
            ],
            "arguments": {
                "web": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "testing-with-docker-master/an_app/api/users.py": {
        "users_endpoints": {
            "name": "users_endpoints",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {
                "web": [
                    "Dict[str, Any]",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "testing-with-docker-master/an_app/api/util.py": {
        "map_endpoint_routes": {
            "name": "map_endpoint_routes",
            "location": 9,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "web": [
                    "str",
                    "bool",
                    "dict",
                    "dict[, ]",
                    "Type",
                    "typing.Type",
                    "Dict[str, Set[str]]",
                    "dict[str, set[str]]"
                ],
                "endpoint": [
                    "str"
                ],
                "funcs": [
                    "Iterable[Callable[([Any, Any], Any)]]"
                ]
            }
        }
    },
    "testing-with-docker-master/an_app/api/__init__.py": {},
    "testing-with-docker-master/tests/integration/conftest.py": {
        "setup_env": {
            "name": "setup_env",
            "location": 11,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "build_image": {
            "name": "build_image",
            "location": 21,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "run_docker": {
            "name": "run_docker",
            "location": 34,
            "return": [
                "",
                "typing.Generator[]"
            ],
            "arguments": {
                "setup_env": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "Optional[List[str]]",
                    "None",
                    "List[str]",
                    "list[str]"
                ],
                "build_image": [
                    "bool",
                    "Optional[str]",
                    "str",
                    "Optional[List[str]]",
                    "None",
                    "List[str]",
                    "list[str]"
                ]
            }
        }
    },
    "testing-with-docker-master/tests/integration/test_app.py": {
        "TestApp.test_root": {
            "name": "test_root",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApp.test_users": {
            "name": "test_users",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "users": [
                    "app.db_models.user.User"
                ]
            }
        }
    }
}
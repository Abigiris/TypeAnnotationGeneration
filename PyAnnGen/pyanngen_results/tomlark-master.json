{
    "tomlark-master/setup.py": {},
    "tomlark-master/docs/source/conf.py": {},
    "tomlark-master/src/tomlark/log.py": {
        "InterceptHandler.emit": {
            "name": "emit",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "logging.LogRecord"
                ]
            }
        }
    },
    "tomlark-master/src/tomlark/parser.py": {
        "Parser.grammer": {
            "name": "grammer",
            "location": 25,
            "return": [
                "str",
                "Optional[pathlib.Path]",
                "pathlib.Path",
                "bool",
                "Union[pathlib.Path, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser.lark": {
            "name": "lark",
            "location": 29,
            "return": [
                "str",
                "Lark"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser.parse": {
            "name": "parse",
            "location": 32,
            "return": [
                "str",
                "Mapping[str, Any]",
                "Optional[str]",
                "int",
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str"
                ]
            }
        }
    },
    "tomlark-master/src/tomlark/__init__.py": {},
    "tomlark-master/src/tomlark/__version__.py": {},
    "tomlark-master/tasks/docs.py": {
        "clean": {
            "name": "clean",
            "location": 14,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "build_news": {
            "name": "build_news",
            "location": 25,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [],
                "draft": [
                    "bool"
                ],
                "yes": [
                    "bool"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 47,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [],
                "output": [
                    "typing.Text",
                    "str",
                    "List[int]",
                    "int"
                ]
            }
        },
        "view": {
            "name": "view",
            "location": 58,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "tomlark-master/tasks/package.py": {
        "clean": {
            "name": "clean",
            "location": 14,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ]
            }
        },
        "format": {
            "name": "format",
            "location": 32,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "build": {
            "name": "build",
            "location": 46,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "check": {
            "name": "check",
            "location": 56,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "licenses": {
            "name": "licenses",
            "location": 66,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "int",
                    "bytes",
                    "str"
                ],
                "summary": [
                    "bool",
                    "str"
                ],
                "from_classifier": [
                    "bool",
                    "str"
                ],
                "with_system": [
                    "bool",
                    "str"
                ],
                "with_authors": [
                    "bool",
                    "str"
                ],
                "with_urls": [
                    "bool",
                    "str"
                ]
            }
        },
        "version": {
            "name": "version",
            "location": 98,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [
                    "Dict[str, Any]",
                    "dict[str, typing.Any]"
                ],
                "version": [
                    "str",
                    "None",
                    "bool",
                    "bytes",
                    "int"
                ],
                "force": [
                    "bool"
                ]
            }
        },
        "stub": {
            "name": "stub",
            "location": 145,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "typecheck": {
            "name": "typecheck",
            "location": 159,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        }
    },
    "tomlark-master/tasks/utils.py": {
        "get_previous_version": {
            "name": "get_previous_version",
            "location": 70,
            "return": [
                "str",
                "tuple[typing.Union[str,str,str,str,str]]"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ]
            }
        },
        "get_tag_content": {
            "name": "get_tag_content",
            "location": 82,
            "return": [
                "Mapping[str, Any]",
                "Optional[int]"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "get_artifact_paths": {
            "name": "get_artifact_paths",
            "location": 103,
            "return": [
                "list"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "get_username_password": {
            "name": "get_username_password",
            "location": 107,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "ctx": [
                    "int",
                    "str",
                    "List[str]",
                    "list[str]"
                ],
                "username_label": [
                    "str"
                ],
                "password_label": [
                    "str"
                ]
            }
        },
        "report._get_text": {
            "name": "_get_text",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool"
                ],
                "ctx": [
                    "str",
                    "bool",
                    "List[int]",
                    "list[int]"
                ],
                "level": [
                    "str",
                    "bool"
                ],
                "task_name": [
                    "str"
                ],
                "text": [
                    "str"
                ]
            }
        },
        "report.info": {
            "name": "info",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Union[int, str]"
                ],
                "ctx": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "task_name": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "text": [
                    "str",
                    "Union[int, str]",
                    "int"
                ]
            }
        },
        "report.debug": {
            "name": "debug",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Union[int, str]"
                ],
                "ctx": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "task_name": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "text": [
                    "str",
                    "Union[int, str]",
                    "int"
                ]
            }
        },
        "report.warning": {
            "name": "warning",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Union[int, str]"
                ],
                "ctx": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "task_name": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "text": [
                    "str",
                    "Union[int, str]",
                    "int"
                ]
            }
        },
        "report.warn": {
            "name": "warn",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict"
                ],
                "ctx": [
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "task_name": [
                    "str",
                    "dict",
                    "dict[, ]"
                ],
                "text": [
                    "str",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "report.error": {
            "name": "error",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Union[int, str]"
                ],
                "ctx": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "task_name": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "text": [
                    "str",
                    "Union[int, str]",
                    "int"
                ]
            }
        },
        "report.success": {
            "name": "success",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Union[int, str]"
                ],
                "ctx": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "task_name": [
                    "str",
                    "Union[int, str]",
                    "int"
                ],
                "text": [
                    "str",
                    "Union[int, str]",
                    "int"
                ]
            }
        }
    },
    "tomlark-master/tasks/__init__.py": {
        "profile": {
            "name": "profile",
            "location": 35,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [],
                "filepath": [
                    "str",
                    "pathlib.Path",
                    "Union[pathlib.Path, str]"
                ],
                "calltree": [
                    "bool"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 60,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 68,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "publish": {
            "name": "publish",
            "location": 76,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool"
                ],
                "test": [
                    "bool",
                    "list",
                    "str"
                ],
                "force": [
                    "bool",
                    "int",
                    "Callable"
                ],
                "draft": [
                    "bool",
                    "list",
                    "str"
                ]
            }
        }
    },
    "tomlark-master/tests/conftest.py": {
        "toml_parser": {
            "name": "toml_parser",
            "location": 14,
            "return": [
                "Parser",
                "Type[Parser]",
                "Callable[[str, Mapping], Any]",
                "_pytesconfig.argparsing.Parser",
                "src.engine.parser.Parser"
            ],
            "arguments": {}
        }
    },
    "tomlark-master/tests/__init__.py": {},
    "tomlark-master/tests/parser/test_arrays.py": {},
    "tomlark-master/tests/parser/test_array_of_tables.py": {},
    "tomlark-master/tests/parser/test_booleans.py": {},
    "tomlark-master/tests/parser/test_comments.py": {
        "test_line_comment": {
            "name": "test_line_comment",
            "location": 23,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "toml_parser": [
                    "str"
                ],
                "comment": [
                    "int"
                ]
            }
        }
    },
    "tomlark-master/tests/parser/test_floats.py": {},
    "tomlark-master/tests/parser/test_inline_tables.py": {},
    "tomlark-master/tests/parser/test_integers.py": {},
    "tomlark-master/tests/parser/test_keys.py": {},
    "tomlark-master/tests/parser/test_local_date.py": {},
    "tomlark-master/tests/parser/test_local_datetimes.py": {},
    "tomlark-master/tests/parser/test_local_time.py": {},
    "tomlark-master/tests/parser/test_offset_datetimes.py": {},
    "tomlark-master/tests/parser/test_pairs.py": {},
    "tomlark-master/tests/parser/test_strings.py": {},
    "tomlark-master/tests/parser/test_tables.py": {},
    "tomlark-master/tests/parser/utils.py": {
        "get_first_token": {
            "name": "get_first_token",
            "location": 13,
            "return": [
                "None",
                "Token",
                "Optional[int]",
                "bool",
                "Optional[Dict]",
                "Optional[str]",
                "Optional[List[str]]",
                "str"
            ],
            "arguments": {
                "tree": []
            }
        }
    },
    "tomlark-master/tests/parser/__init__.py": {},
    "tomlark-master/tests/strategies/toml.py": {
        "comment": {
            "name": "comment",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "draw": [
                    "str",
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "Iterable[str]"
                ]
            }
        }
    },
    "tomlark-master/tests/strategies/__init__.py": {}
}
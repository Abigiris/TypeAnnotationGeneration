{
    "tv-backlight-handler-master/gunicorn.conf.py": {},
    "tv-backlight-handler-master/run.py": {
        "on_connect": {
            "name": "on_connect",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "int",
                    "str",
                    "Tuple[str, str, str]",
                    "float"
                ],
                "userdata": [
                    "str",
                    "int",
                    "dict[, ]",
                    "dict",
                    "bool"
                ],
                "flags": [
                    "str",
                    "int",
                    "dict[, ]",
                    "dict",
                    "bool"
                ],
                "rc": [
                    "str"
                ]
            }
        },
        "on_message": {
            "name": "on_message",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [
                    "bool"
                ],
                "userdata": [
                    "str",
                    "bool",
                    "int",
                    "dict[, ]",
                    "Optional[Dict]",
                    "None",
                    "List[int]",
                    "list[int]"
                ],
                "message": [
                    "str",
                    "Dict[str, str]",
                    "dict[str, str]",
                    "List[str]",
                    "list[str]",
                    "Union[None, str]",
                    "None"
                ]
            }
        }
    },
    "tv-backlight-handler-master/app/accessories.py": {},
    "tv-backlight-handler-master/app/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.get_secret": {
            "name": "get_secret",
            "location": 17,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "secret_name": [
                    "str"
                ]
            }
        }
    },
    "tv-backlight-handler-master/app/log.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tv-backlight-handler-master/app/setup.py": {},
    "tv-backlight-handler-master/app/views.py": {
        "health": {
            "name": "health",
            "location": 15,
            "return": [
                "dict",
                "float"
            ],
            "arguments": {}
        },
        "list_accessories": {
            "name": "list_accessories",
            "location": 21,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "set_status": {
            "name": "set_status",
            "location": 30,
            "return": [
                "Dict[str, Any]",
                "int",
                "dict",
                "str",
                "Exception"
            ],
            "arguments": {
                "accessory_id": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "get_status": {
            "name": "get_status",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "accessory_id": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "set_brightness": {
            "name": "set_brightness",
            "location": 51,
            "return": [
                "Optional[str]",
                "Dict[str, float]",
                "int",
                "dict"
            ],
            "arguments": {
                "accessory_id": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "Tuple[int, str]",
                    "tuple[typing.Union[int,str]]"
                ]
            }
        },
        "get_brightness": {
            "name": "get_brightness",
            "location": 64,
            "return": [
                "str",
                "Optional[List[str]]"
            ],
            "arguments": {
                "accessory_id": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "set_color": {
            "name": "set_color",
            "location": 73,
            "return": [
                "dict",
                "Dict[str, bool]",
                "int"
            ],
            "arguments": {
                "accessory_id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_color": {
            "name": "get_color",
            "location": 89,
            "return": [
                "str",
                "Iterable[int]"
            ],
            "arguments": {
                "accessory_id": [
                    "str",
                    "int",
                    "dict",
                    "dict[, ]"
                ]
            }
        }
    },
    "tv-backlight-handler-master/app/__init__.py": {},
    "tv-backlight-handler-master/app/accessory/base.py": {
        "Accessory.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "dict[str, typing.Any]",
                    "List[str]",
                    "list[str]",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "Accessory._get_url": {
            "name": "_get_url",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        }
    },
    "tv-backlight-handler-master/app/accessory/mock.py": {
        "MockAccessory.set_status": {
            "name": "set_status",
            "location": 6,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "T",
                    "bool",
                    "float"
                ]
            }
        },
        "MockAccessory.set_brightness": {
            "name": "set_brightness",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int"
                ]
            }
        },
        "MockAccessory.set_color": {
            "name": "set_color",
            "location": 12,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "int"
                ],
                "g": [
                    "int"
                ],
                "b": [
                    "int"
                ]
            }
        },
        "MockAccessory.get_status": {
            "name": "get_status",
            "location": 15,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockAccessory.get_brightness": {
            "name": "get_brightness",
            "location": 18,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockAccessory.get_color": {
            "name": "get_color",
            "location": 21,
            "return": [
                "Tuple[(int, int, int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tv-backlight-handler-master/app/accessory/rgb.py": {
        "RGBLight.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "None"
                ],
                "device_id": [
                    "str",
                    "None",
                    "bool",
                    "Optional[str]"
                ],
                "access_token": [
                    "str",
                    "None",
                    "int",
                    "config.Config",
                    "Optional[str]",
                    "dict[str, str]",
                    "Optional[Dict[str, str]]"
                ],
                "base_url": [
                    "str",
                    "None",
                    "Optional[str]"
                ],
                "headers": [
                    "str",
                    "None",
                    "Optional[str]"
                ],
                "payload_factory": [
                    "str",
                    "None",
                    "bool",
                    "Callable[[], float]",
                    "int",
                    "typing.Callable[[], float]"
                ]
            }
        },
        "RGBLight._get_payload": {
            "name": "_get_payload",
            "location": 34,
            "return": [
                "Dict[(str, Union[(_T0, _T1)])]"
            ],
            "arguments": {
                "self": [],
                "access_token": [
                    "_T0"
                ],
                "value": [
                    "_T1"
                ]
            }
        },
        "RGBLight._set_parameter": {
            "name": "_set_parameter",
            "location": 40,
            "return": [
                "Optional[List[str]]",
                "str",
                "Union[None, List[str]]",
                "int"
            ],
            "arguments": {
                "self": [],
                "parameter": [
                    "str",
                    "int"
                ],
                "value": [
                    "int",
                    "str",
                    "float",
                    "bytes",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "RGBLight.set_status": {
            "name": "set_status",
            "location": 47,
            "return": [
                "bool",
                "Union[int, float, complex]",
                "Dict[str, Iterable[Any]]",
                "Optional[Any]",
                "int"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bytes",
                    "int",
                    "float",
                    "Union[str, bytes]"
                ]
            }
        },
        "RGBLight.set_brightness": {
            "name": "set_brightness",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int"
                ]
            }
        },
        "RGBLight.set_color": {
            "name": "set_color",
            "location": 55,
            "return": [
                "int",
                "str",
                "bool",
                "Callable[..., None]",
                "Callable[[KT], VT]",
                "Sequence"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "int"
                ],
                "g": [
                    "int"
                ],
                "b": [
                    "int"
                ]
            }
        },
        "RGBLight.get_status": {
            "name": "get_status",
            "location": 58,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "RGBLight.get_brightness": {
            "name": "get_brightness",
            "location": 61,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "RGBLight.get_color": {
            "name": "get_color",
            "location": 67,
            "return": [
                "Tuple[(int, int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RGBLight.handle": {
            "name": "handle",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "dict[str, typing.Any]",
                    "Dict[str, Any]",
                    "dict[, ]",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "tv-backlight-handler-master/app/accessory/__init__.py": {}
}
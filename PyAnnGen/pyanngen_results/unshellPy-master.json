{
    "unshellPy-master/fixtures/scripts/notCompatibleCmd.py": {
        "script": {
            "name": "script",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/fixtures/scripts/yieldAndReturnCommand.py": {
        "script": {
            "name": "script",
            "location": 1,
            "return": [
                "Generator[(str, Any, str)]"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/fixtures/scripts/yieldAsyncCommand.py": {},
    "unshellPy-master/fixtures/scripts/yieldCommandWithArgs.py": {
        "script": {
            "name": "script",
            "location": 3,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "foo": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "bar": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "unshellPy-master/fixtures/scripts/yieldEnvVarCommand.py": {
        "script": {
            "name": "script",
            "location": 4,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/fixtures/scripts/yieldMultipleCommand.py": {
        "script": {
            "name": "script",
            "location": 1,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/spec/__init__.py": {},
    "unshellPy-master/spec/unshell/test_display_help.py": {
        "test_cli_should_display_help_on_help_command": {
            "name": "test_cli_should_display_help_on_help_command",
            "location": 11,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/spec/unshell/__init__.py": {},
    "unshellPy-master/unshell/cli.py": {
        "help": {
            "name": "help",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [],
                "env": []
            }
        },
        "run": {
            "name": "run",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [],
                "env": []
            }
        },
        "resolveScript": {
            "name": "resolveScript",
            "location": 45,
            "return": [
                "Callable[(..., Generator[(Union[(str, List[str])], Optional[Union[(str, List[str])]], Union[(str, List[str])])])]"
            ],
            "arguments": {
                "scriptPath": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "argv": [],
                "env": []
            }
        },
        "main": {
            "name": "main",
            "location": 79,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/unshell/core.py": {
        "Unshell": {
            "name": "Unshell",
            "location": 16,
            "return": [
                "Callable"
            ],
            "arguments": {
                "opt": [
                    "dict[typing.Text, dict[, ]]"
                ]
            }
        },
        "is_generator": {
            "name": "is_generator",
            "location": 104,
            "return": [
                "bool"
            ],
            "arguments": {
                "fn": []
            }
        },
        "is_async_generator": {
            "name": "is_async_generator",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {
                "fn": []
            }
        },
        "isValidCmd": {
            "name": "isValidCmd",
            "location": 112,
            "return": [
                "bool"
            ],
            "arguments": {
                "cmd": []
            }
        }
    },
    "unshellPy-master/unshell/test_cli.py": {
        "test_cli_should_display_help_on_help_command": {
            "name": "test_cli_should_display_help_on_help_command",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_should_display_help_if_called_with_nothing": {
            "name": "test_cli_should_display_help_if_called_with_nothing",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_should_display_error_if_called_with_no_script": {
            "name": "test_cli_should_display_error_if_called_with_no_script",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_should_display_help_on_invalid_command": {
            "name": "test_cli_should_display_help_on_invalid_command",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_should_display_error_on_unresolvable_script": {
            "name": "test_cli_should_display_error_on_unresolvable_script",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_should_display_error_on_errored_script": {
            "name": "test_cli_should_display_error_on_errored_script",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_should_execute_script_on_run_command": {
            "name": "test_cli_should_execute_script_on_run_command",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/unshell/test_core.py": {
        "make_future_process": {
            "name": "make_future_process",
            "location": 19,
            "return": [
                "asyncio.futures.Future[nothing]"
            ],
            "arguments": {
                "return_code": [],
                "stdout": [],
                "stderr": []
            }
        },
        "test_unshell_should_return_function": {
            "name": "test_unshell_should_return_function",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_return_default_options": {
            "name": "test_unshell_should_return_default_options",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_raise_if_script_not_generator": {
            "name": "test_unshell_should_raise_if_script_not_generator",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_command": {
            "name": "test_unshell_should_process_command",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_not_process_unvalid_command": {
            "name": "test_unshell_should_not_process_unvalid_command",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_handle_command_throwing_error": {
            "name": "test_unshell_should_handle_command_throwing_error",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_throw_if_nothing_returns": {
            "name": "test_unshell_should_throw_if_nothing_returns",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_several_command": {
            "name": "test_unshell_should_process_several_command",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_yield_and_return_command": {
            "name": "test_unshell_should_process_yield_and_return_command",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_pass_cmd_res_to_next_cmd": {
            "name": "test_unshell_should_pass_cmd_res_to_next_cmd",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_pass_args_to_script": {
            "name": "test_unshell_should_pass_args_to_script",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_async_command": {
            "name": "test_unshell_should_process_async_command",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_pass_cmd_res_to_next_async_cmd": {
            "name": "test_unshell_should_pass_cmd_res_to_next_async_cmd",
            "location": 363,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unshell_should_raise_if_script_not_generator.script": {
            "name": "script",
            "location": 69,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_command.script": {
            "name": "script",
            "location": 84,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_not_process_unvalid_command.script": {
            "name": "script",
            "location": 110,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_handle_command_throwing_error.script": {
            "name": "script",
            "location": 129,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_throw_if_nothing_returns.script": {
            "name": "script",
            "location": 154,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_several_command.script": {
            "name": "script",
            "location": 179,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_process_yield_and_return_command.script": {
            "name": "script",
            "location": 217,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_pass_cmd_res_to_next_cmd.script": {
            "name": "script",
            "location": 256,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test_unshell_should_pass_args_to_script.script": {
            "name": "script",
            "location": 289,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "make_future_process.Stdout.decode": {
            "name": "decode",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "make_future_process.Stderr.decode": {
            "name": "decode",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "format": []
            }
        }
    },
    "unshellPy-master/unshell/type.py": {},
    "unshellPy-master/unshell/__init__.py": {},
    "unshellPy-master/unshell/utils/colors.py": {
        "red": {
            "name": "red",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "val": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "green": {
            "name": "green",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "val": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "unshellPy-master/unshell/utils/pipe.py": {
        "pipe": {
            "name": "pipe",
            "location": 6,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f1": [
                    "Iterable[str]",
                    "Callable",
                    "T"
                ]
            }
        },
        "pipe.args": {
            "name": "args",
            "location": 7,
            "return": [
                "float",
                "Optional[int]"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/unshell/utils/test_colors.py": {
        "test_red": {
            "name": "test_red",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_green": {
            "name": "test_green",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/unshell/utils/test_pipe.py": {
        "test_pipe_should_return_a_function": {
            "name": "test_pipe_should_return_a_function",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pipe_should_return_an_empty_string": {
            "name": "test_pipe_should_return_an_empty_string",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pipe_should_pipe_two_function": {
            "name": "test_pipe_should_pipe_two_function",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pipe_should_return_a_function.echo": {
            "name": "echo",
            "location": 12,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "x": []
            }
        },
        "test_pipe_should_return_an_empty_string.echo": {
            "name": "echo",
            "location": 24,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "x": []
            }
        },
        "test_pipe_should_pipe_two_function.echo": {
            "name": "echo",
            "location": 37,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "Iterable[Iterable[float]]",
                    "list",
                    "str",
                    "T",
                    "bytes"
                ]
            }
        },
        "test_pipe_should_pipe_two_function.grep": {
            "name": "grep",
            "location": 40,
            "return": [
                "Text",
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        }
    },
    "unshellPy-master/unshell/utils/__init__.py": {}
}
{
    "unsilencer-master/test_unsilencer.py": {
        "test_validate_email_valid": {
            "name": "test_validate_email_valid",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validate_required_settings_succeeds_when_set": {
            "name": "test_validate_required_settings_succeeds_when_set",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validate_required_settings_fails_when_unset": {
            "name": "test_validate_required_settings_fails_when_unset",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "Optional[str]"
                ]
            }
        },
        "test_validate_email_invalid": {
            "name": "test_validate_email_invalid",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_if_listed_returns_empty_list_when_not_found": {
            "name": "test_check_if_listed_returns_empty_list_when_not_found",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [
                    "str",
                    "int"
                ]
            }
        },
        "test_check_if_listed_returns_populated_list_when_found": {
            "name": "test_check_if_listed_returns_populated_list_when_found",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_remove_from_list_reports_failure": {
            "name": "test_remove_from_list_reports_failure",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [
                    "str",
                    "int"
                ],
                "capsys": []
            }
        },
        "test_remove_from_list_reports_success": {
            "name": "test_remove_from_list_reports_success",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "capsys": []
            }
        },
        "test_unsilencer_exits_when_email_is_invalid": {
            "name": "test_unsilencer_exits_when_email_is_invalid",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "capsys": []
            }
        },
        "test_unsilencer_reports_when_not_found": {
            "name": "test_unsilencer_reports_when_not_found",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "capsys": [
                    "Callable",
                    "str"
                ]
            }
        },
        "test_unsilencer_reports_when_found": {
            "name": "test_unsilencer_reports_when_found",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "capsys": [
                    "str",
                    "float"
                ]
            }
        },
        "test_check_suppression_list_for_complaint_exists": {
            "name": "test_check_suppression_list_for_complaint_exists",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MockSuccessResponse.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "unsilencer-master/unsilencer.py": {
        "validate_email": {
            "name": "validate_email",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "input": [
                    "str",
                    "Dict",
                    "Dict[str,Any]"
                ]
            }
        },
        "validate_settings": {
            "name": "validate_settings",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "check_if_listed": {
            "name": "check_if_listed",
            "location": 28,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "email_address": [
                    "List",
                    "int",
                    "Dict",
                    "Dict[str,str]",
                    "Tuple[Dict[str,str],List[str]]",
                    "Tuple[Union[dict[str,str],list[str]]]",
                    "List[str]",
                    "str",
                    "List[Dict[str,Any]]",
                    "List[dict[str,Any]]"
                ]
            }
        },
        "remove_from_list": {
            "name": "remove_from_list",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "suppression_list": [
                    "Optional[int]",
                    "int",
                    "bool",
                    "None"
                ],
                "email_address": [
                    "Optional[int]",
                    "int",
                    "bool",
                    "None"
                ]
            }
        },
        "_check_suppression_list": {
            "name": "_check_suppression_list",
            "location": 50,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "suppression_list": [
                    "str",
                    "Dict",
                    "int",
                    "bool"
                ],
                "email_address": [
                    "str",
                    "Dict",
                    "int",
                    "bool"
                ]
            }
        },
        "_remove_email_from_list": {
            "name": "_remove_email_from_list",
            "location": 59,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "suppression_list": [
                    "str",
                    "List[str]"
                ],
                "email_address": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "unsilence": {
            "name": "unsilence",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "email_address": [
                    "str"
                ]
            }
        }
    }
}
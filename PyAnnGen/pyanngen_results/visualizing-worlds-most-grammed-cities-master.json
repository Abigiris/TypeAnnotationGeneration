{
    "visualizing-worlds-most-grammed-cities-master/scrapping/qinstagram/main.py": {
        "instagram_search_location": {
            "name": "instagram_search_location",
            "location": 28,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "location_name": [],
                "geolocation": [],
                "count": [
                    "int"
                ]
            }
        },
        "instagram_query_location": {
            "name": "instagram_query_location",
            "location": 77,
            "return": [
                "Dict[(str, Union[(bool, Dict[(str, Any)])])]"
            ],
            "arguments": {
                "location_id": [],
                "count": []
            }
        },
        "search_location": {
            "name": "search_location",
            "location": 110,
            "return": [
                "Tuple[(Dict[(str, Any)], int)]"
            ],
            "arguments": {
                "request_json": []
            }
        },
        "query_location": {
            "name": "query_location",
            "location": 151,
            "return": [
                "Tuple[(Dict[(str, Union[(bool, str, Dict[(str, Any)])])], int)]"
            ],
            "arguments": {
                "request_json": []
            }
        },
        "lambda_main_function": {
            "name": "lambda_main_function",
            "location": 183,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        }
    },
    "visualizing-worlds-most-grammed-cities-master/scrapping/qinstagram/qinstagram/instagram.py": {
        "Instagram.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queryType": [
                    "str"
                ]
            }
        },
        "Instagram.get_insta_window_json": {
            "name": "get_insta_window_json",
            "location": 79,
            "return": [
                "str",
                "Dict[str, Any]",
                "bool",
                "Optional[str]",
                "app.utils.types.JSON",
                "Callable",
                "int",
                "dict",
                "Callable[[str], T]"
            ],
            "arguments": {
                "page_html": [
                    "Sequence[str]",
                    "str",
                    "int",
                    "List[str]"
                ]
            }
        },
        "Instagram.extract_window_data": {
            "name": "extract_window_data",
            "location": 87,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "window_data_json": [
                    "dict",
                    "Tuple[int, List[int], List[int]]",
                    "raiden.utils.Any"
                ]
            }
        },
        "Instagram.compute_gis": {
            "name": "compute_gis",
            "location": 122,
            "return": [
                "str"
            ],
            "arguments": {
                "rhx_gis": [
                    "str",
                    "int"
                ],
                "query_params": [
                    "str",
                    "int"
                ]
            }
        },
        "Instagram.get_insta_query_hash": {
            "name": "get_insta_query_hash",
            "location": 129,
            "return": [
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "page_html": [
                    "str",
                    "dict"
                ]
            }
        },
        "Instagram.query": {
            "name": "query",
            "location": 138,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "query_id": [
                    "str",
                    "int"
                ],
                "count": [
                    "int",
                    "bool",
                    "List[Dict[str, Any]]",
                    "List[Tuple[int, int]]",
                    "List[int]",
                    "Set[str]"
                ]
            }
        },
        "Instagram.search_location": {
            "name": "search_location",
            "location": 212,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "location_name": [
                    "str",
                    "Optional[str]"
                ],
                "geolocation": [
                    "raiden.utils.MessageID",
                    "List[float]",
                    "raiden.utils.Nonce",
                    "raiden.utils.BalanceHash",
                    "raiden.utils.AdditionalHash"
                ]
            }
        }
    },
    "visualizing-worlds-most-grammed-cities-master/scrapping/qinstagram/qinstagram/transforms.py": {
        "standardize_instagram_post_data": {
            "name": "standardize_instagram_post_data",
            "location": 14,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "post_data": [
                    "List[I]",
                    "Dict[str,Any]",
                    "multineauth.types.LoginSessionDict",
                    "List[libkol.types.ItemQuantity]",
                    "Dict[str,int]"
                ]
            }
        },
        "standardize_instagram_posts": {
            "name": "standardize_instagram_posts",
            "location": 41,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "insta_data": [
                    "List[core.base.types.GalleryData]",
                    "List[dict]"
                ]
            }
        }
    },
    "visualizing-worlds-most-grammed-cities-master/scrapping/qinstagram/qinstagram/types.py": {},
    "visualizing-worlds-most-grammed-cities-master/scrapping/qinstagram/qinstagram/utils.py": {
        "haversine_distance": {
            "name": "haversine_distance",
            "location": 4,
            "return": [
                "float"
            ],
            "arguments": {
                "lat1": [
                    "str",
                    "Callable",
                    "Optional[Union[str, Any]]"
                ],
                "lon1": [
                    "int",
                    "Callable",
                    "str"
                ],
                "lat2": [
                    "str",
                    "Callable",
                    "Optional[Union[str, Any]]"
                ],
                "lon2": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "visualizing-worlds-most-grammed-cities-master/scrapping/qinstagram/qinstagram/__init__.py": {},
    "visualizing-worlds-most-grammed-cities-master/scripts/viz_simple.py": {}
}
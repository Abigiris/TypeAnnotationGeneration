{
    "webtools-master/manage.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "webtools-master/docs/conf.py": {},
    "webtools-master/export_as_bookmark/admin.py": {},
    "webtools-master/export_as_bookmark/apps.py": {
        "ExportAsBookmarkConfig.ready": {
            "name": "ready",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "webtools-master/export_as_bookmark/bookmark_exporter.py": {
        "BookmarkExporter.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "urls": [
                    "Dict[str,Any]",
                    "List[str]",
                    "int"
                ]
            }
        },
        "BookmarkExporter.from_lines": {
            "name": "from_lines",
            "location": 42,
            "return": [
                "BookmarkExporter"
            ],
            "arguments": {
                "cls": [
                    "Type[_TBookmarkExporter]"
                ],
                "urls": [
                    "str"
                ]
            }
        },
        "BookmarkExporter.export": {
            "name": "export",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "webtools-master/export_as_bookmark/models.py": {},
    "webtools-master/export_as_bookmark/redis.py": {
        "Redis.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Redis.get_instance": {
            "name": "get_instance",
            "location": 28,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "Tuple[str, str]",
                    "Optional[int]",
                    "bool",
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "Redis.ready": {
            "name": "ready",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "Dict[str,Union[str,int]]"
                ]
            }
        },
        "Redis.set": {
            "name": "set",
            "location": 51,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "self": [],
                "k": [
                    "Dict[str,Any]",
                    "str",
                    "Union[Dict,List]",
                    "Dict",
                    "List"
                ],
                "v": [
                    "Dict[str,Any]",
                    "str",
                    "Union[Dict,List]",
                    "Dict",
                    "List"
                ]
            }
        },
        "Redis.get": {
            "name": "get",
            "location": 61,
            "return": [
                "str",
                "Iterable[Tuple[str,str]]",
                "Dict",
                "List[str]",
                "Dict[str,str]",
                "Dict[Any,dict[str,str]]"
            ],
            "arguments": {
                "self": [],
                "k": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        },
        "Redis.pttl": {
            "name": "pttl",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "k": [
                    "float",
                    "int",
                    "str",
                    "Tuple[int,int]",
                    "Tuple[Union[int,int]]"
                ]
            }
        }
    },
    "webtools-master/export_as_bookmark/urls.py": {},
    "webtools-master/export_as_bookmark/views.py": {
        "index": {
            "name": "index",
            "location": 23,
            "return": [
                "HttpResponse",
                "List[str]",
                "Dict[str,Any]",
                "Dict[str,dict]",
                "str",
                "bool"
            ],
            "arguments": {
                "req": [
                    "str",
                    "Optional[int]",
                    "int",
                    "None"
                ]
            }
        },
        "post": {
            "name": "post",
            "location": 33,
            "return": [
                "int",
                "HttpResponseBadRequest",
                "Dict[str,Any]",
                "HttpResponseRedirect"
            ],
            "arguments": {
                "req": [
                    "int",
                    "bool"
                ]
            }
        },
        "done": {
            "name": "done",
            "location": 55,
            "return": [
                "HttpResponse",
                "Dict",
                "Dict[str,Any]",
                "Optional[Dict]",
                "int",
                "str"
            ],
            "arguments": {
                "req": [
                    "str",
                    "int",
                    "Dict[str,str]"
                ],
                "id": [
                    "str",
                    "List[str]"
                ],
                "name": [
                    "str",
                    "int",
                    "Dict[str,str]"
                ]
            }
        },
        "download": {
            "name": "download",
            "location": 91,
            "return": [
                "str",
                "HttpResponseNotFound",
                "Dict[str,Any]",
                "HttpResponse"
            ],
            "arguments": {
                "req": [
                    "str",
                    "int"
                ],
                "id": [
                    "str",
                    "int"
                ],
                "name": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "webtools-master/export_as_bookmark/__init__.py": {},
    "webtools-master/export_as_bookmark/migrations/__init__.py": {},
    "webtools-master/lggr/admin.py": {},
    "webtools-master/lggr/apps.py": {},
    "webtools-master/lggr/models.py": {},
    "webtools-master/lggr/urls.py": {},
    "webtools-master/lggr/views.py": {
        "index": {
            "name": "index",
            "location": 21,
            "return": [
                "HttpResponse",
                "Dict[str,Any]",
                "Dict",
                "str"
            ],
            "arguments": {
                "req": [
                    "str",
                    "django.http.HttpRequest",
                    "int",
                    "bytes"
                ]
            }
        },
        "get": {
            "name": "get",
            "location": 32,
            "return": [
                "HttpResponse",
                "bool",
                "int",
                "str",
                "Optional[cmk.utils.type_defs.HostAddress]",
                "Dict",
                "cmk.utils.type_defs.HostName"
            ],
            "arguments": {
                "req": [
                    "int",
                    "str"
                ]
            }
        },
        "post": {
            "name": "post",
            "location": 63,
            "return": [
                "HttpResponse",
                "Dict[str,Any]",
                "str",
                "bool",
                "Optional[Dict]",
                "int"
            ],
            "arguments": {
                "req": [
                    "int",
                    "Dict[str,Any]",
                    "str"
                ]
            }
        }
    },
    "webtools-master/lggr/__init__.py": {},
    "webtools-master/lggr/migrations/__init__.py": {},
    "webtools-master/meta/tag_next_release.py": {
        "get_latest_release": {
            "name": "get_latest_release",
            "location": 69,
            "return": [
                "Release"
            ],
            "arguments": {}
        },
        "tag_release": {
            "name": "tag_release",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "release": [
                    "str",
                    "int",
                    "Optional[float]",
                    "float",
                    "None",
                    "Union[int,str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 101,
            "return": [
                "bytes",
                "None"
            ],
            "arguments": {
                "dryrun": [
                    "List[str]",
                    "bool",
                    "Optional[Sequence[str]]",
                    "Sequence[str]",
                    "Optional[List[str]]",
                    "None"
                ],
                "target": [
                    "str",
                    "List[str]",
                    "bool",
                    "None",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "Release.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str",
                    "int",
                    "Callable",
                    "bytes",
                    "Optional[Exception]",
                    "Exception",
                    "None"
                ]
            }
        },
        "Release.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Release.__repr__": {
            "name": "__repr__",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Release.next": {
            "name": "next",
            "location": 50,
            "return": [
                "Release"
            ],
            "arguments": {
                "self": [
                    "_TRelease@@Release@@"
                ],
                "target": [
                    "str"
                ]
            }
        }
    },
    "webtools-master/tests/tests.py": {
        "TestFailure.test_failure": {
            "name": "test_failure",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "webtools-master/tests/__init__.py": {},
    "webtools-master/tests/export_as_bookmark/redis.py": {
        "RedisTests.test_init": {
            "name": "test_init",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "webtools-master/tests/export_as_bookmark/views.py": {
        "ViewTests._request_get": {
            "name": "_request_get",
            "location": 13,
            "return": [
                "django.http.HttpRequest"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int"
                ],
                "reverse_args": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "ViewTests._request_post": {
            "name": "_request_post",
            "location": 18,
            "return": [
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "List[str]",
                    "List"
                ],
                "reverse_args": [
                    "str",
                    "List[str]",
                    "None",
                    "List"
                ]
            }
        },
        "ViewTests.test_index": {
            "name": "test_index",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_post": {
            "name": "test_post",
            "location": 29,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_mock": []
            }
        },
        "ViewTests.test_done": {
            "name": "test_done",
            "location": 39,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_mock": []
            }
        },
        "ViewTests.test_download": {
            "name": "test_download",
            "location": 48,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_mock": []
            }
        },
        "ViewTests.test_download_404": {
            "name": "test_download_404",
            "location": 57,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_mock": []
            }
        }
    },
    "webtools-master/tests/export_as_bookmark/__init__.py": {},
    "webtools-master/tests/lggr/views.py": {
        "ViewTests._request_get": {
            "name": "_request_get",
            "location": 14,
            "return": [
                "Dict[str, Any]",
                "django.http.HttpRequest"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "ViewTests._request_post": {
            "name": "_request_post",
            "location": 17,
            "return": [
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "ViewTests.test_index": {
            "name": "test_index",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_get": {
            "name": "test_get",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTests.test_post": {
            "name": "test_post",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "webtools-master/tests/lggr/__init__.py": {},
    "webtools-master/tests/webtools/views.py": {
        "ViewTests._request_get": {
            "name": "_request_get",
            "location": 10,
            "return": [
                "django.http.HttpRequest"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int"
                ],
                "reverse_args": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "ViewTests._request_post": {
            "name": "_request_post",
            "location": 15,
            "return": [
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "List[str]",
                    "List"
                ],
                "reverse_args": [
                    "str",
                    "List[str]",
                    "None",
                    "List"
                ]
            }
        },
        "ViewTests.test_index": {
            "name": "test_index",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "webtools-master/tests/webtools/__init__.py": {},
    "webtools-master/tests/webtools/rootapp/views.py": {
        "ViewTests._request_get": {
            "name": "_request_get",
            "location": 10,
            "return": [
                "Dict[str, Any]",
                "django.http.HttpRequest"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "int"
                ],
                "reverse_args": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "ViewTests._request_post": {
            "name": "_request_post",
            "location": 15,
            "return": [
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "List[str]",
                    "List"
                ],
                "reverse_args": [
                    "str",
                    "List[str]",
                    "None",
                    "List"
                ]
            }
        },
        "ViewTests.test_index": {
            "name": "test_index",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "webtools-master/tests/webtools/rootapp/__init__.py": {},
    "webtools-master/webtools/config.py": {
        "Config.from_dict": {
            "name": "from_dict",
            "location": 60,
            "return": [
                "Dict[str, Any]",
                "List[str]",
                "tuple",
                "Dict[str, str]",
                "Dict[int, Dict[int, Any]]"
            ],
            "arguments": {
                "cls": [
                    "Type[T]",
                    "List[str]",
                    "Type",
                    "int",
                    "Dict",
                    "Optional[float]",
                    "float",
                    "None",
                    "Optional[int]"
                ],
                "args": []
            }
        },
        "Config.from_toml": {
            "name": "from_toml",
            "location": 71,
            "return": [
                "Dict[str, bool]",
                "bytes",
                "Optional[Dict[str, str]]"
            ],
            "arguments": {
                "cls": [
                    "List[Dict[str,Any]]",
                    "int",
                    "List[dict[str,Any]]",
                    "str",
                    "Dict[str,Any]",
                    "float"
                ],
                "filepath": [
                    "str",
                    "Union[str,IO]",
                    "IO",
                    "IO[str]"
                ],
                "section": [
                    "List[Dict[str,Any]]",
                    "int",
                    "List[dict[str,Any]]",
                    "str",
                    "Dict[str,Any]",
                    "float"
                ]
            }
        }
    },
    "webtools-master/webtools/settings.py": {},
    "webtools-master/webtools/urls.py": {},
    "webtools-master/webtools/wsgi.py": {},
    "webtools-master/webtools/__init__.py": {},
    "webtools-master/webtools/rootapp/admin.py": {},
    "webtools-master/webtools/rootapp/apps.py": {},
    "webtools-master/webtools/rootapp/models.py": {},
    "webtools-master/webtools/rootapp/urls.py": {},
    "webtools-master/webtools/rootapp/views.py": {
        "index": {
            "name": "index",
            "location": 17,
            "return": [
                "HttpResponse",
                "Tuple[str,Optional[int]]",
                "Optional[str]",
                "raiden.utils.Dict[str,raiden.utils.Any]",
                "Iterable[Tuple[str,int]]",
                "str",
                "Dict",
                "Dict[str,dict]",
                "bytes"
            ],
            "arguments": {
                "req": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "webtools-master/webtools/rootapp/__init__.py": {},
    "webtools-master/webtools/rootapp/migrations/__init__.py": {}
}
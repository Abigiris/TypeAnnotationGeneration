{
    "whisper-master/manage.py": {},
    "whisper-master/chat/admin.py": {},
    "whisper-master/chat/apps.py": {},
    "whisper-master/chat/consumers.py": {},
    "whisper-master/chat/exceptions.py": {
        "ClientError.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        }
    },
    "whisper-master/chat/models.py": {
        "Room.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Room.group_name": {
            "name": "group_name",
            "location": 19,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/chat/urls.py": {},
    "whisper-master/chat/utils.py": {
        "get_room_or_error": {
            "name": "get_room_or_error",
            "location": 17,
            "return": [
                "str",
                "salon.models.Stylist",
                "zam_repondeur.models.Lecture"
            ],
            "arguments": {
                "room_id": [
                    "int",
                    "str",
                    "list[int]",
                    "bool",
                    "List[int]"
                ],
                "user": [
                    "str",
                    "int",
                    "float",
                    "lib.model.user.user.User",
                    "esm.models.LastOperation"
                ]
            }
        },
        "cache_or_update_room_presence": {
            "name": "cache_or_update_room_presence",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "room_id": [
                    "str",
                    "int",
                    "Set[str]",
                    "set[str]"
                ],
                "user": [
                    "str",
                    "int",
                    "Optional[int]",
                    "None",
                    "Dict[str, int]",
                    "dict[str, int]"
                ]
            }
        },
        "get_presence_users": {
            "name": "get_presence_users",
            "location": 57,
            "return": [
                "str",
                "zerver.models.Realm",
                "Optional[int]",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "room_id": [
                    "str",
                    "int",
                    "None",
                    "Union[str, int]",
                    "Optional[str]"
                ]
            }
        },
        "remove_user_from_presence": {
            "name": "remove_user_from_presence",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "room_id": [
                    "str",
                    "int"
                ],
                "user_id": [
                    "str",
                    "dict",
                    "dict[, ]"
                ]
            }
        },
        "get_room_presence_cache_key": {
            "name": "get_room_presence_cache_key",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "room_id": [
                    "int"
                ]
            }
        }
    },
    "whisper-master/chat/views.py": {
        "index": {
            "name": "index",
            "location": 13,
            "return": [
                "int",
                "str",
                "rotkehlchen.db.dbhandler.DBHandler"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "whisper-master/chat/__init__.py": {},
    "whisper-master/chat/migrations/0001_initial.py": {},
    "whisper-master/chat/migrations/__init__.py": {},
    "whisper-master/chat/tests/test_chat_consumer.py": {
        "create_room": {
            "name": "create_room",
            "location": 13,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {}
        },
        "create_user": {
            "name": "create_user",
            "location": 18,
            "return": [
                "Optional[app.models.User]",
                "bool",
                "cmk.utils.type_defs.UserId",
                "models.User",
                "cmk.utils.type_defs.HostName",
                "Optional[cmk.utils.type_defs.HostAddress]",
                "str"
            ],
            "arguments": {
                "email": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "tear_down": {
            "name": "tear_down",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "whisper-master/chat/tests/test_chat_views.py": {
        "TestChatViews.create_user": {
            "name": "create_user",
            "location": 12,
            "return": [
                "users.models.User"
            ],
            "arguments": {}
        },
        "TestChatViews.login_user": {
            "name": "login_user",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestChatViews.test_authorized_only": {
            "name": "test_authorized_only",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestChatViews.test_rooms_jsonify": {
            "name": "test_rooms_jsonify",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/chat/tests/__init__.py": {},
    "whisper-master/fabfile/fab_assert.py": {
        "get_apps_tests": {
            "name": "get_apps_tests",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "app_name": [
                    "Optional[str]"
                ],
                "exclude": [
                    "Optional[str]"
                ]
            }
        },
        "get_test_command": {
            "name": "get_test_command",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "app_name": [
                    "Optional[str]"
                ],
                "keep_db": [
                    "bool"
                ],
                "parallel": [
                    "bool"
                ],
                "fake_migrations": [
                    "bool"
                ],
                "exclude": [
                    "Optional[str]"
                ]
            }
        },
        "initialize_db": {
            "name": "initialize_db",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "coverage": {
            "name": "coverage",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test": {
            "name": "test",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "app_name": [
                    "Optional[str]"
                ],
                "exclude": [
                    "Optional[str]"
                ],
                "parallel": [
                    "Optional[str]"
                ],
                "fake_db": [
                    "Optional[str]"
                ],
                "keep_db": [
                    "Optional[str]"
                ],
                "log_off": [
                    "Optional[str]"
                ],
                "haystack_silent": [
                    "Optional[str]"
                ]
            }
        },
        "initialize_db.create_connection": {
            "name": "create_connection",
            "location": 83,
            "return": [
                "bool",
                "float"
            ],
            "arguments": {
                "db_name": [
                    "typing.Text",
                    "str",
                    "Optional[str]",
                    "bool",
                    "Optional[int]"
                ]
            }
        }
    },
    "whisper-master/fabfile/fab_config.py": {},
    "whisper-master/fabfile/fab_development.py": {
        "manage_local": {
            "name": "manage_local",
            "location": 12,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "cmd": [
                    "int",
                    "str",
                    "Callable",
                    "typing.Callable[, ]"
                ]
            }
        },
        "set_env": {
            "name": "set_env",
            "location": 20,
            "return": [
                "",
                "None"
            ],
            "arguments": {
                "env_name": [
                    "str"
                ]
            }
        },
        "makemigrations": {
            "name": "makemigrations",
            "location": 29,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "migrate": {
            "name": "migrate",
            "location": 35,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "clean_pyc": {
            "name": "clean_pyc",
            "location": 41,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "check": {
            "name": "check",
            "location": 47,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "cq": {
            "name": "cq",
            "location": 54,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        },
        "req": {
            "name": "req",
            "location": 61,
            "return": [
                "",
                "None"
            ],
            "arguments": {}
        }
    },
    "whisper-master/fabfile/utils.py": {
        "grintify": {
            "name": "grintify",
            "location": 5,
            "return": [
                "Callable"
            ],
            "arguments": {
                "method": [
                    "typing.Callable[, ]",
                    "Callable",
                    "list[str]",
                    "str",
                    "Callable[..., Optional[Any]]",
                    "list[]",
                    "List[str]",
                    "list"
                ]
            }
        },
        "grint": {
            "name": "grint",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str",
                    "dict",
                    "dict[, ]",
                    "IO[str]",
                    "typing.IO",
                    "Optional[int]",
                    "int",
                    "bool",
                    "None",
                    "Dict[str, str]",
                    "dict[str, str]"
                ],
                "level": [
                    "int",
                    "str",
                    "bytes",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "grintify.wrapped_method": {
            "name": "wrapped_method",
            "location": 11,
            "return": [
                "bool",
                "Dict[str, Any]",
                "int"
            ],
            "arguments": {}
        }
    },
    "whisper-master/fabfile/__init__.py": {},
    "whisper-master/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 7,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 12,
            "return": [
                "int",
                "Iterable[str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ],
                "sociallogin": [
                    "dict[, ]",
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        }
    },
    "whisper-master/users/admin.py": {
        "MyUserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "int",
                "Callable",
                "models.Question",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/users/apps.py": {},
    "whisper-master/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 10,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/users/urls.py": {},
    "whisper-master/users/views.py": {
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 17,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 25,
            "return": [
                "bool",
                "zerver.models.Realm",
                "Optional[zerver.models.UserProfile]",
                "Dict[int, dict]",
                "Optional[Iterable[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 28,
            "return": [
                "str",
                "bool",
                "models.User",
                "arxiv.users.domain.User",
                "app.models.GameMember",
                "app.models.course.Course"
            ],
            "arguments": {
                "self": [],
                "queryset": [
                    "bool",
                    "None",
                    "str",
                    "T",
                    "dict",
                    "dict[, ]"
                ]
            }
        }
    },
    "whisper-master/users/__init__.py": {},
    "whisper-master/users/migrations/0001_initial.py": {},
    "whisper-master/users/migrations/__init__.py": {},
    "whisper-master/users/tests/factories.py": {},
    "whisper-master/users/tests/test_admin.py": {
        "TestMyUserCreationForm.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyUserCreationForm.test_clean_username_success": {
            "name": "test_clean_username_success",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyUserCreationForm.test_clean_username_false": {
            "name": "test_clean_username_false",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/users/tests/test_models.py": {
        "TestUser.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test__str__": {
            "name": "test__str__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_get_absolute_url": {
            "name": "test_get_absolute_url",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/users/tests/test_urls.py": {
        "TestUserURLs.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_list_reverse": {
            "name": "test_list_reverse",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_list_resolve": {
            "name": "test_list_resolve",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_redirect_reverse": {
            "name": "test_redirect_reverse",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_redirect_resolve": {
            "name": "test_redirect_resolve",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_detail_reverse": {
            "name": "test_detail_reverse",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_detail_resolve": {
            "name": "test_detail_resolve",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_update_reverse": {
            "name": "test_update_reverse",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_update_resolve": {
            "name": "test_update_resolve",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/users/tests/test_views.py": {
        "BaseUserTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whisper-master/users/tests/__init__.py": {},
    "whisper-master/whisper/asgi.py": {},
    "whisper-master/whisper/routing.py": {},
    "whisper-master/whisper/settings.py": {},
    "whisper-master/whisper/urls.py": {},
    "whisper-master/whisper/wsgi.py": {},
    "whisper-master/whisper/__init__.py": {}
}
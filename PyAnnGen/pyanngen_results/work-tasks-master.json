{
    "work-tasks-master/conftest.py": {
        "template_db_collection": {
            "name": "template_db_collection",
            "location": 6,
            "return": [
                "typing.Generator[Template]"
            ],
            "arguments": {}
        }
    },
    "work-tasks-master/db/__init__.py": {},
    "work-tasks-master/db/entities/db_connector.py": {},
    "work-tasks-master/db/entities/template.py": {
        "Template.creating_unique_field": {
            "name": "creating_unique_field",
            "location": 16,
            "return": [
                "Mapping",
                "dict"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "bytes",
                    "None",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "Template.create": {
            "name": "create",
            "location": 23,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "lyostat_id": [
                    "str"
                ],
                "cycle_id": [
                    "str"
                ],
                "recipe_name": [
                    "str"
                ]
            }
        },
        "Template.get_user_by_name": {
            "name": "get_user_by_name",
            "location": 39,
            "return": [
                "Dict[str, Any]",
                "bool",
                "type",
                "str"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Tuple",
                    "Optional[str]",
                    "None"
                ],
                "user_name": [
                    "str",
                    "Tuple",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "Template.get_user_by_id": {
            "name": "get_user_by_id",
            "location": 43,
            "return": [
                "str",
                "Optional[recidiviz.persistence.entity.state.entities.StateSupervisionPeriod]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int"
                ],
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Template.get_all": {
            "name": "get_all",
            "location": 52,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "Dict[str,str]",
                    "memoryview",
                    "Iterable[Tuple[int,int]]"
                ]
            }
        },
        "Template.get_all_by_lyostat_id": {
            "name": "get_all_by_lyostat_id",
            "location": 57,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Optional[int]",
                    "int",
                    "None"
                ],
                "lyostat_id": [
                    "str",
                    "Optional[int]",
                    "int",
                    "None"
                ]
            }
        },
        "Template.get_elements_by_datetime_range": {
            "name": "get_elements_by_datetime_range",
            "location": 64,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "datetime.datetime",
                    "int",
                    "None",
                    "Optional[str]",
                    "Optional[int]",
                    "datetime.date"
                ],
                "start": [
                    "str",
                    "datetime.datetime",
                    "int",
                    "None",
                    "Optional[str]",
                    "Optional[int]",
                    "datetime.date"
                ],
                "end": [
                    "str",
                    "datetime.datetime",
                    "int",
                    "None",
                    "Optional[str]",
                    "Optional[int]",
                    "datetime.date"
                ]
            }
        },
        "Template.update": {
            "name": "update",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str"
                ],
                "user_id": [
                    "str"
                ],
                "name": [
                    "str",
                    "int",
                    "None",
                    "MutableMapping"
                ],
                "lyostat_id": [
                    "str",
                    "int",
                    "None",
                    "MutableMapping"
                ],
                "cycle_id": [
                    "str",
                    "int",
                    "None",
                    "MutableMapping"
                ],
                "recipe_name": [
                    "str",
                    "int",
                    "None",
                    "MutableMapping"
                ]
            }
        },
        "Template.marked_delete_by_id": {
            "name": "marked_delete_by_id",
            "location": 93,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "Template"
                ],
                "user_id": [
                    "str",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "Template.unmarked_delete_by_id": {
            "name": "unmarked_delete_by_id",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "List[Optional[int]]",
                    "int",
                    "None",
                    "Optional[int]",
                    "Optional[str]"
                ],
                "user_id": [
                    "str",
                    "List[Optional[int]]",
                    "int",
                    "None",
                    "Optional[int]",
                    "Optional[str]"
                ]
            }
        },
        "Template.delete_all_scheduled_for_delete": {
            "name": "delete_all_scheduled_for_delete",
            "location": 107,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "Template.delete_all": {
            "name": "delete_all",
            "location": 113,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "Type",
                    "bool",
                    "Type[T]"
                ]
            }
        }
    },
    "work-tasks-master/db/entities/__init__.py": {},
    "work-tasks-master/tests/__init__.py": {},
    "work-tasks-master/tests/test_db/expected_data.py": {},
    "work-tasks-master/tests/test_db/test_db_fixtured.py": {
        "test_create": {
            "name": "test_create",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "template_db_collection": [
                    "str",
                    "Sequence[str]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_get_user_by_id": {
            "name": "test_get_user_by_id",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "template_db_collection": [
                    "str",
                    "bytes",
                    "Sequence[str]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "test_get_all_by_lyostat_id": {
            "name": "test_get_all_by_lyostat_id",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "template_db_collection": [
                    "str",
                    "Sequence[str]"
                ]
            }
        }
    },
    "work-tasks-master/tests/test_db/__init__.py": {}
}
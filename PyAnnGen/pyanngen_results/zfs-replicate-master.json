{
    "zfs-replicate-master/zfs/replicate/error.py": {
        "ZFSReplicateError.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "List[str]",
                    "Callable"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/list.py": {
        "inits": {
            "name": "inits",
            "location": 9,
            "return": [
                "list"
            ],
            "arguments": {
                "elements": [
                    "int",
                    "bytes",
                    "Tuple[int, int]",
                    "List[int]",
                    "List[T]"
                ]
            }
        },
        "venn": {
            "name": "venn",
            "location": 20,
            "return": [
                "Tuple[(list, list, list)]"
            ],
            "arguments": {
                "lefts": [
                    "List",
                    "List[tuple]",
                    "List[dict]",
                    "Dict",
                    "str",
                    "List[tuple[Union[int,int]]]",
                    "float",
                    "List[Tuple[int,int]]",
                    "Iterable[int]"
                ],
                "rights": [
                    "List",
                    "List[tuple]",
                    "List[dict]",
                    "Dict",
                    "str",
                    "List[tuple[Union[int,int]]]",
                    "float",
                    "List[Tuple[int,int]]",
                    "Iterable[int]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/optional.py": {
        "value": {
            "name": "value",
            "location": 7,
            "return": [
                "Union[str,int,float]",
                "List[str]",
                "float",
                "Dict",
                "int",
                "str",
                "List[Callable]",
                "None"
            ],
            "arguments": {
                "optional": [
                    "List[str]",
                    "T",
                    "str",
                    "int",
                    "Optional[int]",
                    "None",
                    "Optional[List[Callable]]",
                    "List[Callable]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/subprocess.py": {
        "open": {
            "name": "open",
            "location": 9,
            "return": [
                "subprocess.Popen[bytes]"
            ],
            "arguments": {
                "command": [
                    "IO",
                    "Union[IO[str],int]",
                    "str",
                    "int",
                    "bytes",
                    "bool"
                ],
                "shell": [
                    "bool",
                    "Union[IO[str],int]",
                    "str",
                    "int",
                    "bytes"
                ],
                "stdin": [
                    "Union[IO[str], int]",
                    "str",
                    "bool",
                    "int",
                    "bytes"
                ],
                "stdout": [
                    "Union[IO[str], int]",
                    "str",
                    "bool",
                    "int",
                    "bytes"
                ],
                "stderr": [
                    "Union[IO[str], int]",
                    "str",
                    "bool",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/__init__.py": {},
    "zfs-replicate-master/zfs/replicate/cli/click.py": {
        "EnumChoice.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enum": [
                    "List[str]",
                    "int",
                    "Hashable",
                    "Tuple[FrozenSet[int]]",
                    "Tuple[frozenset]"
                ]
            }
        },
        "EnumChoice.convert": {
            "name": "convert",
            "location": 22,
            "return": [
                "str",
                "int",
                "List[str]",
                "List[float]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "Optional[BaseException]",
                    "BaseException",
                    "None"
                ],
                "param": [
                    "str",
                    "Optional[click.Context]",
                    "None",
                    "Union[str,List[Any]]",
                    "List[Any]"
                ],
                "ctx": [
                    "str",
                    "Optional[click.Context]",
                    "None",
                    "Union[str,List[Any]]",
                    "List[Any]"
                ]
            }
        },
        "EnumChoice.get_metavar": {
            "name": "get_metavar",
            "location": 31,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "self": [],
                "param": [
                    "bool",
                    "str",
                    "Dict",
                    "T"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/cli/main.py": {
        "main": {
            "name": "main",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "verbose": [
                    "bool",
                    "str"
                ],
                "dry_run": [
                    "bool",
                    "str"
                ],
                "follow_delete": [
                    "bytes",
                    "str",
                    "Iterable[Union[Any,int]]",
                    "int",
                    "Sequence[str]"
                ],
                "recursive": [
                    "Optional[List[str]]",
                    "List[str]",
                    "bool",
                    "None",
                    "str",
                    "int",
                    "List[Dict]",
                    "List[dict]"
                ],
                "port": [
                    "str",
                    "int",
                    "List[str]",
                    "click.Path",
                    "Iterator",
                    "Iterator[str]"
                ],
                "user": [
                    "str",
                    "int",
                    "List[str]",
                    "click.Path",
                    "Iterator",
                    "Iterator[str]"
                ],
                "identity_file": [
                    "str",
                    "int",
                    "List[str]",
                    "click.Path",
                    "Iterator",
                    "Iterator[str]"
                ],
                "cipher": [
                    "str",
                    "int",
                    "List[str]",
                    "click.Path",
                    "Iterator",
                    "Iterator[str]"
                ],
                "compression": [
                    "int",
                    "bool"
                ],
                "host": [
                    "str",
                    "int"
                ],
                "remote_fs": [
                    "str",
                    "bool",
                    "int"
                ],
                "local_fs": [
                    "str",
                    "Optional[str]",
                    "bool",
                    "None",
                    "Type",
                    "List[object]",
                    "List[Tuple[str,str]]",
                    "List[tuple[Union[str,str]]]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/cli/__init__.py": {},
    "zfs-replicate-master/zfs/replicate/compress/command.py": {
        "command": {
            "name": "command",
            "location": 7,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "compression": [
                    "bool",
                    "bytes",
                    "float",
                    "int"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/compress/type.py": {},
    "zfs-replicate-master/zfs/replicate/compress/__init__.py": {},
    "zfs-replicate-master/zfs/replicate/filesystem/create.py": {
        "create": {
            "name": "create",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "filesystem": [
                    "str",
                    "type.FileSystem",
                    "int",
                    "Optional[int]",
                    "None"
                ],
                "ssh_command": [
                    "str",
                    "Dict[str,Any]",
                    "Dict"
                ]
            }
        },
        "_create": {
            "name": "_create",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "filesystem": [
                    "str",
                    "bool",
                    "Iterator[str]",
                    "float",
                    "Iterator"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/filesystem/destroy.py": {
        "destroy": {
            "name": "destroy",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "filesystem": [
                    "Hashable",
                    "bool"
                ],
                "ssh_command": [
                    "str",
                    "Callable",
                    "List[str]",
                    "List[dict[str,str]]",
                    "List",
                    "List[Dict[str,str]]",
                    "Union[str,List]"
                ]
            }
        },
        "_destroy": {
            "name": "_destroy",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "filesystem": [
                    "int",
                    "str",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/filesystem/list.py": {
        "list": {
            "name": "list",
            "location": 13,
            "return": [
                "str",
                "Optional[str]",
                "bytes"
            ],
            "arguments": {
                "filesystem": [
                    "str",
                    "filesystem.FileSystem",
                    "Callable",
                    "Optional[Callable]",
                    "None"
                ],
                "ssh_command": [
                    "str",
                    "None",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "_list": {
            "name": "_list",
            "location": 35,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "filesystem": [
                    "Type",
                    "filesystem.FileSystem",
                    "Dict",
                    "str",
                    "bool"
                ]
            }
        },
        "_filesystems": {
            "name": "_filesystems",
            "location": 41,
            "return": [
                "List",
                "Tuple[int]",
                "str",
                "List[Dict]",
                "int"
            ],
            "arguments": {
                "zfs_list_output": [
                    "str",
                    "bytes"
                ]
            }
        },
        "_filesystem": {
            "name": "_filesystem",
            "location": 45,
            "return": [
                "Type[Any]",
                "Sequence[Any]"
            ],
            "arguments": {
                "zfs_list_line": [
                    "bytes",
                    "str",
                    "Callable[[bytes],bytes]",
                    "Callable[bytes,bytes]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/filesystem/type.py": {
        "filesystem": {
            "name": "filesystem",
            "location": 14,
            "return": [
                "FileSystem"
            ],
            "arguments": {
                "name": [
                    "str",
                    "List[str]"
                ],
                "readonly": [
                    "bool",
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/filesystem/__init__.py": {
        "remote_dataset": {
            "name": "remote_dataset",
            "location": 8,
            "return": [
                "AbstractSet[str]",
                "str"
            ],
            "arguments": {
                "remote": [
                    "str",
                    "type.FileSystem"
                ],
                "local": [
                    "str",
                    "type.FileSystem"
                ]
            }
        },
        "remote_filesystem": {
            "name": "remote_filesystem",
            "location": 13,
            "return": [
                "AbstractSet[str]",
                "bool"
            ],
            "arguments": {
                "remote": [
                    "str",
                    "type.FileSystem",
                    "int",
                    "List"
                ],
                "local": [
                    "str",
                    "type.FileSystem",
                    "int",
                    "List"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/snapshot/destroy.py": {
        "destroy": {
            "name": "destroy",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "snapshot": [
                    "Dict[str,Any]",
                    "str"
                ],
                "ssh_command": [
                    "str",
                    "Callable",
                    "List[str]",
                    "List[dict[str,str]]",
                    "List",
                    "List[Dict[str,str]]",
                    "Union[str,List]"
                ]
            }
        },
        "_destroy": {
            "name": "_destroy",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "snapshot": [
                    "str",
                    "List[str]",
                    "Dict[str,Any]",
                    "bytes"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/snapshot/list.py": {
        "list": {
            "name": "list",
            "location": 10,
            "return": [
                "str",
                "Optional[str]",
                "bytes"
            ],
            "arguments": {
                "filesystem": [
                    "str",
                    "filesystem.FileSystem"
                ],
                "recursive": [
                    "bool",
                    "Sequence[str]",
                    "Set",
                    "str",
                    "List[T]"
                ],
                "ssh_command": [
                    "str",
                    "None",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        },
        "_list": {
            "name": "_list",
            "location": 32,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "filesystem": [
                    "Type",
                    "filesystem.FileSystem",
                    "Dict",
                    "str",
                    "bool"
                ],
                "recursive": [
                    "str",
                    "int",
                    "List",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "_snapshots": {
            "name": "_snapshots",
            "location": 42,
            "return": [
                "List",
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "zfs_list_output": [
                    "str",
                    "bytes",
                    "List[str]",
                    "float",
                    "bool",
                    "int",
                    "Iterable[str]",
                    "Optional[bytes]"
                ]
            }
        },
        "_snapshot": {
            "name": "_snapshot",
            "location": 53,
            "return": [
                "Snapshot",
                "str",
                "int"
            ],
            "arguments": {
                "zfs_list_line": [
                    "bytes",
                    "str",
                    "Dict",
                    "Iterator[int]"
                ]
            }
        },
        "_add_previous": {
            "name": "_add_previous",
            "location": 65,
            "return": [
                "Snapshot",
                "bool",
                "str",
                "int",
                "List[List[Any]]",
                "AsyncGenerator"
            ],
            "arguments": {
                "snapshot": [
                    "Type"
                ],
                "previous": [
                    "str",
                    "None",
                    "bool",
                    "Optional[str]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/snapshot/send.py": {
        "send": {
            "name": "send",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "remote": [
                    "Dict",
                    "str",
                    "int",
                    "Optional[ShippingInfo]",
                    "None"
                ],
                "current": [
                    "int",
                    "List"
                ],
                "ssh_command": [
                    "Dict",
                    "str",
                    "int",
                    "Optional[ShippingInfo]",
                    "None"
                ],
                "compression": [
                    "str",
                    "Type",
                    "bool",
                    "Dict[str,Any]",
                    "float"
                ],
                "follow_delete": [
                    "List[str]",
                    "Tuple[str]"
                ],
                "previous": [
                    "List[str]",
                    "Tuple[str]",
                    "None"
                ]
            }
        },
        "_send": {
            "name": "_send",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "current": [
                    "str",
                    "Optional[str]",
                    "List[str]",
                    "None",
                    "Dict[str,str]",
                    "bool",
                    "Tuple[Any]",
                    "Optional[Tuple[Any]]",
                    "Optional[int]"
                ],
                "previous": [
                    "str",
                    "None",
                    "int",
                    "Optional[List[Any]]",
                    "List[Any]",
                    "Iterable[str]",
                    "List[list[Callable]]",
                    "List[List[Callable]]",
                    "float",
                    "Optional[float]",
                    "Optional[str]"
                ],
                "follow_delete": [
                    "bool",
                    "int",
                    "str",
                    "List[int]"
                ]
            }
        },
        "_receive": {
            "name": "_receive",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "remote": [
                    "int",
                    "Callable",
                    "str"
                ],
                "current": [
                    "int",
                    "Callable",
                    "str"
                ],
                "decompress_command": [
                    "List",
                    "str",
                    "Tuple[str]",
                    "List[str]",
                    "Callable",
                    "Optional[Union[str,Any,Any,Any]]",
                    "Any",
                    "None"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/snapshot/type.py": {
        "Snapshot.__eq__": {
            "name": "__eq__",
            "location": 17,
            "return": [
                "bool",
                "int",
                "str",
                "Dict",
                "Type"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Optional[List[str]]",
                    "List[str]",
                    "Dict[str,Any]",
                    "Optional[Any]",
                    "None",
                    "Any",
                    "Optional[Sequence[Any]]",
                    "Optional[Mapping[str,Any]]",
                    "Sequence[Any]",
                    "Mapping"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/snapshot/__init__.py": {},
    "zfs-replicate-master/zfs/replicate/ssh/cipher.py": {},
    "zfs-replicate-master/zfs/replicate/ssh/command.py": {
        "command": {
            "name": "command",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "cipher": [
                    "int",
                    "Dict",
                    "str",
                    "bool"
                ],
                "user": [
                    "str",
                    "int",
                    "float",
                    "List[str]"
                ],
                "key_file": [
                    "str",
                    "List[str]"
                ],
                "port": [
                    "str",
                    "int",
                    "bool"
                ],
                "host": [
                    "str",
                    "int",
                    "bool"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/ssh/__init__.py": {},
    "zfs-replicate-master/zfs/replicate/task/execute.py": {
        "execute": {
            "name": "execute",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "remote": [
                    "bool",
                    "str",
                    "filesystem.FileSystem",
                    "int"
                ],
                "tasks": [
                    "Dict",
                    "Dict[str,Any]",
                    "Optional[Dict[str,Any]]",
                    "List[dict[Any,str]]",
                    "Dict[Hashable,dict[Hashable,Any]]",
                    "int",
                    "List[Dict[Any,str]]",
                    "Dict[Hashable,Dict[Hashable,Any]]"
                ],
                "ssh_command": [
                    "str",
                    "bool",
                    "filesystem.FileSystem"
                ],
                "follow_delete": [
                    "bool",
                    "str",
                    "filesystem.FileSystem",
                    "int"
                ],
                "compression": [
                    "bool",
                    "str",
                    "filesystem.FileSystem",
                    "int"
                ]
            }
        },
        "_create": {
            "name": "_create",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "tasks": [
                    "List[T]",
                    "Dict",
                    "List[type.Task]",
                    "Dict[str,Any]",
                    "taskiapplication.models.task.Task",
                    "bool",
                    "Callable"
                ],
                "ssh_command": [
                    "str",
                    "Dict[str,Any]",
                    "Optional[str]",
                    "None"
                ]
            }
        },
        "_destroy": {
            "name": "_destroy",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "tasks": [
                    "List[T]",
                    "List[str]",
                    "List[type.Task]",
                    "str",
                    "Dict[str,Any]",
                    "Task",
                    "pc.data.Task",
                    "taskiapplication.models.task.Task"
                ],
                "ssh_command": [
                    "str",
                    "Task",
                    "asyncio.Task[Any]"
                ]
            }
        },
        "_send": {
            "name": "_send",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "remote": [
                    "str",
                    "bool",
                    "Mapping",
                    "filesystem.FileSystem",
                    "None",
                    "Optional[Mapping]",
                    "Dict",
                    "Optional[str]",
                    "Optional[dict]"
                ],
                "tasks": [
                    "List[T]",
                    "List[type.Task]",
                    "float",
                    "adam.situation.Action[adam.ontology.OntologyNode,adam.situation.SituationObject]",
                    "bool"
                ],
                "ssh_command": [
                    "str",
                    "bool",
                    "Mapping",
                    "filesystem.FileSystem",
                    "None",
                    "Optional[Mapping]",
                    "Dict",
                    "Optional[str]",
                    "Optional[dict]"
                ],
                "follow_delete": [
                    "str",
                    "bool",
                    "Mapping",
                    "filesystem.FileSystem",
                    "None",
                    "Optional[Mapping]",
                    "Dict",
                    "Optional[str]",
                    "Optional[dict]"
                ],
                "compression": [
                    "str",
                    "bool",
                    "Mapping",
                    "filesystem.FileSystem",
                    "None",
                    "Optional[Mapping]",
                    "Dict",
                    "Optional[str]",
                    "Optional[dict]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/task/generate.py": {
        "generate": {
            "name": "generate",
            "location": 12,
            "return": [
                "List[replicate.task.type.Task]"
            ],
            "arguments": {
                "remote": [
                    "bool",
                    "float",
                    "str",
                    "Tuple[str]",
                    "Optional[Union[str,Any]]",
                    "Any",
                    "None"
                ],
                "local_snapshots": [
                    "int",
                    "bool",
                    "Optional[int]"
                ],
                "remote_snapshots": [
                    "Union[Sequence[str], str]",
                    "Tuple[Sequence]",
                    "Optional[bool]"
                ],
                "follow_delete": [
                    "bool",
                    "int"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/task/report.py": {
        "report": {
            "name": "report",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "tasks": [
                    "Dict",
                    "List",
                    "int",
                    "Dict[str,Any]"
                ]
            }
        },
        "_report_filesystem": {
            "name": "_report_filesystem",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "filesystems": [
                    "str",
                    "int",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ]
            }
        },
        "_report_action": {
            "name": "_report_action",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "actions": [
                    "str",
                    "int",
                    "Iterable[Context]",
                    "Dict",
                    "bool"
                ],
                "indentation": [
                    "Text",
                    "str",
                    "Mapping",
                    "List[str]"
                ]
            }
        },
        "_report_snapshot": {
            "name": "_report_snapshot",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "snapshots": [
                    "str",
                    "List[str]"
                ],
                "indentation": [
                    "Text",
                    "str",
                    "List[str]"
                ]
            }
        },
        "_counts": {
            "name": "_counts",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "current": [
                    "str",
                    "Dict[int,Any]",
                    "Dict[str,Any]",
                    "T"
                ],
                "tasks": [
                    "Dict[str,Any]",
                    "List",
                    "Sequence[Any]",
                    "int",
                    "bool"
                ],
                "indentation": [
                    "Text",
                    "List",
                    "int",
                    "Dict[str,Any]"
                ]
            }
        },
        "_action": {
            "name": "_action",
            "location": 83,
            "return": [
                "str",
                "List[str]",
                "bytes"
            ],
            "arguments": {
                "task": [
                    "str",
                    "int",
                    "asyncio.Task[Any]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs/replicate/task/type.py": {},
    "zfs-replicate-master/zfs/replicate/task/__init__.py": {},
    "zfs-replicate-master/zfs_test/__init__.py": {},
    "zfs-replicate-master/zfs_test/replicate_test/list_test.py": {
        "test_inits_length": {
            "name": "test_inits_length",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "elements": [
                    "List[int]",
                    "List"
                ]
            }
        },
        "test_inits_heads": {
            "name": "test_inits_heads",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "elements": [
                    "List[int]"
                ]
            }
        },
        "test_inits_monotonic_length": {
            "name": "test_inits_monotonic_length",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "elements": [
                    "List",
                    "List[int]",
                    "List[str]"
                ]
            }
        },
        "test_venn_subsets": {
            "name": "test_venn_subsets",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "lefts": [
                    "Set[int]"
                ],
                "rights": [
                    "Set[int]"
                ]
            }
        },
        "test_venn_disjoint": {
            "name": "test_venn_disjoint",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "both": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/optional_test.py": {
        "test_value_none": {
            "name": "test_value_none",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_value_not_none": {
            "name": "test_value_not_none",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/__init__.py": {},
    "zfs-replicate-master/zfs_test/replicate_test/cli_test/main_test.py": {
        "test_invokes_without_stacktrace": {
            "name": "test_invokes_without_stacktrace",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invokes_without_stacktrace_verbose": {
            "name": "test_invokes_without_stacktrace_verbose",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/compress_test/command_test.py": {
        "test_command_total": {
            "name": "test_command_total",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/compress_test/__init__.py": {},
    "zfs-replicate-master/zfs_test/replicate_test/snapshot_test/list_test.py": {
        "test_snapshots": {
            "name": "test_snapshots",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "snapshots": [
                    "str"
                ]
            }
        },
        "test_snapshots_depth": {
            "name": "test_snapshots_depth",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "snapshots": [
                    "List[zfs.replicate.snapshotype.Snapshot]",
                    "str",
                    "Iterable[str]",
                    "bool"
                ]
            }
        },
        "test_snapshot": {
            "name": "test_snapshot",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "snapshot": [
                    "zfs.replicate.snapshotype.Snapshot"
                ]
            }
        },
        "_output": {
            "name": "_output",
            "location": 32,
            "return": [
                "str",
                "Text"
            ],
            "arguments": {
                "snapshot": [
                    "List",
                    "zfs.replicate.snapshotype.Snapshot"
                ]
            }
        },
        "_depth": {
            "name": "_depth",
            "location": 36,
            "return": [
                "int",
                "Optional[bool]",
                "float",
                "str"
            ],
            "arguments": {
                "snapshot": [
                    "int",
                    "float",
                    "Iterable[Optional[Any]]",
                    "zfs.replicate.snapshotype.Snapshot",
                    "None",
                    "Optional[int]"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/snapshot_test/strategies.py": {},
    "zfs-replicate-master/zfs_test/replicate_test/snapshot_test/type_test.py": {
        "test_eq_ignore_previous": {
            "name": "test_eq_ignore_previous",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/snapshot_test/__init__.py": {},
    "zfs-replicate-master/zfs_test/replicate_test/task_test/generate_test.py": {
        "test_no_tasks": {
            "name": "test_no_tasks",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_remotes": {
            "name": "test_empty_remotes",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "snapshots": [
                    "Dict[str,Any]",
                    "Callable",
                    "Dict"
                ]
            }
        },
        "test_empty_locals": {
            "name": "test_empty_locals",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "snapshots": [
                    "Dict[str,Any]",
                    "Callable",
                    "Dict"
                ]
            }
        }
    },
    "zfs-replicate-master/zfs_test/replicate_test/task_test/report_test.py": {
        "test_empty_tasks": {
            "name": "test_empty_tasks",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nonempty_tasks": {
            "name": "test_nonempty_tasks",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "tasks": [
                    "Callable[[list],None]",
                    "Callable[list,None]"
                ]
            }
        }
    }
}
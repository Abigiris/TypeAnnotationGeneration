{
    "1": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket_obj",
        "lineno": 26,
        "annotation": "Bucket",
        "type_label": "google.cloud.storage.bucket.Bucket",
        "predc": [
            "gobbli.util.pred_prob_to_pred_label",
            "catmaid.control.common.get_request_list",
            "gobbli.util.pred_prob_to_pred_multilabel",
            "hydrus.helpers.get_link_props",
            "lightbus.utilities.casting.cast_to_signature"
        ]
    },
    "2": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "json_keyfile_path",
        "lineno": 84,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "hasattr",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler",
            "allennlp.data.token_indexers.TokenCharactersIndexer",
            "allennlp.data.fields.adjacency_field.AdjacencyField"
        ]
    },
    "3": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 87,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "allennlp.data.token_indexers.PosTagIndexer"
        ]
    },
    "4": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 95,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "input_number_of_ship_fields_to_mark_in_cols"
        ]
    },
    "5": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 95,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.token_indexers.TokenCharactersIndexer",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "6": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 106,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "cltk.embeddings.embeddings.Word2VecEmbeddings",
            "is_non_punctuator"
        ]
    },
    "7": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "prefix",
        "lineno": 107,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "SybaseExecutionContext_pysybase",
            "allennlp.modules.span_extractors.EndpointSpanExtractor"
        ]
    },
    "8": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "delimiter",
        "lineno": 108,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.fields.ListField",
            "InfrastructureProviderMock"
        ]
    },
    "9": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 126,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence"
        ]
    },
    "10": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "prefix",
        "lineno": 127,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.dataset_readers.ConllCorefReader",
            "allennlp.modules.span_extractors.EndpointSpanExtractor",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "11": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "delimiter",
        "lineno": 128,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "zulipterminal.ui_tools.utils.create_msg_box_list",
            "zulipterminal.ui_tools.utils.is_muted",
            "neuralmonkey.vocabulary.from_nematus_json"
        ]
    },
    "12": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "start_after_key",
        "lineno": 129,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "hasattr",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts"
        ]
    },
    "13": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "token",
        "lineno": 130,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "starfish.core.imagestack.parser.numpy.NumpyData",
            "allennlp.data.fields.adjacency_field.AdjacencyField"
        ]
    },
    "14": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "k_page_max",
        "lineno": 131,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "min",
            "V",
            "typing.Any",
            "dict"
        ]
    },
    "15": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 145,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "16": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 146,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.vocabulary.from_wordlist",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "17": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "response_content_disposition",
        "lineno": 147,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "django.contrib.gis.db.models.TextField",
            "src.common.misc.separate_trailer",
            "",
            "_no_op_unmarshaling"
        ]
    },
    "18": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 159,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "MaybeStr",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "19": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 160,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "cltk.embeddings.embeddings.Word2VecEmbeddings",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "20": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "src_file_handle",
        "lineno": 161,
        "annotation": "typing.BinaryIO",
        "type_label": null,
        "predc": null
    },
    "21": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "content_type",
        "lineno": 162,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "starfish.core.imagestack.parser.numpy.NumpyData",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "22": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "metadata",
        "lineno": 163,
        "annotation": "dict",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "defaultdict",
            "default",
            "gordo.machine.model.factories.feedforward_autoencoder.feedforward_hourglass"
        ]
    },
    "23": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 172,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "graphql.type.GraphQLInputObjectType",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "24": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 172,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "25": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 184,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "is_non_punctuator",
            "MaybeStr"
        ]
    },
    "26": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 184,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "27": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 203,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "graphql.type.GraphQLInputObjectType",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.state_machines.states.CoverageState"
        ]
    },
    "28": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 204,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "src.common.misc.separate_header",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "29": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 218,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "graphql.type.GraphQLInputObjectType",
            "compat.str",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer",
            "cltk.embeddings.embeddings.Word2VecEmbeddings"
        ]
    },
    "30": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 219,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "neuralmonkey.vocabulary.from_wordlist",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "31": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 233,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "hasattr",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.token_indexers.PosTagIndexer"
        ]
    },
    "32": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 234,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_wordlist",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "33": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "cloud_checksum",
        "lineno": 235,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "compat.str",
            "backupwordpress.docker_compose_wordpress_project_directory.DockerComposeWordpressProjectDirectory"
        ]
    },
    "34": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 253,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.state_machines.states.CoverageState",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "35": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 254,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_wordlist",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "ajapaik.ajapaik_face_recognition.models.FaceRecognitionRectangleSubjectDataSuggestion"
        ]
    },
    "36": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 268,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "list",
            "compat.str",
            "graphql.type.GraphQLInputObjectType",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer"
        ]
    },
    "37": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 269,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "starfish.core.imagestack.parser.numpy.NumpyData",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "38": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 283,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "input_number_of_ship_fields_to_mark_in_cols",
            "input_number_of_ship_fields_to_mark_in_rows",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts"
        ]
    },
    "39": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 284,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "40": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 300,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "MaybeStr",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "graphql.type.GraphQLInputObjectType"
        ]
    },
    "41": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "key",
        "lineno": 301,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "t_delta_x",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "42": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "src_bucket",
        "lineno": 315,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "43": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "src_key",
        "lineno": 315,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_wordlist",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "44": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "dst_bucket",
        "lineno": 316,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "graphql.type.GraphQLInputObjectType"
        ]
    },
    "45": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "dst_key",
        "lineno": 316,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "hasattr",
            "backupwordpress.docker_compose_wordpress_project_directory.DockerComposeWordpressProjectDirectory"
        ]
    },
    "46": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "copy_token",
        "lineno": 317,
        "annotation": "typing.Any",
        "type_label": null,
        "predc": null
    },
    "47": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/gs.py",
        "name": "bucket",
        "lineno": 329,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "is_non_punctuator",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "48": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 35,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer",
            "getattr",
            "allennlp.state_machines.states.CoverageState"
        ]
    },
    "49": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 117,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.state_machines.states.CoverageState",
            "allennlp.data.token_indexers.PosTagIndexer",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "50": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "prefix",
        "lineno": 118,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "ajapaik.ajapaik.serializers.CuratorAlbumSelectionAlbumSerializer",
            "allennlp.data.dataset_readers.ConllCorefReader",
            "django_structlog_demo_project.users.views.UserUpdateView"
        ]
    },
    "51": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "delimiter",
        "lineno": 119,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.fields.ListField",
            "InfrastructureProviderMock"
        ]
    },
    "52": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 138,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.common.file_utils._split_s3_path",
            "ajapaik.ajapaik.serializers.CuratorAlbumSelectionAlbumSerializer"
        ]
    },
    "53": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "prefix",
        "lineno": 139,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "SybaseExecutionContext_pysybase",
            "allennlp.modules.span_extractors.EndpointSpanExtractor"
        ]
    },
    "54": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "delimiter",
        "lineno": 140,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "InfrastructureProviderMock",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "55": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "start_after_key",
        "lineno": 141,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.fields.adjacency_field.AdjacencyField"
        ]
    },
    "56": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "token",
        "lineno": 142,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "57": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "k_page_max",
        "lineno": 143,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "min",
            "_network.SimpleFeedForwardSamplingNetwork",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "SybaseExecutionContext_mxodbc"
        ]
    },
    "58": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 156,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_wordlist",
            "allennlp.data.token_indexers.PosTagIndexer",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "59": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 157,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_wordlist",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "60": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "response_content_disposition",
        "lineno": 158,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "django.contrib.gis.db.models.TextField",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "61": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 173,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "62": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 174,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_wordlist",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "63": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "method",
        "lineno": 175,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "64": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 188,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "MaybeStr",
            "allennlp.data.token_indexers.PosTagIndexer",
            "ajapaik.ajapaik.serializers.CuratorAlbumSelectionAlbumSerializer"
        ]
    },
    "65": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 189,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "SybaseExecutionContext_pysybase",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "66": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "src_file_handle",
        "lineno": 190,
        "annotation": "typing.BinaryIO",
        "type_label": null,
        "predc": null
    },
    "67": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "content_type",
        "lineno": 191,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "snorkel.classification.utils.list_to_tensor",
            "src.common.misc.separate_headers",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "68": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "metadata",
        "lineno": 192,
        "annotation": "dict",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "default",
            "defaultdict",
            "None"
        ]
    },
    "69": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 205,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "results",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer"
        ]
    },
    "70": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 205,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "71": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 212,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "MaybeStr",
            "is_non_punctuator"
        ]
    },
    "72": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 212,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "73": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 234,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "ajapaik.ajapaik.serializers.CuratorMyAlbumListAlbumSerializer"
        ]
    },
    "74": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 235,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "75": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 256,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.state_machines.states.CoverageState",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "graphql.type.GraphQLInputObjectType"
        ]
    },
    "76": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 257,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "django.contrib.gis.db.models.TextField"
        ]
    },
    "77": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 271,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "getattr"
        ]
    },
    "78": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 272,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.token_indexers.TokenCharactersIndexer",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "79": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "cloud_checksum",
        "lineno": 273,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "neuralmonkey.vocabulary.from_nematus_json",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "80": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 288,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "graphql.type.GraphQLInputObjectType",
            "cltk.embeddings.embeddings.Word2VecEmbeddings",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts"
        ]
    },
    "81": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 289,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "type_",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "82": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 303,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.token_indexers.PosTagIndexer",
            "neuralmonkey.vocabulary.from_wordlist",
            "allennlp.state_machines.states.GrammarBasedState"
        ]
    },
    "83": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 304,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "84": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 319,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "graphql.type.GraphQLInputObjectType",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.token_indexers.PosTagIndexer"
        ]
    },
    "85": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 320,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.vocabulary.from_wordlist",
            "django.contrib.gis.db.models.TextField"
        ]
    },
    "86": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 334,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "cltk.embeddings.embeddings.Word2VecEmbeddings",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "87": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 335,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "88": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "src_bucket",
        "lineno": 367,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "v2_runner_on_failed",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "89": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "src_key",
        "lineno": 367,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "90": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "dst_bucket",
        "lineno": 368,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "SybaseExecutionContext_pysybase",
            "v2_runner_on_failed",
            "django.contrib.gis.db.models.TextField"
        ]
    },
    "91": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "dst_key",
        "lineno": 368,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "hasattr",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "({str|?-?},str)"
        ]
    },
    "92": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "copy_token",
        "lineno": 369,
        "annotation": "typing.Any",
        "type_label": null,
        "predc": null
    },
    "93": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 395,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.token_indexers.PosTagIndexer",
            "neuralmonkey.vocabulary.from_wordlist",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld"
        ]
    },
    "94": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 396,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.vocabulary.from_wordlist",
            "type_"
        ]
    },
    "95": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 415,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "graphql.type.GraphQLInputObjectType",
            "MaybeStr",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "96": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "key",
        "lineno": 416,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "kedro.framework.hooks.manager._create_hook_manager",
            "cltk.embeddings.embeddings.Word2VecEmbeddings"
        ]
    },
    "97": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "upload_id",
        "lineno": 417,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "hasattr",
            "SybaseExecutionContext_pysybase",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "98": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "part_count",
        "lineno": 418,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "min",
            "point",
            "pkg_resources.extern.pyparsing.ParseResults",
            "input"
        ]
    },
    "99": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "search_start",
        "lineno": 419,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "min",
            "v2_runner_on_ok",
            "_get_marshaling_method",
            "v2_runner_on_failed"
        ]
    },
    "100": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "return_count",
        "lineno": 420,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "min",
            "input",
            "point",
            "init"
        ]
    },
    "101": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/s3.py",
        "name": "bucket",
        "lineno": 460,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "102": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 95,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence"
        ]
    },
    "103": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "prefix",
        "lineno": 96,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.dataset_readers.ConllCorefReader",
            "django_structlog_demo_project.users.views.UserUpdateView",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "104": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "delimiter",
        "lineno": 97,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.modules.span_extractors.EndpointSpanExtractor",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts"
        ]
    },
    "105": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 107,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "graphql.type.GraphQLInputObjectType",
            "allennlp.data.token_indexers.PosTagIndexer",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer"
        ]
    },
    "106": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "prefix",
        "lineno": 108,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django_structlog_demo_project.users.views.UserUpdateView",
            "allennlp.data.dataset_readers.ConllCorefReader",
            "allennlp.data.token_indexers.DepLabelIndexer"
        ]
    },
    "107": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "delimiter",
        "lineno": 109,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "InfrastructureProviderMock",
            "ajapaik.ajapaik_face_recognition.models.FaceRecognitionRectangleSubjectDataSuggestion"
        ]
    },
    "108": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "start_after_key",
        "lineno": 110,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "hasattr",
            "r",
            "Character"
        ]
    },
    "109": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "token",
        "lineno": 111,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_wordlist",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer"
        ]
    },
    "110": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "k_page_max",
        "lineno": 112,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "UnDefined",
            "_network.SimpleFeedForwardSamplingNetwork",
            "v2_runner_on_ok",
            "amundsen_gremlin.gremlin_model.VertexTypes"
        ]
    },
    "111": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 122,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "cltk.embeddings.embeddings.Word2VecEmbeddings"
        ]
    },
    "112": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 123,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "113": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 136,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "src.common.misc.separate_headers",
            "SybaseExecutionContext_pysybase",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer"
        ]
    },
    "114": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 137,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "pkg_resources.extern.pyparsing.Group",
            "t_delta_x",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "115": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "src_file_handle",
        "lineno": 138,
        "annotation": "typing.BinaryIO",
        "type_label": null,
        "predc": null
    },
    "116": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "content_type",
        "lineno": 139,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "cltk.embeddings.embeddings.Word2VecEmbeddings",
            "eth.vm.forks.petersburg.headers.create_header_from_parent",
            "snorkel.classification.utils.list_to_tensor"
        ]
    },
    "117": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "metadata",
        "lineno": 140,
        "annotation": "dict",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "diffy_cli.utils.json_schema.handle_oneof",
            "django.contrib.gis.gdal.prototypes.generation.const_string_output",
            "socialhome.users.tests.factories.UserFactory"
        ]
    },
    "118": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 146,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "allennlp.data.token_indexers.PosTagIndexer",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer"
        ]
    },
    "119": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 146,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "cltk.embeddings.embeddings.Word2VecEmbeddings",
            "homeassistant.helpers.event.track_sunrise",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer"
        ]
    },
    "120": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 153,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "getattr",
            "allennlp.data.token_indexers.PosTagIndexer"
        ]
    },
    "121": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 153,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer"
        ]
    },
    "122": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 165,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer"
        ]
    },
    "123": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 166,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "124": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 178,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "starfish.core.imagestack.parser.numpy.NumpyData",
            "graphql.type.GraphQLInputObjectType",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter"
        ]
    },
    "125": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 179,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "126": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 191,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "127": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 192,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "neuralmonkey.vocabulary.from_t2t_vocabulary",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "128": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "cloud_checksum",
        "lineno": 193,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "is_non_punctuator",
            "start_line"
        ]
    },
    "129": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 208,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "pkg_resources.extern.pyparsing.Combine"
        ]
    },
    "130": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 209,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_wordlist"
        ]
    },
    "131": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 221,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.token_indexers.PosTagIndexer",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "132": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 222,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "133": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 234,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter"
        ]
    },
    "134": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 235,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "neuralmonkey.vocabulary.from_wordlist",
            "neuralmonkey.vocabulary.from_t2t_vocabulary"
        ]
    },
    "135": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 249,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "pypinyin.style._utils.replace_symbol_to_number",
            "nucypher.blockchain.eth.deployers.NucypherTokenDeployer",
            "cltk.embeddings.embeddings.Word2VecEmbeddings"
        ]
    },
    "136": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "key",
        "lineno": 250,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "t_delta_x",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "type_"
        ]
    },
    "137": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "src_bucket",
        "lineno": 262,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "138": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "src_key",
        "lineno": 262,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "graphql.type.GraphQLSchema",
            "allennlp.training.learning_rate_schedulers.CosineWithRestarts",
            "hasattr"
        ]
    },
    "139": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "dst_bucket",
        "lineno": 263,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.tokenizers.word_splitter.SpacyWordSplitter",
            "MaybeStr"
        ]
    },
    "140": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "dst_key",
        "lineno": 263,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "hasattr",
            "django.contrib.gis.db.models.TextField",
            "allennlp.data.fields.adjacency_field.AdjacencyField"
        ]
    },
    "141": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "copy_token",
        "lineno": 264,
        "annotation": "typing.Any",
        "type_label": null,
        "predc": null
    },
    "142": {
        "file_path": "cloud-blobstore-master/cloud_blobstore/__init__.py",
        "name": "bucket",
        "lineno": 268,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "allennlp.data.token_indexers.TokenCharactersIndexer",
            "rl_algorithms.recurrent.utils.slice_r2d1_arguments"
        ]
    },
    "143": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "filesize",
        "lineno": 19,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "input",
            "indent",
            "min",
            "pydantic.PositiveInt"
        ]
    },
    "144": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "local_root",
        "lineno": 30,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "InfrastructureProviderMock",
            "allennlp.state_machines.states.CoverageState",
            "allennlp.data.dataset_readers.ConllCorefReader"
        ]
    },
    "145": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "local_path",
        "lineno": 38,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "hasattr",
            "compat.str",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "146": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "remote_path",
        "lineno": 39,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "hasattr",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "compat.str",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "147": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "content_type",
        "lineno": 40,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "_get_marshaling_method",
            "allennlp.data.token_indexers.PretrainedTransformerIndexer",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld"
        ]
    },
    "148": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "metadata_keys",
        "lineno": 41,
        "annotation": "typing.Dict[(str, str)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "collections.OrderedDict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "fixturefilehandler.file_paths.YamlConfigFilePathBuilder",
            "YDict"
        ]
    },
    "149": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "local_root",
        "lineno": 48,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "AbstractScalar",
            "set_serializer",
            "ajapaik.ajapaik.serializers.CuratorAlbumSelectionAlbumSerializer"
        ]
    },
    "150": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "bucket",
        "lineno": 48,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.token_indexers.PosTagIndexer",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "ajapaik.ajapaik.serializers.CuratorMyAlbumListAlbumSerializer"
        ]
    },
    "151": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "local_path",
        "lineno": 60,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "hasattr",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "152": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "remote_path",
        "lineno": 61,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "hasattr",
            "neuralmonkey.model.sequence.EmbeddedFactorSequence",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "Targ"
        ]
    },
    "153": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "content_type",
        "lineno": 62,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "dict",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld"
        ]
    },
    "154": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "metadata_keys",
        "lineno": 63,
        "annotation": "typing.Dict[(str, str)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "mode.utils.objects.LIST_TYPES",
            "compat.str",
            "unittest.mock.MagicMock"
        ]
    },
    "155": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "tags",
        "lineno": 64,
        "annotation": "typing.Dict[(str, str)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "diffy_cli.utils.json_schema.handle_oneof",
            "digit",
            "RT"
        ]
    },
    "156": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "local_root",
        "lineno": 105,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.DateTimeField",
            "tests",
            "test"
        ]
    },
    "157": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "bucket_name",
        "lineno": 105,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "allennlp.semparse.worlds.WikiTablesVariableFreeWorld",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "allennlp.data.token_indexers.PosTagIndexer"
        ]
    },
    "158": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "local_path",
        "lineno": 118,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "hasattr",
            "compat.str",
            "getattr",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "159": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "remote_path",
        "lineno": 119,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "hasattr",
            "allennlp.data.fields.adjacency_field.AdjacencyField",
            "list",
            "compat.str"
        ]
    },
    "160": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "content_type",
        "lineno": 120,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "src",
            "ajapaik.ajapaik.serializers.CuratorAlbumSelectionAlbumSerializer",
            "_get_marshaling_method"
        ]
    },
    "161": {
        "file_path": "cloud-blobstore-master/tests/fixtures/cloud_uploader.py",
        "name": "metadata_keys",
        "lineno": 121,
        "annotation": "typing.Dict[(str, str)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "mode.utils.objects.LIST_TYPES",
            "starfish.core.test.factories.two_spot_sparse_coded_data_factory",
            "RT"
        ]
    },
    "162": {
        "file_path": "cloud-blobstore-master/tests/fixtures/populate_lib.py",
        "name": "uploader",
        "lineno": 9,
        "annotation": "Uploader",
        "type_label": "cloud_uploader.Uploader",
        "predc": [
            "defaultdict",
            "allennlp.data.fields.TextField",
            "aiologger.formatters.json.ExtendedJsonFormatter",
            "selector_spec.SelectionUnion",
            "django.utils.dateparse.parse_datetime"
        ]
    },
    "163": {
        "file_path": "cloud-blobstore-master/tests/fixtures/populate_lib.py",
        "name": "s3_bucket",
        "lineno": 42,
        "annotation": "typing.Optional[str]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "K",
            "diffy_cli.utils.json_schema.handle_oneof",
            "snorkel.classification.training.schedulers.ShuffledScheduler"
        ]
    },
    "164": {
        "file_path": "cloud-blobstore-master/tests/fixtures/populate_lib.py",
        "name": "gs_bucket",
        "lineno": 42,
        "annotation": "typing.Optional[str]",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "starfish.core.morphology.util._normalize_physical_ticks",
            "defaultdict",
            "qiskit.providers.ibmq.credentials.discover_credentials"
        ]
    }
}
{
    "1": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "extractor",
        "lineno": 29,
        "annotation": "TypeExtractor",
        "type_label": "py_codegen.type_extractor.type_extractor.TypeExtractor",
        "predc": [
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "gluonts.mx.distribution.DirichletMultinomial",
            "allennlp.data.token_indexers.TokenCharactersIndexer",
            "gluonts.mx.distribution.Dirichlet",
            "rl_algorithms.common.helper_functions.numpy2floattensor"
        ]
    },
    "2": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "node",
        "lineno": 33,
        "annotation": "NodeType",
        "type_label": "py_codegen.type_extractor.nodes.BaseNodeType.NodeType",
        "predc": [
            "starfish.core.test.factories.synthetic_spot_pass_through_stack",
            "hypothesis.internal.reflection.convert_positional_arguments",
            "grouper.repositories.factory.SessionFactory",
            "grouper.repositories.factory.SingletonSessionFactory",
            "src.common.misc.separate_headers"
        ]
    },
    "3": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "typ",
        "lineno": 73,
        "annotation": "type",
        "type_label": "type",
        "predc": [
            "type",
            "types",
            "mypy.types.AnyType",
            "ctypes.c_char_p",
            "catmaid.control.nat.r.nblast"
        ]
    },
    "4": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "node_dict",
        "lineno": 79,
        "annotation": "Dict[(str, NodeType)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "fimfarchive.fetchers.Fimfiction2Fetcher",
            "socialhome.users.tests.factories.UserFactory",
            "diffy_cli.utils.json_schema.handle_oneof"
        ]
    },
    "5": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "ending",
        "lineno": 79,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django.contrib.gis.db.models.CharField",
            "bistr",
            "django.contrib.gis.db.models.DateTimeField"
        ]
    },
    "6": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "class_found",
        "lineno": 88,
        "annotation": "ClassFound",
        "type_label": "py_codegen.type_extractor.nodes.ClassFound.ClassFound",
        "predc": [
            "parsl.tests.configs.htex_local.fresh_config",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "homeassistant.components.climate.SUPPORT_TARGET_TEMPERATURE",
            "dbt.contracts.graph.parsed.ParsedModelNode",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree_with_generated_lists"
        ]
    },
    "7": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "function_found",
        "lineno": 95,
        "annotation": "FunctionFound",
        "type_label": "py_codegen.type_extractor.nodes.FunctionFound.FunctionFound",
        "predc": [
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "mypy.nodes.get_member_expr_fullname",
            "gluonts.mx.distribution.DirichletMultinomial",
            "catmaid.control.common.get_request_bool",
            "pkg_resources.extern.pyparsing.Forward"
        ]
    },
    "8": {
        "file_path": "python-type-extractor-master/py_codegen/plugins/typescript/Converter.py",
        "name": "typed_dict_found",
        "lineno": 102,
        "annotation": "TypedDictFound",
        "type_label": "py_codegen.type_extractor.nodes.TypedDictFound.TypedDictFound",
        "predc": [
            "copy.deepcopy",
            "pkg_resources.extern.pyparsing.Combine",
            "hypothesis.internal.conjecture.junkdrawer.LazySequenceCopy",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "hypothesis.internal.conjecture.junkdrawer.IntList"
        ]
    },
    "9": {
        "file_path": "python-type-extractor-master/py_codegen/test_fixtures/func_return_none.py",
        "name": "some_input",
        "lineno": 4,
        "annotation": "Optional[str]",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "defaultdict",
            "starfish.core.morphology.util._normalize_physical_ticks",
            "socialhome.users.tests.factories.UserFactory"
        ]
    },
    "10": {
        "file_path": "python-type-extractor-master/py_codegen/test_fixtures/func_with_builtin_type_args.py",
        "name": "a",
        "lineno": 1,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "min",
            "point",
            "inst",
            "input"
        ]
    },
    "11": {
        "file_path": "python-type-extractor-master/py_codegen/test_fixtures/func_with_dict.py",
        "name": "input",
        "lineno": 4,
        "annotation": "Dict[(str, int)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "diffy_cli.utils.json_schema.handle_oneof",
            "starfish.core.morphology.util._normalize_physical_ticks",
            "socialhome.users.tests.factories.UserFactory"
        ]
    },
    "12": {
        "file_path": "python-type-extractor-master/py_codegen/test_fixtures/func_with_list.py",
        "name": "input",
        "lineno": 4,
        "annotation": "List[str]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "diffy_cli.utils.json_schema.handle_oneof",
            "starfish.core.morphology.util._normalize_physical_ticks",
            "socialhome.users.tests.factories.UserFactory"
        ]
    },
    "13": {
        "file_path": "python-type-extractor-master/py_codegen/test_fixtures/func_with_typed_dict.py",
        "name": "input",
        "lineno": 23,
        "annotation": "NestedTypedDict",
        "type_label": "NestedTypedDict",
        "predc": [
            "_get_device",
            "PathSpec",
            "typing.Dict",
            "dict",
            "WKT_WRITE_PTR"
        ]
    },
    "14": {
        "file_path": "python-type-extractor-master/py_codegen/test_fixtures/func_with_typed_dict.py",
        "name": "a",
        "lineno": 14,
        "annotation": "int",
        "type_label": "int",
        "predc": [
            "int",
            "i",
            "point",
            "min",
            "Pin"
        ]
    },
    "15": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/type_extractor.py",
        "name": "params",
        "lineno": 56,
        "annotation": "Dict[(str, Union[(type, None)])]",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "commandment.inventory.schema.InstalledCertificateSchema",
            "starfish.core.morphology.util._normalize_physical_ticks",
            "None"
        ]
    },
    "16": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/type_extractor.py",
        "name": "param_names_list",
        "lineno": 57,
        "annotation": "List[str]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "R",
            "fimfarchive.fetchers.Fimfiction2Fetcher",
            "diffy_cli.utils.json_schema.handle_oneof"
        ]
    },
    "17": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/type_extractor.py",
        "name": "func",
        "lineno": 157,
        "annotation": "Callable",
        "type_label": "typing.Callable",
        "predc": [
            "typing.Callable",
            "typing.TypeVar",
            "typing.Iterable",
            "typing.DefaultDict",
            "qiskit.providers.ibmq.api.clients.AuthClient"
        ]
    },
    "18": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/type_extractor.py",
        "name": "class_found",
        "lineno": 175,
        "annotation": "ClassFound",
        "type_label": "py_codegen.type_extractor.nodes.ClassFound.ClassFound",
        "predc": [
            "parsl.tests.configs.htex_local.fresh_config",
            "components.str_combo.str_combo_with_none",
            "caladrius.traffic_provider.current_traffic.CurrentTraffic",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "starfish.core.spots.DecodeSpots.trace_builders.build_spot_traces_exact_match"
        ]
    },
    "19": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/type_extractor.py",
        "name": "func",
        "lineno": 39,
        "annotation": "Callable",
        "type_label": "typing.Callable",
        "predc": [
            "typing.Callable",
            "typing.TypeVar",
            "typing.Iterable",
            "AsyncCallable",
            "typing.MutableMapping"
        ]
    },
    "20": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/errors/DuplicateNameFound.py",
        "name": "found1",
        "lineno": 7,
        "annotation": "NodeType",
        "type_label": "py_codegen.type_extractor.nodes.BaseNodeType.NodeType",
        "predc": [
            "parsl.tests.configs.htex_local.fresh_config",
            "catmaid.control.common.get_request_bool",
            "yacron.config.parse_config",
            "ctypes.c_char_p",
            "src.common.misc.separate_header"
        ]
    },
    "21": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/errors/DuplicateNameFound.py",
        "name": "found2",
        "lineno": 8,
        "annotation": "NodeType",
        "type_label": "py_codegen.type_extractor.nodes.BaseNodeType.NodeType",
        "predc": [
            "hypothesis.internal.reflection.convert_positional_arguments",
            "parsl.tests.configs.htex_local.fresh_config",
            "gordo.machine.model.anomaly.diff.DiffBasedAnomalyDetector",
            "src.common.misc.separate_header",
            "ctypes.c_char_p"
        ]
    },
    "22": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/ClassFound.py",
        "name": "namespace",
        "lineno": 22,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "zulipterminal.ui_tools.utils.create_msg_box_list",
            "InfrastructureProviderMock",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler"
        ]
    },
    "23": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/ClassFound.py",
        "name": "namespace",
        "lineno": 36,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "starfish.core.imagestack.parser.numpy.NumpyData",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler",
            "SybaseExecutionContext_pysybase"
        ]
    },
    "24": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/ClassFound.py",
        "name": "class_found",
        "lineno": 24,
        "annotation": "ClassFound",
        "type_label": "py_codegen.type_extractor.nodes.ClassFound.ClassFound",
        "predc": [
            "parsl.tests.configs.htex_local.fresh_config",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "homeassistant.components.climate.SUPPORT_TARGET_TEMPERATURE",
            "pkg_resources.extern.pyparsing.originalTextFor",
            "TypeExpressionTest"
        ]
    },
    "25": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/ClassFound.py",
        "name": "extra",
        "lineno": 25,
        "annotation": "Dict[(str, Any)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "None",
            "diffy_cli.utils.json_schema.handle_oneof",
            "compat.str",
            "digit"
        ]
    },
    "26": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/ClassFound.py",
        "name": "class_found",
        "lineno": 38,
        "annotation": "ClassFound",
        "type_label": "py_codegen.type_extractor.nodes.ClassFound.ClassFound",
        "predc": [
            "parsl.tests.configs.htex_local.fresh_config",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "src.common.misc.separate_header",
            "caladrius.traffic_provider.current_traffic.CurrentTraffic",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree_with_generated_lists"
        ]
    },
    "27": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "namespace",
        "lineno": 19,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "InfrastructureProviderMock",
            "allennlp.training.learning_rate_schedulers.ExponentialLearningRateScheduler",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "28": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "namespace",
        "lineno": 34,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "zulipterminal.ui_tools.utils.create_msg_box_list",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "starfish.core.imagestack.parser.numpy.NumpyData"
        ]
    },
    "29": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "namespace",
        "lineno": 43,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "kedro.framework.hooks.manager._create_hook_manager",
            "allennlp.data.tokenizers.word_tokenizer.SpacyWordSplitter",
            "starfish.core.test.factories.two_spot_sparse_coded_data_factory"
        ]
    },
    "30": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "namespace",
        "lineno": 56,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "SybaseExecutionContext_pysybase",
            "zulipterminal.ui_tools.utils.create_msg_box_list",
            "v2_runner_on_failed",
            "ajapaik.ajapaik.serializers.CuratorAlbumSelectionAlbumSerializer"
        ]
    },
    "31": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "func_found",
        "lineno": 21,
        "annotation": "FunctionFound",
        "type_label": "py_codegen.type_extractor.nodes.FunctionFound.FunctionFound",
        "predc": [
            "src.common.misc.separate_headers",
            "django.contrib.gis.db.models.FloatField",
            "catmaid.control.common.get_request_bool",
            "yacron.config.parse_config",
            "pkg_resources.extern.pyparsing.Regex"
        ]
    },
    "32": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "extra",
        "lineno": 22,
        "annotation": "Dict[(str, Any)]",
        "type_label": "dict",
        "predc": [
            "dict",
            "diffy_cli.utils.json_schema.handle_oneof",
            "None",
            "fimfarchive.fetchers.Fimfiction2Fetcher",
            "socialhome.users.tests.factories.UserFactory"
        ]
    },
    "33": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "func_found",
        "lineno": 36,
        "annotation": "FunctionFound",
        "type_label": "py_codegen.type_extractor.nodes.FunctionFound.FunctionFound",
        "predc": [
            "yacron.config.parse_config",
            "catmaid.control.common.get_request_bool",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "hypothesis.internal.conjecture.junkdrawer.LazySequenceCopy",
            "parsl.tests.configs.htex_local.fresh_config"
        ]
    },
    "34": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "func_found",
        "lineno": 45,
        "annotation": "FunctionFound",
        "type_label": "py_codegen.type_extractor.nodes.FunctionFound.FunctionFound",
        "predc": [
            "catmaid.control.common.get_request_bool",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "components.str_combo.str_combo_with_none",
            "src.common.misc.separate_headers",
            "django.contrib.gis.db.models.FloatField"
        ]
    },
    "35": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "extra",
        "lineno": 45,
        "annotation": "Any",
        "type_label": "typing.Any",
        "predc": [
            "typing.Any",
            "type",
            "typed_span",
            "min",
            "mypy.types.AnyType"
        ]
    },
    "36": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/FunctionFound.py",
        "name": "func_found",
        "lineno": 58,
        "annotation": "FunctionFound",
        "type_label": "py_codegen.type_extractor.nodes.FunctionFound.FunctionFound",
        "predc": [
            "src.common.misc.separate_headers",
            "pkg_resources.extern.pyparsing.Combine",
            "catmaid.control.common.get_request_bool",
            "psycopg2._range.RangeCaster",
            "components.str_combo.str_combo_with_none"
        ]
    },
    "37": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/nodes/utils/strip_margin.py",
        "name": "text",
        "lineno": 4,
        "annotation": "str",
        "type_label": "str",
        "predc": [
            "str",
            "compat.str",
            "django_structlog_demo_project.users.views.UserUpdateView",
            "InfrastructureProviderMock",
            "allennlp.state_machines.states.CoverageState"
        ]
    },
    "38": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/__tests__/test_func_with_arg_class.py",
        "name": "a",
        "lineno": 12,
        "annotation": "ArgClass",
        "type_label": "ArgClass",
        "predc": [
            "Args",
            "ArgName",
            "eNMS.forms.fields.BooleanField",
            "Alias",
            "ArgsList"
        ]
    },
    "39": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/__tests__/test_func_with_nested_arg_class.py",
        "name": "a",
        "lineno": 19,
        "annotation": "ParentClass",
        "type_label": "ParentClass",
        "predc": [
            "VisitAll",
            "destVar",
            "E",
            "astral.Astral",
            "HandlerT"
        ]
    },
    "40": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/__tests__/utils.py",
        "name": "node",
        "lineno": 17,
        "annotation": "NodeType",
        "type_label": "py_codegen.type_extractor.nodes.BaseNodeType.NodeType",
        "predc": [
            "allennlp.modules.seq2vec_encoders.PytorchSeq2VecWrapper",
            "qiskit.providers.ibmq.api.clients.AuthClient",
            "homeassistant.components.sensor.fail2ban.BanSensor",
            "starfish.core.test.factories.synthetic_spot_pass_through_stack",
            "pypinyin.style._constants._INITIALS"
        ]
    },
    "41": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/__tests__/utils.py",
        "name": "func",
        "lineno": 17,
        "annotation": "traverse_func_type",
        "type_label": "traverse_func_type",
        "predc": [
            "task_count",
            "graphql.type.GraphQLInputObjectType",
            "tests.components.test_canary.mock_device",
            "default_country",
            "truncate_text"
        ]
    },
    "42": {
        "file_path": "python-type-extractor-master/py_codegen/type_extractor/__tests__/utils.py",
        "name": "node",
        "lineno": 62,
        "annotation": "NodeType",
        "type_label": "py_codegen.type_extractor.nodes.BaseNodeType.NodeType",
        "predc": [
            "src.common.misc.separate_headers",
            "eth.tools.factories.transaction.new_transaction",
            "raiden_contracts.utils.pending_transfers.get_pending_transfers_tree",
            "mypy.server.deps.get_dependencies",
            "hypothesis.internal.reflection.convert_positional_arguments"
        ]
    }
}
{
    "meld-master/setup.py": {},
    "meld-master/docs/source/conf.py": {},
    "meld-master/meld/__about__.py": {},
    "meld-master/meld/__init__.py": {},
    "meld-master/meld/app/cli.py": {
        "cli": {
            "name": "cli",
            "location": 22,
            "return": [],
            "arguments": {
                "ctx": [],
                "log_level": [],
                "config_path": [],
                "database_path": []
            }
        }
    },
    "meld-master/meld/app/__init__.py": {},
    "meld-master/meld/app/config/base_config.py": {},
    "meld-master/meld/app/config/config_class.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "config_path": [
                    "_TypePath"
                ]
            }
        },
        "Config.path": {
            "name": "path",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "_TypePath"
                ]
            }
        },
        "Config._get_loader": {
            "name": "_get_loader",
            "location": 25,
            "return": [
                "Callable"
            ],
            "arguments": {
                "ext": [
                    "str"
                ]
            }
        },
        "Config.load": {
            "name": "load",
            "location": 35,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/meld/app/config/find.py": {
        "_find_config_in_folder": {
            "name": "_find_config_in_folder",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "folder": [
                    "str"
                ]
            }
        },
        "_generate_base_config": {
            "name": "_generate_base_config",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "config_dir": [
                    "str"
                ]
            }
        },
        "find_config_path": {
            "name": "find_config_path",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "meld-master/meld/app/config/load.py": {
        "load_json": {
            "name": "load_json",
            "location": 6,
            "return": [],
            "arguments": {
                "config_path": []
            }
        },
        "load_python": {
            "name": "load_python",
            "location": 10,
            "return": [],
            "arguments": {
                "config_path": [],
                "attribute": []
            }
        }
    },
    "meld-master/meld/app/config/__init__.py": {},
    "meld-master/meld/app/utils/plugins.py": {
        "get_plugin_with_attr": {
            "name": "get_plugin_with_attr",
            "location": 9,
            "return": [
                "Generator"
            ],
            "arguments": {
                "attr": [
                    "str"
                ]
            }
        }
    },
    "meld-master/meld/app/utils/__init__.py": {},
    "meld-master/meld/database/classes.py": {
        "Column.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "db_type": [
                    "Union[(None, type)]"
                ],
                "primary_key": [
                    "bool"
                ],
                "autoincrement": [
                    "bool"
                ],
                "default": [
                    "Any"
                ],
                "not_null": [
                    "bool"
                ],
                "unique": [
                    "bool"
                ]
            }
        },
        "Column.db_type": {
            "name": "db_type",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "Union[(None, type)]"
                ]
            }
        },
        "Column._create": {
            "name": "_create",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Table.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "columns": [
                    "List[Column]"
                ]
            }
        },
        "Table.name": {
            "name": "name",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Table.columns": {
            "name": "columns",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "List[Column]"
                ]
            }
        },
        "Table._create_query": {
            "name": "_create_query",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "if_not_exists": [
                    "bool"
                ]
            }
        },
        "Table.create": {
            "name": "create",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [
                    "Union[(sqlite3.Connection, sqlite3.Cursor)]"
                ],
                "if_not_exists": [
                    "bool"
                ]
            }
        },
        "Database.__init__": {
            "name": "__init__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": [
                    "Union[(str, Path)]"
                ],
                "tables": [
                    "List[Table]"
                ]
            }
        },
        "Database.path": {
            "name": "path",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "Union[(str, Path)]"
                ]
            }
        },
        "Database.createTables": {
            "name": "createTables",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [
                    "Union[(sqlite3.Connection, sqlite3.Cursor)]"
                ],
                "if_not_exists": [
                    "bool"
                ]
            }
        }
    },
    "meld-master/meld/database/database.py": {
        "_get_builtin_tables": {
            "name": "_get_builtin_tables",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "Database.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": [
                    "_TypePath"
                ]
            }
        },
        "Database.init_tables": {
            "name": "init_tables",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [
                    "sqlite3.Cursor"
                ],
                "if_not_exists": [
                    "bool"
                ]
            }
        }
    },
    "meld-master/meld/database/__init__.py": {},
    "meld-master/meld/database/tables/photos.py": {},
    "meld-master/meld/database/tables/sets.py": {},
    "meld-master/meld/database/tables/__init__.py": {},
    "meld-master/meld/plugins/__init__.py": {},
    "meld-master/meld/plugins/config/cli.py": {
        "config": {
            "name": "config",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "show": {
            "name": "show",
            "location": 17,
            "return": [],
            "arguments": {
                "ctx": [],
                "pretty": []
            }
        },
        "path": {
            "name": "path",
            "location": 40,
            "return": [],
            "arguments": {
                "ctx": []
            }
        }
    },
    "meld-master/meld/plugins/config/show.py": {
        "show": {
            "name": "show",
            "location": 8,
            "return": [],
            "arguments": {
                "config": [
                    "Union[(dict, Config)]"
                ],
                "pretty": []
            }
        }
    },
    "meld-master/meld/plugins/config/__init__.py": {},
    "meld-master/meld/plugins/import_/cli.py": {
        "cli": {
            "name": "cli",
            "location": 18,
            "return": [],
            "arguments": {
                "ctx": [],
                "files": [],
                "test": [],
                "set_name": [],
                "year": [],
                "studio": [],
                "supported_formats": [],
                "sync": []
            }
        }
    },
    "meld-master/meld/plugins/import_/main.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [],
            "arguments": {
                "files": [
                    "List[Union[(Path, str)]]"
                ],
                "database": [
                    "Database"
                ],
                "set_name": [
                    "str"
                ],
                "year": [
                    "Optional[int]"
                ],
                "studio": [
                    "Optional[str]"
                ],
                "supported_formats": [
                    "List[str]"
                ],
                "test": [
                    "bool"
                ]
            }
        }
    },
    "meld-master/meld/plugins/import_/photos.py": {
        "generatePhotoList": {
            "name": "generatePhotoList",
            "location": 19,
            "return": [],
            "arguments": {
                "paths": [
                    "Iterable[PathType]"
                ],
                "supported_formats": [
                    "List[str]"
                ],
                "exclude_dirs": [
                    "bool"
                ]
            }
        },
        "isSupportedImage": {
            "name": "isSupportedImage",
            "location": 33,
            "return": [],
            "arguments": {
                "filepath": [
                    "PathType"
                ],
                "supported_formats": [
                    "List[str]"
                ]
            }
        },
        "Photo.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": [
                    "PathType"
                ]
            }
        },
        "Photo._insert_data": {
            "name": "_insert_data",
            "location": 77,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "set_id": [
                    "Optional[int]"
                ]
            }
        },
        "Photo._insert_qry": {
            "name": "_insert_qry",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "set_id": [
                    "Optional[int]"
                ]
            }
        },
        "Photo._insert_debug_qry": {
            "name": "_insert_debug_qry",
            "location": 102,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "set_id": [
                    "Optional[int]"
                ]
            }
        },
        "Photo.insert": {
            "name": "insert",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [
                    "Union[(sqlite3.Connection, sqlite3.Cursor)]"
                ],
                "set_id": [
                    "Optional[int]"
                ]
            }
        },
        "PhotoSet.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "year": [
                    "int"
                ],
                "photos": [
                    "List[Photo]"
                ],
                "studio": [
                    "Optional[str]"
                ]
            }
        },
        "PhotoSet._insert_data": {
            "name": "_insert_data",
            "location": 137,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhotoSet._insert_qry": {
            "name": "_insert_qry",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhotoSet._insert_debug_qry": {
            "name": "_insert_debug_qry",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhotoSet.insert": {
            "name": "insert",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [
                    "Union[(sqlite3.Connection, sqlite3.Cursor)]"
                ]
            }
        },
        "PhotoSet.addPhoto": {
            "name": "addPhoto",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "photo": [
                    "Photo"
                ]
            }
        }
    },
    "meld-master/meld/plugins/import_/__init__.py": {},
    "meld-master/meld/plugins/import_/utils/deleteForbiddenCharacters.py": {
        "deleteForbiddenCharacters": {
            "name": "deleteForbiddenCharacters",
            "location": 1,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        }
    },
    "meld-master/meld/plugins/import_/utils/__init__.py": {},
    "meld-master/meld/plugins/move/cli.py": {
        "move": {
            "name": "move",
            "location": 10,
            "return": [],
            "arguments": {
                "ctx": [],
                "set_id": [],
                "path_format": []
            }
        }
    },
    "meld-master/meld/plugins/move/main.py": {
        "main": {
            "name": "main",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "meld-master/meld/plugins/move/__init__.py": {},
    "meld-master/meld/plugins/plugins/cli.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "list_": {
            "name": "list_",
            "location": 21,
            "return": [],
            "arguments": {
                "filter_": []
            }
        }
    },
    "meld-master/meld/plugins/plugins/list_.py": {
        "main": {
            "name": "main",
            "location": 5,
            "return": [],
            "arguments": {
                "filter_": [
                    "str"
                ]
            }
        }
    },
    "meld-master/meld/plugins/plugins/__init__.py": {},
    "meld-master/meld/plugins/version/cli.py": {
        "version": {
            "name": "version",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "meld-master/meld/plugins/version/main.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "meld-master/meld/plugins/version/__init__.py": {},
    "meld-master/meld/plugins/_template/cli.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [],
            "arguments": {
                "ctx": [],
                "option": []
            }
        }
    },
    "meld-master/meld/plugins/_template/main.py": {
        "main": {
            "name": "main",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "meld-master/meld/plugins/_template/__init__.py": {},
    "meld-master/meld/utils/app_data.py": {},
    "meld-master/meld/utils/import_from_path.py": {
        "_isPackage": {
            "name": "_isPackage",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "Path"
                ],
                "ignore_private": [
                    "bool"
                ]
            }
        },
        "_isModule": {
            "name": "_isModule",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "Path"
                ],
                "ignore_private": [
                    "bool"
                ]
            }
        },
        "loadModulesFromDir": {
            "name": "loadModulesFromDir",
            "location": 22,
            "return": [
                "List[ModuleType]"
            ],
            "arguments": {
                "path": [
                    "Union[(str, Path)]"
                ]
            }
        }
    },
    "meld-master/meld/utils/logger.py": {},
    "meld-master/meld/utils/__init__.py": {},
    "meld-master/test/app/__init__.py": {},
    "meld-master/test/app/config/test_base_config.py": {
        "BaseConfig.testConfigIsDict": {
            "name": "testConfigIsDict",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigSettingDatabase.testConfigHasKeyDatabase": {
            "name": "testConfigHasKeyDatabase",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigSettingDatabase.testDatabaseNameIsStr": {
            "name": "testDatabaseNameIsStr",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/app/config/test_class.py": {
        "ConfigLoader.testPythonExt": {
            "name": "testPythonExt",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigLoader.testJSONExt": {
            "name": "testJSONExt",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigLoader.testUnsupportedExtension": {
            "name": "testUnsupportedExtension",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.setUpClass": {
            "name": "setUpClass",
            "location": 24,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ConfigConstructor.tearDownClass": {
            "name": "tearDownClass",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ConfigConstructor.setUp": {
            "name": "setUp",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.assertHasAttr": {
            "name": "assertHasAttr",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "attr": [],
                "msg": []
            }
        },
        "ConfigConstructor.testHasPathAttribute": {
            "name": "testHasPathAttribute",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.testHasExtAttribute": {
            "name": "testHasExtAttribute",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.testHasContentAttribute": {
            "name": "testHasContentAttribute",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.testPathAttributeIsPathlibPath": {
            "name": "testPathAttributeIsPathlibPath",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.testExtAttributeIsStr": {
            "name": "testExtAttributeIsStr",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.testContentAttributeIsDict": {
            "name": "testContentAttributeIsDict",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigConstructor.testContentShouldBeLoaded": {
            "name": "testContentShouldBeLoaded",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/app/config/test_find.py": {
        "_isPosix": {
            "name": "_isPosix",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "FindConfigInFolder.setUpClass": {
            "name": "setUpClass",
            "location": 34,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FindConfigInFolder.tearDownClass": {
            "name": "tearDownClass",
            "location": 51,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FindConfigInFolder.tearDown": {
            "name": "tearDown",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testOnlyJSONInUserFolder": {
            "name": "testOnlyJSONInUserFolder",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testReturnTypeIsPath": {
            "name": "testReturnTypeIsPath",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testOnlyPyInUserFolder": {
            "name": "testOnlyPyInUserFolder",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testMultipleConfigInUserFolder": {
            "name": "testMultipleConfigInUserFolder",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testOnlyJSONInAppFolder": {
            "name": "testOnlyJSONInAppFolder",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testOnlyPyInAppFolder": {
            "name": "testOnlyPyInAppFolder",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testMultipleConfigInAppFolder": {
            "name": "testMultipleConfigInAppFolder",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testNoConfigInAnyFolder": {
            "name": "testNoConfigInAnyFolder",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FindConfigInFolder.testJSONConfigInAllFolders": {
            "name": "testJSONConfigInAllFolders",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenerateBaseConfig.tearDown": {
            "name": "tearDown",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenerateBaseConfig.testNoErrors": {
            "name": "testNoErrors",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenerateBaseConfig.testConfigExt": {
            "name": "testConfigExt",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenerateBaseConfig.testReadConfig": {
            "name": "testReadConfig",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GenerateBaseConfig.testConfigContent": {
            "name": "testConfigContent",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/app/config/test_loader.py": {
        "JSONConfig.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONConfig.tearDown": {
            "name": "tearDown",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONConfig.testPathIsString": {
            "name": "testPathIsString",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONConfig.testPathIsPathlibPath": {
            "name": "testPathIsPathlibPath",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PythonConfig.setUp": {
            "name": "setUp",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PythonConfig.tearDown": {
            "name": "tearDown",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PythonConfig.testPathIsString": {
            "name": "testPathIsString",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PythonConfig.testPathIsPathlibPath": {
            "name": "testPathIsPathlibPath",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PythonConfig.testDifferentVarName": {
            "name": "testDifferentVarName",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/app/config/__init__.py": {},
    "meld-master/test/database/test_classes.py": {
        "ColumnConstructor.testBaseCase": {
            "name": "testBaseCase",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnCreateQuery.testColumnCreate": {
            "name": "testColumnCreate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnCreateQuery.testColumnCreatePrimaryKey": {
            "name": "testColumnCreatePrimaryKey",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnCreateQuery.testColumnCreateNotNull": {
            "name": "testColumnCreateNotNull",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnCreateQuery.testColumnCreateUnique": {
            "name": "testColumnCreateUnique",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnCreateQuery.testColumnCreateAutoincrement": {
            "name": "testColumnCreateAutoincrement",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ColumnCreateQuery.testColumnCreateDefault": {
            "name": "testColumnCreateDefault",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableConstructor.testBaseCase": {
            "name": "testBaseCase",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableConstructor.testColumnsNotListWrapped": {
            "name": "testColumnsNotListWrapped",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableConstructor.testColumnsEmptyList": {
            "name": "testColumnsEmptyList",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableCreateQuery.testSingleColumn": {
            "name": "testSingleColumn",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableCreateQuery.testSingleColumnIfNotExist": {
            "name": "testSingleColumnIfNotExist",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableCreateQuery.testMultiColumn": {
            "name": "testMultiColumn",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TableCreateQuery.testMultiColumnIfNotExists": {
            "name": "testMultiColumnIfNotExists",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConstructor.testBaseCase": {
            "name": "testBaseCase",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/database/__init__.py": {},
    "meld-master/test/plugins/test_version.py": {
        "captured_output": {
            "name": "captured_output",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "Main.testConsoleOutput": {
            "name": "testConsoleOutput",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CLI.testCLI": {
            "name": "testCLI",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/plugins/__init__.py": {},
    "meld-master/test/plugins/config/show.py": {},
    "meld-master/test/plugins/config/__init__.py": {},
    "meld-master/test/utils/test_app_data.py": {
        "isPosix": {
            "name": "isPosix",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "PosixAppDataDir.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PosixAppDataDir.tearDown": {
            "name": "tearDown",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PosixAppDataDir.testType": {
            "name": "testType",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PosixAppDataDir.testPath": {
            "name": "testPath",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PosixAppDataDir.testMkdir": {
            "name": "testMkdir",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WindowsAppDataDir.setUp": {
            "name": "setUp",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WindowsAppDataDir.tearDown": {
            "name": "tearDown",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WindowsAppDataDir.testType": {
            "name": "testType",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WindowsAppDataDir.testPath": {
            "name": "testPath",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WindowsAppDataDir.testMkdir": {
            "name": "testMkdir",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/utils/test_logger.py": {
        "isPosix": {
            "name": "isPosix",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "PosixLogDir.testType": {
            "name": "testType",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PosixLogDir.testPath": {
            "name": "testPath",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PosixLogDir.testmkdir": {
            "name": "testmkdir",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamHandler.testFormatter": {
            "name": "testFormatter",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileHandler.testFormatter": {
            "name": "testFormatter",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileHandler.testFilePath": {
            "name": "testFilePath",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileHandler.testLogLevel": {
            "name": "testLogLevel",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Logger.testHandlersSet": {
            "name": "testHandlersSet",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Logger.testFirstHandler": {
            "name": "testFirstHandler",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "meld-master/test/utils/__init__.py": {}
}
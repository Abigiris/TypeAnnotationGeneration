{
    "scatter-daemon-master/setup.py": {
        "requirements_to_list": {
            "name": "requirements_to_list",
            "location": 38,
            "return": [
                "list[]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "LintCommand.run": {
            "name": "run",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCommand.run": {
            "name": "run",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/__init__.py": {},
    "scatter-daemon-master/scatter_daemon/__main__.py": {},
    "scatter-daemon-master/scatter_daemon/accounts/__init__.py": {
        "get_available_accounts": {
            "name": "get_available_accounts",
            "location": 19,
            "return": [],
            "arguments": {
                "keystore_dir": [],
                "force": []
            }
        },
        "read_account_json": {
            "name": "read_account_json",
            "location": 48,
            "return": [],
            "arguments": {
                "keystore_dir": [],
                "address": []
            }
        },
        "decrypt_account": {
            "name": "decrypt_account",
            "location": 68,
            "return": [],
            "arguments": {
                "keystore_dir": [],
                "address": [],
                "passphrase": []
            }
        },
        "create_account": {
            "name": "create_account",
            "location": 91,
            "return": [],
            "arguments": {
                "keystore_dir": [],
                "passphrase": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/cli/accounts.py": {
        "add_parser_arguments": {
            "name": "add_parser_arguments",
            "location": 12,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "main": {
            "name": "main",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/cli/init.py": {
        "add_parser_arguments": {
            "name": "add_parser_arguments",
            "location": 11,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/cli/main.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "argv": [
                    "None",
                    "str",
                    "list[str]",
                    "bool",
                    "list[]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "None",
                    "list[str]",
                    "list[]",
                    "str"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/cli/validator.py": {
        "add_parser_arguments": {
            "name": "add_parser_arguments",
            "location": 16,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "main": {
            "name": "main",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/cli/__init__.py": {},
    "scatter-daemon-master/scatter_daemon/common/config.py": {
        "initial_config_structure": {
            "name": "initial_config_structure",
            "location": 27,
            "return": [],
            "arguments": {
                "parser": [],
                "overrides": []
            }
        },
        "init_config": {
            "name": "init_config",
            "location": 48,
            "return": [],
            "arguments": {
                "_file": [],
                "account": []
            }
        },
        "load_config": {
            "name": "load_config",
            "location": 80,
            "return": [],
            "arguments": {
                "_file": []
            }
        },
        "config_get": {
            "name": "config_get",
            "location": 95,
            "return": [],
            "arguments": {
                "conf": [],
                "key": [],
                "default": [],
                "section": []
            }
        },
        "set_ini_account": {
            "name": "set_ini_account",
            "location": 105,
            "return": [],
            "arguments": {
                "conf": [],
                "address": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/const.py": {},
    "scatter-daemon-master/scatter_daemon/common/contracts.py": {
        "ini_router_contract": {
            "name": "ini_router_contract",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "load_abi": {
            "name": "load_abi",
            "location": 42,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "init_router_contract": {
            "name": "init_router_contract",
            "location": 53,
            "return": [],
            "arguments": {
                "web3": [],
                "address": []
            }
        },
        "init_scatter_contract": {
            "name": "init_scatter_contract",
            "location": 60,
            "return": [],
            "arguments": {
                "web3": [],
                "router": []
            }
        },
        "init_register_contract": {
            "name": "init_register_contract",
            "location": 68,
            "return": [],
            "arguments": {
                "web3": [],
                "router": []
            }
        },
        "gen_signature": {
            "name": "gen_signature",
            "location": 76,
            "return": [],
            "arguments": {
                "abi_entry": []
            }
        },
        "events_from_abi": {
            "name": "events_from_abi",
            "location": 86,
            "return": [],
            "arguments": {
                "abi": []
            }
        },
        "get_types_from_inputs": {
            "name": "get_types_from_inputs",
            "location": 97,
            "return": [],
            "arguments": {
                "abi_inputs": []
            }
        },
        "decode_values": {
            "name": "decode_values",
            "location": 113,
            "return": [],
            "arguments": {
                "types": [],
                "values": []
            }
        },
        "event_from_log": {
            "name": "event_from_log",
            "location": 129,
            "return": [],
            "arguments": {
                "abi": [],
                "event_log": []
            }
        },
        "Web3JsonEncoder.default": {
            "name": "default",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/exceptions.py": {},
    "scatter-daemon-master/scatter_daemon/common/ipfs.py": {
        "ipfs_get_json": {
            "name": "ipfs_get_json",
            "location": 12,
            "return": [],
            "arguments": {
                "ipfs_conn": [],
                "file_hash": [],
                "tmpdir": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/logging.py": {
        "setDebugLogging": {
            "name": "setDebugLogging",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "getLogger": {
            "name": "getLogger",
            "location": 112,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "loggingShutdown": {
            "name": "loggingShutdown",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "ColoredStyle.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ColoredStyle.usesTime": {
            "name": "usesTime",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ColoredStyle.validate": {
            "name": "validate",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ColoredStyle._format": {
            "name": "_format",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "record": [
                    "int",
                    "str"
                ]
            }
        },
        "ColoredStyle.format": {
            "name": "format",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "int",
                    "list[list[str]]",
                    "tuple[]"
                ]
            }
        },
        "ColoredFormatter.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fmt": [
                    "None",
                    "list[dict[str, typing.Any]]",
                    "bool",
                    "str",
                    "typing.Callable[list[], list[str]]"
                ],
                "datefmt": [
                    "None",
                    "str",
                    "bool",
                    "typing.Sequence[]"
                ],
                "style": [
                    "typing.Text"
                ],
                "validate": [
                    "bool"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/register.py": {
        "generate_user_file": {
            "name": "generate_user_file",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pin_user_file": {
            "name": "pin_user_file",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fetch_user_file": {
            "name": "fetch_user_file",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "scatter-daemon-master/scatter_daemon/common/typing.py": {
        "to_path": {
            "name": "to_path",
            "location": 23,
            "return": [],
            "arguments": {
                "v": [
                    "str",
                    "list[str]",
                    "list[]",
                    "dict[, ]"
                ]
            }
        },
        "to_account": {
            "name": "to_account",
            "location": 30,
            "return": [],
            "arguments": {
                "v": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/utils.py": {
        "get_from_first": {
            "name": "get_from_first",
            "location": 11,
            "return": [],
            "arguments": {
                "key": []
            }
        },
        "read_json_file": {
            "name": "read_json_file",
            "location": 23,
            "return": [],
            "arguments": {
                "json_file": []
            }
        },
        "address_in_keys": {
            "name": "address_in_keys",
            "location": 33,
            "return": [],
            "arguments": {
                "address": [],
                "d": []
            }
        },
        "safe_slice": {
            "name": "safe_slice",
            "location": 39,
            "return": [],
            "arguments": {
                "to_slice": [],
                "start": [],
                "end": []
            }
        },
        "is_free_space_available": {
            "name": "is_free_space_available",
            "location": 48,
            "return": [],
            "arguments": {
                "at_path": [],
                "size_bytes": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/web3.py": {
        "resolve_web3_provider": {
            "name": "resolve_web3_provider",
            "location": 11,
            "return": [],
            "arguments": {
                "s": [
                    "typing.AnyStr",
                    "bytes",
                    "bytearray",
                    "typing.Iterable[T]",
                    "bool",
                    "str"
                ]
            }
        },
        "init_web3": {
            "name": "init_web3",
            "location": 20,
            "return": [],
            "arguments": {
                "conf": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "eth_getLogs": {
            "name": "eth_getLogs",
            "location": 33,
            "return": [],
            "arguments": {
                "web3": [
                    "int"
                ],
                "from_block": [
                    "float",
                    "None"
                ],
                "address": [
                    "float",
                    "None"
                ],
                "to_block": [
                    "typing.Text"
                ],
                "topics": [
                    "list[]"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/common/__init__.py": {},
    "scatter-daemon-master/scatter_daemon/scatter/register.py": {
        "load_registration_schema": {
            "name": "load_registration_schema",
            "location": 20,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "get_registration": {
            "name": "get_registration",
            "location": 45,
            "return": [],
            "arguments": {
                "ipfs": [],
                "register": [],
                "address": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/scatter/__init__.py": {},
    "scatter-daemon-master/scatter_daemon/storage/bids.py": {
        "store_bid": {
            "name": "store_bid",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "evnt": []
            }
        },
        "get_bids_to_pin": {
            "name": "get_bids_to_pin",
            "location": 39,
            "return": [
                "list[]",
                "list[AttrDict]"
            ],
            "arguments": {
                "conn": [],
                "my_address": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int,int]]"
                ]
            }
        },
        "get_bids_to_validate": {
            "name": "get_bids_to_validate",
            "location": 66,
            "return": [
                "list[]",
                "list[AttrDict]"
            ],
            "arguments": {
                "conn": [],
                "my_address": [
                    "str",
                    "int",
                    "tuple[typing.Union[int,int,int]]"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/storage/db.py": {
        "structure_exists": {
            "name": "structure_exists",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "connect": []
            }
        },
        "init_structure": {
            "name": "init_structure",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "connect": []
            }
        },
        "connect": {
            "name": "connect",
            "location": 58,
            "return": [
                "str",
                "set[]",
                "int",
                "set[str]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "cursor": {
            "name": "cursor",
            "location": 81,
            "return": [],
            "arguments": {
                "filename": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/storage/events.py": {
        "get_stored_events": {
            "name": "get_stored_events",
            "location": 11,
            "return": [
                "list[]",
                "list[dict[typing.Text, ]]"
            ],
            "arguments": {
                "conn": []
            }
        },
        "store_events": {
            "name": "store_events",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "events": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/storage/pins.py": {
        "store_accept": {
            "name": "store_accept",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "evnt": []
            }
        },
        "store_pin": {
            "name": "store_pin",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "evnt": [
                    "str"
                ]
            }
        },
        "set_pin_validated": {
            "name": "set_pin_validated",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "bid_id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/storage/__init__.py": {},
    "scatter-daemon-master/scatter_daemon/validator/logic.py": {
        "select_random_pin_for_validation": {
            "name": "select_random_pin_for_validation",
            "location": 11,
            "return": [
                "int",
                "list[int]",
                "str",
                "None"
            ],
            "arguments": {
                "scatter": [
                    "dict[, ]",
                    "bytes",
                    "int"
                ],
                "pins": [],
                "options": [
                    "bool",
                    "bytes",
                    "bytearray",
                    "dict[, ]",
                    "str"
                ]
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/validator/main.py": {
        "validate": {
            "name": "validate",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "get_job": {
            "name": "get_job",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "process_events": {
            "name": "process_events",
            "location": 36,
            "return": [],
            "arguments": {
                "contract": [],
                "logs": []
            }
        },
        "fetch_events": {
            "name": "fetch_events",
            "location": 54,
            "return": [],
            "arguments": {
                "conn": [],
                "web3": [],
                "scatter": []
            }
        },
        "validate_bid": {
            "name": "validate_bid",
            "location": 68,
            "return": [],
            "arguments": {
                "ipfs": [],
                "scatter": [],
                "register": [],
                "bid_id": []
            }
        },
        "validate_run": {
            "name": "validate_run",
            "location": 97,
            "return": [],
            "arguments": {
                "conf": []
            }
        }
    },
    "scatter-daemon-master/scatter_daemon/validator/__init__.py": {}
}
{
    "setup.requirements_to_list": {
        "return": [
            [
                "builtins.list[builtins.str]"
            ]
        ],
        "arguments": [
            [
                [
                    "builtins.bytes"
                ]
            ]
        ]
    },
    "setup.LintCommand.run": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            []
        ]
    },
    "setup.TestCommand.run": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            []
        ]
    },
    "scatter_daemon.accounts.__init__.get_available_accounts": {
        "return": [
            "Dict[(str, Dict)]",
            [
                "<partial None>",
                "<partial None>"
            ]
        ],
        "arguments": [
            [
                "Path",
                [
                    "builtins.object"
                ]
            ],
            [
                "bool",
                [
                    "builtins.object",
                    "builtins.int",
                    "builtins.float"
                ]
            ]
        ]
    },
    "scatter_daemon.accounts.__init__.read_account_json": {
        "return": [
            "Dict",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ],
            [
                "StrOrBytes",
                [
                    "builtins.object",
                    "builtins.str",
                    "builtins.int"
                ]
            ]
        ]
    },
    "scatter_daemon.accounts.__init__.decrypt_account": {
        "return": [
            "bytes",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ],
            [
                "StrOrBytes",
                [
                    "builtins.object"
                ]
            ],
            [
                "Optional[str]",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.accounts.__init__.create_account": {
        "return": [
            "str",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "Any"
                ]
            ],
            [
                "Optional[str]",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.accounts.add_parser_arguments": {
        "return": [
            [
                "setup.LintCommand",
                "setup.TestCommand"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.accounts.main": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.init.add_parser_arguments": {
        "return": [
            [
                "setup.LintCommand",
                "setup.TestCommand"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.init.main": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.main.parse_args": {
        "return": [
            [
                "Tuple[argparse.ArgumentParser, argparse.Namespace]"
            ]
        ],
        "arguments": [
            [
                [
                    "builtins.str",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.main.main": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                [
                    "Any"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.validator.add_parser_arguments": {
        "return": [
            [
                "setup.LintCommand",
                "setup.TestCommand"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.cli.validator.main": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.config.initial_config_structure": {
        "return": [
            "None",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                [
                    "builtins.dict[argparse.ArgumentParser, builtins.str]",
                    "builtins.dict[argparse.Namespace, builtins.str]",
                    "builtins.dict[builtins.bool, builtins.str]"
                ]
            ]
        ]
    },
    "scatter_daemon.common.config.init_config": {
        "return": [
            "Path",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ],
            [
                "StrOrBytes",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.config.load_config": {
        "return": [
            "ConfigParser",
            [
                "<partial None>",
                "<partial None>"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.config.config_get": {
        "return": [
            "Optional[str]",
            [
                "builtins.object"
            ]
        ],
        "arguments": [
            [
                "ConfigParser",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.dict[builtins.object, builtins.object]"
                ]
            ],
            [
                "str",
                [
                    "builtins.object",
                    "builtins.str",
                    "builtins.int"
                ]
            ],
            [
                "Optional[Any]",
                [
                    "builtins.object"
                ]
            ],
            [
                "Optional[str]",
                [
                    "Any"
                ]
            ]
        ]
    },
    "scatter_daemon.common.config.set_ini_account": {
        "return": [
            "None",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "ConfigParser",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "str",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.ini_router_contract": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.contracts.load_abi": {
        "return": [
            "dict",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "str",
                [
                    "builtins.object",
                    "builtins.str",
                    "builtins.int"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.init_router_contract": {
        "return": [
            "Contract",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "Web3",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "StrOrBytes",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.init_scatter_contract": {
        "return": [
            "Contract",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "Web3",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.init_register_contract": {
        "return": [
            "Contract",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "Web3",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.gen_signature": {
        "return": [
            "str",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "dict",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.events_from_abi": {
        "return": [
            "dict",
            [
                "builtins.dict[<nothing>, <nothing>]",
                "builtins.dict[<nothing>, <nothing>]",
                "builtins.dict[Any, setup.LintCommand]",
                "builtins.dict[<nothing>, <nothing>]",
                "builtins.dict[Any, setup.TestCommand]"
            ]
        ],
        "arguments": [
            [
                "dict",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.list[setup.LintCommand]"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.get_types_from_inputs": {
        "return": [
            "Tuple[(List, List)]",
            [
                "Tuple[builtins.list[Any], builtins.list[Any]]"
            ]
        ],
        "arguments": [
            [
                "List[Dict[(str, Any)]]",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.decode_values": {
        "return": [
            "List",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "Collection",
                [
                    "Any"
                ]
            ],
            [
                "Collection",
                [
                    "Any"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.event_from_log": {
        "return": [
            "AttrDict",
            [
                "builtins.dict[<nothing>, <nothing>]",
                "Any"
            ]
        ],
        "arguments": [
            [
                "Dict[(str, Any)]",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.dict[builtins.str, setup.LintCommand]"
                ]
            ],
            [
                "Dict[(str, Any)]",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.dict[builtins.bytes, builtins.str]"
                ]
            ]
        ]
    },
    "scatter_daemon.common.contracts.Web3JsonEncoder.default": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [],
            [
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.ipfs.ipfs_get_json": {
        "return": [
            "Dict[(str, Any)]",
            [
                "builtins.str"
            ]
        ],
        "arguments": [
            [
                "ipfsapi.client.Client",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.dict[argparse.ArgumentParser, builtins.str]"
                ]
            ],
            [
                "str",
                [
                    "builtins.str",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "Optional[PS]",
                [
                    "builtins.str",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.logging.setDebugLogging": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.logging.getLogger": {
        "return": [
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                [
                    "builtins.object",
                    "builtins.str",
                    "builtins.int"
                ]
            ]
        ]
    },
    "scatter_daemon.common.logging.loggingShutdown": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.logging.ColoredStyle.__init__": {
        "return": [],
        "arguments": [
            []
        ]
    },
    "scatter_daemon.common.logging.ColoredStyle.usesTime": {
        "return": [],
        "arguments": [
            []
        ]
    },
    "scatter_daemon.common.logging.ColoredStyle.validate": {
        "return": [],
        "arguments": [
            []
        ]
    },
    "scatter_daemon.common.logging.ColoredStyle._format": {
        "return": [],
        "arguments": [
            [],
            []
        ]
    },
    "scatter_daemon.common.logging.ColoredStyle.format": {
        "return": [],
        "arguments": [
            [],
            []
        ]
    },
    "scatter_daemon.common.logging.ColoredFormatter.__init__": {
        "return": [],
        "arguments": [
            [],
            [],
            [],
            [],
            []
        ]
    },
    "scatter_daemon.common.register.generate_user_file": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.register.pin_user_file": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.register.fetch_user_file": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.register.register": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.common.typing.to_path": {
        "return": [
            "Path",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "Any"
                ]
            ]
        ]
    },
    "scatter_daemon.common.typing.to_account": {
        "return": [
            "str",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "StrOrBytes",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.utils.get_from_first": {
        "return": [
            "Any"
        ],
        "arguments": [
            [
                "str"
            ]
        ]
    },
    "scatter_daemon.common.utils.read_json_file": {
        "return": [
            "dict",
            [
                "<partial dict[?, ?]>"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.utils.address_in_keys": {
        "return": [
            "bool",
            [
                "builtins.bool"
            ]
        ],
        "arguments": [
            [
                "StrOrBytes",
                [
                    "builtins.object"
                ]
            ],
            [
                "Dict[(str, Any)]",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.dict[builtins.object, builtins.object]"
                ]
            ]
        ]
    },
    "scatter_daemon.common.utils.safe_slice": {
        "return": [
            "List",
            [
                "builtins.object",
                "builtins.str",
                "builtins.list[builtins.int]"
            ]
        ],
        "arguments": [
            [
                "List",
                [
                    "builtins.str",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "int",
                [
                    "builtins.int",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "int",
                [
                    "builtins.int",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.utils.is_free_space_available": {
        "return": [
            "bool",
            [
                "builtins.bool"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ],
            [
                "int",
                [
                    "builtins.int",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.common.web3.resolve_web3_provider": {
        "return": [
            "Callable",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "str",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.common.web3.init_web3": {
        "return": [
            "Web3",
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                "ConfigParser",
                [
                    "Any"
                ]
            ]
        ]
    },
    "scatter_daemon.common.web3.eth_getLogs": {
        "return": [
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "str",
                [
                    "builtins.object",
                    "builtins.str",
                    "builtins.int"
                ]
            ],
            [
                "str",
                [
                    "builtins.object"
                ]
            ],
            [
                "str",
                [
                    "builtins.object",
                    "builtins.str"
                ]
            ],
            [
                "List",
                [
                    "builtins.object",
                    "builtins.list[<nothing>]",
                    "builtins.list[argparse.ArgumentParser]"
                ]
            ]
        ]
    },
    "scatter_daemon.scatter.register.load_registration_schema": {
        "return": [
            "Dict[(str, Any)]",
            [
                "<partial dict[?, ?]>"
            ]
        ],
        "arguments": [
            [
                [
                    "builtins.object",
                    "builtins.str"
                ]
            ]
        ]
    },
    "scatter_daemon.scatter.register.get_registration": {
        "return": [
            "Optional[Dict[(str, Any)]]",
            [
                "builtins.str"
            ]
        ],
        "arguments": [
            [
                "ipfsapi.client.Client",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.dict[argparse.ArgumentParser, builtins.str]"
                ]
            ],
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "str",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.bids.store_bid": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "DictOfAny",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.bids.get_bids_to_pin": {
        "return": [
            [
                "<partial list[?]>",
                "builtins.list[Any]"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "str",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.bids.get_bids_to_validate": {
        "return": [
            [
                "<partial list[?]>",
                "builtins.list[Any]"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "str",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.db.structure_exists": {
        "return": [
            "bool",
            [
                "builtins.bool"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "sqlite3.dbapi2.Connection",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.db.init_structure": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "sqlite3.dbapi2.Connection",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.db.connect": {
        "return": [
            "sqlite3.Connection",
            [
                "<partial None>"
            ]
        ],
        "arguments": [
            [
                "PS",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.db.cursor": {
        "return": [
            [
                "Any"
            ]
        ],
        "arguments": [
            [
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.events.get_stored_events": {
        "return": [
            "List[DictOfAny]",
            [
                "<partial list[?]>",
                "builtins.list[Any]"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.events.store_events": {
        "return": [
            "None",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "List[DictOfAny]",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.list[setup.LintCommand]"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.pins.store_accept": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "DictOfAny",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.pins.store_pin": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "DictOfAny",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.storage.pins.set_pin_validated": {
        "return": [
            "None",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "int",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.validator.logic.select_random_pin_for_validation": {
        "return": [
            "int",
            [
                "builtins.int",
                "Any"
            ]
        ],
        "arguments": [
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "List[DictOfAny]",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "builtins.list[setup.LintCommand]"
                ]
            ],
            [
                "DictOfAny",
                [
                    "builtins.dict[builtins.str, sqlite3.dbapi2.Connection]",
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.validator.main.validate": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.validator.main.get_job": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": []
    },
    "scatter_daemon.validator.main.process_events": {
        "return": [
            "List[AttrDict]",
            [
                "builtins.list[Union[Any, builtins.dict[<nothing>, <nothing>]]]"
            ]
        ],
        "arguments": [
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "List",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ]
        ]
    },
    "scatter_daemon.validator.main.fetch_events": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "sqlite3.Connection",
                [
                    "setup.LintCommand",
                    "setup.TestCommand",
                    "sqlite3.dbapi2.Connection"
                ]
            ],
            [
                "Web3",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "Contract",
                [
                    "Any"
                ]
            ]
        ]
    },
    "scatter_daemon.validator.main.validate_bid": {
        "return": [
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "ipfsapi.client.Client",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "Contract",
                [
                    "setup.LintCommand",
                    "setup.TestCommand"
                ]
            ],
            [
                "int",
                [
                    "builtins.object"
                ]
            ]
        ]
    },
    "scatter_daemon.validator.main.validate_run": {
        "return": [
            "None",
            [
                "None"
            ]
        ],
        "arguments": [
            [
                "ConfigParser",
                [
                    "Any"
                ]
            ]
        ]
    }
}